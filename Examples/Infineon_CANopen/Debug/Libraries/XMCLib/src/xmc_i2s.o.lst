   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_i2s.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_USIC_CH_GetTransmitBufferStatus,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_USIC_CH_GetTransmitBufferStatus:
  25              	.LFB199:
  26              	 .file 1 "D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc/xmc_usic.h"
   1:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
   2:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @file xmc_usic.h
   3:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @date 2020-12-05
   4:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
   5:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @cond
   6:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *****************************************************************************
   7:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
   9:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * All rights reserved.
  11:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
  12:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
  14:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * do so, all subject to the following:
  20:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
  21:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * The copyright notices in the Software and this entire statement, including
  22:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * the above license grant, this restriction and the following disclaimer,
  23:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * all derivative works of the Software, unless such copies or derivative
  25:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * works are solely in the form of machine-executable object code generated by
  26:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * a source language processor.
  27:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
  28:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * DEALINGS IN THE SOFTWARE.
  35:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
  36:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * To improve the quality of the software, users are encouraged to share
  37:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * at XMCSupport@infineon.com.
  39:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *****************************************************************************
  40:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
  41:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Change History
  42:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * --------------
  43:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
  44:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-02-20:
  45:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Initial draft<br>
  46:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Documentation improved <br>
  47:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
  48:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-05-08:
  49:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetInputTriggerCombinationMode() and XMC_USIC_CH_SetTransmitBufferStatus
  50:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
  51:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-06-20:
  52:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  53:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
  54:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-17:
  55:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Bug fixed in XMC_USIC_CH_SetTransmitBufferStatus API. OR operator removed.
  56:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
  57:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-24:
  58:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for enabling/disabling delay compensation XMC_USIC_CH_DisableDelayCompensation(
  59:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *       XMC_USIC_CH_DisableDelayCompensation()
  60:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
  61:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-25:
  62:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for defining if the data shift unit input is derived
  63:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *       from the input data path DXn or from the selected protocol pre-processors: XMC_USIC_CH_Con
  64:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *       and XMC_USIC_CH_ConnectInputDataShiftToDataInput()
  65:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
  66:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-27:
  67:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Fixed bug in XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T value.
  68:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for direct TBUF access: XMC_USIC_CH_WriteToTBUF() and XMC_USIC_CH_WriteToTBUFTC
  69:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for external input for BRG configuration:XMC_USIC_CH_ConfigExternalInputSignalT
  70:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
  71:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-28:
  72:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added API for enabling the transfer trigger unit to set bit TCSR.TE if the trigger signal 
  73:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *       Clear to Send (CTS) signal: XMC_USIC_CH_EnableTBUFDataValidTrigger() and XMC_USIC_CH_Disab
  74:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
  75:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-03-09:
  76:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Optimization of write only registers
  77:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
  78:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-04-10:
  79:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added an API to put the data into FIFO when hardware port control is enabled: XMC_USIC_CH_
  80:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
  81:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 2017-02-10:
  82:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetShiftDirection() to allow selection of shift direction of the data wo
  83:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_GetCaptureTimerValue() and XMC_USIC_CH_SetFractionalDivider()
  84:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
  85:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 2017-09-08:
  86:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Fixed value of macro XMC_USIC_CH_SHIFT_DIRECTION_MSB_FIRST used in XMC_USIC_CH_SetShiftDir
  87:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
  88:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 2018-09-29:
  89:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetBaudrateEx which uses the integer divider instead of the fractional d
  90:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
  91:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-05-07:
  92:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_GetBaudrate(), XMC_USIC_CH_GetSCLKFrequency() and XMC_USIC_CH_GetMCLKFre
  93:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
  94:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-07-01:
  95:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Changed XMC_USIC_CH_SetBaudrateEx() input parameter types
  96:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
  97:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-09-30:
  98:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_InvalidateReadData(), XMC_USIC_CH_EnableWordLengthControl() and XMC_USIC
  99:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 100:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-12-05:
 101:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_TXFIFO_PutDataEx()
 102:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 103:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 2020-04-30:
 104:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_TXFIFO_SetTriggerLimit() and XMC_USIC_CH_RXFIFO_SetTriggerLimit()
 105:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 106:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 2020-12-05:
 107:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1S to XMC_USIC_CH_BRG_CLOCK_SOURCE_t
 108:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_BRG_CTQSEL_t
 109:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetBaudrateDivider()
 110:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 
 111:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @endcond
 112:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 113:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 114:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 115:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #ifndef XMC_USIC_H
 116:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC_H
 117:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 118:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * HEADER FILES
 119:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 120:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 121:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #include "xmc_common.h"
 122:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 123:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 124:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup XMClib XMC Peripheral Library
 125:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
 126:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 127:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 128:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 129:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup USIC
 130:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @brief Universal Serial Interface Channel(USIC) driver for serial communication.
 131:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 132:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * The Universal Serial Interface Channel(USIC) module is a flexible interface module
 133:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * covering several serial communication protocols. A USIC module contains two
 134:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * independent communication channels named USICx_CH0 and USICx_CH1, with x
 135:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * being the number of the USIC module. The user can program, during run-time, which protocol will 
 136:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * by each communication channel and which pins are used.
 137:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * The driver provides APIs, configuration structures and enumerations to configure common features
 138:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * communication protocols.
 139:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 140:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC driver features:
 141:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of FIFO for transmit and receive functions.
 142:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides a structure type XMC_USIC_CH_t to represent the USIC channel registers in a programm
 143:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  friendly format.
 144:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of automatic update for frame length, word length, slave select or slave
 145:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows transmission of data to FIFO using XMC_USIC_CH_TXFIFO_PutData() and XMC_USIC_CH_TXFIFO
 146:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows reading of received data in FIFO using XMC_USIC_CH_RXFIFO_GetData()
 147:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of baudrate using XMC_USIC_CH_SetBaudrate()
 148:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides API to trigger interrupts using XMC_USIC_CH_TriggerServiceRequest()
 149:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
 150:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 151:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 152:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 153:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * MACROS
 154:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 155:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 156:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0 ((XMC_USIC_t *)USIC0_BASE)			/**< USIC0 module base address */
 157:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH0 ((XMC_USIC_CH_t *)USIC0_CH0_BASE)	/**< USIC0 channel 0 base address */
 158:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH1 ((XMC_USIC_CH_t *)USIC0_CH1_BASE)	/**< USIC0 channel 1 base address */
 159:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 160:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC1)
 161:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1 ((XMC_USIC_t *)USIC1_BASE)			/**< USIC1 module base address */
 162:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH0 ((XMC_USIC_CH_t *)USIC1_CH0_BASE)	/**< USIC1 channel 0 base address */
 163:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH1 ((XMC_USIC_CH_t *)USIC1_CH1_BASE)	/**< USIC1 channel 1 base address */
 164:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 165:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 166:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC2)
 167:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2 ((XMC_USIC_t *)USIC2_BASE)			/**< USIC2 module base address */
 168:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH0 ((XMC_USIC_CH_t *)USIC2_CH0_BASE)	/**< USIC2 channel 0 base address */
 169:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH1 ((XMC_USIC_CH_t *)USIC2_CH1_BASE)	/**< USIC2 channel 1 base address */
 170:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 171:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 172:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Msk  USIC_CH_DX0CR_DSEL_Msk   /**< Common mask for DSEL bitfield mask in 
 173:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Pos  USIC_CH_DX0CR_DSEL_Pos   /**< Common mask for DSEL bitfield position
 174:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Pos USIC_CH_DX0CR_SFSEL_Pos  /**< Common mask for SFSEL bitfield positio
 175:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Msk USIC_CH_DX0CR_SFSEL_Msk  /**< Common mask for SFSEL bitfield mask in
 176:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DPOL_Msk  USIC_CH_DX0CR_DPOL_Msk   /**< Common mask for DPOL bitfield mask in 
 177:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DFEN_Msk  USIC_CH_DX0CR_DFEN_Msk   /**< Common mask for DFEN bitfield mask in 
 178:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEN_Msk  USIC_CH_DX0CR_DSEN_Msk   /**< Common mask for DSEN bitfield mask in 
 179:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Pos    USIC_CH_DX0CR_CM_Pos     /**< Common mask for CM bitfield position i
 180:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Msk    USIC_CH_DX0CR_CM_Msk     /**< Common mask for CM bitfield mask in DX
 181:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_Msk  USIC_CH_DX0CR_INSW_Msk   /**< Common mask for INSW bitfield mask in 
 182:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_pos  USIC_CH_DX0CR_INSW_Pos   /**< Common mask for INSW bitfield position
 183:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 184:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC1
 185:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #include "xmc1_usic_map.h"
 186:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 187:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 188:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC4
 189:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #include "xmc4_usic_map.h"
 190:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 191:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 192:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 193:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * ENUMS
 194:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 195:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 196:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 197:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel driver status
 198:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 199:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_STATUS
 200:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 201:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_OK,    /**< USIC driver status : OK */
 202:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_ERROR, /**< USIC driver status : ERROR */
 203:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_BUSY   /**< USIC driver status : BUSY */
 204:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_STATUS_t;
 205:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 206:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 207:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel kernel mode
 208:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** */
 209:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_KERNEL_MODE
 210:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 211:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_0  = 0x0UL,  /**< Run mode 0 (transmission and reception possible)*/
 212:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_1  = 0x1UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Run mode 1 (transmissio
 213:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_0 = 0x2UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Stop mode 0 (no transmi
 214:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_1 = 0x3UL << USIC_CH_KSCFG_NOMCFG_Pos   /**< Stop mode 1 (both trans
 215:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_KERNEL_MODE_t;
 216:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 217:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 218:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel operating mode
 219:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 220:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_OPERATING_MODE
 221:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 222:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_IDLE = 0x0UL, /**< USIC channel idle */
 223:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_SPI  = 0x1UL << USIC_CH_CCR_MODE_Pos, /**< SPI mode */
 224:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_UART = 0x2UL << USIC_CH_CCR_MODE_Pos, /**< UART mode */
 225:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2S  = 0x3UL << USIC_CH_CCR_MODE_Pos, /**< I2S mode */
 226:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2C  = 0x4UL << USIC_CH_CCR_MODE_Pos  /**< I2C mode */
 227:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_OPERATING_MODE_t;
 228:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 229:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 230:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel inputs
 231:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 232:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT
 233:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 234:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX0, /**< DX0 input */
 235:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX1, /**< DX1 input */
 236:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX2, /**< DX2 input */
 237:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX3, /**< DX3 input */
 238:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX4, /**< DX4 input */
 239:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX5  /**< DX5 input */
 240:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_t;
 241:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 242:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 243:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input source sampling frequency
 244:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 245:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_SAMPLING_FREQ
 246:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 247:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FPERIPH            = 0x0UL, /**< Use fperiph frequency for input 
 248:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FRACTIONAL_DIVIDER = 0x1UL << USIC_CH_DXCR_SFSEL_Pos  /**< Use fF
 249:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_SAMPLING_FREQ_t;
 250:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 251:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 252:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input combination mode
 253:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 254:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_COMBINATION_MODE
 255:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 256:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_TRIGGER_DISABLED = 0x0UL, /**< The trigger activation is disab
 257:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_RISING_EDGE      = 0x1UL, /**< A rising edge activates DXnT*/
 258:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_FALLING_EDGE     = 0x2UL, /**< A falling edge activates DXnT*/
 259:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_BOTH_EDGES       = 0x3UL, /**< Both edges activate DXnT*/
 260:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_COMBINATION_MODE_t;
 261:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 262:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 263:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel data transmission start modes.
 264:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Data shifted out of the transmit pin depends on the value configured for the
 265:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * TDEN bitfield of the TCSR register. Following enum values are used for configuring
 266:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * the TCSR->TDEN bitfield.
 267:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 268:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_START_TRANSMISION_MODE
 269:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 270:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_DISABLED      = 0x0U, /**< Passive data level is sent out on transm
 271:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV        = 0x1UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 272:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_0 = 0x2UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 273:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_1 = 0x3UL << USIC_CH_TCSR_TDEN_Pos  /**< Transmission o
 274:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_START_TRANSMISION_MODE_t;
 275:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 276:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 277:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel interrupt node pointers
 278:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 279:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INTERRUPT_NODE_POINTER
 280:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 281:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT      = USIC_CH_INPR_TSINP_Pos, /**< Node pointe
 282:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER     = USIC_CH_INPR_TBINP_Pos, /**< Node pointe
 283:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEIVE             = USIC_CH_INPR_RINP_Pos,  /**< Node pointe
 284:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE   = USIC_CH_INPR_AINP_Pos,  /**< Node pointe
 285:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOCOL            = USIC_CH_INPR_PINP_Pos   /**< Node pointe
 286:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INTERRUPT_NODE_POINTER_t;
 287:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 288:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 289:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel events
 290:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 291:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_EVENT
 292:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 293:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk, /**< Receive start event */
 294:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk, /**< Data lost event */
 295:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk, /**< Transmit shift event */
 296:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk, /**< Transmit buffer event */
 297:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,  /**< Receive event */
 298:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,  /**< Alternate receive event */
 299:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk /**< Baudrate generator event */
 300:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_EVENT_t;
 301:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 302:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 303:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel parity mode
 304:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** */
 305:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_PARITY_MODE
 306:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 307:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_NONE     = 0x0UL,  /**< Disable parity mode */
 308:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_EVEN     = 0x2UL << USIC_CH_CCR_PM_Pos,  /**< Enable even parity mode */
 309:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_ODD      = 0x3UL << USIC_CH_CCR_PM_Pos   /**< Enable odd parity mode */
 310:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PARITY_MODE_t;
 311:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 312:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 313:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data output mode
 314:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** */
 315:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_DATA_OUTPUT_MODE
 316:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 317:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_NORMAL   = 0x0UL,  /**< Data output normal mode */
 318:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_INVERTED = 0x1UL << USIC_CH_SCTR_DOCFG_Pos   /**< Data output invert
 319:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_DATA_OUTPUT_MODE_t;
 320:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 321:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 322:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status
 323:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** */
 324:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS
 325:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 326:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_IDLE = 0x0UL,                 /**< Transfer buffer is currently idle*/
 327:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_BUSY = USIC_CH_TCSR_TDV_Msk   /**< Transfer buffer is currently busy*/
 328:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_t;
 329:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 330:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 331:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 332:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 333:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status modification
 334:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** */
 335:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS_SET
 336:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 337:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_BUSY   = 0x1UL, /**< Set Transfer buffer status to busy*/
 338:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_IDLE   = 0x2UL  /**< Set Transfer buffer status to idle*/
 339:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_SET_t;
 340:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 341:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 342:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive buffer status
 343:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** */
 344:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RBUF_STATUS
 345:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 346:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID0 = USIC_CH_RBUFSR_RDV0_Msk, /**< RBUF0 data has not yet been r
 347:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID1 = USIC_CH_RBUFSR_RDV1_Msk  /**< RBUF1 data has not yet been r
 348:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RBUF_STATUS_t;
 349:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 350:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 351:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel output signal passive data level
 352:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** */
 353:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USCI_CH_PASSIVE_DATA_LEVEL
 354:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 355:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL0 = 0x0UL, /**< Passive level(idle mode signal level) 0 */
 356:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL1 = 0x1UL << USIC_CH_SCTR_PDL_Pos  /**< Passive level(idle mode sig
 357:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PASSIVE_DATA_LEVEL_t;
 358:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 359:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 360:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO size
 361:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** */
 362:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_FIFO_SIZE
 363:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 364:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_DISABLED     = 0x0U,  /**< FIFO Disabled */
 365:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_2WORDS  = 0x1U,  /**< FIFO size: 2 words */
 366:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_4WORDS  = 0x2U,  /**< FIFO size: 4 words */
 367:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_8WORDS  = 0x3U,  /**< FIFO size: 8 words */
 368:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_16WORDS = 0x4U,  /**< FIFO size: 16 words */
 369:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_32WORDS = 0x5U,  /**< FIFO size: 32 words */
 370:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_64WORDS = 0x6U   /**< FIFO size: 64 words */
 371:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_FIFO_SIZE_t;
 372:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 373:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 374:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO interrupt node pointers
 375:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** */
 376:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER
 377:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 378:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_TBCTR_STBINP_Pos,  /**< Node pointe
 379:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_TBCTR_ATBINP_Pos   /**< Node pointe
 380:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t;
 381:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 382:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 383:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO event configuration
 384:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** */
 385:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT_CONF
 386:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 387:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_STANDARD  = USIC_CH_TBCTR_STBIEN_Msk,   /**< Enable FIFO standard t
 388:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_TBCTR_TBERIEN_Msk  /**< Enable transmi
 389:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_CONF_t;
 390:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 391:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 392:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO status
 393:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** */
 394:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT
 395:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 396:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_STANDARD = USIC_CH_TRBSR_STBI_Msk,    /**< Transmit FIFO status: Standar
 397:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_ERROR    = USIC_CH_TRBSR_TBERI_Msk    /**< Transmit FIFO status: Error e
 398:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_t;
 399:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 400:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 401:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO interrupt node pointers
 402:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** */
 403:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER
 404:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 405:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_RBCTR_SRBINP_Pos, /**< Node pointer
 406:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_RBCTR_ARBINP_Pos  /**< Node pointer
 407:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t;
 408:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 409:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 410:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO event configuration
 411:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** */
 412:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT_CONF
 413:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 414:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD  = USIC_CH_RBCTR_SRBIEN_Msk,   /**< Enable FIFO standard r
 415:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_RBCTR_RBERIEN_Msk,  /**< Enable receiv
 416:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE = USIC_CH_RBCTR_ARBIEN_Msk   /**< Enable FIFO alternative
 417:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_CONF_t;
 418:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 419:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 420:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO status
 421:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** */
 422:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT
 423:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 424:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_STANDARD  = USIC_CH_TRBSR_SRBI_Msk,   /**< Receive FIFO status: Standard
 425:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ERROR     = USIC_CH_TRBSR_RBERI_Msk,  /**< Receive FIFO status: Error ev
 426:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE = USIC_CH_TRBSR_ARBI_Msk    /**< Receive FIFO status: Alternat
 427:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_t;
 428:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 429:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 430:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator clock source
 431:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** */
 432:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_SOURCE
 433:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 434:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DIVIDER = 0x0UL, /**< Baudrate generator clock source : Source divid
 435:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T    = 0x2UL << USIC_CH_BRG_CLKSEL_Pos,  /**< Baudrate generator 
 436:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1S    = 0x3UL << USIC_CH_BRG_CLKSEL_Pos  /**< Baudrate generator c
 437:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_SOURCE_t;
 438:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 439:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 440:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel input selection for CTQ
 441:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** */
 442:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CTQSEL
 443:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 444:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CTQSEL_PDIV = 0x0UL, /**< fCTQIN = fPDIV */
 445:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CTQSEL_PPP  = 0x1UL << USIC_CH_BRG_CTQSEL_Pos,  /**< fCTQIN = fPPP */
 446:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CTQSEL_SCLK = 0x2UL << USIC_CH_BRG_CTQSEL_Pos,  /**< fCTQIN = fSCLK */
 447:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CTQSEL_MCLK = 0x3UL << USIC_CH_BRG_CTQSEL_Pos  /**< fCTQIN = fMCLK */
 448:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CTQSEL_t;
 449:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 450:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 451:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 452:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator divider mode
 453:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** */
 454:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE
 455:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 456:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_DISABLED   = 0x0UL, /**< Baudrate generator clock divider: Dis
 457:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL     = 0x1UL << USIC_CH_FDR_DM_Pos, /**< Baudrate genera
 458:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL = 0x2UL << USIC_CH_FDR_DM_Pos  /**< Baudrate genera
 459:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_t;
 460:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 461:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 462:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator master clock passive level
 463:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** */
 464:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL
 465:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 466:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_0 = 0x0UL, /**< Baudrate generator master clock passiv
 467:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_1 = 0x1UL << USIC_CH_BRG_MCLKCFG_Pos  /**< Baudrate ge
 468:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_t;
 469:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 470:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 471:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock passive level
 472:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** */
 473:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL
 474:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 475:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED = 0x0UL, /**< Shift clock passive leve
 476:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED = 0x1UL << USIC_CH_BRG_SCLKCFG_Pos, /*
 477:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED  = (int32_t)(0x2UL << USIC_CH_BRG_SCLKC
 478:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED  = (int32_t)(0x3UL << USIC_CH_BRG_SCLKC
 479:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t;
 480:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 481:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 482:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock output
 483:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** */
 484:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT
 485:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 486:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK = 0x0UL, /**< Baudrate generator shift clock output: SCL.
 487:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1 = 0x1UL << USIC_CH_BRG_SCLKOSEL_Pos   /**< Baudrate genera
 488:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_t;
 489:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 490:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 491:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel shift direction.
 492:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** * Defines the shift direction of the data words for transmission and reception
 493:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** */
 494:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_SHIFT_DIRECTION
 495:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 496:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_SHIFT_DIRECTION_LSB_FIRST = 0x0UL, /**< Shift LSB first. The first data bit of a data
 497:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_SHIFT_DIRECTION_MSB_FIRST = 0x1UL << USIC_CH_SCTR_SDIR_Pos /**< Shift MSB first. The 
 498:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_SHIFT_DIRECTION_t;
 499:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 500:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 501:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 502:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * DATA STRUCTURES
 503:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 504:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 505:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard start*/
 506:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 507:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #pragma push
 508:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #pragma anon_unions
 509:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 510:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #pragma warning 586
 511:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 512:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 513:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 514:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC module structure
 515:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 516:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef USIC_GLOBAL_TypeDef XMC_USIC_t;
 517:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 518:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 519:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel structure.<br> The members of the structure are same as in the device header file,
 520:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * except for some registers.
 521:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * DX0CR, DX1CR, DX2CR, DX3CR, DX4CR and DX5CR are replaced with the array DXCR[6].
 522:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * TBUF0 to TBUF31 are replaced with TBUF[32].
 523:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * IN0 to IN31 are replaced with IN[32].
 524:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 525:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef struct XMC_USIC_CH
 526:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 527:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED0;
 528:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  CCFG;			/**< Channel configuration register*/
 529:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED1;
 530:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  KSCFG;			/**< Kernel state configuration register*/
 531:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  FDR;			/**< Fractional divider configuration register*/
 532:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BRG;			/**< Baud rate generator register*/
 533:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  INPR;			/**< Interrupt node pointer register*/
 534:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  DXCR[6];		/**< Input control registers DX0 to DX5.*/
 535:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  SCTR;			/**< Shift control register*/
 536:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TCSR;
 537:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 538:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   union
 539:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   {
 540:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IICMode;	/**< I2C protocol configuration register*/
 541:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IISMode; /**< I2S protocol configuration register*/
 542:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_SSCMode;	/**< SPI protocol configuration register*/
 543:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR;			/**< Protocol configuration register*/
 544:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_ASCMode;	/**< UART protocol configuration register*/
 545:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   };
 546:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CCR;			/**< Channel control register*/
 547:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CMTR;			/**< Capture mode timer register*/
 548:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 549:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   union
 550:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   {
 551:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IICMode;	/**< I2C protocol status register*/
 552:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IISMode;	/**< I2S protocol status register*/
 553:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_SSCMode;	/**< SPI protocol status register*/
 554:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR;			/**< Protocol status register*/
 555:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_ASCMode;	/**< UART protocol status register*/
 556:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   };
 557:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  PSCR;			/**< Protocol status clear register*/
 558:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFSR;		/**< Receive buffer status register*/
 559:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF;			/**< Receive buffer register*/
 560:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFD;			/**< Debug mode receive buffer register*/
 561:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF0;			/**< Receive buffer 0*/
 562:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF1;			/**< Receive buffer 1*/
 563:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF01SR;		/**< Receive buffer status register*/
 564:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  FMR;			/**< Flag modification register*/
 565:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED2[5];
 566:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBUF[32];		/**< Tranmsit buffer registers*/
 567:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYP;			/**< FIFO bypass register*/
 568:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYPCR;			/**< FIFO bypass control register*/
 569:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBCTR;			/**< Transmit FIFO control register*/
 570:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  RBCTR;			/**< Receive FIFO control register*/
 571:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  TRBPTR;		/**< Transmit/recive buffer pointer register*/
 572:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TRBSR;			/**< Transmit/receive buffer status register*/
 573:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  TRBSCR;		/**< Transmit/receive buffer status clear register*/
 574:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTR;			/**< Receive FIFO output register*/
 575:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTDR;			/**< Receive FIFO debug output register*/
 576:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED3[23];
 577:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  IN[32];		/**< Transmit FIFO input register*/
 578:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_t;
 579:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 580:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 581:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard end*/
 582:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 583:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #pragma pop
 584:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 585:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #pragma warning restore
 586:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 587:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 588:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 589:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * API PROTOTYPES
 590:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  ******************************************************************************/
 591:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 592:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #ifdef __cplusplus
 593:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** extern "C" {
 594:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 595:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 596:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsModuleValid(const XMC_USIC_t *const module)
 597:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 598:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 599:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 600:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = (module == XMC_USIC0);
 601:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)
 602:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC1);
 603:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 604:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)
 605:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC2);
 606:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 607:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 608:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 609:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
 610:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 611:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsChannelValid(const XMC_USIC_CH_t *const channel)
 612:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 613:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 614:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 615:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = ((channel == XMC_USIC0_CH0) || (channel == XMC_USIC0_CH1));
 616:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)
 617:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC1_CH0) || (channel == XMC_USIC1_CH1));
 618:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 619:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)
 620:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC2_CH0) || (channel == XMC_USIC2_CH1));
 621:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 622:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 623:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 624:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
 625:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 626:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /* Common APIs */
 627:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 628:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 629:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 630:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 631:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 632:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 633:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 634:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC module.\n\n
 635:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the clock for the USIC module by following the
 636:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * clock enabling sequence for the selected device.
 637:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 638:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 639:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 640:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 641:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Enable(XMC_USIC_t *const usic);
 642:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 643:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 644:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 645:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 646:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 647:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 648:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC module.\n\n
 649:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the clock for the USIC module by following the clock
 650:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * disabling sequence for the selected device.
 651:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 652:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 653:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 654:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 655:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Disable(XMC_USIC_t *const usic);
 656:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 657:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 658:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 659:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 660:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 661:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 662:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC channel. \n\n
 663:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is enabled by setting the module enable bit in KSCFG register bitfield MODEN.
 664:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * On enabling, the channel is set to idle mode.
 665:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 666:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 667:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 668:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 669:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Enable(XMC_USIC_CH_t *const channel);
 670:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 671:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 672:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 673:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 674:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 675:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 676:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC channel.\n\n
 677:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is disabled by setting the module enable bit(MDEN) to 0 in the register KSCFG.
 678:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 679:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 680:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 681:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 682:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Disable(XMC_USIC_CH_t *const channel);
 683:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 684:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 685:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 686:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 687:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  rate Desired baudrate. \b Range: minimum value = 100, maximum value depends on the perip
 688:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				and \a oversampling. Maximum baudrate can be derived using the formula: (fperiph * 1023)/(10
 689:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 690:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 691:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 692:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status indicating the baudrate configuration.\n
 693:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 694:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 					  @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 695:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 696:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 697:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate of the USIC channel. \n\n
 698:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Baudrate is configured by considering the peripheral frequency and the desired baudrate.
 699:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Optimum values of FDR->STEP and BRG->PDIV are calulated and used for generating the desired
 700:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * baudrate.
 701:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 702:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 703:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode(), XMC_USIC_CH_SetInputSource() \n\n\n
 704:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 705:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrate(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_t 
 706:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 707:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 708:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 709:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 710:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  rate Desired baudrate. Only integer dividers of peripheral clock are achievable
 711:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 712:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *            This can be related to the number of samples for each logic state of the data signal.
 713:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *            \b Range: 1 to 32. Value should be chosen based on the protocol used.
 714:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status indicating the baudrate configuration.\n
 715:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *      \b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 716:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *            @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 717:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 718:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 719:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate of the USIC channel using the integer divider which restrics the achieva
 720:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Baudrate is configured by considering the peripheral frequency and the desired baudrate.
 721:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Optimum values of FDR->STEP and BRG->PDIV are calulated and used for generating the desired
 722:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * baudrate.
 723:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 724:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 725:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode(), XMC_USIC_CH_SetInputSource() \n\n\n
 726:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 727:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrateEx(XMC_USIC_CH_t *const channel, int32_t rate, int32_t 
 728:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 729:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 730:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 731:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 732:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  clksel Baudrate generator clock source.
 733:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pppen Enable 2:1 Divider for fPPP.
 734:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pdiv Divider Factor to generate fPDIV = fPPP / (pDIV + 1)
 735:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  ctqsel Input selection for CTQ.
 736:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pctq Pre-Divider for Time Quanta Counter. fCTQIN / (PCQT + 1)
 737:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  dctq Denominator for Time Quanta Counter. fTQ / (DCTQ + 1)
 738:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 739:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 740:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 741:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate generator of the USIC channel.
 742:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 743:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 744:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetFractionalDivider() \n\n\n
 745:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 746:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_SetBaudrateDivider(XMC_USIC_CH_t *const channel, 
 747:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                                     XMC_USIC_CH_BRG_CLOCK_SOURCE_t clksel,
 748:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                                     bool pppen,
 749:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                                     uint32_t pdiv,
 750:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                                     XMC_USIC_CH_BRG_CTQSEL_t ctqsel,
 751:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                                     uint32_t pctq,
 752:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                                     uint32_t dctq);
 753:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 754:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 755:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 756:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 757:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel for .\n
 758:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 759:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 760:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used baudrate (fCTQIN) of a USIC channel. \n\n
 761:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png
 762:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png
 763:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 764:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 765:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 766:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 767:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetBaudrate(XMC_USIC_CH_t *const channel);
 768:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 769:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 770:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 771:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 772:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel.\n
 773:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 774:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 775:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used SCLK frequency of a USIC channel. \n\n
 776:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png
 777:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png
 778:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 779:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 780:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 781:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 782:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetSCLKFrequency(XMC_USIC_CH_t *const channel);
 783:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 784:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 785:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 786:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 787:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel.\n
 788:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 789:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 790:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used MCLK frequency of a USIC channel. \n\n
 791:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png
 792:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png
 793:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 794:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 795:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 796:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 797:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetMCLKFrequency(XMC_USIC_CH_t *const channel);
 798:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 799:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 800:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 801:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 802:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pdiv Desired divider for the external frequency input. \b Range: minimum value = 1, maxi
 803:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 804:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 805:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 806:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Selects which edge of the synchronized(and optionally filtered) signal 
 807:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *                          output DXnT of the input stage.
 808:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 809:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 810:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 811:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 812:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the external frequency input for the Baudrate Generator and configures the divider, over
 813:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * the combination mode of the USIC channel. \n\n
 814:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 815:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 816:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBRGInputClockSource(), XMC_USIC_CH_SetInputTriggerCombinationMode() \n\n\n
 817:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 818:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_ConfigExternalInputSignalToBRG(XMC_USIC_CH_t *const channel,
 819:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const uint16_t pdiv,
 820:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t oversampling,
 821:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INPUT_COMBINATION_MODE_t combination_mode);
 822:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 823:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 824:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 825:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 826:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 827:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 828:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  source Input source select for the input stage. The table below maps the enum value with
 829:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * <table><tr><td>0</td><td>DXnA</td></tr><tr><td>1</td><td>DXnB</td></tr><tr><td>2</td><td>DXnC</t
 830:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * <tr><td>4</td><td>DXnE</td></tr><tr><td>5</td><td>DXnF</td></tr><tr><td>6</td><td>DXnG</td></tr>
 831:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * </tr></table>
 832:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 833:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 834:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 835:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the data source for USIC input stage.\n\n
 836:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the input data signal source among DXnA, DXnB.. DXnG for the input stage. The API can be
 837:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * like DX0CR, DX1CR etc.
 838:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 839:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 840:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion(), XMC_USIC_CH_EnableInputDigitalFilter(), XMC_USIC_CH_EnableIn
 841:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSamplingFreq()\n\n\n
 842:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 843:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSource(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_INP
 844:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 845:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)((channel->DXCR[input] & (uint32_t)(~USIC_CH_DXCR_DSEL_Msk)) |
 846:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                                     ((uint32_t)source << USIC_CH_DXCR_DSEL_Pos));
 847:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
 848:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 849:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 850:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 851:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 852:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 853:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 854:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 855:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 856:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is controlled by the
 857:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * protocol pre-processor. \n\n
 858:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 859:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 860:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToDataInput()\n\n\n
 861:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 862:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToPPP(XMC_USIC_CH_t *const channel, const XMC
 863:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 864:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &= (uint32_t)~USIC_CH_DXCR_INSW_Msk;
 865:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
 866:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 867:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 868:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 869:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 870:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 871:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 872:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 873:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 874:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 875:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is connected to
 876:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * the selected data input line. \n\n
 877:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 878:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * This setting is used
 879:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * if the signals are directly derived from an input
 880:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * pin without treatment by the protocol preprocessor.
 881:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 882:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToPPP()\n\n\n
 883:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 884:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToDataInput(XMC_USIC_CH_t *const channel, con
 885:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 886:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_INSW_Msk;
 887:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
 888:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 889:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 890:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 891:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 892:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 893:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 894:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 895:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 896:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 897:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input inversion for USIC channel input data signal. \n\n
 898:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 899:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Polarity of the input source can be changed to provide inverted data input.
 900:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 901:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputInversion()\n\n\n
 902:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 903:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC_
 904:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 905:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_DPOL_Msk;
 906:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
 907:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 908:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 909:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 910:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 911:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 912:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 913:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 914:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 915:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 916:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input inversion for USIC channel. \n\n
 917:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 918:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Resets the input data polarity for the USIC channel input data signal.
 919:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 920:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion()\n\n\n
 921:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 922:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC
 923:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 924:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &= (uint32_t)~USIC_CH_DXCR_DPOL_Msk;
 925:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
 926:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 927:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 928:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 929:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 930:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 931:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 932:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 933:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables delay compensation. \n\n
 934:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 935:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Delay compensation can be applied to the receive path.
 936:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 937:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableDelayCompensation()\n\n\n
 938:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 939:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableDelayCompensation(XMC_USIC_CH_t *const channel)
 940:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 941:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] |= USIC_CH_DX1CR_DCEN_Msk;
 942:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
 943:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 944:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 945:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 946:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 947:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 948:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 949:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 950:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables delay compensation.. \n\n
 951:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 952:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 953:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableDelayCompensation()\n\n\n
 954:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 955:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableDelayCompensation(XMC_USIC_CH_t *const channel)
 956:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 957:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] &= (uint32_t)~USIC_CH_DX1CR_DCEN_Msk;
 958:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
 959:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 960:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 961:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 962:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 963:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 964:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 965:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 966:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 967:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 968:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the input digital filter for USIC channel input data signal. \n\n
 969:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be digitally filtered.
 970:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 971:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 972:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputDigitalFilter()\n\n\n
 973:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 974:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_U
 975:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 976:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= (uint32_t)USIC_CH_DXCR_DFEN_Msk;
 977:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
 978:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 979:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 980:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 981:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 982:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 983:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 984:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 985:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 986:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the input digital filter for USIC channel input data signal. \n\n
 987:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be digitally filtered.
 988:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 989:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 990:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
 991:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 992:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_
 993:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 994:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &= (uint32_t)~USIC_CH_DXCR_DFEN_Msk;
 995:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
 996:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 997:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 998:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 999:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
1000:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
1001:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1002:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1003:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1004:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input synchronization for the USIC channel input data signal. \n\n
1005:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be synchronized with fPERIPH.
1006:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * A noisy signal can be synchronized and filtered by enabling the digital filter.
1007:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1008:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1009:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputSync(), XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
1010:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1011:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_IN
1012:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1013:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= (uint32_t)USIC_CH_DXCR_DSEN_Msk;
1014:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1015:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1016:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1017:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1018:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
1019:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
1020:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1021:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1022:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1023:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input synchronization for the USIC channel input data signal. \n\n
1024:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be synchronized.
1025:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1026:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1027:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_DisableInputDigitalFilter() \n\n\n
1028:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1029:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_I
1030:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1031:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &= (uint32_t)~USIC_CH_DXCR_DSEN_Msk;
1032:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1033:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1034:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1035:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1036:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
1037:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
1038:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  sampling_freq Sampling frequency value of type \a XMC_USIC_CH_INPUT_SAMPLING_FREQ_t.
1039:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1040:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1041:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1042:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets sampling frequency for USIC channel input data signal. \n\n
1043:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1044:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1045:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
1046:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1047:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSamplingFreq(XMC_USIC_CH_t *const channel,
1048:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INPUT_t input,
1049:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INPUT_SAMPLING_FREQ_t sampling_freq)
1050:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1051:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_SFSEL_Msk)) |
1052:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)sampling_freq);
1053:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1054:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1055:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1056:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1057:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1058:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
1059:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
1060:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Combination mode value of type \a XMC_USIC_CH_INPUT_COMBINATION_MODE_t.
1061:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1062:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1063:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1064:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects which edge of the synchronized signal DXnS activates the trigger output DXnT of the inpu
1065:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1066:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1067:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
1068:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1069:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputTriggerCombinationMode(XMC_USIC_CH_t *const channel,
1070:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INPUT_t input,
1071:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INPUT_COMBINATION_MODE_t combination_mode)
1072:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1073:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_CM_Msk)) |
1074:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)combination_mode << USIC_CH_DXCR_CM_Pos);
1075:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1076:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1077:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1078:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1079:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1080:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  clock_source clock source for the BRG.
1081:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1082:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1083:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1084:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the clock source for the BRG. \n\n
1085:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1086:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1087:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputTriggerCombinationMode(), XMC_USIC_CH_SetExternalClockBRGDivider()\n\n\n
1088:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1089:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetBRGInputClockSource(XMC_USIC_CH_t *const channel, const XMC_USI
1090:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1091:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG = (uint32_t)(channel->BRG & (~USIC_CH_BRG_CLKSEL_Msk)) | (uint32_t)(clock_source);
1092:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1093:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1094:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1095:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1096:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1097:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted. \n
1098:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: 16bit unsigned data. minimum= 0, maximum= 65535
1099:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1100:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1101:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1102:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data into the transmit buffer. \n\n
1103:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * The data provided is placed in TBUF[0U].
1104:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1105:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1106:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1107:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_WriteToTBUFTCI() \n\n\n
1108:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1109:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_WriteToTBUF(XMC_USIC_CH_t *const channel, const uint16_t data)
1110:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1111:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBUF[0U] = data;
1112:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1113:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1114:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1115:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1116:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1117:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted.
1118:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param transmit_control_information transmit control information to be configured while transmit
1119:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: minimum= 0, maximum= 31.
1120:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1121:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1122:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1123:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data to the transmit buffer in a control mode. \n\n
1124:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * When the respective control mode is enabled , this API can be used.
1125:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1126:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1127:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1128:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_WriteToTBUF() \n\n\n
1129:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1130:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_WriteToTBUFTCI(XMC_USIC_CH_t *const channel,
1131:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const uint16_t data,
1132:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t transmit_control_information)
1133:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1134:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBUF[transmit_control_information] = data;
1135:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1136:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1137:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1138:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1139:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1140:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  word_length Number of bits to be configured for a data word. \n
1141:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 					   \b Range: minimum= 1, maximum= 16. \n
1142:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 					   e.g: For word length of 8, \a word_length should be provided as 8.
1143:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1144:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1145:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1146:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the data word length in number of bits. \n\n
1147:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the number of bits to represent a data word. Frame length should be a multiple of word leng
1148:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1149:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1150:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetFrameLength()\n\n\n
1151:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1152:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetWordLength(XMC_USIC_CH_t *const channel, const uint8_t word_len
1153:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1154:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_WLE_Msk)) |
1155:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                   (uint32_t)(((uint32_t)word_length - 1UL)  << USIC_CH_SCTR_WLE_Pos);
1156:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1157:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1158:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1159:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1160:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1161:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  word_length Number of bits to be configured for a data word. \n
1162:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *             \b Range: minimum= 1, maximum= 16. \n
1163:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *             e.g: For word length of 8, \a word_length should be provided as 8.
1164:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1165:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1166:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1167:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the data word length in number of bits. \n\n
1168:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the number of bits to represent a data word. Frame length should be a multiple of word leng
1169:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1170:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1171:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetFrameLength()\n\n\n
1172:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1173:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetShiftDirection(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_
1174:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1175:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_SDIR_Msk)) | (uint32_t)shift_direction;
1176:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1177:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1178:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1179:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1180:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1181:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1182:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Captured counter value
1183:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1184:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1185:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1186:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * The value of the counter is captured if one of the trigger signals DX0T or DX1T are activated by
1187:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1188:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_GetCaptureTimerValue(const XMC_USIC_CH_t *const channel)
1189:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1190:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   return channel->CMTR;
1191:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1192:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1193:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1194:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1195:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1196:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  mode divider mode ::XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_t \n
1197:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  step divider \n
1198:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *             \b XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL resulting divider = 1023 - step \n
1199:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *             \b XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL resulting divider = 1023 / step \n
1200:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1201:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1202:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1203:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1204:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * The fractional divider generates its output frequency fFD by either dividing the input frequency
1205:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1206:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1207:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetFractionalDivider(XMC_USIC_CH_t *const channel, const XMC_USIC_
1208:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1209:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FDR = mode | step;
1210:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1211:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1212:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1213:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1214:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1215:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  frame_length Number of bits in a frame. \n
1216:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: minimum= 1, maximum= 0x3f. The maximum value for fixed frame size is 0x3f. \n
1217:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 						e.g: For a frame length of 16, \a frame_length should be provided as 16.
1218:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1219:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1220:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1221:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Define the data frame length.\n\n
1222:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Set the number of bits to be serially transmitted in a frame.
1223:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * The frame length should be multiples of word length. If the value is set to 0x40, the frame leng
1224:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * has to be controlled explicitly.
1225:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1226:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1227:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetWordLength(), XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1228:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1229:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetFrameLength(XMC_USIC_CH_t *const channel, const uint8_t frame_l
1230:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1231:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_FLE_Msk)) |
1232:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                   (((uint32_t)frame_length - 0x1U)  << USIC_CH_SCTR_FLE_Pos);
1233:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1234:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1235:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1236:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1237:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1238:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Bit mask of the channel events to be enabled. Use @ref XMC_USIC_CH_EVENT_t for the 
1239:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC_CH_EVENT_RECEIVE_START, @ref XMC_USIC_CH_EVENT_DATA_LOST etc. Multip
1240:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				can be combined using \a OR operation.
1241:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1242:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1243:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1244:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Enable the channel interrupt events.\n\n
1245:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Common channel events related to serial communication can be configured using this API.
1246:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be combined using the bitwise OR operation and configured in one function ca
1247:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EVENT_t enumerates multiple protocol event bitmasks. These enumerations can be used 
1248:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1249:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1250:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableEvent(), XMC_USIC_CH_SetInterruptNodePointer() \n\n\n
1251:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1252:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t event)
1253:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1254:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->CCR |= event;
1255:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1256:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1257:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1258:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1259:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				  \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device sup
1260:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Bit mask of the channel events to be disabled. Use @ref XMC_USIC_CH_EVENT_t for the
1261:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC_CH_EVENT_RECEIVE_START, @ref XMC_USIC_CH_EVENT_DATA_LOST etc. Multip
1262:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				can be combined using \a OR operation.
1263:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1264:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1265:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1266:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Disable the channel interrupt events. \n\n
1267:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be combined using the bitwise OR operation and configured in one function ca
1268:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EVENT_t enumerates multiple protocol event bitmasks. These enumerations can be used 
1269:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1270:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1271:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableEvent(), XMC_USIC_CH_SetInterruptNodePointer() \n\n\n
1272:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** */
1273:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t event)
1274:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1275:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->CCR &= (uint32_t)~event;
1276:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1277:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1278:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1279:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1280:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				  \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device sup
1281:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  interrupt_node Interrupt node pointer to be configured. \n
1282:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: @ref XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT,
1283:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  			@ref XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER etc.
1284:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param service_request Service request number.\n
1285:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: 0 to 5.
1286:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1287:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1288:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1289:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the interrupt node for USIC channel events. \n\n
1290:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * For an event to generate interrupt, node pointer should be configured with service request(SR0, 
1291:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * The NVIC node gets linked to the interrupt event by doing so.<br>
1292:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: NVIC node should be separately enabled to generate the interrupt.
1293:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1294:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1295:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableEvent() \n\n\n
1296:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1297:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
1298:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INTERRUPT_NODE_POINTER_t interrupt_node,
1299:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t service_request);
1300:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1301:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1302:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1303:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1304:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Stataus @ref XMC_USIC_CH_TBUF_STATUS_IDLE if transmit buffer is free,
1305:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *                 @ref XMC_USIC_CH_TBUF_STATUS_BUSY if transmit buffer is busy.
1306:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1307:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1308:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets transmit buffer status. \n\n
1309:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Status indicates whether the transmit buffer is free, or busy transmitting data.
1310:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * The status depends on the value of TDV flag in TCSR register.
1311:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * This status can be used while transmitting data. Transmit data when the transmit buffer
1312:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * status is @ref XMC_USIC_CH_TBUF_STATUS_IDLE.
1313:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1314:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1315:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetDataOutputMode() \n\n\n
1316:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1317:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE XMC_USIC_CH_TBUF_STATUS_t XMC_USIC_CH_GetTransmitBufferStatus(XMC_USIC_CH_t *const 
1318:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
  27              	 .loc 1 1318 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
1319:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   return (XMC_USIC_CH_TBUF_STATUS_t)(channel->TCSR & USIC_CH_TCSR_TDV_Msk);
  43              	 .loc 1 1319 0
  44 0008 7B68     	 ldr r3,[r7,#4]
  45 000a 9B6B     	 ldr r3,[r3,#56]
  46 000c DBB2     	 uxtb r3,r3
  47 000e 23F07F03 	 bic r3,r3,#127
  48 0012 DBB2     	 uxtb r3,r3
1320:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
  49              	 .loc 1 1320 0
  50 0014 1846     	 mov r0,r3
  51 0016 0C37     	 adds r7,r7,#12
  52              	.LCFI3:
  53              	 .cfi_def_cfa_offset 4
  54 0018 BD46     	 mov sp,r7
  55              	.LCFI4:
  56              	 .cfi_def_cfa_register 13
  57              	 
  58 001a 5DF8047B 	 ldr r7,[sp],#4
  59              	.LCFI5:
  60              	 .cfi_restore 7
  61              	 .cfi_def_cfa_offset 0
  62 001e 7047     	 bx lr
  63              	 .cfi_endproc
  64              	.LFE199:
  66              	 .section .text.XMC_USIC_CH_SetMode,"ax",%progbits
  67              	 .align 2
  68              	 .thumb
  69              	 .thumb_func
  71              	XMC_USIC_CH_SetMode:
  72              	.LFB240:
1321:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1322:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1323:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @brief API to get receive buffer status
1324:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1325:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1326:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status of data validity check for RBUF0 and RBUF1. \n
1327:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 		   Returned value should be masked with RDV0 and RDV1 bits to know the status. \n
1328:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 		   \b Range: @ref XMC_USIC_CH_RBUF_STATUS_DATA_VALID0, @ref XMC_USIC_CH_RBUF_STATUS_DATA_VALID
1329:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1330:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1331:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if RBUF0 and RBUF1 have valid unread data. \n\n
1332:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * It checks the bits RDV0 and RDV1 of the RBUFSR register.
1333:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Returns the value of RBUFSR masked with bitmasks of RDV0 and RDV1.
1334:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * It can be used to decide whether 2bytes has to be read from RBUF or 1 byte.
1335:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * If both bitmasks XMC_USIC_CH_RBUF_STATUS_DATA_VALID0 and XMC_USIC_CH_RBUF_STATUS_DATA_VALID1
1336:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * are set, then 2 bytes can be read from RBUF. If only either of them is set, then only one byte
1337:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * can be read from RBUF.
1338:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1339:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus() \n\n\n
1340:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1341:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_GetReceiveBufferStatus(XMC_USIC_CH_t *const channel)
1342:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1343:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   return ((uint32_t) (channel->RBUFSR & (USIC_CH_RBUFSR_RDV0_Msk | USIC_CH_RBUFSR_RDV1_Msk)));
1344:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1345:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1346:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1347:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1348:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1349:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1350:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  start_transmision_mode Transmission mode to be enabled. \n
1351:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 								\b Range: @ref XMC_USIC_CH_START_TRANSMISION_DISABLED,
1352:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 								@ref XMC_USIC_CH_START_TRANSMISION_ON_TDV, @ref XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2
1353:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 								@ref XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_1
1354:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1355:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1356:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1357:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1358:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures data transmission. \n\n
1359:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * The configuration affects the data shifted on the DOUT0 pin.
1360:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1361:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1362:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus(), XMC_USIC_CH_SetDataOutputMode() \n\n\n
1363:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1364:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetStartTransmisionMode(XMC_USIC_CH_t *const channel,
1365:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_START_TRANSMISION_MODE_t start_transmision_mode)
1366:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1367:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR = (uint32_t)(channel->TCSR & (~USIC_CH_TCSR_TDEN_Msk)) | (uint32_t)start_transmisio
1368:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1369:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1370:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1371:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1372:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1373:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1374:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  data_output_mode  Data output mode. \n
1375:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_DATA_OUTPUT_MODE_NORMAL, @ref XMC_USIC_CH_DATA_OUTPUT_MODE_INVERTE
1376:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1377:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1378:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1379:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the mode for data output. \n\n
1380:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel can be configured to shift inverted data or direct data based on the input to the A
1381:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1382:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1383:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode() \n\n\n
1384:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1385:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetDataOutputMode(XMC_USIC_CH_t *const channel,
1386:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_DATA_OUTPUT_MODE_t data_output_mode)
1387:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1388:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_DOCFG_Msk)) | (uint32_t)data_output_mod
1389:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1390:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1391:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1392:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1393:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1394:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1395:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1396:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1397:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables automatic update of frame length. \n\n
1398:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * When the automatic update of frame length is enabled, frame length is configured based on the
1399:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * index of the TBUF[]/IN[] register array. When the data is written to TBUF[x], frame length is co
1400:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * with the mask value of \a x at the last 5 bit positions. Same logic is applicable if data is wri
1401:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * IN[x] register.
1402:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1403:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1404:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableFrameLengthControl(), XMC_USIC_CH_TXFIFO_PutDataFLEMode() \n\n\n
1405:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1406:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableFrameLengthControl(XMC_USIC_CH_t *const channel)
1407:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1408:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR = (uint32_t)(channel->TCSR & (~(USIC_CH_TCSR_WLEMD_Msk |
1409:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                              USIC_CH_TCSR_SELMD_Msk |
1410:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                              USIC_CH_TCSR_WAMD_Msk |
1411:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                              USIC_CH_TCSR_HPCMD_Msk))) |
1412:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                   (uint32_t)USIC_CH_TCSR_FLEMD_Msk;
1413:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1414:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1415:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1416:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1417:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1418:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1419:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1420:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1421:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables automatic update of word length. \n\n
1422:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * When the automatic update of word length is enabled, word length is configured based on the
1423:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * index of the TBUF[]/IN[] register array. When the data is written to TBUF[x], word length is con
1424:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * with the mask value of \a x at the last 5 bit positions. Same logic is applicable if data is wri
1425:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * IN[x] register.
1426:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1427:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1428:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableFrameLengthControl(), XMC_USIC_CH_TXFIFO_PutDataFLEMode() \n\n\n
1429:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1430:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableWordLengthControl(XMC_USIC_CH_t *const channel)
1431:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1432:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR = (uint32_t)(channel->TCSR & (~(USIC_CH_TCSR_WLEMD_Msk |
1433:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                              USIC_CH_TCSR_SELMD_Msk |
1434:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                              USIC_CH_TCSR_WAMD_Msk |
1435:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                              USIC_CH_TCSR_HPCMD_Msk))) |
1436:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                   (uint32_t)USIC_CH_TCSR_WLEMD_Msk;
1437:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1438:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1439:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1440:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1441:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1442:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1443:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1444:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1445:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables automatic update of frame length. \n\n
1446:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * When automatic update of frame length is disabled, frame length has to configured explicitly.
1447:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Frame length remains fixed until it is changed again.
1448:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1449:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1450:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl(), XMC_USIC_CH_SetFrameLength() \n\n\n
1451:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1452:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableFrameLengthControl(XMC_USIC_CH_t *const channel)
1453:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1454:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR &= (uint32_t)~USIC_CH_TCSR_FLEMD_Msk;
1455:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1456:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1457:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1458:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1459:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1460:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1461:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1462:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1463:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables automatic update of word length. \n\n
1464:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * When automatic update of word length is disabled, word length has to configured explicitly.
1465:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Word length remains fixed until it is changed again.
1466:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1467:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1468:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl(), XMC_USIC_CH_SetWordLength() \n\n\n
1469:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1470:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableWordLengthControl(XMC_USIC_CH_t *const channel)
1471:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1472:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR &= (uint32_t)~USIC_CH_TCSR_WLEMD_Msk;
1473:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1474:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1475:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1476:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1477:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1478:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1479:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1480:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1481:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Bit TCSR.TE is set if DX2T becomes active while TDV = 1. \n\n
1482:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the transfer trigger unit to set bit TCSR.TE if the trigger signal DX2T becomes active
1483:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * for event driven transfer starts.
1484:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1485:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1486:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableTBUFDataValidTrigger()\n\n\n
1487:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1488:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableTBUFDataValidTrigger(XMC_USIC_CH_t *const channel)
1489:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1490:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR |= (uint32_t)USIC_CH_TCSR_TDVTR_Msk;
1491:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1492:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1493:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1494:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1495:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1496:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1497:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1498:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1499:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the trigger of TDV depending on DX2T signal. \n\n
1500:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Bit TCSR.TE is permanently set.
1501:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1502:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1503:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableTBUFDataValidTrigger() \n\n\n
1504:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1505:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableTBUFDataValidTrigger(XMC_USIC_CH_t *const channel)
1506:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1507:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR &= (uint32_t)~USIC_CH_TCSR_TDVTR_Msk;
1508:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1509:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1510:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1511:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1512:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1513:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  service_request_line service request number of the event to be triggered. \n
1514:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: 0 to 5.
1515:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1516:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1517:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1518:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Trigger a USIC interrupt service request.\n\n
1519:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * When the USIC service request is triggered, the NVIC interrupt associated with it will be
1520:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * generated if enabled.
1521:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1522:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1523:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInterruptNodePointer() \n\n\n
1524:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1525:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TriggerServiceRequest(XMC_USIC_CH_t *const channel, const uint32_t
1526:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1527:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FMR = (uint32_t)(USIC_CH_FMR_SIO0_Msk << service_request_line);
1528:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1529:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1530:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1531:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1532:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1533:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  transmit_buffer_status clearing or setting the TDV flag. \n
1534:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1535:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1536:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1537:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1538:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Modify TCSR.TDV and TCSR.TE to control the start of a data word transmission by software.
1539:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1540:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1541:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus() \n\n\n
1542:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1543:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetTransmitBufferStatus(XMC_USIC_CH_t *const channel,
1544:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_TBUF_STATUS_SET_t transmit_buffer_status)
1545:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1546:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FMR = (uint32_t)transmit_buffer_status;
1547:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1548:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1549:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1550:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1551:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1552:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1553:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1554:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1555:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1556:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Modify TCSR.TDV and TCSR.TE to control the start of a data word transmission by software.
1557:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1558:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1559:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus() \n\n\n
1560:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1561:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_InvalidateReadData(XMC_USIC_CH_t *const channel)
1562:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1563:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FMR = USIC_CH_FMR_CRDV0_Msk | USIC_CH_FMR_CRDV1_Msk;
1564:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1565:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1566:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1567:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1568:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1569:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1570:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  passive_level Value of passive level for the channel. \n
1571:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_PASSIVE_DATA_LEVEL0, @ref XMC_USIC_CH_PASSIVE_DATA_LEVEL1
1572:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1573:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1574:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1575:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Set the passive data level of the output signal. \n\n
1576:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * When the USIC channel transmit stage is idle, the output signal level stays at the
1577:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * configured passive level.
1578:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1579:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1580:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus(), XMC_USIC_CH_SetStartTransmisionMode() \n\n\n
1581:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1582:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetPassiveDataLevel(XMC_USIC_CH_t *const channel,
1583:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_PASSIVE_DATA_LEVEL_t passive_level)
1584:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1585:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR &= (~USIC_CH_SCTR_PDL_Msk);
1586:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR |= (uint32_t)passive_level;
1587:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1588:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1589:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /* TX FIFO APIs */
1590:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1591:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1592:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1593:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data_pointer Start position inside the FIFO buffer. \n
1594:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to 63.
1595:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the transmit FIFO. \n
1596:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1597:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold of transmit FIFO filling level to be considered for generating events. \n
1598:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1599:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1600:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1601:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1602:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Initializes the transmit FIFO. \n\n
1603:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Transmit FIFO is a subset of a common FIFO sized 64 words. This FIFO is shared between 2 channel
1604:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Each channel can share the FIFO for transmission and reception. \a data_pointer represents the s
1605:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * from where transmit data can be put, for the selected USIC channel. \a size represents the size 
1606:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 2. Since the FIFO is shared between 2 USIC channels, FIFO size should be carefully selected. A F
1607:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * event is generated when the FIFO filling level falls below the \a limit value.
1608:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1609:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1610:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EnableEvent(), XMC_USIC_CH_TXFIFO_SetInterruptNodePointer() \n\n\n
1611:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1612:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_TXFIFO_Configure(XMC_USIC_CH_t *const channel,
1613:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t data_pointer,
1614:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
1615:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t limit);
1616:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1617:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1618:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1619:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1620:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the transmit FIFO. \n
1621:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1622:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold for transmit FIFO filling level to be considered for generating events. \
1623:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1624:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1625:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1626:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \deprecated { Use XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit() }
1627:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1628:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1629:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the size and trigger limit for the transmit FIFO. \n\n
1630:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * The API is not to be called for initializing the transmit FIFO. The API shall be used for the
1631:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * runtime change of transmit FIFO trigger limit. FIFO start position will not be affected on execu
1632:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1633:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1634:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit() \n\n\n
1635:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1636:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
1637:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_FIFO_SIZE_t size,
1638:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t limit);
1639:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1640:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1641:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1642:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1643:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1644:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold for transmit FIFO filling level to be considered for generating events. \
1645:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a fifo size -1.
1646:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1647:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1648:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1649:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the trigger limit for the TX FIFO. \n\n
1650:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1651:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1652:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit() \n\n\n
1653:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1654:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_SetTriggerLimit(XMC_USIC_CH_t *const channel,
1655:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t limit)
1656:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1657:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBCTR = (channel->TBCTR & (uint32_t)~USIC_CH_TBCTR_LIMIT_Msk) | ((limit << USIC_CH_TBCTR
1658:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1659:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1660:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1661:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1662:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1663:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1664:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1665:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be enabled. Multiple events can be bitwise OR combined. @ref XMC_USIC_CH_
1666:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1667:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1668:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1669:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the interrupt events related to transmit FIFO. \n\n
1670:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration @ref XMC_USIC_CH_TXFIFO_EVENT_CONF_t.
1671:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be enabled by providing multiple events in a single call. For providing
1672:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation. Events are configured in the TBC
1673:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1674:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: API only enables the events. For interrupt generation, interrupt node must be configured a
1675:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * must be enabled.
1676:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1677:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1678:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_SetInterruptNodePointer() \n\n\n
1679:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1680:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t ev
1681:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1682:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBCTR |= event;
1683:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1684:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1685:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1686:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1687:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1688:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1689:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be disabled. @ref XMC_USIC_CH_TXFIFO_EVENT_CONF_t \n
1690:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1691:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1692:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1693:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the interrupt events related to transmit FIFO. \n\n
1694:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * By disabling the interrupt events, generation of interrupt is stopped. User can poll the event
1695:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * flags from the status register using the API XMC_USIC_CH_TXFIFO_GetEvent().
1696:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration @ref XMC_USIC_CH_TXFIFO_EVENT_CONF_t. Fo
1697:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation.
1698:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1699:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1700:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_GetEvent(), XMC_USIC_CH_TXFIFO_EnableEvent() \n\n\n
1701:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1702:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t e
1703:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1704:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBCTR &= (uint32_t)~event;
1705:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1706:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1707:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1708:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1709:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				      \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1710:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param interrupt_node Node pointer representing the transmit FIFO events. \n
1711:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: @ref XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_STANDARD,
1712:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  			@ref XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE
1713:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param service_request The service request to be used for interrupt generation. \n
1714:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: 0 to 5.
1715:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1716:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1717:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1718:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets an interrupt node for the transmit FIFO events.\n\n
1719:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * A node pointer represents one or more interrupt events. Service request represents the interrupt
1720:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * among the 6 interrupt nodes available for USIC module.
1721:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * API configures the service request to be used for interrupt generation for the events selected.
1722:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * A transmit FIFO event can generate an interrupt only if the interrupt node is configured for the
1723:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * the interrupt generation is enabled for the event. For example, transmit FIFO standard transmit 
1724:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * interrupt is generated if the interrupt node for the same is set and interrupt is enabled.<br>
1725:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1726:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: NVIC node should be explicitly enabled for the interrupt generation.
1727:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1728:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1729:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EnableEvent() \n\n\n
1730:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1731:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_TXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
1732:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t interrupt_node,
1733:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t service_request);
1734:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1735:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1736:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1737:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1738:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted. \n
1739:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: 16bit unsigned data. minimum= 0, maximum= 65535
1740:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1741:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1742:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1743:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data into the transmit FIFO. \n\n
1744:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * The data provided is placed in the transmit FIFO.
1745:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * The transmit FIFO should be configured before calling this API.
1746:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1747:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1748:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EnableEvent() \n\n\n
1749:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1750:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutData(XMC_USIC_CH_t *const channel, const uint16_t data)
1751:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1752:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[0] = data;
1753:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1754:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1755:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1756:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1757:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1758:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted. \n
1759:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: 16bit unsigned data. minimum= 0, maximum= 65535
1760:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param loc Input location. \n
1761:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1762:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1763:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1764:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Transmit data can be loaded to TBUF by software by writing to the transmit buffer input
1765:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * locations TBUFx (x = 00-31), consisting of 32 consecutive addresses. The data written
1766:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * to one of these input locations is stored in the transmit buffer TBUF. Additionally, the
1767:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * address of the written location is evaluated and can be used for additional control
1768:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * purposes. This 5-bit wide information (named Transmit Control Information TCI) can be
1769:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * used for different purposes in different protocols.
1770:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1771:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1772:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableWordLengthControl() \n
1773:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1774:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1775:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutDataEx(XMC_USIC_CH_t *const channel, const uint16_t data
1776:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1777:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[loc] = data;
1778:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1779:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1780:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1781:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1782:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1783:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted.
1784:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param frame_length Frame length to be configured while transmitting the data. \n
1785:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: minimum= 0, maximum= 31. e.g: For a frame length of 16, set \a frame_length as 15.
1786:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1787:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1788:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1789:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data to the transmit FIFO in frame length control mode. \n\n
1790:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * When frame length control is enabled for dynamic update of frame length, this API can be used.
1791:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length represents the frame length to be updated by the peripheral.
1792:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length is used as index for the IN[] register array.
1793:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1794:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1795:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_PutDataEx() \n
1796:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1797:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1798:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutDataFLEMode(XMC_USIC_CH_t *const channel,
1799:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const uint16_t data,
1800:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t frame_length)
1801:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1802:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[frame_length] = data;
1803:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1804:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1805:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1806:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1807:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1808:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted.
1809:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param frame_length Frame length to be configured while transmitting the data. \n
1810:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: minimum= 0, maximum= 31. e.g: For a frame length of 16, set \a frame_length as 15.
1811:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1812:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1813:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1814:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data to the transmit FIFO in hardware port control mode. \n\n
1815:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * When hardware port control is enabled for dynamic update of frame length, this API can be used.
1816:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length represents the frame length to be updated by the peripheral.
1817:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length is used as index for the IN[] register array.
1818:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1819:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1820:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1821:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1822:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutDataHPCMode(XMC_USIC_CH_t *const channel,
1823:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const uint16_t data,
1824:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t frame_length)
1825:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1826:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[frame_length] = data;
1827:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1828:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1829:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1830:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1831:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1832:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1833:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1834:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1835:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the contents of transmit FIFO. \n\n
1836:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Transmit FIFO contents will be cleared and the filling level will be reset to 0.
1837:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1838:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1839:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_GetLevel() \n\n\n
1840:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1841:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_Flush(XMC_USIC_CH_t *const channel)
1842:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1843:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = (uint32_t)USIC_CH_TRBSCR_FLUSHTB_Msk;
1844:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1845:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1846:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1847:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1848:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1849:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if transmit FIFO is full
1850:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if transmit FIFO is not full.
1851:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1852:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1853:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if transmit FIFO is full. \n\n
1854:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * When the transmit FIFO filling level reaches the configured size, FIFO full flag is set.
1855:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * User should not write to the FIFO when the transmit FIFO is full.
1856:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1857:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1858:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_IsEmpty(), XMC_USIC_CH_TXFIFO_Flush() \n\n\n
1859:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1860:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_TXFIFO_IsFull(XMC_USIC_CH_t *const channel)
1861:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1862:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_TFULL_Msk);
1863:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1864:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1865:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1866:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1867:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1868:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if transmit FIFO is empty
1869:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if transmit FIFO has some data.
1870:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1871:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1872:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if transmit FIFO is empty. \n\n
1873:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * When the transmit FIFO is empty, data can be written to FIFO.
1874:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * When the last written word to the transmit FIFO is transmitted out of the FIFO,
1875:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * FIFO empty flag is set.
1876:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1877:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1878:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_Flush(), XMC_USIC_CH_TXFIFO_PutData() \n\n\n
1879:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1880:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_TXFIFO_IsEmpty(XMC_USIC_CH_t *const channel)
1881:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1882:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_TEMPTY_Msk);
1883:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1884:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1885:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1886:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1887:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1888:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Transmit FIFO filling level. \n
1889:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: minimum= 0(FIFO empty), maximum= transmit FIFO size.
1890:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1891:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1892:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the transmit FIFO filling level. \n\n
1893:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * For every word written to the FIFO, filling level is updated. The API gives the value
1894:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * of this filling level.
1895:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1896:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1897:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_Flush(), XMC_USIC_CH_TXFIFO_PutData() \n\n\n
1898:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1899:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_TXFIFO_GetLevel(XMC_USIC_CH_t *const channel)
1900:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1901:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   return ((uint32_t)(channel->TRBSR & USIC_CH_TRBSR_TBFLVL_Msk) >> USIC_CH_TRBSR_TBFLVL_Pos);
1902:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1903:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1904:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1905:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1906:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1907:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status of standard transmit and transmit buffer error events. @ref XMC_USIC_CH_TXFIFO_EV
1908:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1909:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1910:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the transmit FIFO event status. \n\n
1911:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Gives the status of transmit FIFO standard transmit buffer event and transmit buffer error event
1912:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * The status bits are located at their bit positions in the TRBSR register in the returned value.
1913:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * User can make use of the @ref XMC_USIC_CH_TXFIFO_EVENT_t enumeration for checking the status of 
1914:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * The status can be found by using the bitwise AND operation on the returned value with the enumer
1915:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1916:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: Event status flags should be cleared by the user explicitly.
1917:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1918:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1919:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_ClearEvent() \n\n\n
1920:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1921:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_TXFIFO_GetEvent(XMC_USIC_CH_t *const channel)
1922:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1923:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   return (uint32_t)((channel->TRBSR) & (USIC_CH_TRBSR_STBI_Msk |
1924:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                                         USIC_CH_TRBSR_TBERI_Msk));
1925:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1926:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1927:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1928:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1929:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1930:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  event Transmit FIFO events to be cleared. \n
1931:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 			     \b Range: @ref XMC_USIC_CH_TXFIFO_EVENT_STANDARD, @ref XMC_USIC_CH_TXFIFO_EVENT_ERROR.
1932:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1933:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1934:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1935:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the transmit FIFO event flags in the status register. \n\n
1936:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel peripheral does not clear the event flags after they are read.
1937:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * This API clears the events provided in the \a mask value.
1938:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EVENT enumeration can be used as input. Multiple events
1939:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * can be cleared by providing a mask value obtained by bitwise OR operation of
1940:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple event enumerations.
1941:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1942:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1943:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_GetEvent() \n\n\n
1944:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1945:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_ClearEvent(XMC_USIC_CH_t *const channel,
1946:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t event)
1947:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1948:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = event;
1949:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1950:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1951:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1952:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1953:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1954:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data_pointer Start position inside the FIFO buffer. \n
1955:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to 63.
1956:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the receive FIFO. \n
1957:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1958:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold of receive FIFO filling level to be considered for generating events. \n
1959:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1960:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1961:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1962:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1963:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the receive FIFO. \n\n
1964:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Receive FIFO is the subset of a common FIFO sized 64 words. This FIFO is shared between 2 channe
1965:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Each channel can share the FIFO for transmission and reception. \a data_pointer represents the s
1966:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * from where received data can be put. \a size represents the size of receive FIFO as a multiple o
1967:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Since the FIFO is shared between 2 USIC channels, FIFO size should be carefully selected. A FIFO
1968:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * event or alternative receive buffer event is generated when the FIFO filling level exceeds the \
1969:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1970:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1971:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_EnableEvent(), XMC_USIC_CH_RXFIFO_SetInterruptNodePointer() \n\n\n
1972:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** */
1973:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_RXFIFO_Configure(XMC_USIC_CH_t *const channel,
1974:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t data_pointer,
1975:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
1976:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t limit);
1977:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1978:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1979:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1980:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1981:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the receive FIFO. \n
1982:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1983:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold for receive FIFO filling level to be considered for generating events. \n
1984:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1985:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1986:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1987:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \deprecated { Use XMC_USIC_CH_RXFIFO_SetTriggerLimit() }
1988:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1989:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1990:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the size and trigger limit for the receive FIFO. \n\n
1991:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * The API is not to be called for initializing the receive FIFO. The API shall be used for the
1992:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * runtime change of receive FIFO trigger limit. FIFO start position will not be affected on execut
1993:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1994:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1995:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit()\ n\n\n
1996:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1997:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
1998:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_FIFO_SIZE_t size,
1999:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t limit);
2000:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
2001:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
2002:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2003:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2004:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold for transmit FIFO filling level to be considered for generating events. \
2005:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a fifo size -1.
2006:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2007:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2008:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2009:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the trigger limit for the TX FIFO. \n\n
2010:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2011:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2012:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit() \n\n\n
2013:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
2014:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_SetTriggerLimit(XMC_USIC_CH_t *const channel,
2015:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t limit)
2016:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
2017:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->RBCTR = (channel->RBCTR & (uint32_t)~USIC_CH_RBCTR_LIMIT_Msk) | ((limit << USIC_CH_RBCTR
2018:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
2019:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
2020:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
2021:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2022:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2023:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be enabled. Multiple events can be bitwise OR combined. @ref XMC_USIC_CH_
2024:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2025:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2026:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2027:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the interrupt events related to transmit FIFO. \n\n
2028:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration @ref XMC_USIC_CH_RXFIFO_EVENT_CONF_t.
2029:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be enabled by providing multiple events in a single call. For providing
2030:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation.<br>
2031:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2032:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: API only enables the events. For interrupt generation, interrupt node must be configured a
2033:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * must be enabled.
2034:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2035:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2036:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_SetInterruptNodePointer() \n\n\n
2037:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
2038:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t ev
2039:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
2040:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->RBCTR |= event;
2041:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
2042:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
2043:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
2044:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
2045:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2046:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2047:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be disabled. \n
2048:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD, @ref XMC_USIC_CH_RXFIFO_EVENT_CONF_ERR
2049:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 			@ref XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE.
2050:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2051:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2052:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2053:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the selected interrupt events related to receive FIFO. \n\n
2054:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * By disabling the interrupt events, generation of interrupt is stopped. User can poll the event
2055:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * flags from the status register using the API XMC_USIC_CH_RXFIFO_GetEvent().
2056:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration \a XMC_USIC_CH_RXFIFO_EVENT_CONF. For pr
2057:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation.
2058:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2059:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2060:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_GetEvent(), XMC_USIC_CH_RXFIFO_EnableEvent() \n\n\n
2061:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
2062:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t e
2063:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
2064:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->RBCTR &= (uint32_t)~event;
2065:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
2066:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
2067:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
2068:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2069:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2070:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param interrupt_node Node pointer representing the receive FIFO events. \n
2071:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: @ref XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_STANDARD,
2072:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 					@ref XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE
2073:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param service_request The service request to be used for interrupt generation.\n
2074:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: 0 to 5.
2075:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2076:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2077:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2078:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets an interrupt node for the receive FIFO events. \n\n
2079:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * A node pointer represents one or more interrupt events. Service request represents the interrupt
2080:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * among the 6 interrupt nodes available for USIC module.
2081:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * API configures the service request to be used for interrupt generation for the events selected.
2082:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * A receive FIFO event can generate an interrupt only if the interrupt node is configured for the 
2083:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * the interrupt generation is enabled for the event. For example, transmit FIFO standard transmit 
2084:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * interrupt is generated if the interrupt node for the same is set and interrupt is enabled.<br>
2085:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2086:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: NVIC node should be explicitly enabled for the interrupt generation.
2087:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2088:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2089:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_EnableEvent() \n\n\n
2090:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
2091:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_RXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
2092:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t interrupt_node,
2093:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t service_request);
2094:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
2095:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
2096:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2097:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2098:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Value read from the receive FIFO. \n
2099:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: 16bit data. Length of data depends on the word length configuration.
2100:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2101:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2102:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets data from the receive FIFO. \n\n
2103:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Receive FIFO should be read only if data is availble in the FIFO. This can be checked using
2104:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * the API XMC_USIC_CH_RXFIFO_IsEmpty(). Receive FIFO error flag will be set if an attempt is made
2105:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * to read from an empty receive FIFO. To read all the received data, user should keep reading data
2106:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * until receive FIFO is empty.
2107:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2108:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2109:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_ClearEvent() \n\n\n
2110:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
2111:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint16_t XMC_USIC_CH_RXFIFO_GetData(XMC_USIC_CH_t *const channel)
2112:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
2113:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   return (uint16_t)(channel->OUTR);
2114:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
2115:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
2116:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
2117:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2118:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2119:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2120:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2121:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2122:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the contents of receive FIFO. \n\n
2123:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Receive FIFO contents will be cleared and the filling level will be reset to 0.
2124:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2125:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2126:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_GetLevel() \n\n\n
2127:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
2128:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_Flush(XMC_USIC_CH_t *const channel)
2129:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
2130:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = (uint32_t)USIC_CH_TRBSCR_FLUSHRB_Msk;
2131:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
2132:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
2133:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
2134:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2135:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2136:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if receive FIFO is full
2137:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if receive FIFO is not full.
2138:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2139:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2140:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if receive FIFO is full. \n\n
2141:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * When the receive FIFO filling level reaches the configured size, FIFO full flag is set.
2142:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Any data received when the receive FIFO is full, is lost.
2143:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2144:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2145:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_IsEmpty(), XMC_USIC_CH_RXFIFO_Flush() \n\n\n
2146:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
2147:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_RXFIFO_IsFull(XMC_USIC_CH_t *const channel)
2148:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
2149:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_RFULL_Msk);
2150:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
2151:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
2152:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
2153:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2154:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2155:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if receive FIFO is empty,
2156:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if receive FIFO has some data.
2157:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2158:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2159:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if receive FIFO is empty. \n\n
2160:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * When the receive FIFO is empty, received data will be put in receive FIFO.
2161:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * When the last received word in the FIFO is read, FIFO empty flag is set. Any attempt
2162:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * to read from an empty receive FIFO will set the receive FIFO error flag.
2163:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2164:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2165:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_Flush(), XMC_USIC_CH_RXFIFO_PutData() \n\n\n
2166:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
2167:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_RXFIFO_IsEmpty(XMC_USIC_CH_t *const channel)
2168:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
2169:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_REMPTY_Msk);
2170:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
2171:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
2172:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
2173:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2174:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2175:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return uint32_t Receive FIFO filling level. \n
2176:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: minimum= 0(FIFO empty), maximum= receive FIFO size.
2177:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2178:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2179:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the receive FIFO filling level. \n\n
2180:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * For every word received, the filling level is incremented. The API gives the value
2181:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * of this filling level. The filling level is decremented when the data is read out of the
2182:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * receive FIFO.
2183:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2184:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2185:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_Flush(), XMC_USIC_CH_RXFIFO_PutData() \n\n\n
2186:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
2187:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_RXFIFO_GetLevel(XMC_USIC_CH_t *const channel)
2188:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
2189:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   return ((uint32_t)(channel->TRBSR & USIC_CH_TRBSR_RBFLVL_Msk) >> USIC_CH_TRBSR_RBFLVL_Pos);
2190:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
2191:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
2192:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
2193:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2194:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2195:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status of standard receive buffer, alternative receive buffer and receive buffer error e
2196:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_RXFIFO_EVENT_STANDARD, @ref XMC_USIC_CH_RXFIFO_EVENT_ERROR,
2197:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 					  @ref XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE.
2198:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2199:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2200:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the receive FIFO events' status. \n\n
2201:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Gives the status of receive FIFO standard receive buffer event, alternative receive buffer event
2202:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * The status bits are located at their bitpositions in the TRBSR register in the returned value.
2203:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * User can make use of the XMC_USIC_CH_RXFIFO_EVENT enumeration for checking the status of return 
2204:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * The status can be found by using the bitwise AND operation on the returned value with the enumer
2205:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2206:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: Event status flags should be cleared by the user explicitly.
2207:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2208:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2209:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_ClearEvent()\n\n\n
2210:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
2211:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_RXFIFO_GetEvent(XMC_USIC_CH_t *const channel)
2212:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
2213:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   return (uint32_t)((channel->TRBSR) & (USIC_CH_TRBSR_SRBI_Msk |
2214:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                                         USIC_CH_TRBSR_RBERI_Msk |
2215:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                                         USIC_CH_TRBSR_ARBI_Msk));
2216:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
2217:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
2218:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
2219:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2220:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2221:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  event Receive FIFO events to be cleared. \n
2222:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_RXFIFO_EVENT_STANDARD, @ref XMC_USIC_CH_RXFIFO_EVENT_ERROR,
2223:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 					  @ref XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE.
2224:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2225:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2226:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2227:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the receive FIFO event flags in the status register. \n\n
2228:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel peripheral does not clear the event flags after they are read.
2229:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * This API clears the events provided in the \a mask value.
2230:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_EVENT enumeration can be used as input. Multiple events
2231:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * can be cleared by providing a mask value obtained by bitwise OR operation of
2232:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple event enumerations.
2233:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2234:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2235:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_GetEvent() \n\n\n
2236:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
2237:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_ClearEvent(XMC_USIC_CH_t *const channel,
2238:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t event)
2239:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
2240:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = event;
2241:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
2242:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
2243:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
2244:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2245:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2246:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2247:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2248:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2249:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables time measurement using the capture mode timer. \n\n
2250:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Time measurement is enabled by setting the timer enable flag in BRG register.
2251:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2252:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2253:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableTimeMeasurement() \n\n\n
2254:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
2255:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableTimeMeasurement(XMC_USIC_CH_t *const channel)
2256:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
2257:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG |= (uint32_t)USIC_CH_BRG_TMEN_Msk;
2258:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
2259:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
2260:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
2261:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2262:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2263:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2264:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2265:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2266:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables time measurement using the capture mode timer. \n\n
2267:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Time measurement is disabled by clearing the timer enable flag in BRG register.
2268:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2269:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2270:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableTimeMeasurement() \n\n\n
2271:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
2272:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableTimeMeasurement(XMC_USIC_CH_t *const channel)
2273:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
2274:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG &= (uint32_t)~USIC_CH_BRG_TMEN_Msk;
2275:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
2276:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
2277:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
2278:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2279:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2280:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param passive_level Passive level for the master clock output. \n
2281:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: @ref XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_0, @ref XMC_USIC_CH_BRG_MASTER_CL
2282:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2283:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2284:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2285:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the idle mode pin level for the master clock output. \n
2286:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
2287:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetMclkOutputPassiveLevel(XMC_USIC_CH_t *const channel,
2288:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_t passive_level)
2289:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
2290:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG = (uint32_t)(channel->BRG & (~USIC_CH_BRG_MCLKCFG_Msk)) | (uint32_t)passive_level;
2291:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
2292:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
2293:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2294:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2295:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param passive_level Passive level for the clock output. \n
2296:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED,
2297:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 							  @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED,
2298:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 							  @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED,
2299:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *							  @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED,
2300:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param clock_output Shift clock source selection. \n
2301:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: Use @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK,
2302:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 								  @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1
2303:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2304:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2305:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2306:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the idle mode shift clock output level and selects the shift clock source. \n\n
2307:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Shift clock idle mode output level can be set to logic high or low. Shift clock output can be co
2308:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * delay of half shift clock period. Both the configurations are available as enumeration values de
2309:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t.
2310:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * This value should be configured based on the slave device requirement.
2311:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Shift clock source can be selected between internal clock(master) and external input(slave).
2312:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2313:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
2314:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConfigureShiftClockOutput(XMC_USIC_CH_t *const channel,
2315:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t passive_level,
2316:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_t clock_output)
2317:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
2318:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG = (uint32_t)(channel->BRG & (~(USIC_CH_BRG_SCLKCFG_Msk |
2319:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                             USIC_CH_BRG_SCLKOSEL_Msk))) |
2320:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                  (uint32_t)passive_level |
2321:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                  (uint32_t)clock_output;
2322:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
2323:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
2324:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
2325:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2326:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2327:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param mode USIC channel operation mode. \n
2328:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC_CH_OPERATING_MODE_IDLE, @ref XMC_USIC_CH_OPERATING_MODE_SPI,
2329:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  @ref XMC_USIC_CH_OPERATING_MODE_UART, @ref XMC_USIC_CH_OPERATING_MODE_I2S,
2330:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  @ref XMC_USIC_CH_OPERATING_MODE_I2C.
2331:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2332:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2333:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2334:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the USIC channel operation mode.\n\n
2335:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * A USIC channel can support multiple serial communication protocols like UART, SPI, I2C and I2S.
2336:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * The API sets the input operation mode to the USIC channel.
2337:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2338:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2339:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_Enable(), XMC_USIC_CH_Enable() \n\n\n
2340:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
2341:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetMode(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_OPERATING_
2342:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
  73              	 .loc 1 2342 0
  74              	 .cfi_startproc
  75              	 
  76              	 
  77              	 
  78 0000 80B4     	 push {r7}
  79              	.LCFI6:
  80              	 .cfi_def_cfa_offset 4
  81              	 .cfi_offset 7,-4
  82 0002 83B0     	 sub sp,sp,#12
  83              	.LCFI7:
  84              	 .cfi_def_cfa_offset 16
  85 0004 00AF     	 add r7,sp,#0
  86              	.LCFI8:
  87              	 .cfi_def_cfa_register 7
  88 0006 7860     	 str r0,[r7,#4]
  89 0008 0B46     	 mov r3,r1
  90 000a FB70     	 strb r3,[r7,#3]
2343:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->CCR = (uint32_t)(channel->CCR & (~(USIC_CH_CCR_MODE_Msk))) | (uint32_t)mode;
  91              	 .loc 1 2343 0
  92 000c 7B68     	 ldr r3,[r7,#4]
  93 000e 1B6C     	 ldr r3,[r3,#64]
  94 0010 23F00F02 	 bic r2,r3,#15
  95 0014 FB78     	 ldrb r3,[r7,#3]
  96 0016 1A43     	 orrs r2,r2,r3
  97 0018 7B68     	 ldr r3,[r7,#4]
  98 001a 1A64     	 str r2,[r3,#64]
2344:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
  99              	 .loc 1 2344 0
 100 001c 0C37     	 adds r7,r7,#12
 101              	.LCFI9:
 102              	 .cfi_def_cfa_offset 4
 103 001e BD46     	 mov sp,r7
 104              	.LCFI10:
 105              	 .cfi_def_cfa_register 13
 106              	 
 107 0020 5DF8047B 	 ldr r7,[sp],#4
 108              	.LCFI11:
 109              	 .cfi_restore 7
 110              	 .cfi_def_cfa_offset 0
 111 0024 7047     	 bx lr
 112              	 .cfi_endproc
 113              	.LFE240:
 115 0026 00BF     	 .section .text.XMC_I2S_CH_ClearStatusFlag,"ax",%progbits
 116              	 .align 2
 117              	 .thumb
 118              	 .thumb_func
 120              	XMC_I2S_CH_ClearStatusFlag:
 121              	.LFB247:
 122              	 .file 2 "D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc/xmc_i2s.h"
   1:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** /**
   2:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @file xmc_i2s.h
   3:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @date 2020-12-05
   4:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
   5:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @cond
   6:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *****************************************************************************
   7:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
   9:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * All rights reserved.
  11:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
  12:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
  14:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * do so, all subject to the following:
  20:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
  21:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * The copyright notices in the Software and this entire statement, including
  22:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * the above license grant, this restriction and the following disclaimer,
  23:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * all derivative works of the Software, unless such copies or derivative
  25:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * works are solely in the form of machine-executable object code generated by
  26:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * a source language processor.
  27:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
  28:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * DEALINGS IN THE SOFTWARE.
  35:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
  36:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * To improve the quality of the software, users are encouraged to share
  37:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * at XMCSupport@infineon.com.
  39:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *****************************************************************************
  40:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
  41:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * Change History
  42:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * --------------
  43:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
  44:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * 2015-08-21:
  45:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *     - Initial <br>
  46:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
  47:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * 2015-08-24:
  48:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *     - Added APIs for enabling/disabling delay compensation XMC_I2S_CH_DisableDelayCompensation()
  49:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *       XMC_I2S_CH_EnableDelayCompensation() <br>
  50:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
  51:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * 2015-09-01:
  52:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *     - Modified XMC_I2S_CH_SetInputSource() for avoiding complete DXCR register overwriting. <br>
  53:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *     - Modified XMC_I2S_CH_EVENT_t enum for supporting XMC_I2S_CH_EnableEvent() and XMC_I2S_CH_Di
  54:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *       for supporting multiple events configuration <br>
  55:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
  56:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * 2015-09-14:
  57:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *     - Modified XMC_I2S_CH_SetSystemWordLength for supporting up to 63 system word length<br>
  58:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
  59:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * 2016-05-20:
  60:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *     - Added XMC_I2S_CH_EnableDataTransmission() and XMC_I2S_CH_DisableDataTransmission()
  61:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
  62:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * 2016-06-30:
  63:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *     - Documentation updates.
  64:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
  65:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * 2019-05-07:
  66:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *     - Added normal_divider_mode to XMC_I2S_CH_CONFIG_t configuration structure.
  67:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *       It selects normal divider mode for baudrate generator instead of default fractional divide
  68:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *     - Added XMC_I2S_CH_SetBaudrateEx()
  69:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
  70:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * 2020-12-05:
  71:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *    - Added XMC_I2S_CH_InitEx() that allows user select if automatic baudrate configuration shoul
  72:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * 
  73:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @endcond
  74:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
  75:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  */
  76:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** 
  77:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** #ifndef XMC_I2S_H_
  78:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** #define XMC_I2S_H_
  79:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** 
  80:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** /**************************************************************************************************
  81:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * HEADER FILES
  82:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  **************************************************************************************************
  83:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** #include "xmc_usic.h"
  84:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** 
  85:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** /**
  86:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @addtogroup XMClib XMC Peripheral Library
  87:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @{
  88:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  */
  89:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** 
  90:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** /**
  91:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @addtogroup I2S
  92:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @brief (IIS) driver for the XMC microcontroller family.
  93:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
  94:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * USIC IIS Features: <br>
  95:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @{
  96:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  */
  97:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** 
  98:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** /*******************************************************************************
  99:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * MACROS
 100:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *******************************************************************************/
 101:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** 
 102:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** #if defined(USIC0)
 103:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** #define XMC_I2S0_CH0 XMC_USIC0_CH0                   /**< USIC0 channel 0 base address */
 104:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** #define XMC_I2S0_CH1 XMC_USIC0_CH1                   /**< USIC0 channel 1 base address */
 105:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** #endif
 106:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** 
 107:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** #if defined(USIC1)
 108:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** #define XMC_I2S1_CH0 XMC_USIC1_CH0                   /**< USIC1 channel 0 base address */
 109:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** #define XMC_I2S1_CH1 XMC_USIC1_CH1                   /**< USIC1 channel 1 base address */
 110:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** #endif
 111:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** 
 112:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** #if defined(USIC2)
 113:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** #define XMC_I2S2_CH0 XMC_USIC2_CH0                   /**< USIC2 channel 0 base address */
 114:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** #define XMC_I2S2_CH1 XMC_USIC2_CH1                   /**< USIC2 channel 1 base address */
 115:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** #endif
 116:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** /*******************************************************************************
 117:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * ENUMS
 118:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *******************************************************************************/
 119:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** 
 120:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** /**
 121:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @brief I2S Status
 122:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  */
 123:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** typedef enum XMC_I2S_CH_STATUS
 124:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** {
 125:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_STATUS_OK,      /**< Status OK */
 126:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_STATUS_ERROR,   /**< Status ERROR */
 127:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_STATUS_BUSY     /**< Status BUSY */
 128:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** } XMC_I2S_CH_STATUS_t;
 129:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** 
 130:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** /**
 131:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @brief I2S status flag
 132:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  */
 133:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** typedef enum XMC_I2S_CH_STATUS_FLAG
 134:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** {
 135:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_STATUS_FLAG_WORD_ADDRESS = USIC_CH_PSR_IISMode_WA_Msk,                     /**< Word A
 136:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_STATUS_FLAG_DX2S = USIC_CH_PSR_IISMode_DX2S_Msk,                           /**< Status
 137:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_STATUS_FLAG_DX2T_EVENT_DETECTED = USIC_CH_PSR_IISMode_DX2TEV_Msk,          /**< Status
 138:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_STATUS_FLAG_WA_FALLING_EDGE_EVENT = USIC_CH_PSR_IISMode_WAFE_Msk,          /**< Fallin
 139:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****                                                                                              signal
 140:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_STATUS_FLAG_WA_RISING_EDGE_EVENT = USIC_CH_PSR_IISMode_WARE_Msk,           /**< Rising
 141:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****                                                                                              signal
 142:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_STATUS_FLAG_WA_GENERATION_END = USIC_CH_PSR_IISMode_END_Msk,               /**< The WA
 143:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_STATUS_FLAG_RECEIVER_START_INDICATION = USIC_CH_PSR_IISMode_RSIF_Msk,      /**< Receiv
 144:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_STATUS_FLAG_DATA_LOST_INDICATION = USIC_CH_PSR_IISMode_DLIF_Msk,           /**< Data l
 145:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_STATUS_FLAG_TRANSMIT_SHIFT_INDICATION = USIC_CH_PSR_IISMode_TSIF_Msk,      /**< Transm
 146:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION = USIC_CH_PSR_IISMode_TBIF_Msk,     /**< Transm
 147:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_STATUS_FLAG_RECEIVE_INDICATION = USIC_CH_PSR_IISMode_RIF_Msk,              /**< Receiv
 148:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_STATUS_FLAG_ALTERNATIVE_RECEIVE_INDICATION = USIC_CH_PSR_IISMode_AIF_Msk,  /**< Altern
 149:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_STATUS_FLAG_BAUD_RATE_GENERATOR_INDICATION = USIC_CH_PSR_IISMode_BRGIF_Msk /**< Baud r
 150:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** } XMC_I2S_CH_STATUS_FLAG_t;
 151:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** 
 152:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** /**
 153:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *  @brief I2S Baudrate Generator shift clock output
 154:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** */
 155:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** typedef enum XMC_I2S_CH_BRG_SHIFT_CLOCK_OUTPUT
 156:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** {
 157:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK = XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK, /**< Baudrate G
 158:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1  = XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1   /**< Clock obta
 159:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** } XMC_I2S_CH_BRG_SHIFT_CLOCK_OUTPUT_t;
 160:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** 
 161:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** /**
 162:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *  @brief I2S channel interrupt node pointers
 163:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  */
 164:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** typedef enum XMC_I2S_CH_INTERRUPT_NODE_POINTER
 165:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** {
 166:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT    = XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT
 167:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER   = XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT
 168:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_INTERRUPT_NODE_POINTER_RECEIVE           = XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEIVE,
 169:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE = XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTERNAT
 170:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_INTERRUPT_NODE_POINTER_PROTOCOL          = XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOCOL
 171:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** } XMC_I2S_CH_INTERRUPT_NODE_POINTER_t;
 172:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** 
 173:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** /**
 174:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @brief I2S events
 175:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  */
 176:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** typedef enum XMC_I2S_CH_EVENT
 177:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** {
 178:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk,  /**< Receive start event */
 179:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk,  /**< Data lost event */
 180:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk,  /**< Transmit shift event */
 181:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk,  /**< Transmit buffer event */
 182:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,   /**< Receive event */
 183:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,   /**< Alternate receive event */
 184:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk, /**< Baudrate generator event */
 185:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** 
 186:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_EVENT_WA_FALLING_EDGE     = USIC_CH_PCR_IISMode_WAFEIEN_Msk << 2U,  /**< WA falling ed
 187:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_EVENT_WA_RISING_EDGE      = USIC_CH_PCR_IISMode_WAREIEN_Msk << 2U,  /**< WA rising edg
 188:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_EVENT_WA_GENERATION_END   = USIC_CH_PCR_IISMode_ENDIEN_Msk << 2U,   /**< END event */
 189:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_EVENT_DX2TIEN_ACTIVATED   = USIC_CH_PCR_IISMode_DX2TIEN_Msk << 2U   /**< WA input sign
 190:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** } XMC_I2S_CH_EVENT_t;
 191:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** 
 192:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** /**
 193:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @brief Defines the Polarity of the WA in the SELO output lines in relation to the internal WA si
 194:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  */
 195:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** typedef enum XMC_I2S_CH_WA_POLARITY
 196:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** {
 197:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_WA_POLARITY_DIRECT = 0x0UL,                                    /**< The SELO outputs h
 198:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****                                                                                   as the WA signal 
 199:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_WA_POLARITY_INVERTED = 0x1UL << USIC_CH_PCR_IISMode_SELINV_Pos /**< The SELO outputs h
 200:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****                                                                                  polarity to the WA
 201:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** } XMC_I2S_CH_WA_POLARITY_t;
 202:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** 
 203:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** /**
 204:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @brief Defines the Polarity of the WA in the SELO output lines in relation to the internal WA si
 205:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  */
 206:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** typedef enum XMC_I2S_CH_CHANNEL
 207:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** {
 208:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_CHANNEL_1_LEFT = 0U,  /**< Channel 1 (left) */
 209:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_CHANNEL_2_RIGHT = 1U  /**< Channel 2 (right) */
 210:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** } XMC_I2S_CH_CHANNEL_t;
 211:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** 
 212:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** /**
 213:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @brief I2S input stage selection
 214:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  */
 215:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** typedef enum XMC_I2S_CH_INPUT
 216:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** {
 217:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_INPUT_DIN0 = 0UL,         /**< Data input stage 0 */
 218:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_INPUT_SLAVE_SCLKIN = 1UL, /**< Clock input stage */
 219:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_INPUT_SLAVE_WA = 2UL,     /**< WA input stage */
 220:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** #if UC_FAMILY == XMC1
 221:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_INPUT_DIN1 = 3UL,         /**< Data input stage 1 */
 222:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_INPUT_DIN2 = 4UL,         /**< Data input stage 2 */
 223:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_INPUT_DIN3 = 5UL          /**< Data input stage 3 */
 224:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** #endif
 225:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** } XMC_I2S_CH_INPUT_t;
 226:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** 
 227:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** /**
 228:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @brief Defines the I2S bus mode
 229:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  */
 230:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** typedef enum XMC_I2S_CH_BUS_MODE
 231:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** {
 232:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_BUS_MODE_MASTER, /**< I2S Master */
 233:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_BUS_MODE_SLAVE   /**< I2S Slave */
 234:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** } XMC_I2S_CH_BUS_MODE_t;
 235:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** 
 236:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** /*******************************************************************************
 237:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * DATA STRUCTURES
 238:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *******************************************************************************/
 239:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** /**
 240:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @brief I2S_CH configuration structure
 241:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  */
 242:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** typedef struct XMC_I2S_CH_CONFIG
 243:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** {
 244:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   uint32_t baudrate;					             /**< Module baud rate for communication */
 245:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   bool normal_divider_mode;                /**< Selects normal divider mode for baudrate generator 
 246:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   uint8_t data_bits;                       /**< Data word length. A data frame can consists of seve
 247:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****                                                 Value configured as USIC channel word length. \n
 248:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****                                                   \b Range: minimum= 1, maximum= 16*/
 249:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   uint8_t frame_length;                    /**< Number of data bits transferred after a change of s
 250:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****                                                 Configured as USIC channel frame length. \n
 251:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****                                                   \b Range: minimum= 1, maximum= 63*/
 252:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   uint8_t data_delayed_sclk_periods;       /**< Data delay defined in sclk periods */
 253:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_WA_POLARITY_t wa_inversion;   /**< Enable inversion of Slave select signal relative to
 254:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_BUS_MODE_t	bus_mode;          /**< Bus mode MASTER/SLAVE */
 255:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** } XMC_I2S_CH_CONFIG_t;
 256:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** 
 257:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** /*******************************************************************************
 258:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * API PROTOTYPES
 259:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *******************************************************************************/
 260:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** 
 261:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** #ifdef __cplusplus
 262:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** extern "C" {
 263:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** #endif
 264:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** 
 265:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** /**
 266:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 267:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *          \b Range: @ref XMC_I2S0_CH0, XMC_I2S0_CH1,XMC_I2S1_CH0, XMC_I2S1_CH1,XMC_I2S2_CH0, XMC_
 268:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @param config Constant pointer to I2S configuration structure of type @ref XMC_I2S_CH_CONFIG_t.
 269:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @param init_brg Selects if the baudrate generator should be configured automatically.
 270:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @return XMC_I2S_CH_STATUS_t Status of initializing the USIC channel for I2S protocol.\n
 271:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *          \b Range: @ref XMC_I2S_CH_STATUS_OK if initialization is successful.\n
 272:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *                    @ref XMC_I2S_CH_STATUS_ERROR if configuration of baudrate failed.
 273:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 274:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Description</b><br>
 275:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * Initializes the USIC channel for I2S protocol.\n\n
 276:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * During the initialization, USIC channel is enabled and baudrate is configured.
 277:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * After each change of the WA signal, a complete data frame is intended to be transferred (frame l
 278:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * The number of data bits transferred after a change of signal WA is defined by config->frame_leng
 279:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * A data frame can consist of several data words with a data word length defined by config->data_b
 280:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * The changes of signal WA define the system word length as the number of SCLK cycles between two 
 281:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * The system word length is set by default to the frame length defined by config->frame_length.
 282:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 283:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * XMC_I2S_CH_Start() should be invoked after the initialization to enable the channel.
 284:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 285:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Related APIs:</b><BR>
 286:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * XMC_I2S_CH_Start(), XMC_I2S_CH_Stop(), XMC_I2S_CH_Transmit(), XMC_I2S_CH_SetSystemWordLength()\n
 287:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  */
 288:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** void XMC_I2S_CH_InitEx(XMC_USIC_CH_t *const channel, const XMC_I2S_CH_CONFIG_t *const config, bool 
 289:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** 
 290:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** /**
 291:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 292:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *          \b Range: @ref XMC_I2S0_CH0, XMC_I2S0_CH1,XMC_I2S1_CH0, XMC_I2S1_CH1,XMC_I2S2_CH0, XMC_
 293:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @param config Constant pointer to I2S configuration structure of type @ref XMC_I2S_CH_CONFIG_t.
 294:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @return XMC_I2S_CH_STATUS_t Status of initializing the USIC channel for I2S protocol.\n
 295:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *          \b Range: @ref XMC_I2S_CH_STATUS_OK if initialization is successful.\n
 296:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *                    @ref XMC_I2S_CH_STATUS_ERROR if configuration of baudrate failed.
 297:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 298:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Description</b><br>
 299:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * Initializes the USIC channel for I2S protocol.\n\n
 300:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * During the initialization, USIC channel is enabled and baudrate is configured.
 301:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * After each change of the WA signal, a complete data frame is intended to be transferred (frame l
 302:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * The number of data bits transferred after a change of signal WA is defined by config->frame_leng
 303:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * A data frame can consist of several data words with a data word length defined by config->data_b
 304:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * The changes of signal WA define the system word length as the number of SCLK cycles between two 
 305:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * The system word length is set by default to the frame length defined by config->frame_length.
 306:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 307:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * XMC_I2S_CH_Start() should be invoked after the initialization to enable the channel.
 308:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 309:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Related APIs:</b><BR>
 310:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * XMC_I2S_CH_Start(), XMC_I2S_CH_Stop(), XMC_I2S_CH_Transmit(), XMC_I2S_CH_SetSystemWordLength()\n
 311:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  */
 312:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** __STATIC_INLINE void XMC_I2S_CH_Init(XMC_USIC_CH_t *const channel, const XMC_I2S_CH_CONFIG_t *const
 313:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** {
 314:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_InitEx(channel, config, true);
 315:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** }
 316:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** 
 317:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** /**
 318:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 319:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 320:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @return None
 321:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 322:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Description:</b><br>
 323:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * Set the selected USIC channel to operate in I2S mode, by setting CCR.MODE bits.\n\n
 324:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * It should be executed after XMC_I2S_CH_Init() during initialization. By invoking XMC_I2S_CH_Stop
 325:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * to IDLE state. Call XMC_I2S_CH_Start() to set the I2S mode again, as needed later in the program
 326:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 327:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Related APIs:</b><BR>
 328:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * XMC_I2S_CH_Init(), XMC_I2S_CH_Stop()
 329:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  */
 330:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** __STATIC_INLINE void XMC_I2S_CH_Start(XMC_USIC_CH_t *const channel)
 331:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** {
 332:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   /* USIC channel in I2S mode */
 333:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_USIC_CH_SetMode(channel, XMC_USIC_CH_OPERATING_MODE_I2S);
 334:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** }
 335:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** 
 336:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** /**
 337:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 338:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 339:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @return XMC_I2S_CH_STATUS_t Status of the I2S driver after the request for stopping is processed
 340:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *        XMC_I2S_CH_STATUS_OK- If the USIC channel is successfully put to IDLE mode. \n
 341:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *        XMC_I2S_CH_STATUS_BUSY- If the USIC channel is busy transmitting data.
 342:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 343:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Description:</b><br>
 344:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * Set the selected I2S channel to IDLE mode, by clearing CCR.MODE bits.\n\n
 345:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * After calling XMC_I2S_CH_Stop, channel is IDLE mode. So no communication is supported. XMC_I2S_C
 346:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * invoked to start the communication again.
 347:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 348:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Related APIs:</b><BR>
 349:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * XMC_I2S_CH_Start()
 350:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  */
 351:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** XMC_I2S_CH_STATUS_t XMC_I2S_CH_Stop(XMC_USIC_CH_t *const channel);
 352:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** 
 353:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** /**
 354:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 355:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @param rate Bus speed in bits per second
 356:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 357:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @return XMC_I2S_CH_STATUS_t Status of the I2S driver after the request for setting baudrate is p
 358:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *        XMC_I2S_CH_STATUS_OK- If the baudrate is successfully changed. \n
 359:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *        XMC_I2S_CH_STATUS_ERROR- If the new baudrate value is out of range.
 360:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 361:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Description:</b><br>
 362:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * Sets the bus speed in bits per second
 363:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 364:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Related APIs:</b><BR>
 365:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * XMC_I2S_CH_Init(), XMC_I2S_CH_Stop()
 366:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  */
 367:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** XMC_I2S_CH_STATUS_t XMC_I2S_CH_SetBaudrate(XMC_USIC_CH_t *const channel, const uint32_t rate);
 368:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** 
 369:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** /**
 370:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 371:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @param rate Bus speed in bits per second
 372:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @param normal_divider_mode Selects normal divider mode for baudrate generator instead of default
 373:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 374:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @return XMC_I2S_CH_STATUS_t Status of the I2S driver after the request for setting baudrate is p
 375:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *        XMC_I2S_CH_STATUS_OK- If the baudrate is successfully changed. \n
 376:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *        XMC_I2S_CH_STATUS_ERROR- If the new baudrate value is out of range.
 377:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 378:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Description:</b><br>
 379:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * Sets the bus speed in bits per second
 380:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 381:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Related APIs:</b><BR>
 382:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * XMC_I2S_CH_Init(), XMC_I2S_CH_Stop()
 383:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  */
 384:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** XMC_I2S_CH_STATUS_t XMC_I2S_CH_SetBaudrateEx(XMC_USIC_CH_t *const channel, const uint32_t rate, boo
 385:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** 
 386:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** /**
 387:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 388:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @param sclk_cycles_system_word_length system word length in terms of sclk clock cycles.
 389:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 390:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @return None
 391:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 392:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Description:</b><br>
 393:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * Configures the system word length by setting BRG.DCTQ bit field.\n\n
 394:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * This value has to be always higher than 1U and lower than the data with (SCTR.FLE)
 395:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 396:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  */
 397:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** void XMC_I2S_CH_SetSystemWordLength(XMC_USIC_CH_t *const channel, uint32_t sclk_cycles_system_word_
 398:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** 
 399:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** /**
 400:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 401:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @param data Data to be transmitted
 402:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @param channel_number Communication output channel of the I2S, based on this channel selection T
 403:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *             Refer @ref XMC_I2S_CH_CHANNEL_t for valid values.
 404:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 405:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @return None
 406:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 407:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Description:</b><br>
 408:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * Puts the data into FIFO, if FIFO mode is enabled or else into standard buffer, by setting the pr
 409:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * TCI(Transmit Control Information) allows dynamic control of output channel during data transfers
 410:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * update, TCSR.WAMD(Automatic WA mode) will be enabled during the initialization using XMC_I2S_CH_
 411:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 412:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 413:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Related APIs:</b><BR>
 414:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * XMC_I2S_CH_Receive()
 415:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  */
 416:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** void XMC_I2S_CH_Transmit(XMC_USIC_CH_t *const channel, const uint16_t data, const XMC_I2S_CH_CHANNE
 417:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** 
 418:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** /**
 419:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 420:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @param channel_number Communication output channel of the I2S, based on this mode TCI(Transmit c
 421:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *             Refer @ref XMC_I2S_CH_CHANNEL_t for valid values.
 422:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 423:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @return None
 424:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 425:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Description:</b><br>
 426:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * Transmits a dummy data(FFFFH) to provide clock for slave and receives the data from the slave.\n
 427:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * XMC_I2S_CH_Receive() receives the data and places it into buffer based on the FIFO selection. Af
 428:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * XMC_I2S_CH_GetReceivedData() can be invoked to read the data from the buffers.
 429:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 430:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Related APIs:</b><BR>
 431:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * XMC_I2S_CH_GetReceivedData()
 432:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  */
 433:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** __STATIC_INLINE void XMC_I2S_CH_Receive(XMC_USIC_CH_t *const channel, const XMC_I2S_CH_CHANNEL_t ch
 434:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** {
 435:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   /* Transmit dummy data */
 436:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_Transmit(channel, (uint16_t)0xffffU, channel_number);
 437:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** }
 438:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** 
 439:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** /**
 440:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 441:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 442:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @return uint16_t Data read from the receive buffer.
 443:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 444:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Description:</b><br>
 445:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * Reads data from the receive buffer based on the FIFO selection.\n\n
 446:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * Invocation of XMC_I2S_CH_Receive() receives the data and place it into receive buffer. After rec
 447:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * XMC_I2S_CH_GetReceivedData() can be used to read the data from the buffer.
 448:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 449:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Related APIs:</b><BR>
 450:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * XMC_I2S_CH_Receive()
 451:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  */
 452:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** uint16_t XMC_I2S_CH_GetReceivedData(XMC_USIC_CH_t *const channel);
 453:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** 
 454:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** /**
 455:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 456:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 457:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @return None
 458:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 459:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Description:</b><br>
 460:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * Set the order of data transfer from LSB to MSB, by clearing SCTR.SDIR bit.\n\n
 461:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * This is typically based on the slave settings. Invoke XMC_I2S_CH_SetBitOrderLsbFirst() to set di
 462:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * the program.
 463:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 464:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Related APIs:</b><BR>
 465:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * XMC_I2S_CH_SetBitOrderMsbFirst()
 466:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  */
 467:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** __STATIC_INLINE void XMC_I2S_CH_SetBitOrderLsbFirst(XMC_USIC_CH_t *const channel)
 468:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** {
 469:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   channel->SCTR &= (uint32_t)~USIC_CH_SCTR_SDIR_Msk;
 470:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** }
 471:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** 
 472:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** /**
 473:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 474:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 475:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @return None
 476:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 477:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Description:</b><br>
 478:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * Set the order of data transfer from MSB to LSB, by setting SCTR.SDIR bit.\n\n
 479:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * This is typically based on the slave settings. This is not set during XMC_I2S_CH_Init().
 480:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * Invoke XMC_I2S_CH_SetBitOrderMsbFirst() to set direction as needed in the program.
 481:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 482:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Related APIs:</b><BR>
 483:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * XMC_I2S_CH_SetBitOrderLsbFirst()
 484:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  */
 485:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** __STATIC_INLINE void XMC_I2S_CH_SetBitOrderMsbFirst(XMC_USIC_CH_t *const channel)
 486:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** {
 487:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   channel->SCTR |= (uint32_t)USIC_CH_SCTR_SDIR_Msk;
 488:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** }
 489:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** 
 490:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** /**
 491:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 492:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @param event Protocol events which have to be enabled.
 493:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *              Refer @ XMC_I2S_CH_EVENT_t for valid values. <b>OR</b> combinations of these enum i
 494:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *              as input.
 495:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 496:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @return None
 497:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 498:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Description:</b><br>
 499:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * Enables the I2S protocol specific events, by configuring PCR register.\n\n
 500:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * Events can be enabled as needed using XMC_I2S_CH_EnableEvent().
 501:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * XMC_I2S_CH_DisableEvent() can be used to disable the events.
 502:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 503:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Related APIs:</b><BR>
 504:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * XMC_I2S_CH_DisableEvent()
 505:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  */
 506:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** void XMC_I2S_CH_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t event);
 507:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** 
 508:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** /**
 509:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 510:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @param event Protocol events which have to be disabled.
 511:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *              Refer @ XMC_I2S_CH_EVENT_t for valid values. <b>OR</b> combinations of these enum i
 512:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *              as input.
 513:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 514:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @return None
 515:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 516:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Description:</b><br>
 517:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * Disables the I2S protocol specific events, by configuring PCR register.\n\n
 518:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * After disabling the events, XMC_I2S_CH_EnableEvent() has to be invoked to re-enable the events.
 519:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 520:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Related APIs:</b><BR>
 521:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * XMC_I2S_CH_EnableEvent()
 522:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  */
 523:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** void XMC_I2S_CH_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t event);
 524:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** 
 525:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** /**
 526:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 527:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 528:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @return uint32_t Status of I2S protocol events.
 529:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 530:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Description:</b><br>
 531:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * Returns the status of the events, by reading PSR register.\n\n
 532:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * This indicates the status of the all the events, for I2S communication.
 533:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 534:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Related APIs:</b><BR>
 535:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * XMC_I2S_CH_ClearStatusFlag()
 536:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  */
 537:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** __STATIC_INLINE uint32_t XMC_I2S_CH_GetStatusFlag(XMC_USIC_CH_t *const channel)
 538:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** {
 539:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   return channel->PSR_IISMode;
 540:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** }
 541:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** 
 542:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** /**
 543:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 544:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @param flag Protocol event status to be cleared for detection of next occurence.
 545:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *              Refer @ XMC_I2S_CH_STATUS_FLAG_t for valid values. <b>OR</b> combinations of these 
 546:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *              as input.
 547:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * @return None
 548:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 549:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Description:</b><br>
 550:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * Clears the events specified, by setting PSCR register.\n\n
 551:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * During communication the events occurred have to be cleared to detect their next occurence.\n
 552:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * e.g: During transmission Transmit buffer event occurs to indicating data word transfer has start
 553:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *       event has to be cleared after transmission of each data word. Otherwise next event cannot 
 554:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 555:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Related APIs:</b><BR>
 556:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  * XMC_I2S_CH_GetStatusFlag()
 557:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****  */
 558:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** __STATIC_INLINE void XMC_I2S_CH_ClearStatusFlag(XMC_USIC_CH_t *const channel, const uint32_t flag)
 559:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** {
 123              	 .loc 2 559 0
 124              	 .cfi_startproc
 125              	 
 126              	 
 127              	 
 128 0000 80B4     	 push {r7}
 129              	.LCFI12:
 130              	 .cfi_def_cfa_offset 4
 131              	 .cfi_offset 7,-4
 132 0002 83B0     	 sub sp,sp,#12
 133              	.LCFI13:
 134              	 .cfi_def_cfa_offset 16
 135 0004 00AF     	 add r7,sp,#0
 136              	.LCFI14:
 137              	 .cfi_def_cfa_register 7
 138 0006 7860     	 str r0,[r7,#4]
 139 0008 3960     	 str r1,[r7]
 560:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h ****   channel->PSCR |= flag;
 140              	 .loc 2 560 0
 141 000a 7B68     	 ldr r3,[r7,#4]
 142 000c DA6C     	 ldr r2,[r3,#76]
 143 000e 3B68     	 ldr r3,[r7]
 144 0010 1A43     	 orrs r2,r2,r3
 145 0012 7B68     	 ldr r3,[r7,#4]
 146 0014 DA64     	 str r2,[r3,#76]
 561:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_i2s.h **** }
 147              	 .loc 2 561 0
 148 0016 0C37     	 adds r7,r7,#12
 149              	.LCFI15:
 150              	 .cfi_def_cfa_offset 4
 151 0018 BD46     	 mov sp,r7
 152              	.LCFI16:
 153              	 .cfi_def_cfa_register 13
 154              	 
 155 001a 5DF8047B 	 ldr r7,[sp],#4
 156              	.LCFI17:
 157              	 .cfi_restore 7
 158              	 .cfi_def_cfa_offset 0
 159 001e 7047     	 bx lr
 160              	 .cfi_endproc
 161              	.LFE247:
 163              	 .section .text.XMC_I2S_CH_InitEx,"ax",%progbits
 164              	 .align 2
 165              	 .global XMC_I2S_CH_InitEx
 166              	 .thumb
 167              	 .thumb_func
 169              	XMC_I2S_CH_InitEx:
 170              	.LFB264:
 171              	 .file 3 "../Libraries/XMCLib/src/xmc_i2s.c"
   1:../Libraries/XMCLib/src/xmc_i2s.c **** /**
   2:../Libraries/XMCLib/src/xmc_i2s.c ****  * @file xmc_i2s.c
   3:../Libraries/XMCLib/src/xmc_i2s.c ****  * @date 2020-12-05
   4:../Libraries/XMCLib/src/xmc_i2s.c ****  *
   5:../Libraries/XMCLib/src/xmc_i2s.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_i2s.c ****  *****************************************************************************
   7:../Libraries/XMCLib/src/xmc_i2s.c ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:../Libraries/XMCLib/src/xmc_i2s.c ****  *
   9:../Libraries/XMCLib/src/xmc_i2s.c ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_i2s.c ****  * All rights reserved.
  11:../Libraries/XMCLib/src/xmc_i2s.c ****  *
  12:../Libraries/XMCLib/src/xmc_i2s.c ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:../Libraries/XMCLib/src/xmc_i2s.c ****  *
  14:../Libraries/XMCLib/src/xmc_i2s.c ****  * Permission is hereby granted, free of charge, to any person or organization
  15:../Libraries/XMCLib/src/xmc_i2s.c ****  * obtaining a copy of the software and accompanying documentation covered by
  16:../Libraries/XMCLib/src/xmc_i2s.c ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:../Libraries/XMCLib/src/xmc_i2s.c ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:../Libraries/XMCLib/src/xmc_i2s.c ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:../Libraries/XMCLib/src/xmc_i2s.c ****  * do so, all subject to the following:
  20:../Libraries/XMCLib/src/xmc_i2s.c ****  *
  21:../Libraries/XMCLib/src/xmc_i2s.c ****  * The copyright notices in the Software and this entire statement, including
  22:../Libraries/XMCLib/src/xmc_i2s.c ****  * the above license grant, this restriction and the following disclaimer,
  23:../Libraries/XMCLib/src/xmc_i2s.c ****  * must be included in all copies of the Software, in whole or in part, and
  24:../Libraries/XMCLib/src/xmc_i2s.c ****  * all derivative works of the Software, unless such copies or derivative
  25:../Libraries/XMCLib/src/xmc_i2s.c ****  * works are solely in the form of machine-executable object code generated by
  26:../Libraries/XMCLib/src/xmc_i2s.c ****  * a source language processor.
  27:../Libraries/XMCLib/src/xmc_i2s.c ****  *
  28:../Libraries/XMCLib/src/xmc_i2s.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:../Libraries/XMCLib/src/xmc_i2s.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:../Libraries/XMCLib/src/xmc_i2s.c ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:../Libraries/XMCLib/src/xmc_i2s.c ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:../Libraries/XMCLib/src/xmc_i2s.c ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:../Libraries/XMCLib/src/xmc_i2s.c ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:../Libraries/XMCLib/src/xmc_i2s.c ****  * DEALINGS IN THE SOFTWARE.
  35:../Libraries/XMCLib/src/xmc_i2s.c ****  *
  36:../Libraries/XMCLib/src/xmc_i2s.c ****  * To improve the quality of the software, users are encouraged to share
  37:../Libraries/XMCLib/src/xmc_i2s.c ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:../Libraries/XMCLib/src/xmc_i2s.c ****  * at XMCSupport@infineon.com.
  39:../Libraries/XMCLib/src/xmc_i2s.c ****  *****************************************************************************
  40:../Libraries/XMCLib/src/xmc_i2s.c ****  *
  41:../Libraries/XMCLib/src/xmc_i2s.c ****  * Change History
  42:../Libraries/XMCLib/src/xmc_i2s.c ****  * --------------
  43:../Libraries/XMCLib/src/xmc_i2s.c ****  *
  44:../Libraries/XMCLib/src/xmc_i2s.c ****  * 2015-08-21:
  45:../Libraries/XMCLib/src/xmc_i2s.c ****  *     - Initial <br>
  46:../Libraries/XMCLib/src/xmc_i2s.c ****  *
  47:../Libraries/XMCLib/src/xmc_i2s.c ****  * 2015-09-01:
  48:../Libraries/XMCLib/src/xmc_i2s.c ****  *     - Modified XMC_I2S_CH_EnableEvent() and XMC_I2S_CH_DisableEvent() for supporting multiple ev
  49:../Libraries/XMCLib/src/xmc_i2s.c ****  *
  50:../Libraries/XMCLib/src/xmc_i2s.c ****  * 2015-09-14:
  51:../Libraries/XMCLib/src/xmc_i2s.c ****  *     - Modified XMC_I2S_CH_SetSystemWordLength for supporting up to 63 system word length.
  52:../Libraries/XMCLib/src/xmc_i2s.c ****  *     - Removed parity configuration<br>
  53:../Libraries/XMCLib/src/xmc_i2s.c ****  *
  54:../Libraries/XMCLib/src/xmc_i2s.c ****  * 2015-09-28:
  55:../Libraries/XMCLib/src/xmc_i2s.c ****  *     - Fixed bugs in the XMC_I2S_CH_Init() and in the ASSERTs <br>
  56:../Libraries/XMCLib/src/xmc_i2s.c ****  *
  57:../Libraries/XMCLib/src/xmc_i2s.c ****  * 2015-11-04:
  58:../Libraries/XMCLib/src/xmc_i2s.c ****  *     - Modified the check of XMC_USIC_CH_GetTransmitBufferStatus() in the XMC_I2S_CH_Transmit() A
  59:../Libraries/XMCLib/src/xmc_i2s.c ****  *
  60:../Libraries/XMCLib/src/xmc_i2s.c ****  * 2016-06-30:
  61:../Libraries/XMCLib/src/xmc_i2s.c ****  *     - Modified XMC_I2S_CH_Init:
  62:../Libraries/XMCLib/src/xmc_i2s.c ****  *       + change default passive level to 0
  63:../Libraries/XMCLib/src/xmc_i2s.c ****  *       + Call XMC_I2S_CH_SetSystemWordLength() to set the system frame length equal to the frame 
  64:../Libraries/XMCLib/src/xmc_i2s.c ****  *     - Modified XMC_I2S_CH_SetBaudrate:
  65:../Libraries/XMCLib/src/xmc_i2s.c ****  *       + Optional Master clock output signal generated with a fixed phase relation to SCLK.
  66:../Libraries/XMCLib/src/xmc_i2s.c ****  *
  67:../Libraries/XMCLib/src/xmc_i2s.c ****  * 2019-05-07:
  68:../Libraries/XMCLib/src/xmc_i2s.c ****  *     - Added XMC_I2S_CH_SetBaudrateEx() which allows to select between baudrate generator normal 
  69:../Libraries/XMCLib/src/xmc_i2s.c ****  *
  70:../Libraries/XMCLib/src/xmc_i2s.c ****  * 2019-12-16:
  71:../Libraries/XMCLib/src/xmc_i2s.c ****  *     - Fix including files following the convention: angle brackets are used for standard include
  72:../Libraries/XMCLib/src/xmc_i2s.c ****  *
  73:../Libraries/XMCLib/src/xmc_i2s.c ****  * 2020-12-05:
  74:../Libraries/XMCLib/src/xmc_i2s.c ****  *     - Added XMC_I2S_CH_InitEx that allows user select if automatic baudrate configuration should
  75:../Libraries/XMCLib/src/xmc_i2s.c ****  * 
  76:../Libraries/XMCLib/src/xmc_i2s.c ****  * @endcond
  77:../Libraries/XMCLib/src/xmc_i2s.c ****  *
  78:../Libraries/XMCLib/src/xmc_i2s.c ****  */
  79:../Libraries/XMCLib/src/xmc_i2s.c **** /**
  80:../Libraries/XMCLib/src/xmc_i2s.c ****  *
  81:../Libraries/XMCLib/src/xmc_i2s.c ****  * @brief I2S driver for XMC microcontroller family
  82:../Libraries/XMCLib/src/xmc_i2s.c ****  *
  83:../Libraries/XMCLib/src/xmc_i2s.c ****  */
  84:../Libraries/XMCLib/src/xmc_i2s.c **** /**************************************************************************************************
  85:../Libraries/XMCLib/src/xmc_i2s.c ****  * HEADER FILES
  86:../Libraries/XMCLib/src/xmc_i2s.c ****  **************************************************************************************************
  87:../Libraries/XMCLib/src/xmc_i2s.c **** 
  88:../Libraries/XMCLib/src/xmc_i2s.c **** #include "xmc_scu.h"
  89:../Libraries/XMCLib/src/xmc_i2s.c **** #include "xmc_i2s.h"
  90:../Libraries/XMCLib/src/xmc_i2s.c **** 
  91:../Libraries/XMCLib/src/xmc_i2s.c **** /**************************************************************************************************
  92:../Libraries/XMCLib/src/xmc_i2s.c ****  * MACROS
  93:../Libraries/XMCLib/src/xmc_i2s.c ****  **************************************************************************************************
  94:../Libraries/XMCLib/src/xmc_i2s.c **** /* To take into account the SCLK divider by 2 and the PPPEN divider (see Divider Mode Counter figur
  95:../Libraries/XMCLib/src/xmc_i2s.c **** #define XMC_I2S_CH_OVERSAMPLING (4UL)
  96:../Libraries/XMCLib/src/xmc_i2s.c **** 
  97:../Libraries/XMCLib/src/xmc_i2s.c **** /**************************************************************************************************
  98:../Libraries/XMCLib/src/xmc_i2s.c ****  * API IMPLEMENTATION
  99:../Libraries/XMCLib/src/xmc_i2s.c ****  **************************************************************************************************
 100:../Libraries/XMCLib/src/xmc_i2s.c **** 
 101:../Libraries/XMCLib/src/xmc_i2s.c **** /* Initializes the selected I2S channel with the config structure. */
 102:../Libraries/XMCLib/src/xmc_i2s.c **** void XMC_I2S_CH_InitEx(XMC_USIC_CH_t *const channel, const XMC_I2S_CH_CONFIG_t *const config, bool 
 103:../Libraries/XMCLib/src/xmc_i2s.c **** {
 172              	 .loc 3 103 0
 173              	 .cfi_startproc
 174              	 
 175              	 
 176 0000 80B5     	 push {r7,lr}
 177              	.LCFI18:
 178              	 .cfi_def_cfa_offset 8
 179              	 .cfi_offset 7,-8
 180              	 .cfi_offset 14,-4
 181 0002 84B0     	 sub sp,sp,#16
 182              	.LCFI19:
 183              	 .cfi_def_cfa_offset 24
 184 0004 00AF     	 add r7,sp,#0
 185              	.LCFI20:
 186              	 .cfi_def_cfa_register 7
 187 0006 F860     	 str r0,[r7,#12]
 188 0008 B960     	 str r1,[r7,#8]
 189 000a 1346     	 mov r3,r2
 190 000c FB71     	 strb r3,[r7,#7]
 104:../Libraries/XMCLib/src/xmc_i2s.c ****   XMC_ASSERT("XMC_I2S_CH_Init: data_delayed_sclk_periods value not valid", (config->data_delayed_sc
 105:../Libraries/XMCLib/src/xmc_i2s.c ****              (config->data_delayed_sclk_periods  < config->frame_length));
 106:../Libraries/XMCLib/src/xmc_i2s.c ****   XMC_USIC_CH_Enable(channel);
 191              	 .loc 3 106 0
 192 000e F868     	 ldr r0,[r7,#12]
 193 0010 FFF7FEFF 	 bl XMC_USIC_CH_Enable
 107:../Libraries/XMCLib/src/xmc_i2s.c **** 
 108:../Libraries/XMCLib/src/xmc_i2s.c ****   if ((config->bus_mode == XMC_I2S_CH_BUS_MODE_MASTER) && init_brg)
 194              	 .loc 3 108 0
 195 0014 BB68     	 ldr r3,[r7,#8]
 196 0016 5B7A     	 ldrb r3,[r3,#9]
 197 0018 002B     	 cmp r3,#0
 198 001a 0BD1     	 bne .L6
 199              	 .loc 3 108 0 is_stmt 0 discriminator 1
 200 001c FB79     	 ldrb r3,[r7,#7]
 201 001e 002B     	 cmp r3,#0
 202 0020 08D0     	 beq .L6
 109:../Libraries/XMCLib/src/xmc_i2s.c ****   {
 110:../Libraries/XMCLib/src/xmc_i2s.c ****     /* Configure baud rate */
 111:../Libraries/XMCLib/src/xmc_i2s.c ****     (void)XMC_I2S_CH_SetBaudrateEx(channel, config->baudrate, config->normal_divider_mode);
 203              	 .loc 3 111 0 is_stmt 1
 204 0022 BB68     	 ldr r3,[r7,#8]
 205 0024 1A68     	 ldr r2,[r3]
 206 0026 BB68     	 ldr r3,[r7,#8]
 207 0028 1B79     	 ldrb r3,[r3,#4]
 208 002a F868     	 ldr r0,[r7,#12]
 209 002c 1146     	 mov r1,r2
 210 002e 1A46     	 mov r2,r3
 211 0030 FFF7FEFF 	 bl XMC_I2S_CH_SetBaudrateEx
 212              	.L6:
 112:../Libraries/XMCLib/src/xmc_i2s.c ****   }
 113:../Libraries/XMCLib/src/xmc_i2s.c ****   /* Configuration of USIC Shift Control */
 114:../Libraries/XMCLib/src/xmc_i2s.c ****   /* Transmission Mode (TRM) = 1  */
 115:../Libraries/XMCLib/src/xmc_i2s.c ****   channel->SCTR = (uint32_t)(0x3UL << USIC_CH_SCTR_TRM_Pos) |
 116:../Libraries/XMCLib/src/xmc_i2s.c ****                   (uint32_t)((config->frame_length - 1U) << USIC_CH_SCTR_FLE_Pos) |
 213              	 .loc 3 116 0
 214 0034 BB68     	 ldr r3,[r7,#8]
 215 0036 9B79     	 ldrb r3,[r3,#6]
 216 0038 013B     	 subs r3,r3,#1
 217 003a 1A04     	 lsls r2,r3,#16
 117:../Libraries/XMCLib/src/xmc_i2s.c ****                   (uint32_t)((config->data_bits - 1U) << USIC_CH_SCTR_WLE_Pos) |
 218              	 .loc 3 117 0
 219 003c BB68     	 ldr r3,[r7,#8]
 220 003e 5B79     	 ldrb r3,[r3,#5]
 221 0040 013B     	 subs r3,r3,#1
 222 0042 1B06     	 lsls r3,r3,#24
 116:../Libraries/XMCLib/src/xmc_i2s.c ****                   (uint32_t)((config->data_bits - 1U) << USIC_CH_SCTR_WLE_Pos) |
 223              	 .loc 3 116 0
 224 0044 1343     	 orrs r3,r3,r2
 225              	 .loc 3 117 0
 226 0046 43F44073 	 orr r3,r3,#768
 227 004a 43F00103 	 orr r3,r3,#1
 115:../Libraries/XMCLib/src/xmc_i2s.c ****                   (uint32_t)((config->frame_length - 1U) << USIC_CH_SCTR_FLE_Pos) |
 228              	 .loc 3 115 0
 229 004e FA68     	 ldr r2,[r7,#12]
 230 0050 5363     	 str r3,[r2,#52]
 118:../Libraries/XMCLib/src/xmc_i2s.c ****                   USIC_CH_SCTR_SDIR_Msk;
 119:../Libraries/XMCLib/src/xmc_i2s.c **** 
 120:../Libraries/XMCLib/src/xmc_i2s.c ****   /* Configuration of USIC Transmit Control/Status Register */
 121:../Libraries/XMCLib/src/xmc_i2s.c ****   /* TBUF Data Enable (TDEN) = 1 */
 122:../Libraries/XMCLib/src/xmc_i2s.c ****   /* TBUF Data Single Shot Mode (TDSSM) = 1 */
 123:../Libraries/XMCLib/src/xmc_i2s.c ****   /* WA mode enabled(WAMD) = 1 */
 124:../Libraries/XMCLib/src/xmc_i2s.c ****   channel->TCSR = (uint32_t)((channel->TCSR & (~(USIC_CH_TCSR_WLEMD_Msk |
 231              	 .loc 3 124 0
 232 0052 FB68     	 ldr r3,[r7,#12]
 233 0054 9B6B     	 ldr r3,[r3,#56]
 234 0056 23F4A363 	 bic r3,r3,#1304
 235 005a 23F00703 	 bic r3,r3,#7
 236 005e 43F4A162 	 orr r2,r3,#1288
 237 0062 FB68     	 ldr r3,[r7,#12]
 238 0064 9A63     	 str r2,[r3,#56]
 125:../Libraries/XMCLib/src/xmc_i2s.c ****                               USIC_CH_TCSR_SELMD_Msk |
 126:../Libraries/XMCLib/src/xmc_i2s.c ****                               USIC_CH_TCSR_FLEMD_Msk |
 127:../Libraries/XMCLib/src/xmc_i2s.c ****                               USIC_CH_TCSR_HPCMD_Msk))) |
 128:../Libraries/XMCLib/src/xmc_i2s.c ****                              USIC_CH_TCSR_WAMD_Msk |
 129:../Libraries/XMCLib/src/xmc_i2s.c ****                              (0x01UL  << USIC_CH_TCSR_TDEN_Pos) |
 130:../Libraries/XMCLib/src/xmc_i2s.c ****                              USIC_CH_TCSR_TDSSM_Msk);
 131:../Libraries/XMCLib/src/xmc_i2s.c **** 
 132:../Libraries/XMCLib/src/xmc_i2s.c ****   if (config->bus_mode == XMC_I2S_CH_BUS_MODE_MASTER)
 239              	 .loc 3 132 0
 240 0066 BB68     	 ldr r3,[r7,#8]
 241 0068 5B7A     	 ldrb r3,[r3,#9]
 242 006a 002B     	 cmp r3,#0
 243 006c 02D1     	 bne .L7
 133:../Libraries/XMCLib/src/xmc_i2s.c ****   {
 134:../Libraries/XMCLib/src/xmc_i2s.c ****     /* Configuration of Protocol Control Register */
 135:../Libraries/XMCLib/src/xmc_i2s.c ****     channel->PCR_IISMode = (uint32_t)USIC_CH_PCR_IISMode_WAGEN_Msk;
 244              	 .loc 3 135 0
 245 006e FB68     	 ldr r3,[r7,#12]
 246 0070 0122     	 movs r2,#1
 247 0072 DA63     	 str r2,[r3,#60]
 248              	.L7:
 136:../Libraries/XMCLib/src/xmc_i2s.c ****   }
 137:../Libraries/XMCLib/src/xmc_i2s.c **** 
 138:../Libraries/XMCLib/src/xmc_i2s.c ****   /* Configuration of Protocol Control Register */
 139:../Libraries/XMCLib/src/xmc_i2s.c ****   channel->PCR_IISMode |= (uint32_t)(USIC_CH_PCR_IISMode_DTEN_Msk |
 249              	 .loc 3 139 0
 250 0074 FB68     	 ldr r3,[r7,#12]
 251 0076 DA6B     	 ldr r2,[r3,#60]
 140:../Libraries/XMCLib/src/xmc_i2s.c ****                                      (uint32_t)config->wa_inversion) |
 252              	 .loc 3 140 0
 253 0078 BB68     	 ldr r3,[r7,#8]
 254 007a 1B7A     	 ldrb r3,[r3,#8]
 139:../Libraries/XMCLib/src/xmc_i2s.c ****                                      (uint32_t)config->wa_inversion) |
 255              	 .loc 3 139 0
 256 007c 43F00203 	 orr r3,r3,#2
 257 0080 DBB2     	 uxtb r3,r3
 258 0082 1946     	 mov r1,r3
 141:../Libraries/XMCLib/src/xmc_i2s.c ****                           ((uint32_t)((uint32_t)config->data_delayed_sclk_periods - 1U) << USIC_CH_
 259              	 .loc 3 141 0
 260 0084 BB68     	 ldr r3,[r7,#8]
 261 0086 DB79     	 ldrb r3,[r3,#7]
 262 0088 013B     	 subs r3,r3,#1
 263 008a 1B04     	 lsls r3,r3,#16
 140:../Libraries/XMCLib/src/xmc_i2s.c ****                                      (uint32_t)config->wa_inversion) |
 264              	 .loc 3 140 0
 265 008c 0B43     	 orrs r3,r3,r1
 139:../Libraries/XMCLib/src/xmc_i2s.c ****                                      (uint32_t)config->wa_inversion) |
 266              	 .loc 3 139 0
 267 008e 1A43     	 orrs r2,r2,r3
 268 0090 FB68     	 ldr r3,[r7,#12]
 269 0092 DA63     	 str r2,[r3,#60]
 142:../Libraries/XMCLib/src/xmc_i2s.c **** 
 143:../Libraries/XMCLib/src/xmc_i2s.c ****   XMC_I2S_CH_SetSystemWordLength(channel, config->frame_length);
 270              	 .loc 3 143 0
 271 0094 BB68     	 ldr r3,[r7,#8]
 272 0096 9B79     	 ldrb r3,[r3,#6]
 273 0098 F868     	 ldr r0,[r7,#12]
 274 009a 1946     	 mov r1,r3
 275 009c FFF7FEFF 	 bl XMC_I2S_CH_SetSystemWordLength
 144:../Libraries/XMCLib/src/xmc_i2s.c **** 
 145:../Libraries/XMCLib/src/xmc_i2s.c ****   /* Clear protocol status */
 146:../Libraries/XMCLib/src/xmc_i2s.c ****   channel->PSCR = 0xFFFFFFFFUL;
 276              	 .loc 3 146 0
 277 00a0 FB68     	 ldr r3,[r7,#12]
 278 00a2 4FF0FF32 	 mov r2,#-1
 279 00a6 DA64     	 str r2,[r3,#76]
 147:../Libraries/XMCLib/src/xmc_i2s.c **** }
 280              	 .loc 3 147 0
 281 00a8 1037     	 adds r7,r7,#16
 282              	.LCFI21:
 283              	 .cfi_def_cfa_offset 8
 284 00aa BD46     	 mov sp,r7
 285              	.LCFI22:
 286              	 .cfi_def_cfa_register 13
 287              	 
 288 00ac 80BD     	 pop {r7,pc}
 289              	 .cfi_endproc
 290              	.LFE264:
 292 00ae 00BF     	 .section .text.XMC_I2S_CH_SetBaudrate,"ax",%progbits
 293              	 .align 2
 294              	 .global XMC_I2S_CH_SetBaudrate
 295              	 .thumb
 296              	 .thumb_func
 298              	XMC_I2S_CH_SetBaudrate:
 299              	.LFB265:
 148:../Libraries/XMCLib/src/xmc_i2s.c **** 
 149:../Libraries/XMCLib/src/xmc_i2s.c **** 
 150:../Libraries/XMCLib/src/xmc_i2s.c **** XMC_I2S_CH_STATUS_t XMC_I2S_CH_SetBaudrate(XMC_USIC_CH_t *const channel, const uint32_t rate)
 151:../Libraries/XMCLib/src/xmc_i2s.c **** {
 300              	 .loc 3 151 0
 301              	 .cfi_startproc
 302              	 
 303              	 
 304 0000 80B5     	 push {r7,lr}
 305              	.LCFI23:
 306              	 .cfi_def_cfa_offset 8
 307              	 .cfi_offset 7,-8
 308              	 .cfi_offset 14,-4
 309 0002 84B0     	 sub sp,sp,#16
 310              	.LCFI24:
 311              	 .cfi_def_cfa_offset 24
 312 0004 00AF     	 add r7,sp,#0
 313              	.LCFI25:
 314              	 .cfi_def_cfa_register 7
 315 0006 7860     	 str r0,[r7,#4]
 316 0008 3960     	 str r1,[r7]
 152:../Libraries/XMCLib/src/xmc_i2s.c ****   XMC_I2S_CH_STATUS_t status;
 153:../Libraries/XMCLib/src/xmc_i2s.c **** 
 154:../Libraries/XMCLib/src/xmc_i2s.c ****   status = XMC_I2S_CH_STATUS_ERROR;
 317              	 .loc 3 154 0
 318 000a 0123     	 movs r3,#1
 319 000c FB73     	 strb r3,[r7,#15]
 155:../Libraries/XMCLib/src/xmc_i2s.c **** 
 156:../Libraries/XMCLib/src/xmc_i2s.c ****   if (rate <= (XMC_SCU_CLOCK_GetPeripheralClockFrequency() >> 1U))
 320              	 .loc 3 156 0
 321 000e FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 322 0012 0346     	 mov r3,r0
 323 0014 5A08     	 lsrs r2,r3,#1
 324 0016 3B68     	 ldr r3,[r7]
 325 0018 9A42     	 cmp r2,r3
 326 001a 11D3     	 bcc .L9
 157:../Libraries/XMCLib/src/xmc_i2s.c ****   {
 158:../Libraries/XMCLib/src/xmc_i2s.c ****     if (XMC_USIC_CH_SetBaudrate(channel, rate, XMC_I2S_CH_OVERSAMPLING) == XMC_USIC_CH_STATUS_OK)
 327              	 .loc 3 158 0
 328 001c 7868     	 ldr r0,[r7,#4]
 329 001e 3968     	 ldr r1,[r7]
 330 0020 0422     	 movs r2,#4
 331 0022 FFF7FEFF 	 bl XMC_USIC_CH_SetBaudrate
 332 0026 0346     	 mov r3,r0
 333 0028 002B     	 cmp r3,#0
 334 002a 09D1     	 bne .L9
 159:../Libraries/XMCLib/src/xmc_i2s.c ****     {
 160:../Libraries/XMCLib/src/xmc_i2s.c ****       channel->BRG = (uint32_t)((channel->BRG & ~(USIC_CH_BRG_CTQSEL_Msk)) |
 335              	 .loc 3 160 0
 336 002c 7B68     	 ldr r3,[r7,#4]
 337 002e 5B69     	 ldr r3,[r3,#20]
 161:../Libraries/XMCLib/src/xmc_i2s.c ****                                 (0x2UL << USIC_CH_BRG_CTQSEL_Pos)) |
 338              	 .loc 3 161 0
 339 0030 23F0D003 	 bic r3,r3,#208
 340 0034 43F09002 	 orr r2,r3,#144
 160:../Libraries/XMCLib/src/xmc_i2s.c ****                                 (0x2UL << USIC_CH_BRG_CTQSEL_Pos)) |
 341              	 .loc 3 160 0
 342 0038 7B68     	 ldr r3,[r7,#4]
 343 003a 5A61     	 str r2,[r3,#20]
 162:../Libraries/XMCLib/src/xmc_i2s.c ****                      USIC_CH_BRG_PPPEN_Msk;
 163:../Libraries/XMCLib/src/xmc_i2s.c **** 
 164:../Libraries/XMCLib/src/xmc_i2s.c ****       status = XMC_I2S_CH_STATUS_OK;
 344              	 .loc 3 164 0
 345 003c 0023     	 movs r3,#0
 346 003e FB73     	 strb r3,[r7,#15]
 347              	.L9:
 165:../Libraries/XMCLib/src/xmc_i2s.c ****     }
 166:../Libraries/XMCLib/src/xmc_i2s.c **** 
 167:../Libraries/XMCLib/src/xmc_i2s.c ****   }
 168:../Libraries/XMCLib/src/xmc_i2s.c ****   return status;
 348              	 .loc 3 168 0
 349 0040 FB7B     	 ldrb r3,[r7,#15]
 169:../Libraries/XMCLib/src/xmc_i2s.c **** }
 350              	 .loc 3 169 0
 351 0042 1846     	 mov r0,r3
 352 0044 1037     	 adds r7,r7,#16
 353              	.LCFI26:
 354              	 .cfi_def_cfa_offset 8
 355 0046 BD46     	 mov sp,r7
 356              	.LCFI27:
 357              	 .cfi_def_cfa_register 13
 358              	 
 359 0048 80BD     	 pop {r7,pc}
 360              	 .cfi_endproc
 361              	.LFE265:
 363 004a 00BF     	 .section .text.XMC_I2S_CH_SetBaudrateEx,"ax",%progbits
 364              	 .align 2
 365              	 .global XMC_I2S_CH_SetBaudrateEx
 366              	 .thumb
 367              	 .thumb_func
 369              	XMC_I2S_CH_SetBaudrateEx:
 370              	.LFB266:
 170:../Libraries/XMCLib/src/xmc_i2s.c **** 
 171:../Libraries/XMCLib/src/xmc_i2s.c **** XMC_I2S_CH_STATUS_t XMC_I2S_CH_SetBaudrateEx(XMC_USIC_CH_t *const channel, const uint32_t rate, boo
 172:../Libraries/XMCLib/src/xmc_i2s.c **** {
 371              	 .loc 3 172 0
 372              	 .cfi_startproc
 373              	 
 374              	 
 375 0000 80B5     	 push {r7,lr}
 376              	.LCFI28:
 377              	 .cfi_def_cfa_offset 8
 378              	 .cfi_offset 7,-8
 379              	 .cfi_offset 14,-4
 380 0002 86B0     	 sub sp,sp,#24
 381              	.LCFI29:
 382              	 .cfi_def_cfa_offset 32
 383 0004 00AF     	 add r7,sp,#0
 384              	.LCFI30:
 385              	 .cfi_def_cfa_register 7
 386 0006 F860     	 str r0,[r7,#12]
 387 0008 B960     	 str r1,[r7,#8]
 388 000a 1346     	 mov r3,r2
 389 000c FB71     	 strb r3,[r7,#7]
 173:../Libraries/XMCLib/src/xmc_i2s.c ****   XMC_USIC_CH_STATUS_t status;
 174:../Libraries/XMCLib/src/xmc_i2s.c **** 
 175:../Libraries/XMCLib/src/xmc_i2s.c ****   if (rate <= (XMC_SCU_CLOCK_GetPeripheralClockFrequency() >> 1U))
 390              	 .loc 3 175 0
 391 000e FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 392 0012 0346     	 mov r3,r0
 393 0014 5A08     	 lsrs r2,r3,#1
 394 0016 BB68     	 ldr r3,[r7,#8]
 395 0018 9A42     	 cmp r2,r3
 396 001a 1ED3     	 bcc .L12
 176:../Libraries/XMCLib/src/xmc_i2s.c ****   {
 177:../Libraries/XMCLib/src/xmc_i2s.c ****     if (normal_divider_mode)
 397              	 .loc 3 177 0
 398 001c FB79     	 ldrb r3,[r7,#7]
 399 001e 002B     	 cmp r3,#0
 400 0020 08D0     	 beq .L13
 178:../Libraries/XMCLib/src/xmc_i2s.c ****     {
 179:../Libraries/XMCLib/src/xmc_i2s.c ****       status = XMC_USIC_CH_SetBaudrateEx(channel, rate, XMC_I2S_CH_OVERSAMPLING);
 401              	 .loc 3 179 0
 402 0022 BB68     	 ldr r3,[r7,#8]
 403 0024 F868     	 ldr r0,[r7,#12]
 404 0026 1946     	 mov r1,r3
 405 0028 0422     	 movs r2,#4
 406 002a FFF7FEFF 	 bl XMC_USIC_CH_SetBaudrateEx
 407 002e 0346     	 mov r3,r0
 408 0030 FB75     	 strb r3,[r7,#23]
 409 0032 06E0     	 b .L14
 410              	.L13:
 180:../Libraries/XMCLib/src/xmc_i2s.c ****     }
 181:../Libraries/XMCLib/src/xmc_i2s.c ****     else
 182:../Libraries/XMCLib/src/xmc_i2s.c ****     {
 183:../Libraries/XMCLib/src/xmc_i2s.c ****       status = XMC_USIC_CH_SetBaudrate(channel, rate, XMC_I2S_CH_OVERSAMPLING);
 411              	 .loc 3 183 0
 412 0034 F868     	 ldr r0,[r7,#12]
 413 0036 B968     	 ldr r1,[r7,#8]
 414 0038 0422     	 movs r2,#4
 415 003a FFF7FEFF 	 bl XMC_USIC_CH_SetBaudrate
 416 003e 0346     	 mov r3,r0
 417 0040 FB75     	 strb r3,[r7,#23]
 418              	.L14:
 184:../Libraries/XMCLib/src/xmc_i2s.c ****     }
 185:../Libraries/XMCLib/src/xmc_i2s.c **** 
 186:../Libraries/XMCLib/src/xmc_i2s.c ****     if (status == XMC_USIC_CH_STATUS_OK)
 419              	 .loc 3 186 0
 420 0042 FB7D     	 ldrb r3,[r7,#23]
 421 0044 002B     	 cmp r3,#0
 422 0046 0AD1     	 bne .L16
 187:../Libraries/XMCLib/src/xmc_i2s.c ****     {
 188:../Libraries/XMCLib/src/xmc_i2s.c ****       channel->BRG = (uint32_t)((channel->BRG & ~(USIC_CH_BRG_CTQSEL_Msk)) |
 423              	 .loc 3 188 0
 424 0048 FB68     	 ldr r3,[r7,#12]
 425 004a 5B69     	 ldr r3,[r3,#20]
 189:../Libraries/XMCLib/src/xmc_i2s.c ****                                 (0x2UL << USIC_CH_BRG_CTQSEL_Pos)) |
 426              	 .loc 3 189 0
 427 004c 23F0D003 	 bic r3,r3,#208
 428 0050 43F09002 	 orr r2,r3,#144
 188:../Libraries/XMCLib/src/xmc_i2s.c ****                                 (0x2UL << USIC_CH_BRG_CTQSEL_Pos)) |
 429              	 .loc 3 188 0
 430 0054 FB68     	 ldr r3,[r7,#12]
 431 0056 5A61     	 str r2,[r3,#20]
 432 0058 01E0     	 b .L16
 433              	.L12:
 190:../Libraries/XMCLib/src/xmc_i2s.c ****                      USIC_CH_BRG_PPPEN_Msk;
 191:../Libraries/XMCLib/src/xmc_i2s.c ****     }
 192:../Libraries/XMCLib/src/xmc_i2s.c ****   }
 193:../Libraries/XMCLib/src/xmc_i2s.c ****   else
 194:../Libraries/XMCLib/src/xmc_i2s.c ****   {
 195:../Libraries/XMCLib/src/xmc_i2s.c ****     status = XMC_USIC_CH_STATUS_ERROR;
 434              	 .loc 3 195 0
 435 005a 0123     	 movs r3,#1
 436 005c FB75     	 strb r3,[r7,#23]
 437              	.L16:
 196:../Libraries/XMCLib/src/xmc_i2s.c ****   }
 197:../Libraries/XMCLib/src/xmc_i2s.c **** 
 198:../Libraries/XMCLib/src/xmc_i2s.c ****   return (XMC_I2S_CH_STATUS_t)status;
 438              	 .loc 3 198 0
 439 005e FB7D     	 ldrb r3,[r7,#23]
 199:../Libraries/XMCLib/src/xmc_i2s.c **** }
 440              	 .loc 3 199 0
 441 0060 1846     	 mov r0,r3
 442 0062 1837     	 adds r7,r7,#24
 443              	.LCFI31:
 444              	 .cfi_def_cfa_offset 8
 445 0064 BD46     	 mov sp,r7
 446              	.LCFI32:
 447              	 .cfi_def_cfa_register 13
 448              	 
 449 0066 80BD     	 pop {r7,pc}
 450              	 .cfi_endproc
 451              	.LFE266:
 453              	 .section .text.XMC_I2S_CH_SetSystemWordLength,"ax",%progbits
 454              	 .align 2
 455              	 .global XMC_I2S_CH_SetSystemWordLength
 456              	 .thumb
 457              	 .thumb_func
 459              	XMC_I2S_CH_SetSystemWordLength:
 460              	.LFB267:
 200:../Libraries/XMCLib/src/xmc_i2s.c **** 
 201:../Libraries/XMCLib/src/xmc_i2s.c **** void XMC_I2S_CH_SetSystemWordLength(XMC_USIC_CH_t *const channel, uint32_t sclk_cycles_system_word_
 202:../Libraries/XMCLib/src/xmc_i2s.c **** {
 461              	 .loc 3 202 0
 462              	 .cfi_startproc
 463              	 
 464              	 
 465              	 
 466 0000 80B4     	 push {r7}
 467              	.LCFI33:
 468              	 .cfi_def_cfa_offset 4
 469              	 .cfi_offset 7,-4
 470 0002 87B0     	 sub sp,sp,#28
 471              	.LCFI34:
 472              	 .cfi_def_cfa_offset 32
 473 0004 00AF     	 add r7,sp,#0
 474              	.LCFI35:
 475              	 .cfi_def_cfa_register 7
 476 0006 7860     	 str r0,[r7,#4]
 477 0008 3960     	 str r1,[r7]
 203:../Libraries/XMCLib/src/xmc_i2s.c ****   uint32_t sclk_cycles_system_word_length_temp;
 204:../Libraries/XMCLib/src/xmc_i2s.c ****   uint8_t dctq_temp;
 205:../Libraries/XMCLib/src/xmc_i2s.c ****   uint8_t pctq_temp;
 206:../Libraries/XMCLib/src/xmc_i2s.c ****   uint8_t dctq = 1U;
 478              	 .loc 3 206 0
 479 000a 0123     	 movs r3,#1
 480 000c 7B75     	 strb r3,[r7,#21]
 207:../Libraries/XMCLib/src/xmc_i2s.c ****   uint8_t pctq = 1U;
 481              	 .loc 3 207 0
 482 000e 0123     	 movs r3,#1
 483 0010 3B75     	 strb r3,[r7,#20]
 208:../Libraries/XMCLib/src/xmc_i2s.c ****   uint8_t best_error = 64U;
 484              	 .loc 3 208 0
 485 0012 4023     	 movs r3,#64
 486 0014 FB74     	 strb r3,[r7,#19]
 209:../Libraries/XMCLib/src/xmc_i2s.c ****   uint8_t error;
 210:../Libraries/XMCLib/src/xmc_i2s.c ****   XMC_ASSERT("XMC_I2S_CH_Init: data_delayed_sclk_periods value not valid", (sclk_cycles_system_word
 211:../Libraries/XMCLib/src/xmc_i2s.c **** 
 212:../Libraries/XMCLib/src/xmc_i2s.c **** 
 213:../Libraries/XMCLib/src/xmc_i2s.c ****   for (dctq_temp = 1U; dctq_temp < 33U ; dctq_temp++)
 487              	 .loc 3 213 0
 488 0016 0123     	 movs r3,#1
 489 0018 FB75     	 strb r3,[r7,#23]
 490 001a 34E0     	 b .L19
 491              	.L27:
 214:../Libraries/XMCLib/src/xmc_i2s.c ****   {
 215:../Libraries/XMCLib/src/xmc_i2s.c ****     for (pctq_temp = 1U; pctq_temp < 5U ; pctq_temp++)
 492              	 .loc 3 215 0
 493 001c 0123     	 movs r3,#1
 494 001e BB75     	 strb r3,[r7,#22]
 495 0020 2BE0     	 b .L20
 496              	.L26:
 216:../Libraries/XMCLib/src/xmc_i2s.c ****     {
 217:../Libraries/XMCLib/src/xmc_i2s.c ****       sclk_cycles_system_word_length_temp = ((uint32_t)dctq_temp) * ((uint32_t)pctq_temp);
 497              	 .loc 3 217 0
 498 0022 FB7D     	 ldrb r3,[r7,#23]
 499 0024 BA7D     	 ldrb r2,[r7,#22]
 500 0026 02FB03F3 	 mul r3,r2,r3
 501 002a FB60     	 str r3,[r7,#12]
 218:../Libraries/XMCLib/src/xmc_i2s.c ****       if (sclk_cycles_system_word_length_temp == sclk_cycles_system_word_length)
 502              	 .loc 3 218 0
 503 002c FA68     	 ldr r2,[r7,#12]
 504 002e 3B68     	 ldr r3,[r7]
 505 0030 9A42     	 cmp r2,r3
 506 0032 04D1     	 bne .L21
 219:../Libraries/XMCLib/src/xmc_i2s.c ****       {
 220:../Libraries/XMCLib/src/xmc_i2s.c ****         dctq = dctq_temp;
 507              	 .loc 3 220 0
 508 0034 FB7D     	 ldrb r3,[r7,#23]
 509 0036 7B75     	 strb r3,[r7,#21]
 221:../Libraries/XMCLib/src/xmc_i2s.c ****         pctq = pctq_temp;
 510              	 .loc 3 221 0
 511 0038 BB7D     	 ldrb r3,[r7,#22]
 512 003a 3B75     	 strb r3,[r7,#20]
 222:../Libraries/XMCLib/src/xmc_i2s.c ****         break;
 513              	 .loc 3 222 0
 514 003c 20E0     	 b .L22
 515              	.L21:
 223:../Libraries/XMCLib/src/xmc_i2s.c ****       }
 224:../Libraries/XMCLib/src/xmc_i2s.c ****       if (sclk_cycles_system_word_length_temp > sclk_cycles_system_word_length)
 516              	 .loc 3 224 0
 517 003e FA68     	 ldr r2,[r7,#12]
 518 0040 3B68     	 ldr r3,[r7]
 519 0042 9A42     	 cmp r2,r3
 520 0044 06D9     	 bls .L23
 225:../Libraries/XMCLib/src/xmc_i2s.c ****       {
 226:../Libraries/XMCLib/src/xmc_i2s.c ****         error = (uint8_t)(sclk_cycles_system_word_length_temp  - sclk_cycles_system_word_length);
 521              	 .loc 3 226 0
 522 0046 FB68     	 ldr r3,[r7,#12]
 523 0048 DAB2     	 uxtb r2,r3
 524 004a 3B68     	 ldr r3,[r7]
 525 004c DBB2     	 uxtb r3,r3
 526 004e D31A     	 subs r3,r2,r3
 527 0050 BB74     	 strb r3,[r7,#18]
 528 0052 05E0     	 b .L24
 529              	.L23:
 227:../Libraries/XMCLib/src/xmc_i2s.c ****       }
 228:../Libraries/XMCLib/src/xmc_i2s.c ****       else
 229:../Libraries/XMCLib/src/xmc_i2s.c ****       {
 230:../Libraries/XMCLib/src/xmc_i2s.c ****         error = (uint8_t)(sclk_cycles_system_word_length - sclk_cycles_system_word_length_temp);
 530              	 .loc 3 230 0
 531 0054 3B68     	 ldr r3,[r7]
 532 0056 DAB2     	 uxtb r2,r3
 533 0058 FB68     	 ldr r3,[r7,#12]
 534 005a DBB2     	 uxtb r3,r3
 535 005c D31A     	 subs r3,r2,r3
 536 005e BB74     	 strb r3,[r7,#18]
 537              	.L24:
 231:../Libraries/XMCLib/src/xmc_i2s.c ****       }
 232:../Libraries/XMCLib/src/xmc_i2s.c **** 
 233:../Libraries/XMCLib/src/xmc_i2s.c ****       if (error < best_error)
 538              	 .loc 3 233 0
 539 0060 BA7C     	 ldrb r2,[r7,#18]
 540 0062 FB7C     	 ldrb r3,[r7,#19]
 541 0064 9A42     	 cmp r2,r3
 542 0066 05D2     	 bcs .L25
 234:../Libraries/XMCLib/src/xmc_i2s.c ****       {
 235:../Libraries/XMCLib/src/xmc_i2s.c ****         best_error = error;
 543              	 .loc 3 235 0
 544 0068 BB7C     	 ldrb r3,[r7,#18]
 545 006a FB74     	 strb r3,[r7,#19]
 236:../Libraries/XMCLib/src/xmc_i2s.c ****         dctq =  dctq_temp;
 546              	 .loc 3 236 0
 547 006c FB7D     	 ldrb r3,[r7,#23]
 548 006e 7B75     	 strb r3,[r7,#21]
 237:../Libraries/XMCLib/src/xmc_i2s.c ****         pctq = pctq_temp;
 549              	 .loc 3 237 0
 550 0070 BB7D     	 ldrb r3,[r7,#22]
 551 0072 3B75     	 strb r3,[r7,#20]
 552              	.L25:
 215:../Libraries/XMCLib/src/xmc_i2s.c ****     {
 553              	 .loc 3 215 0 discriminator 2
 554 0074 BB7D     	 ldrb r3,[r7,#22]
 555 0076 0133     	 adds r3,r3,#1
 556 0078 BB75     	 strb r3,[r7,#22]
 557              	.L20:
 215:../Libraries/XMCLib/src/xmc_i2s.c ****     {
 558              	 .loc 3 215 0 is_stmt 0 discriminator 1
 559 007a BB7D     	 ldrb r3,[r7,#22]
 560 007c 042B     	 cmp r3,#4
 561 007e D0D9     	 bls .L26
 562              	.L22:
 213:../Libraries/XMCLib/src/xmc_i2s.c ****   {
 563              	 .loc 3 213 0 is_stmt 1 discriminator 2
 564 0080 FB7D     	 ldrb r3,[r7,#23]
 565 0082 0133     	 adds r3,r3,#1
 566 0084 FB75     	 strb r3,[r7,#23]
 567              	.L19:
 213:../Libraries/XMCLib/src/xmc_i2s.c ****   {
 568              	 .loc 3 213 0 is_stmt 0 discriminator 1
 569 0086 FB7D     	 ldrb r3,[r7,#23]
 570 0088 202B     	 cmp r3,#32
 571 008a C7D9     	 bls .L27
 238:../Libraries/XMCLib/src/xmc_i2s.c ****       }
 239:../Libraries/XMCLib/src/xmc_i2s.c ****     }
 240:../Libraries/XMCLib/src/xmc_i2s.c ****   }
 241:../Libraries/XMCLib/src/xmc_i2s.c ****   channel->BRG = (uint32_t)((channel->BRG & ~((uint32_t)(USIC_CH_BRG_DCTQ_Msk |
 572              	 .loc 3 241 0 is_stmt 1
 573 008c 7B68     	 ldr r3,[r7,#4]
 574 008e 5B69     	 ldr r3,[r3,#20]
 575 0090 23F4FE42 	 bic r2,r3,#32512
 242:../Libraries/XMCLib/src/xmc_i2s.c ****                              USIC_CH_BRG_PCTQ_Msk))) |
 243:../Libraries/XMCLib/src/xmc_i2s.c ****                             (uint32_t)((uint32_t)((uint32_t)((uint32_t)dctq - 1U) << USIC_CH_BRG_DC
 576              	 .loc 3 243 0
 577 0094 7B7D     	 ldrb r3,[r7,#21]
 578 0096 013B     	 subs r3,r3,#1
 579 0098 9902     	 lsls r1,r3,#10
 244:../Libraries/XMCLib/src/xmc_i2s.c ****                                        (uint32_t)((uint32_t)((uint32_t)pctq - 1U) << USIC_CH_BRG_PC
 580              	 .loc 3 244 0
 581 009a 3B7D     	 ldrb r3,[r7,#20]
 582 009c 013B     	 subs r3,r3,#1
 583 009e 1B02     	 lsls r3,r3,#8
 243:../Libraries/XMCLib/src/xmc_i2s.c ****                                        (uint32_t)((uint32_t)((uint32_t)pctq - 1U) << USIC_CH_BRG_PC
 584              	 .loc 3 243 0
 585 00a0 0B43     	 orrs r3,r3,r1
 241:../Libraries/XMCLib/src/xmc_i2s.c ****                              USIC_CH_BRG_PCTQ_Msk))) |
 586              	 .loc 3 241 0
 587 00a2 1A43     	 orrs r2,r2,r3
 588 00a4 7B68     	 ldr r3,[r7,#4]
 589 00a6 5A61     	 str r2,[r3,#20]
 245:../Libraries/XMCLib/src/xmc_i2s.c **** }
 590              	 .loc 3 245 0
 591 00a8 1C37     	 adds r7,r7,#28
 592              	.LCFI36:
 593              	 .cfi_def_cfa_offset 4
 594 00aa BD46     	 mov sp,r7
 595              	.LCFI37:
 596              	 .cfi_def_cfa_register 13
 597              	 
 598 00ac 5DF8047B 	 ldr r7,[sp],#4
 599              	.LCFI38:
 600              	 .cfi_restore 7
 601              	 .cfi_def_cfa_offset 0
 602 00b0 7047     	 bx lr
 603              	 .cfi_endproc
 604              	.LFE267:
 606 00b2 00BF     	 .section .text.XMC_I2S_CH_Transmit,"ax",%progbits
 607              	 .align 2
 608              	 .global XMC_I2S_CH_Transmit
 609              	 .thumb
 610              	 .thumb_func
 612              	XMC_I2S_CH_Transmit:
 613              	.LFB268:
 246:../Libraries/XMCLib/src/xmc_i2s.c **** 
 247:../Libraries/XMCLib/src/xmc_i2s.c **** /* Puts the data into FIFO if FIFO mode is enabled or else into standard buffers, by setting the pr
 248:../Libraries/XMCLib/src/xmc_i2s.c **** void XMC_I2S_CH_Transmit(XMC_USIC_CH_t *const channel, const uint16_t data, const XMC_I2S_CH_CHANNE
 249:../Libraries/XMCLib/src/xmc_i2s.c **** {
 614              	 .loc 3 249 0
 615              	 .cfi_startproc
 616              	 
 617              	 
 618 0000 80B5     	 push {r7,lr}
 619              	.LCFI39:
 620              	 .cfi_def_cfa_offset 8
 621              	 .cfi_offset 7,-8
 622              	 .cfi_offset 14,-4
 623 0002 82B0     	 sub sp,sp,#8
 624              	.LCFI40:
 625              	 .cfi_def_cfa_offset 16
 626 0004 00AF     	 add r7,sp,#0
 627              	.LCFI41:
 628              	 .cfi_def_cfa_register 7
 629 0006 7860     	 str r0,[r7,#4]
 630 0008 0B46     	 mov r3,r1
 631 000a 7B80     	 strh r3,[r7,#2]
 632 000c 1346     	 mov r3,r2
 633 000e 7B70     	 strb r3,[r7,#1]
 250:../Libraries/XMCLib/src/xmc_i2s.c ****   /* Check FIFO size */
 251:../Libraries/XMCLib/src/xmc_i2s.c ****   if ((channel->TBCTR & USIC_CH_TBCTR_SIZE_Msk) == 0U)
 634              	 .loc 3 251 0
 635 0010 7B68     	 ldr r3,[r7,#4]
 636 0012 D3F80831 	 ldr r3,[r3,#264]
 637 0016 03F0E063 	 and r3,r3,#117440512
 638 001a 002B     	 cmp r3,#0
 639 001c 13D1     	 bne .L29
 252:../Libraries/XMCLib/src/xmc_i2s.c ****   {
 253:../Libraries/XMCLib/src/xmc_i2s.c ****     while (XMC_USIC_CH_GetTransmitBufferStatus(channel) == XMC_USIC_CH_TBUF_STATUS_BUSY)
 640              	 .loc 3 253 0
 641 001e 00BF     	 nop
 642              	.L30:
 643              	 .loc 3 253 0 is_stmt 0 discriminator 1
 644 0020 7868     	 ldr r0,[r7,#4]
 645 0022 FFF7FEFF 	 bl XMC_USIC_CH_GetTransmitBufferStatus
 646 0026 0346     	 mov r3,r0
 647 0028 802B     	 cmp r3,#128
 648 002a F9D0     	 beq .L30
 254:../Libraries/XMCLib/src/xmc_i2s.c ****     {
 255:../Libraries/XMCLib/src/xmc_i2s.c ****     }
 256:../Libraries/XMCLib/src/xmc_i2s.c **** 
 257:../Libraries/XMCLib/src/xmc_i2s.c ****     XMC_I2S_CH_ClearStatusFlag(channel, (uint32_t)XMC_I2S_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION
 649              	 .loc 3 257 0 is_stmt 1
 650 002c 7868     	 ldr r0,[r7,#4]
 651 002e 4FF40051 	 mov r1,#8192
 652 0032 FFF7FEFF 	 bl XMC_I2S_CH_ClearStatusFlag
 258:../Libraries/XMCLib/src/xmc_i2s.c **** 
 259:../Libraries/XMCLib/src/xmc_i2s.c ****     channel->TBUF[(uint32_t)channel_number << 4] = data;
 653              	 .loc 3 259 0
 654 0036 7B78     	 ldrb r3,[r7,#1]
 655 0038 1A01     	 lsls r2,r3,#4
 656 003a 7988     	 ldrh r1,[r7,#2]
 657 003c 7B68     	 ldr r3,[r7,#4]
 658 003e 2032     	 adds r2,r2,#32
 659 0040 43F82210 	 str r1,[r3,r2,lsl#2]
 660 0044 06E0     	 b .L28
 661              	.L29:
 260:../Libraries/XMCLib/src/xmc_i2s.c ****   }
 261:../Libraries/XMCLib/src/xmc_i2s.c ****   else
 262:../Libraries/XMCLib/src/xmc_i2s.c ****   {
 263:../Libraries/XMCLib/src/xmc_i2s.c ****     channel->IN[(uint32_t)channel_number << 4] = data;
 662              	 .loc 3 263 0
 663 0046 7B78     	 ldrb r3,[r7,#1]
 664 0048 1A01     	 lsls r2,r3,#4
 665 004a 7988     	 ldrh r1,[r7,#2]
 666 004c 7B68     	 ldr r3,[r7,#4]
 667 004e 6032     	 adds r2,r2,#96
 668 0050 43F82210 	 str r1,[r3,r2,lsl#2]
 669              	.L28:
 264:../Libraries/XMCLib/src/xmc_i2s.c ****   }
 265:../Libraries/XMCLib/src/xmc_i2s.c **** }
 670              	 .loc 3 265 0
 671 0054 0837     	 adds r7,r7,#8
 672              	.LCFI42:
 673              	 .cfi_def_cfa_offset 8
 674 0056 BD46     	 mov sp,r7
 675              	.LCFI43:
 676              	 .cfi_def_cfa_register 13
 677              	 
 678 0058 80BD     	 pop {r7,pc}
 679              	 .cfi_endproc
 680              	.LFE268:
 682 005a 00BF     	 .section .text.XMC_I2S_CH_GetReceivedData,"ax",%progbits
 683              	 .align 2
 684              	 .global XMC_I2S_CH_GetReceivedData
 685              	 .thumb
 686              	 .thumb_func
 688              	XMC_I2S_CH_GetReceivedData:
 689              	.LFB269:
 266:../Libraries/XMCLib/src/xmc_i2s.c **** 
 267:../Libraries/XMCLib/src/xmc_i2s.c **** /* Reads the data from the buffers based on the FIFO mode selection. */
 268:../Libraries/XMCLib/src/xmc_i2s.c **** uint16_t XMC_I2S_CH_GetReceivedData(XMC_USIC_CH_t *const channel)
 269:../Libraries/XMCLib/src/xmc_i2s.c **** {
 690              	 .loc 3 269 0
 691              	 .cfi_startproc
 692              	 
 693              	 
 694              	 
 695 0000 80B4     	 push {r7}
 696              	.LCFI44:
 697              	 .cfi_def_cfa_offset 4
 698              	 .cfi_offset 7,-4
 699 0002 85B0     	 sub sp,sp,#20
 700              	.LCFI45:
 701              	 .cfi_def_cfa_offset 24
 702 0004 00AF     	 add r7,sp,#0
 703              	.LCFI46:
 704              	 .cfi_def_cfa_register 7
 705 0006 7860     	 str r0,[r7,#4]
 270:../Libraries/XMCLib/src/xmc_i2s.c ****   uint16_t retval;
 271:../Libraries/XMCLib/src/xmc_i2s.c **** 
 272:../Libraries/XMCLib/src/xmc_i2s.c ****   /* Check FIFO size */
 273:../Libraries/XMCLib/src/xmc_i2s.c ****   if ((channel->RBCTR & USIC_CH_RBCTR_SIZE_Msk) == 0U)
 706              	 .loc 3 273 0
 707 0008 7B68     	 ldr r3,[r7,#4]
 708 000a D3F80C31 	 ldr r3,[r3,#268]
 709 000e 03F0E063 	 and r3,r3,#117440512
 710 0012 002B     	 cmp r3,#0
 711 0014 03D1     	 bne .L33
 274:../Libraries/XMCLib/src/xmc_i2s.c ****   {
 275:../Libraries/XMCLib/src/xmc_i2s.c ****     retval = (uint16_t)channel->RBUF;
 712              	 .loc 3 275 0
 713 0016 7B68     	 ldr r3,[r7,#4]
 714 0018 5B6D     	 ldr r3,[r3,#84]
 715 001a FB81     	 strh r3,[r7,#14]
 716 001c 03E0     	 b .L34
 717              	.L33:
 276:../Libraries/XMCLib/src/xmc_i2s.c ****   }
 277:../Libraries/XMCLib/src/xmc_i2s.c ****   else
 278:../Libraries/XMCLib/src/xmc_i2s.c ****   {
 279:../Libraries/XMCLib/src/xmc_i2s.c ****     retval = (uint16_t)channel->OUTR;
 718              	 .loc 3 279 0
 719 001e 7B68     	 ldr r3,[r7,#4]
 720 0020 D3F81C31 	 ldr r3,[r3,#284]
 721 0024 FB81     	 strh r3,[r7,#14]
 722              	.L34:
 280:../Libraries/XMCLib/src/xmc_i2s.c ****   }
 281:../Libraries/XMCLib/src/xmc_i2s.c **** 
 282:../Libraries/XMCLib/src/xmc_i2s.c ****   return retval;
 723              	 .loc 3 282 0
 724 0026 FB89     	 ldrh r3,[r7,#14]
 283:../Libraries/XMCLib/src/xmc_i2s.c **** }
 725              	 .loc 3 283 0
 726 0028 1846     	 mov r0,r3
 727 002a 1437     	 adds r7,r7,#20
 728              	.LCFI47:
 729              	 .cfi_def_cfa_offset 4
 730 002c BD46     	 mov sp,r7
 731              	.LCFI48:
 732              	 .cfi_def_cfa_register 13
 733              	 
 734 002e 5DF8047B 	 ldr r7,[sp],#4
 735              	.LCFI49:
 736              	 .cfi_restore 7
 737              	 .cfi_def_cfa_offset 0
 738 0032 7047     	 bx lr
 739              	 .cfi_endproc
 740              	.LFE269:
 742              	 .section .text.XMC_I2S_CH_Stop,"ax",%progbits
 743              	 .align 2
 744              	 .global XMC_I2S_CH_Stop
 745              	 .thumb
 746              	 .thumb_func
 748              	XMC_I2S_CH_Stop:
 749              	.LFB270:
 284:../Libraries/XMCLib/src/xmc_i2s.c **** 
 285:../Libraries/XMCLib/src/xmc_i2s.c **** XMC_I2S_CH_STATUS_t XMC_I2S_CH_Stop(XMC_USIC_CH_t *const channel)
 286:../Libraries/XMCLib/src/xmc_i2s.c **** {
 750              	 .loc 3 286 0
 751              	 .cfi_startproc
 752              	 
 753              	 
 754 0000 80B5     	 push {r7,lr}
 755              	.LCFI50:
 756              	 .cfi_def_cfa_offset 8
 757              	 .cfi_offset 7,-8
 758              	 .cfi_offset 14,-4
 759 0002 84B0     	 sub sp,sp,#16
 760              	.LCFI51:
 761              	 .cfi_def_cfa_offset 24
 762 0004 00AF     	 add r7,sp,#0
 763              	.LCFI52:
 764              	 .cfi_def_cfa_register 7
 765 0006 7860     	 str r0,[r7,#4]
 287:../Libraries/XMCLib/src/xmc_i2s.c ****   XMC_I2S_CH_STATUS_t status = XMC_I2S_CH_STATUS_OK;
 766              	 .loc 3 287 0
 767 0008 0023     	 movs r3,#0
 768 000a FB73     	 strb r3,[r7,#15]
 288:../Libraries/XMCLib/src/xmc_i2s.c **** 
 289:../Libraries/XMCLib/src/xmc_i2s.c ****   if (XMC_USIC_CH_GetTransmitBufferStatus(channel) == XMC_USIC_CH_TBUF_STATUS_BUSY)
 769              	 .loc 3 289 0
 770 000c 7868     	 ldr r0,[r7,#4]
 771 000e FFF7FEFF 	 bl XMC_USIC_CH_GetTransmitBufferStatus
 772 0012 0346     	 mov r3,r0
 773 0014 802B     	 cmp r3,#128
 774 0016 02D1     	 bne .L37
 290:../Libraries/XMCLib/src/xmc_i2s.c ****   {
 291:../Libraries/XMCLib/src/xmc_i2s.c ****     status = XMC_I2S_CH_STATUS_BUSY;
 775              	 .loc 3 291 0
 776 0018 0223     	 movs r3,#2
 777 001a FB73     	 strb r3,[r7,#15]
 778 001c 03E0     	 b .L38
 779              	.L37:
 292:../Libraries/XMCLib/src/xmc_i2s.c ****   }
 293:../Libraries/XMCLib/src/xmc_i2s.c ****   else
 294:../Libraries/XMCLib/src/xmc_i2s.c ****   {
 295:../Libraries/XMCLib/src/xmc_i2s.c ****     /* USIC channel in IDLE mode */
 296:../Libraries/XMCLib/src/xmc_i2s.c ****     XMC_USIC_CH_SetMode(channel, XMC_USIC_CH_OPERATING_MODE_IDLE);
 780              	 .loc 3 296 0
 781 001e 7868     	 ldr r0,[r7,#4]
 782 0020 0021     	 movs r1,#0
 783 0022 FFF7FEFF 	 bl XMC_USIC_CH_SetMode
 784              	.L38:
 297:../Libraries/XMCLib/src/xmc_i2s.c ****   }
 298:../Libraries/XMCLib/src/xmc_i2s.c **** 
 299:../Libraries/XMCLib/src/xmc_i2s.c ****   return status;
 785              	 .loc 3 299 0
 786 0026 FB7B     	 ldrb r3,[r7,#15]
 300:../Libraries/XMCLib/src/xmc_i2s.c **** }
 787              	 .loc 3 300 0
 788 0028 1846     	 mov r0,r3
 789 002a 1037     	 adds r7,r7,#16
 790              	.LCFI53:
 791              	 .cfi_def_cfa_offset 8
 792 002c BD46     	 mov sp,r7
 793              	.LCFI54:
 794              	 .cfi_def_cfa_register 13
 795              	 
 796 002e 80BD     	 pop {r7,pc}
 797              	 .cfi_endproc
 798              	.LFE270:
 800              	 .section .text.XMC_I2S_CH_EnableEvent,"ax",%progbits
 801              	 .align 2
 802              	 .global XMC_I2S_CH_EnableEvent
 803              	 .thumb
 804              	 .thumb_func
 806              	XMC_I2S_CH_EnableEvent:
 807              	.LFB271:
 301:../Libraries/XMCLib/src/xmc_i2s.c **** 
 302:../Libraries/XMCLib/src/xmc_i2s.c **** void XMC_I2S_CH_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t event)
 303:../Libraries/XMCLib/src/xmc_i2s.c **** {
 808              	 .loc 3 303 0
 809              	 .cfi_startproc
 810              	 
 811              	 
 812              	 
 813 0000 80B4     	 push {r7}
 814              	.LCFI55:
 815              	 .cfi_def_cfa_offset 4
 816              	 .cfi_offset 7,-4
 817 0002 83B0     	 sub sp,sp,#12
 818              	.LCFI56:
 819              	 .cfi_def_cfa_offset 16
 820 0004 00AF     	 add r7,sp,#0
 821              	.LCFI57:
 822              	 .cfi_def_cfa_register 7
 823 0006 7860     	 str r0,[r7,#4]
 824 0008 3960     	 str r1,[r7]
 304:../Libraries/XMCLib/src/xmc_i2s.c ****   channel->CCR |= (event & 0x1fc00U);
 825              	 .loc 3 304 0
 826 000a 7B68     	 ldr r3,[r7,#4]
 827 000c 1A6C     	 ldr r2,[r3,#64]
 828 000e 3B68     	 ldr r3,[r7]
 829 0010 03F4FE33 	 and r3,r3,#130048
 830 0014 1A43     	 orrs r2,r2,r3
 831 0016 7B68     	 ldr r3,[r7,#4]
 832 0018 1A64     	 str r2,[r3,#64]
 305:../Libraries/XMCLib/src/xmc_i2s.c ****   channel->PCR_IISMode |= ((event >> 2U) & 0x8070U);
 833              	 .loc 3 305 0
 834 001a 7B68     	 ldr r3,[r7,#4]
 835 001c DA6B     	 ldr r2,[r3,#60]
 836 001e 3B68     	 ldr r3,[r7]
 837 0020 9908     	 lsrs r1,r3,#2
 838 0022 48F27003 	 movw r3,#32880
 839 0026 0B40     	 ands r3,r3,r1
 840 0028 1A43     	 orrs r2,r2,r3
 841 002a 7B68     	 ldr r3,[r7,#4]
 842 002c DA63     	 str r2,[r3,#60]
 306:../Libraries/XMCLib/src/xmc_i2s.c **** }
 843              	 .loc 3 306 0
 844 002e 0C37     	 adds r7,r7,#12
 845              	.LCFI58:
 846              	 .cfi_def_cfa_offset 4
 847 0030 BD46     	 mov sp,r7
 848              	.LCFI59:
 849              	 .cfi_def_cfa_register 13
 850              	 
 851 0032 5DF8047B 	 ldr r7,[sp],#4
 852              	.LCFI60:
 853              	 .cfi_restore 7
 854              	 .cfi_def_cfa_offset 0
 855 0036 7047     	 bx lr
 856              	 .cfi_endproc
 857              	.LFE271:
 859              	 .section .text.XMC_I2S_CH_DisableEvent,"ax",%progbits
 860              	 .align 2
 861              	 .global XMC_I2S_CH_DisableEvent
 862              	 .thumb
 863              	 .thumb_func
 865              	XMC_I2S_CH_DisableEvent:
 866              	.LFB272:
 307:../Libraries/XMCLib/src/xmc_i2s.c **** 
 308:../Libraries/XMCLib/src/xmc_i2s.c **** void XMC_I2S_CH_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t event)
 309:../Libraries/XMCLib/src/xmc_i2s.c **** {
 867              	 .loc 3 309 0
 868              	 .cfi_startproc
 869              	 
 870              	 
 871              	 
 872 0000 80B4     	 push {r7}
 873              	.LCFI61:
 874              	 .cfi_def_cfa_offset 4
 875              	 .cfi_offset 7,-4
 876 0002 83B0     	 sub sp,sp,#12
 877              	.LCFI62:
 878              	 .cfi_def_cfa_offset 16
 879 0004 00AF     	 add r7,sp,#0
 880              	.LCFI63:
 881              	 .cfi_def_cfa_register 7
 882 0006 7860     	 str r0,[r7,#4]
 883 0008 3960     	 str r1,[r7]
 310:../Libraries/XMCLib/src/xmc_i2s.c ****   channel->CCR &= (uint32_t)~(event & 0x1fc00U);
 884              	 .loc 3 310 0
 885 000a 7B68     	 ldr r3,[r7,#4]
 886 000c 1A6C     	 ldr r2,[r3,#64]
 887 000e 3B68     	 ldr r3,[r7]
 888 0010 03F4FE33 	 and r3,r3,#130048
 889 0014 DB43     	 mvns r3,r3
 890 0016 1A40     	 ands r2,r2,r3
 891 0018 7B68     	 ldr r3,[r7,#4]
 892 001a 1A64     	 str r2,[r3,#64]
 311:../Libraries/XMCLib/src/xmc_i2s.c ****   channel->PCR_IISMode &= (uint32_t)~((event >> 2U) & 0x8070U);
 893              	 .loc 3 311 0
 894 001c 7B68     	 ldr r3,[r7,#4]
 895 001e DA6B     	 ldr r2,[r3,#60]
 896 0020 3B68     	 ldr r3,[r7]
 897 0022 9908     	 lsrs r1,r3,#2
 898 0024 48F27003 	 movw r3,#32880
 899 0028 0B40     	 ands r3,r3,r1
 900 002a DB43     	 mvns r3,r3
 901 002c 1A40     	 ands r2,r2,r3
 902 002e 7B68     	 ldr r3,[r7,#4]
 903 0030 DA63     	 str r2,[r3,#60]
 312:../Libraries/XMCLib/src/xmc_i2s.c **** }
 904              	 .loc 3 312 0
 905 0032 0C37     	 adds r7,r7,#12
 906              	.LCFI64:
 907              	 .cfi_def_cfa_offset 4
 908 0034 BD46     	 mov sp,r7
 909              	.LCFI65:
 910              	 .cfi_def_cfa_register 13
 911              	 
 912 0036 5DF8047B 	 ldr r7,[sp],#4
 913              	.LCFI66:
 914              	 .cfi_restore 7
 915              	 .cfi_def_cfa_offset 0
 916 003a 7047     	 bx lr
 917              	 .cfi_endproc
 918              	.LFE272:
 920              	 .text
 921              	.Letext0:
 922              	 .file 4 "d:\\programs\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 923              	 .file 5 "d:\\programs\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 924              	 .file 6 "D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/CMSIS/Include/cmsis_gcc.h"
 925              	 .file 7 "D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/CMSIS/Include/core_cm4.h"
 926              	 .file 8 "D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/CMSIS/Infineon/XMC4800_series/Include/system_XMC4800.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_i2s.c
    {standard input}:20     .text.XMC_USIC_CH_GetTransmitBufferStatus:00000000 $t
    {standard input}:24     .text.XMC_USIC_CH_GetTransmitBufferStatus:00000000 XMC_USIC_CH_GetTransmitBufferStatus
    {standard input}:67     .text.XMC_USIC_CH_SetMode:00000000 $t
    {standard input}:71     .text.XMC_USIC_CH_SetMode:00000000 XMC_USIC_CH_SetMode
    {standard input}:116    .text.XMC_I2S_CH_ClearStatusFlag:00000000 $t
    {standard input}:120    .text.XMC_I2S_CH_ClearStatusFlag:00000000 XMC_I2S_CH_ClearStatusFlag
    {standard input}:164    .text.XMC_I2S_CH_InitEx:00000000 $t
    {standard input}:169    .text.XMC_I2S_CH_InitEx:00000000 XMC_I2S_CH_InitEx
    {standard input}:369    .text.XMC_I2S_CH_SetBaudrateEx:00000000 XMC_I2S_CH_SetBaudrateEx
    {standard input}:459    .text.XMC_I2S_CH_SetSystemWordLength:00000000 XMC_I2S_CH_SetSystemWordLength
    {standard input}:293    .text.XMC_I2S_CH_SetBaudrate:00000000 $t
    {standard input}:298    .text.XMC_I2S_CH_SetBaudrate:00000000 XMC_I2S_CH_SetBaudrate
    {standard input}:364    .text.XMC_I2S_CH_SetBaudrateEx:00000000 $t
    {standard input}:454    .text.XMC_I2S_CH_SetSystemWordLength:00000000 $t
    {standard input}:607    .text.XMC_I2S_CH_Transmit:00000000 $t
    {standard input}:612    .text.XMC_I2S_CH_Transmit:00000000 XMC_I2S_CH_Transmit
    {standard input}:683    .text.XMC_I2S_CH_GetReceivedData:00000000 $t
    {standard input}:688    .text.XMC_I2S_CH_GetReceivedData:00000000 XMC_I2S_CH_GetReceivedData
    {standard input}:743    .text.XMC_I2S_CH_Stop:00000000 $t
    {standard input}:748    .text.XMC_I2S_CH_Stop:00000000 XMC_I2S_CH_Stop
    {standard input}:801    .text.XMC_I2S_CH_EnableEvent:00000000 $t
    {standard input}:806    .text.XMC_I2S_CH_EnableEvent:00000000 XMC_I2S_CH_EnableEvent
    {standard input}:860    .text.XMC_I2S_CH_DisableEvent:00000000 $t
    {standard input}:865    .text.XMC_I2S_CH_DisableEvent:00000000 XMC_I2S_CH_DisableEvent
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_USIC_CH_Enable
XMC_SCU_CLOCK_GetPeripheralClockFrequency
XMC_USIC_CH_SetBaudrate
XMC_USIC_CH_SetBaudrateEx
