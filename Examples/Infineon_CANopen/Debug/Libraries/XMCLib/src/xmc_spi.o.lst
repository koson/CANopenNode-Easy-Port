   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_spi.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_USIC_CH_GetTransmitBufferStatus,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_USIC_CH_GetTransmitBufferStatus:
  25              	.LFB199:
  26              	 .file 1 "D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc/xmc_usic.h"
   1:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
   2:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @file xmc_usic.h
   3:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @date 2020-12-05
   4:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
   5:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @cond
   6:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *****************************************************************************
   7:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
   9:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * All rights reserved.
  11:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
  12:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
  14:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * do so, all subject to the following:
  20:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
  21:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * The copyright notices in the Software and this entire statement, including
  22:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * the above license grant, this restriction and the following disclaimer,
  23:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * all derivative works of the Software, unless such copies or derivative
  25:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * works are solely in the form of machine-executable object code generated by
  26:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * a source language processor.
  27:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
  28:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * DEALINGS IN THE SOFTWARE.
  35:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
  36:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * To improve the quality of the software, users are encouraged to share
  37:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * at XMCSupport@infineon.com.
  39:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *****************************************************************************
  40:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
  41:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Change History
  42:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * --------------
  43:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
  44:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-02-20:
  45:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Initial draft<br>
  46:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Documentation improved <br>
  47:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
  48:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-05-08:
  49:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetInputTriggerCombinationMode() and XMC_USIC_CH_SetTransmitBufferStatus
  50:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
  51:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-06-20:
  52:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  53:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
  54:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-17:
  55:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Bug fixed in XMC_USIC_CH_SetTransmitBufferStatus API. OR operator removed.
  56:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
  57:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-24:
  58:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for enabling/disabling delay compensation XMC_USIC_CH_DisableDelayCompensation(
  59:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *       XMC_USIC_CH_DisableDelayCompensation()
  60:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
  61:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-25:
  62:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for defining if the data shift unit input is derived
  63:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *       from the input data path DXn or from the selected protocol pre-processors: XMC_USIC_CH_Con
  64:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *       and XMC_USIC_CH_ConnectInputDataShiftToDataInput()
  65:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
  66:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-27:
  67:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Fixed bug in XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T value.
  68:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for direct TBUF access: XMC_USIC_CH_WriteToTBUF() and XMC_USIC_CH_WriteToTBUFTC
  69:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for external input for BRG configuration:XMC_USIC_CH_ConfigExternalInputSignalT
  70:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
  71:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-28:
  72:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added API for enabling the transfer trigger unit to set bit TCSR.TE if the trigger signal 
  73:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *       Clear to Send (CTS) signal: XMC_USIC_CH_EnableTBUFDataValidTrigger() and XMC_USIC_CH_Disab
  74:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
  75:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-03-09:
  76:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Optimization of write only registers
  77:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
  78:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-04-10:
  79:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added an API to put the data into FIFO when hardware port control is enabled: XMC_USIC_CH_
  80:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
  81:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 2017-02-10:
  82:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetShiftDirection() to allow selection of shift direction of the data wo
  83:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_GetCaptureTimerValue() and XMC_USIC_CH_SetFractionalDivider()
  84:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
  85:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 2017-09-08:
  86:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Fixed value of macro XMC_USIC_CH_SHIFT_DIRECTION_MSB_FIRST used in XMC_USIC_CH_SetShiftDir
  87:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
  88:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 2018-09-29:
  89:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetBaudrateEx which uses the integer divider instead of the fractional d
  90:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
  91:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-05-07:
  92:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_GetBaudrate(), XMC_USIC_CH_GetSCLKFrequency() and XMC_USIC_CH_GetMCLKFre
  93:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
  94:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-07-01:
  95:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Changed XMC_USIC_CH_SetBaudrateEx() input parameter types
  96:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
  97:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-09-30:
  98:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_InvalidateReadData(), XMC_USIC_CH_EnableWordLengthControl() and XMC_USIC
  99:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 100:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-12-05:
 101:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_TXFIFO_PutDataEx()
 102:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 103:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 2020-04-30:
 104:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_TXFIFO_SetTriggerLimit() and XMC_USIC_CH_RXFIFO_SetTriggerLimit()
 105:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 106:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 2020-12-05:
 107:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1S to XMC_USIC_CH_BRG_CLOCK_SOURCE_t
 108:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_BRG_CTQSEL_t
 109:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetBaudrateDivider()
 110:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 
 111:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @endcond
 112:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 113:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 114:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 115:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #ifndef XMC_USIC_H
 116:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC_H
 117:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 118:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * HEADER FILES
 119:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 120:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 121:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #include "xmc_common.h"
 122:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 123:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 124:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup XMClib XMC Peripheral Library
 125:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
 126:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 127:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 128:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 129:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup USIC
 130:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @brief Universal Serial Interface Channel(USIC) driver for serial communication.
 131:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 132:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * The Universal Serial Interface Channel(USIC) module is a flexible interface module
 133:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * covering several serial communication protocols. A USIC module contains two
 134:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * independent communication channels named USICx_CH0 and USICx_CH1, with x
 135:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * being the number of the USIC module. The user can program, during run-time, which protocol will 
 136:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * by each communication channel and which pins are used.
 137:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * The driver provides APIs, configuration structures and enumerations to configure common features
 138:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * communication protocols.
 139:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 140:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC driver features:
 141:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of FIFO for transmit and receive functions.
 142:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides a structure type XMC_USIC_CH_t to represent the USIC channel registers in a programm
 143:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  friendly format.
 144:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of automatic update for frame length, word length, slave select or slave
 145:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows transmission of data to FIFO using XMC_USIC_CH_TXFIFO_PutData() and XMC_USIC_CH_TXFIFO
 146:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows reading of received data in FIFO using XMC_USIC_CH_RXFIFO_GetData()
 147:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of baudrate using XMC_USIC_CH_SetBaudrate()
 148:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides API to trigger interrupts using XMC_USIC_CH_TriggerServiceRequest()
 149:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
 150:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 151:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 152:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 153:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * MACROS
 154:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 155:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 156:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0 ((XMC_USIC_t *)USIC0_BASE)			/**< USIC0 module base address */
 157:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH0 ((XMC_USIC_CH_t *)USIC0_CH0_BASE)	/**< USIC0 channel 0 base address */
 158:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH1 ((XMC_USIC_CH_t *)USIC0_CH1_BASE)	/**< USIC0 channel 1 base address */
 159:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 160:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC1)
 161:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1 ((XMC_USIC_t *)USIC1_BASE)			/**< USIC1 module base address */
 162:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH0 ((XMC_USIC_CH_t *)USIC1_CH0_BASE)	/**< USIC1 channel 0 base address */
 163:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH1 ((XMC_USIC_CH_t *)USIC1_CH1_BASE)	/**< USIC1 channel 1 base address */
 164:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 165:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 166:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC2)
 167:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2 ((XMC_USIC_t *)USIC2_BASE)			/**< USIC2 module base address */
 168:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH0 ((XMC_USIC_CH_t *)USIC2_CH0_BASE)	/**< USIC2 channel 0 base address */
 169:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH1 ((XMC_USIC_CH_t *)USIC2_CH1_BASE)	/**< USIC2 channel 1 base address */
 170:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 171:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 172:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Msk  USIC_CH_DX0CR_DSEL_Msk   /**< Common mask for DSEL bitfield mask in 
 173:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Pos  USIC_CH_DX0CR_DSEL_Pos   /**< Common mask for DSEL bitfield position
 174:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Pos USIC_CH_DX0CR_SFSEL_Pos  /**< Common mask for SFSEL bitfield positio
 175:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Msk USIC_CH_DX0CR_SFSEL_Msk  /**< Common mask for SFSEL bitfield mask in
 176:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DPOL_Msk  USIC_CH_DX0CR_DPOL_Msk   /**< Common mask for DPOL bitfield mask in 
 177:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DFEN_Msk  USIC_CH_DX0CR_DFEN_Msk   /**< Common mask for DFEN bitfield mask in 
 178:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEN_Msk  USIC_CH_DX0CR_DSEN_Msk   /**< Common mask for DSEN bitfield mask in 
 179:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Pos    USIC_CH_DX0CR_CM_Pos     /**< Common mask for CM bitfield position i
 180:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Msk    USIC_CH_DX0CR_CM_Msk     /**< Common mask for CM bitfield mask in DX
 181:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_Msk  USIC_CH_DX0CR_INSW_Msk   /**< Common mask for INSW bitfield mask in 
 182:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_pos  USIC_CH_DX0CR_INSW_Pos   /**< Common mask for INSW bitfield position
 183:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 184:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC1
 185:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #include "xmc1_usic_map.h"
 186:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 187:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 188:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC4
 189:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #include "xmc4_usic_map.h"
 190:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 191:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 192:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 193:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * ENUMS
 194:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 195:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 196:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 197:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel driver status
 198:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 199:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_STATUS
 200:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 201:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_OK,    /**< USIC driver status : OK */
 202:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_ERROR, /**< USIC driver status : ERROR */
 203:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_BUSY   /**< USIC driver status : BUSY */
 204:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_STATUS_t;
 205:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 206:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 207:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel kernel mode
 208:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** */
 209:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_KERNEL_MODE
 210:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 211:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_0  = 0x0UL,  /**< Run mode 0 (transmission and reception possible)*/
 212:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_1  = 0x1UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Run mode 1 (transmissio
 213:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_0 = 0x2UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Stop mode 0 (no transmi
 214:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_1 = 0x3UL << USIC_CH_KSCFG_NOMCFG_Pos   /**< Stop mode 1 (both trans
 215:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_KERNEL_MODE_t;
 216:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 217:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 218:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel operating mode
 219:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 220:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_OPERATING_MODE
 221:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 222:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_IDLE = 0x0UL, /**< USIC channel idle */
 223:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_SPI  = 0x1UL << USIC_CH_CCR_MODE_Pos, /**< SPI mode */
 224:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_UART = 0x2UL << USIC_CH_CCR_MODE_Pos, /**< UART mode */
 225:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2S  = 0x3UL << USIC_CH_CCR_MODE_Pos, /**< I2S mode */
 226:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2C  = 0x4UL << USIC_CH_CCR_MODE_Pos  /**< I2C mode */
 227:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_OPERATING_MODE_t;
 228:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 229:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 230:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel inputs
 231:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 232:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT
 233:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 234:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX0, /**< DX0 input */
 235:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX1, /**< DX1 input */
 236:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX2, /**< DX2 input */
 237:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX3, /**< DX3 input */
 238:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX4, /**< DX4 input */
 239:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX5  /**< DX5 input */
 240:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_t;
 241:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 242:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 243:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input source sampling frequency
 244:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 245:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_SAMPLING_FREQ
 246:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 247:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FPERIPH            = 0x0UL, /**< Use fperiph frequency for input 
 248:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FRACTIONAL_DIVIDER = 0x1UL << USIC_CH_DXCR_SFSEL_Pos  /**< Use fF
 249:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_SAMPLING_FREQ_t;
 250:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 251:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 252:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input combination mode
 253:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 254:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_COMBINATION_MODE
 255:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 256:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_TRIGGER_DISABLED = 0x0UL, /**< The trigger activation is disab
 257:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_RISING_EDGE      = 0x1UL, /**< A rising edge activates DXnT*/
 258:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_FALLING_EDGE     = 0x2UL, /**< A falling edge activates DXnT*/
 259:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_BOTH_EDGES       = 0x3UL, /**< Both edges activate DXnT*/
 260:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_COMBINATION_MODE_t;
 261:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 262:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 263:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel data transmission start modes.
 264:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Data shifted out of the transmit pin depends on the value configured for the
 265:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * TDEN bitfield of the TCSR register. Following enum values are used for configuring
 266:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * the TCSR->TDEN bitfield.
 267:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 268:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_START_TRANSMISION_MODE
 269:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 270:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_DISABLED      = 0x0U, /**< Passive data level is sent out on transm
 271:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV        = 0x1UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 272:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_0 = 0x2UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 273:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_1 = 0x3UL << USIC_CH_TCSR_TDEN_Pos  /**< Transmission o
 274:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_START_TRANSMISION_MODE_t;
 275:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 276:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 277:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel interrupt node pointers
 278:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 279:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INTERRUPT_NODE_POINTER
 280:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 281:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT      = USIC_CH_INPR_TSINP_Pos, /**< Node pointe
 282:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER     = USIC_CH_INPR_TBINP_Pos, /**< Node pointe
 283:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEIVE             = USIC_CH_INPR_RINP_Pos,  /**< Node pointe
 284:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE   = USIC_CH_INPR_AINP_Pos,  /**< Node pointe
 285:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOCOL            = USIC_CH_INPR_PINP_Pos   /**< Node pointe
 286:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INTERRUPT_NODE_POINTER_t;
 287:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 288:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 289:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel events
 290:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 291:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_EVENT
 292:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 293:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk, /**< Receive start event */
 294:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk, /**< Data lost event */
 295:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk, /**< Transmit shift event */
 296:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk, /**< Transmit buffer event */
 297:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,  /**< Receive event */
 298:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,  /**< Alternate receive event */
 299:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk /**< Baudrate generator event */
 300:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_EVENT_t;
 301:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 302:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 303:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel parity mode
 304:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** */
 305:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_PARITY_MODE
 306:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 307:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_NONE     = 0x0UL,  /**< Disable parity mode */
 308:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_EVEN     = 0x2UL << USIC_CH_CCR_PM_Pos,  /**< Enable even parity mode */
 309:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_ODD      = 0x3UL << USIC_CH_CCR_PM_Pos   /**< Enable odd parity mode */
 310:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PARITY_MODE_t;
 311:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 312:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 313:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data output mode
 314:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** */
 315:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_DATA_OUTPUT_MODE
 316:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 317:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_NORMAL   = 0x0UL,  /**< Data output normal mode */
 318:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_INVERTED = 0x1UL << USIC_CH_SCTR_DOCFG_Pos   /**< Data output invert
 319:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_DATA_OUTPUT_MODE_t;
 320:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 321:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 322:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status
 323:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** */
 324:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS
 325:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 326:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_IDLE = 0x0UL,                 /**< Transfer buffer is currently idle*/
 327:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_BUSY = USIC_CH_TCSR_TDV_Msk   /**< Transfer buffer is currently busy*/
 328:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_t;
 329:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 330:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 331:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 332:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 333:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status modification
 334:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** */
 335:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS_SET
 336:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 337:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_BUSY   = 0x1UL, /**< Set Transfer buffer status to busy*/
 338:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_IDLE   = 0x2UL  /**< Set Transfer buffer status to idle*/
 339:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_SET_t;
 340:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 341:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 342:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive buffer status
 343:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** */
 344:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RBUF_STATUS
 345:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 346:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID0 = USIC_CH_RBUFSR_RDV0_Msk, /**< RBUF0 data has not yet been r
 347:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID1 = USIC_CH_RBUFSR_RDV1_Msk  /**< RBUF1 data has not yet been r
 348:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RBUF_STATUS_t;
 349:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 350:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 351:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel output signal passive data level
 352:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** */
 353:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USCI_CH_PASSIVE_DATA_LEVEL
 354:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 355:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL0 = 0x0UL, /**< Passive level(idle mode signal level) 0 */
 356:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL1 = 0x1UL << USIC_CH_SCTR_PDL_Pos  /**< Passive level(idle mode sig
 357:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PASSIVE_DATA_LEVEL_t;
 358:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 359:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 360:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO size
 361:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** */
 362:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_FIFO_SIZE
 363:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 364:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_DISABLED     = 0x0U,  /**< FIFO Disabled */
 365:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_2WORDS  = 0x1U,  /**< FIFO size: 2 words */
 366:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_4WORDS  = 0x2U,  /**< FIFO size: 4 words */
 367:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_8WORDS  = 0x3U,  /**< FIFO size: 8 words */
 368:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_16WORDS = 0x4U,  /**< FIFO size: 16 words */
 369:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_32WORDS = 0x5U,  /**< FIFO size: 32 words */
 370:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_64WORDS = 0x6U   /**< FIFO size: 64 words */
 371:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_FIFO_SIZE_t;
 372:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 373:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 374:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO interrupt node pointers
 375:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** */
 376:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER
 377:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 378:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_TBCTR_STBINP_Pos,  /**< Node pointe
 379:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_TBCTR_ATBINP_Pos   /**< Node pointe
 380:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t;
 381:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 382:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 383:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO event configuration
 384:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** */
 385:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT_CONF
 386:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 387:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_STANDARD  = USIC_CH_TBCTR_STBIEN_Msk,   /**< Enable FIFO standard t
 388:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_TBCTR_TBERIEN_Msk  /**< Enable transmi
 389:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_CONF_t;
 390:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 391:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 392:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO status
 393:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** */
 394:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT
 395:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 396:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_STANDARD = USIC_CH_TRBSR_STBI_Msk,    /**< Transmit FIFO status: Standar
 397:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_ERROR    = USIC_CH_TRBSR_TBERI_Msk    /**< Transmit FIFO status: Error e
 398:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_t;
 399:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 400:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 401:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO interrupt node pointers
 402:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** */
 403:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER
 404:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 405:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_RBCTR_SRBINP_Pos, /**< Node pointer
 406:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_RBCTR_ARBINP_Pos  /**< Node pointer
 407:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t;
 408:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 409:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 410:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO event configuration
 411:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** */
 412:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT_CONF
 413:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 414:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD  = USIC_CH_RBCTR_SRBIEN_Msk,   /**< Enable FIFO standard r
 415:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_RBCTR_RBERIEN_Msk,  /**< Enable receiv
 416:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE = USIC_CH_RBCTR_ARBIEN_Msk   /**< Enable FIFO alternative
 417:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_CONF_t;
 418:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 419:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 420:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO status
 421:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** */
 422:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT
 423:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 424:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_STANDARD  = USIC_CH_TRBSR_SRBI_Msk,   /**< Receive FIFO status: Standard
 425:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ERROR     = USIC_CH_TRBSR_RBERI_Msk,  /**< Receive FIFO status: Error ev
 426:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE = USIC_CH_TRBSR_ARBI_Msk    /**< Receive FIFO status: Alternat
 427:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_t;
 428:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 429:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 430:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator clock source
 431:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** */
 432:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_SOURCE
 433:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 434:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DIVIDER = 0x0UL, /**< Baudrate generator clock source : Source divid
 435:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T    = 0x2UL << USIC_CH_BRG_CLKSEL_Pos,  /**< Baudrate generator 
 436:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1S    = 0x3UL << USIC_CH_BRG_CLKSEL_Pos  /**< Baudrate generator c
 437:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_SOURCE_t;
 438:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 439:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 440:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel input selection for CTQ
 441:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** */
 442:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CTQSEL
 443:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 444:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CTQSEL_PDIV = 0x0UL, /**< fCTQIN = fPDIV */
 445:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CTQSEL_PPP  = 0x1UL << USIC_CH_BRG_CTQSEL_Pos,  /**< fCTQIN = fPPP */
 446:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CTQSEL_SCLK = 0x2UL << USIC_CH_BRG_CTQSEL_Pos,  /**< fCTQIN = fSCLK */
 447:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CTQSEL_MCLK = 0x3UL << USIC_CH_BRG_CTQSEL_Pos  /**< fCTQIN = fMCLK */
 448:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CTQSEL_t;
 449:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 450:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 451:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 452:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator divider mode
 453:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** */
 454:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE
 455:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 456:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_DISABLED   = 0x0UL, /**< Baudrate generator clock divider: Dis
 457:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL     = 0x1UL << USIC_CH_FDR_DM_Pos, /**< Baudrate genera
 458:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL = 0x2UL << USIC_CH_FDR_DM_Pos  /**< Baudrate genera
 459:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_t;
 460:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 461:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 462:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator master clock passive level
 463:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** */
 464:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL
 465:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 466:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_0 = 0x0UL, /**< Baudrate generator master clock passiv
 467:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_1 = 0x1UL << USIC_CH_BRG_MCLKCFG_Pos  /**< Baudrate ge
 468:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_t;
 469:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 470:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 471:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock passive level
 472:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** */
 473:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL
 474:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 475:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED = 0x0UL, /**< Shift clock passive leve
 476:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED = 0x1UL << USIC_CH_BRG_SCLKCFG_Pos, /*
 477:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED  = (int32_t)(0x2UL << USIC_CH_BRG_SCLKC
 478:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED  = (int32_t)(0x3UL << USIC_CH_BRG_SCLKC
 479:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t;
 480:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 481:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 482:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock output
 483:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** */
 484:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT
 485:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 486:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK = 0x0UL, /**< Baudrate generator shift clock output: SCL.
 487:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1 = 0x1UL << USIC_CH_BRG_SCLKOSEL_Pos   /**< Baudrate genera
 488:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_t;
 489:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 490:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 491:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel shift direction.
 492:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** * Defines the shift direction of the data words for transmission and reception
 493:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** */
 494:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_SHIFT_DIRECTION
 495:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 496:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_SHIFT_DIRECTION_LSB_FIRST = 0x0UL, /**< Shift LSB first. The first data bit of a data
 497:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_SHIFT_DIRECTION_MSB_FIRST = 0x1UL << USIC_CH_SCTR_SDIR_Pos /**< Shift MSB first. The 
 498:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_SHIFT_DIRECTION_t;
 499:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 500:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 501:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 502:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * DATA STRUCTURES
 503:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 504:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 505:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard start*/
 506:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 507:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #pragma push
 508:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #pragma anon_unions
 509:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 510:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #pragma warning 586
 511:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 512:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 513:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 514:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC module structure
 515:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 516:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef USIC_GLOBAL_TypeDef XMC_USIC_t;
 517:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 518:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 519:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel structure.<br> The members of the structure are same as in the device header file,
 520:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * except for some registers.
 521:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * DX0CR, DX1CR, DX2CR, DX3CR, DX4CR and DX5CR are replaced with the array DXCR[6].
 522:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * TBUF0 to TBUF31 are replaced with TBUF[32].
 523:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * IN0 to IN31 are replaced with IN[32].
 524:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 525:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** typedef struct XMC_USIC_CH
 526:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 527:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED0;
 528:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  CCFG;			/**< Channel configuration register*/
 529:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED1;
 530:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  KSCFG;			/**< Kernel state configuration register*/
 531:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  FDR;			/**< Fractional divider configuration register*/
 532:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BRG;			/**< Baud rate generator register*/
 533:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  INPR;			/**< Interrupt node pointer register*/
 534:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  DXCR[6];		/**< Input control registers DX0 to DX5.*/
 535:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  SCTR;			/**< Shift control register*/
 536:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TCSR;
 537:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 538:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   union
 539:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   {
 540:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IICMode;	/**< I2C protocol configuration register*/
 541:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IISMode; /**< I2S protocol configuration register*/
 542:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_SSCMode;	/**< SPI protocol configuration register*/
 543:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR;			/**< Protocol configuration register*/
 544:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_ASCMode;	/**< UART protocol configuration register*/
 545:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   };
 546:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CCR;			/**< Channel control register*/
 547:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CMTR;			/**< Capture mode timer register*/
 548:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 549:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   union
 550:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   {
 551:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IICMode;	/**< I2C protocol status register*/
 552:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IISMode;	/**< I2S protocol status register*/
 553:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_SSCMode;	/**< SPI protocol status register*/
 554:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR;			/**< Protocol status register*/
 555:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_ASCMode;	/**< UART protocol status register*/
 556:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   };
 557:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  PSCR;			/**< Protocol status clear register*/
 558:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFSR;		/**< Receive buffer status register*/
 559:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF;			/**< Receive buffer register*/
 560:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFD;			/**< Debug mode receive buffer register*/
 561:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF0;			/**< Receive buffer 0*/
 562:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF1;			/**< Receive buffer 1*/
 563:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF01SR;		/**< Receive buffer status register*/
 564:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  FMR;			/**< Flag modification register*/
 565:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED2[5];
 566:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBUF[32];		/**< Tranmsit buffer registers*/
 567:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYP;			/**< FIFO bypass register*/
 568:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYPCR;			/**< FIFO bypass control register*/
 569:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBCTR;			/**< Transmit FIFO control register*/
 570:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  RBCTR;			/**< Receive FIFO control register*/
 571:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  TRBPTR;		/**< Transmit/recive buffer pointer register*/
 572:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TRBSR;			/**< Transmit/receive buffer status register*/
 573:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  TRBSCR;		/**< Transmit/receive buffer status clear register*/
 574:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTR;			/**< Receive FIFO output register*/
 575:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTDR;			/**< Receive FIFO debug output register*/
 576:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED3[23];
 577:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  IN[32];		/**< Transmit FIFO input register*/
 578:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_t;
 579:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 580:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 581:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard end*/
 582:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 583:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #pragma pop
 584:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 585:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #pragma warning restore
 586:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 587:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 588:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 589:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * API PROTOTYPES
 590:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  ******************************************************************************/
 591:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 592:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #ifdef __cplusplus
 593:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** extern "C" {
 594:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 595:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 596:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsModuleValid(const XMC_USIC_t *const module)
 597:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 598:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 599:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 600:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = (module == XMC_USIC0);
 601:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)
 602:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC1);
 603:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 604:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)
 605:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC2);
 606:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 607:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 608:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 609:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
 610:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 611:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsChannelValid(const XMC_USIC_CH_t *const channel)
 612:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 613:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 614:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 615:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = ((channel == XMC_USIC0_CH0) || (channel == XMC_USIC0_CH1));
 616:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)
 617:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC1_CH0) || (channel == XMC_USIC1_CH1));
 618:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 619:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)
 620:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC2_CH0) || (channel == XMC_USIC2_CH1));
 621:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 622:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 623:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 624:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
 625:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 626:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /* Common APIs */
 627:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 628:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 629:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 630:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 631:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 632:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 633:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 634:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC module.\n\n
 635:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the clock for the USIC module by following the
 636:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * clock enabling sequence for the selected device.
 637:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 638:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 639:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 640:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 641:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Enable(XMC_USIC_t *const usic);
 642:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 643:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 644:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 645:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 646:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 647:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 648:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC module.\n\n
 649:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the clock for the USIC module by following the clock
 650:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * disabling sequence for the selected device.
 651:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 652:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 653:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 654:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 655:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Disable(XMC_USIC_t *const usic);
 656:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 657:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 658:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 659:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 660:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 661:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 662:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC channel. \n\n
 663:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is enabled by setting the module enable bit in KSCFG register bitfield MODEN.
 664:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * On enabling, the channel is set to idle mode.
 665:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 666:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 667:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 668:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 669:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Enable(XMC_USIC_CH_t *const channel);
 670:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 671:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 672:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 673:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 674:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 675:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 676:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC channel.\n\n
 677:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is disabled by setting the module enable bit(MDEN) to 0 in the register KSCFG.
 678:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 679:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 680:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 681:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 682:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Disable(XMC_USIC_CH_t *const channel);
 683:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 684:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 685:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 686:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 687:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  rate Desired baudrate. \b Range: minimum value = 100, maximum value depends on the perip
 688:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				and \a oversampling. Maximum baudrate can be derived using the formula: (fperiph * 1023)/(10
 689:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 690:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 691:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 692:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status indicating the baudrate configuration.\n
 693:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 694:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 					  @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 695:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 696:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 697:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate of the USIC channel. \n\n
 698:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Baudrate is configured by considering the peripheral frequency and the desired baudrate.
 699:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Optimum values of FDR->STEP and BRG->PDIV are calulated and used for generating the desired
 700:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * baudrate.
 701:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 702:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 703:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode(), XMC_USIC_CH_SetInputSource() \n\n\n
 704:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 705:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrate(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_t 
 706:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 707:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 708:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 709:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 710:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  rate Desired baudrate. Only integer dividers of peripheral clock are achievable
 711:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 712:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *            This can be related to the number of samples for each logic state of the data signal.
 713:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *            \b Range: 1 to 32. Value should be chosen based on the protocol used.
 714:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status indicating the baudrate configuration.\n
 715:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *      \b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 716:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *            @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 717:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 718:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 719:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate of the USIC channel using the integer divider which restrics the achieva
 720:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Baudrate is configured by considering the peripheral frequency and the desired baudrate.
 721:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Optimum values of FDR->STEP and BRG->PDIV are calulated and used for generating the desired
 722:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * baudrate.
 723:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 724:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 725:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode(), XMC_USIC_CH_SetInputSource() \n\n\n
 726:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 727:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrateEx(XMC_USIC_CH_t *const channel, int32_t rate, int32_t 
 728:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 729:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 730:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 731:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 732:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  clksel Baudrate generator clock source.
 733:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pppen Enable 2:1 Divider for fPPP.
 734:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pdiv Divider Factor to generate fPDIV = fPPP / (pDIV + 1)
 735:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  ctqsel Input selection for CTQ.
 736:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pctq Pre-Divider for Time Quanta Counter. fCTQIN / (PCQT + 1)
 737:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  dctq Denominator for Time Quanta Counter. fTQ / (DCTQ + 1)
 738:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 739:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 740:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 741:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate generator of the USIC channel.
 742:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 743:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 744:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetFractionalDivider() \n\n\n
 745:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 746:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_SetBaudrateDivider(XMC_USIC_CH_t *const channel, 
 747:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                                     XMC_USIC_CH_BRG_CLOCK_SOURCE_t clksel,
 748:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                                     bool pppen,
 749:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                                     uint32_t pdiv,
 750:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                                     XMC_USIC_CH_BRG_CTQSEL_t ctqsel,
 751:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                                     uint32_t pctq,
 752:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                                     uint32_t dctq);
 753:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 754:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 755:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 756:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 757:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel for .\n
 758:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 759:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 760:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used baudrate (fCTQIN) of a USIC channel. \n\n
 761:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png
 762:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png
 763:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 764:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 765:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 766:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 767:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetBaudrate(XMC_USIC_CH_t *const channel);
 768:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 769:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 770:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 771:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 772:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel.\n
 773:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 774:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 775:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used SCLK frequency of a USIC channel. \n\n
 776:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png
 777:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png
 778:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 779:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 780:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 781:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 782:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetSCLKFrequency(XMC_USIC_CH_t *const channel);
 783:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 784:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 785:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 786:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 787:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel.\n
 788:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 789:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 790:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used MCLK frequency of a USIC channel. \n\n
 791:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png
 792:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png
 793:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 794:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 795:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 796:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 797:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetMCLKFrequency(XMC_USIC_CH_t *const channel);
 798:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 799:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 800:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 801:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 802:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pdiv Desired divider for the external frequency input. \b Range: minimum value = 1, maxi
 803:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 804:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 805:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 806:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Selects which edge of the synchronized(and optionally filtered) signal 
 807:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *                          output DXnT of the input stage.
 808:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 809:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 810:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 811:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 812:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the external frequency input for the Baudrate Generator and configures the divider, over
 813:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * the combination mode of the USIC channel. \n\n
 814:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 815:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 816:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBRGInputClockSource(), XMC_USIC_CH_SetInputTriggerCombinationMode() \n\n\n
 817:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 818:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_ConfigExternalInputSignalToBRG(XMC_USIC_CH_t *const channel,
 819:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const uint16_t pdiv,
 820:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t oversampling,
 821:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INPUT_COMBINATION_MODE_t combination_mode);
 822:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 823:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 824:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 825:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 826:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 827:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 828:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  source Input source select for the input stage. The table below maps the enum value with
 829:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * <table><tr><td>0</td><td>DXnA</td></tr><tr><td>1</td><td>DXnB</td></tr><tr><td>2</td><td>DXnC</t
 830:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * <tr><td>4</td><td>DXnE</td></tr><tr><td>5</td><td>DXnF</td></tr><tr><td>6</td><td>DXnG</td></tr>
 831:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * </tr></table>
 832:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 833:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 834:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 835:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the data source for USIC input stage.\n\n
 836:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the input data signal source among DXnA, DXnB.. DXnG for the input stage. The API can be
 837:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * like DX0CR, DX1CR etc.
 838:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 839:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 840:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion(), XMC_USIC_CH_EnableInputDigitalFilter(), XMC_USIC_CH_EnableIn
 841:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSamplingFreq()\n\n\n
 842:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 843:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSource(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_INP
 844:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 845:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)((channel->DXCR[input] & (uint32_t)(~USIC_CH_DXCR_DSEL_Msk)) |
 846:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                                     ((uint32_t)source << USIC_CH_DXCR_DSEL_Pos));
 847:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
 848:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 849:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 850:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 851:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 852:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 853:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 854:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 855:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 856:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is controlled by the
 857:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * protocol pre-processor. \n\n
 858:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 859:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 860:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToDataInput()\n\n\n
 861:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 862:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToPPP(XMC_USIC_CH_t *const channel, const XMC
 863:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 864:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &= (uint32_t)~USIC_CH_DXCR_INSW_Msk;
 865:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
 866:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 867:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 868:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 869:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 870:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 871:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 872:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 873:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 874:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 875:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is connected to
 876:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * the selected data input line. \n\n
 877:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 878:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * This setting is used
 879:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * if the signals are directly derived from an input
 880:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * pin without treatment by the protocol preprocessor.
 881:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 882:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToPPP()\n\n\n
 883:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 884:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToDataInput(XMC_USIC_CH_t *const channel, con
 885:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 886:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_INSW_Msk;
 887:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
 888:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 889:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 890:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 891:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 892:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 893:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 894:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 895:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 896:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 897:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input inversion for USIC channel input data signal. \n\n
 898:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 899:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Polarity of the input source can be changed to provide inverted data input.
 900:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 901:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputInversion()\n\n\n
 902:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 903:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC_
 904:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 905:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_DPOL_Msk;
 906:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
 907:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 908:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 909:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 910:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 911:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 912:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 913:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 914:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 915:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 916:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input inversion for USIC channel. \n\n
 917:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 918:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Resets the input data polarity for the USIC channel input data signal.
 919:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 920:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion()\n\n\n
 921:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 922:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC
 923:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 924:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &= (uint32_t)~USIC_CH_DXCR_DPOL_Msk;
 925:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
 926:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 927:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 928:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 929:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 930:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 931:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 932:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 933:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables delay compensation. \n\n
 934:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 935:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Delay compensation can be applied to the receive path.
 936:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 937:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableDelayCompensation()\n\n\n
 938:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 939:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableDelayCompensation(XMC_USIC_CH_t *const channel)
 940:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 941:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] |= USIC_CH_DX1CR_DCEN_Msk;
 942:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
 943:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 944:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 945:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 946:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 947:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 948:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 949:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 950:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables delay compensation.. \n\n
 951:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 952:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 953:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableDelayCompensation()\n\n\n
 954:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 955:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableDelayCompensation(XMC_USIC_CH_t *const channel)
 956:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 957:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] &= (uint32_t)~USIC_CH_DX1CR_DCEN_Msk;
 958:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
 959:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
 960:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 961:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 962:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 963:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 964:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 965:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 966:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 967:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 968:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the input digital filter for USIC channel input data signal. \n\n
 969:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be digitally filtered.
 970:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 971:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 972:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputDigitalFilter()\n\n\n
 973:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 974:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_U
 975:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 976:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= (uint32_t)USIC_CH_DXCR_DFEN_Msk;
 977:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
 978:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 979:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 980:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 981:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 982:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 983:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 984:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 985:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 986:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the input digital filter for USIC channel input data signal. \n\n
 987:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be digitally filtered.
 988:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
 989:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 990:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
 991:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
 992:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_
 993:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
 994:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &= (uint32_t)~USIC_CH_DXCR_DFEN_Msk;
 995:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
 996:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
 997:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 998:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 999:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
1000:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
1001:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1002:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1003:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1004:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input synchronization for the USIC channel input data signal. \n\n
1005:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be synchronized with fPERIPH.
1006:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * A noisy signal can be synchronized and filtered by enabling the digital filter.
1007:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1008:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1009:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputSync(), XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
1010:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1011:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_IN
1012:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1013:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= (uint32_t)USIC_CH_DXCR_DSEN_Msk;
1014:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1015:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1016:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1017:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1018:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
1019:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
1020:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1021:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1022:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1023:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input synchronization for the USIC channel input data signal. \n\n
1024:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be synchronized.
1025:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1026:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1027:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_DisableInputDigitalFilter() \n\n\n
1028:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1029:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_I
1030:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1031:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &= (uint32_t)~USIC_CH_DXCR_DSEN_Msk;
1032:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1033:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1034:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1035:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1036:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
1037:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
1038:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  sampling_freq Sampling frequency value of type \a XMC_USIC_CH_INPUT_SAMPLING_FREQ_t.
1039:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1040:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1041:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1042:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets sampling frequency for USIC channel input data signal. \n\n
1043:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1044:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1045:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
1046:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1047:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSamplingFreq(XMC_USIC_CH_t *const channel,
1048:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INPUT_t input,
1049:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INPUT_SAMPLING_FREQ_t sampling_freq)
1050:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1051:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_SFSEL_Msk)) |
1052:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)sampling_freq);
1053:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1054:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1055:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1056:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1057:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1058:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
1059:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
1060:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Combination mode value of type \a XMC_USIC_CH_INPUT_COMBINATION_MODE_t.
1061:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1062:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1063:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1064:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects which edge of the synchronized signal DXnS activates the trigger output DXnT of the inpu
1065:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1066:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1067:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
1068:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1069:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputTriggerCombinationMode(XMC_USIC_CH_t *const channel,
1070:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INPUT_t input,
1071:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INPUT_COMBINATION_MODE_t combination_mode)
1072:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1073:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_CM_Msk)) |
1074:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)combination_mode << USIC_CH_DXCR_CM_Pos);
1075:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1076:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1077:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1078:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1079:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1080:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  clock_source clock source for the BRG.
1081:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1082:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1083:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1084:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the clock source for the BRG. \n\n
1085:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1086:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1087:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputTriggerCombinationMode(), XMC_USIC_CH_SetExternalClockBRGDivider()\n\n\n
1088:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1089:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetBRGInputClockSource(XMC_USIC_CH_t *const channel, const XMC_USI
1090:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1091:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG = (uint32_t)(channel->BRG & (~USIC_CH_BRG_CLKSEL_Msk)) | (uint32_t)(clock_source);
1092:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1093:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1094:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1095:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1096:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1097:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted. \n
1098:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: 16bit unsigned data. minimum= 0, maximum= 65535
1099:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1100:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1101:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1102:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data into the transmit buffer. \n\n
1103:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * The data provided is placed in TBUF[0U].
1104:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1105:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1106:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1107:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_WriteToTBUFTCI() \n\n\n
1108:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1109:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_WriteToTBUF(XMC_USIC_CH_t *const channel, const uint16_t data)
1110:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1111:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBUF[0U] = data;
1112:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1113:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1114:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1115:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1116:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1117:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted.
1118:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param transmit_control_information transmit control information to be configured while transmit
1119:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: minimum= 0, maximum= 31.
1120:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1121:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1122:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1123:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data to the transmit buffer in a control mode. \n\n
1124:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * When the respective control mode is enabled , this API can be used.
1125:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1126:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1127:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1128:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_WriteToTBUF() \n\n\n
1129:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1130:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_WriteToTBUFTCI(XMC_USIC_CH_t *const channel,
1131:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const uint16_t data,
1132:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t transmit_control_information)
1133:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1134:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBUF[transmit_control_information] = data;
1135:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1136:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1137:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1138:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1139:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1140:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  word_length Number of bits to be configured for a data word. \n
1141:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 					   \b Range: minimum= 1, maximum= 16. \n
1142:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 					   e.g: For word length of 8, \a word_length should be provided as 8.
1143:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1144:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1145:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1146:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the data word length in number of bits. \n\n
1147:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the number of bits to represent a data word. Frame length should be a multiple of word leng
1148:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1149:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1150:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetFrameLength()\n\n\n
1151:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1152:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetWordLength(XMC_USIC_CH_t *const channel, const uint8_t word_len
1153:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1154:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_WLE_Msk)) |
1155:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                   (uint32_t)(((uint32_t)word_length - 1UL)  << USIC_CH_SCTR_WLE_Pos);
1156:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1157:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1158:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1159:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1160:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1161:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  word_length Number of bits to be configured for a data word. \n
1162:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *             \b Range: minimum= 1, maximum= 16. \n
1163:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *             e.g: For word length of 8, \a word_length should be provided as 8.
1164:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1165:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1166:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1167:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the data word length in number of bits. \n\n
1168:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the number of bits to represent a data word. Frame length should be a multiple of word leng
1169:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1170:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1171:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetFrameLength()\n\n\n
1172:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1173:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetShiftDirection(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_
1174:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1175:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_SDIR_Msk)) | (uint32_t)shift_direction;
1176:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1177:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1178:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1179:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1180:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1181:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1182:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Captured counter value
1183:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1184:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1185:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1186:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * The value of the counter is captured if one of the trigger signals DX0T or DX1T are activated by
1187:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1188:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_GetCaptureTimerValue(const XMC_USIC_CH_t *const channel)
1189:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1190:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   return channel->CMTR;
1191:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1192:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1193:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1194:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1195:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1196:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  mode divider mode ::XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_t \n
1197:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  step divider \n
1198:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *             \b XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL resulting divider = 1023 - step \n
1199:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *             \b XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL resulting divider = 1023 / step \n
1200:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1201:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1202:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1203:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1204:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * The fractional divider generates its output frequency fFD by either dividing the input frequency
1205:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1206:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1207:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetFractionalDivider(XMC_USIC_CH_t *const channel, const XMC_USIC_
1208:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1209:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FDR = mode | step;
1210:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1211:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1212:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1213:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1214:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1215:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  frame_length Number of bits in a frame. \n
1216:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: minimum= 1, maximum= 0x3f. The maximum value for fixed frame size is 0x3f. \n
1217:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 						e.g: For a frame length of 16, \a frame_length should be provided as 16.
1218:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1219:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1220:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1221:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Define the data frame length.\n\n
1222:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Set the number of bits to be serially transmitted in a frame.
1223:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * The frame length should be multiples of word length. If the value is set to 0x40, the frame leng
1224:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * has to be controlled explicitly.
1225:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1226:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1227:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetWordLength(), XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1228:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1229:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetFrameLength(XMC_USIC_CH_t *const channel, const uint8_t frame_l
1230:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1231:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_FLE_Msk)) |
1232:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                   (((uint32_t)frame_length - 0x1U)  << USIC_CH_SCTR_FLE_Pos);
1233:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1234:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1235:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1236:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1237:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1238:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Bit mask of the channel events to be enabled. Use @ref XMC_USIC_CH_EVENT_t for the 
1239:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC_CH_EVENT_RECEIVE_START, @ref XMC_USIC_CH_EVENT_DATA_LOST etc. Multip
1240:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				can be combined using \a OR operation.
1241:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1242:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1243:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1244:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Enable the channel interrupt events.\n\n
1245:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Common channel events related to serial communication can be configured using this API.
1246:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be combined using the bitwise OR operation and configured in one function ca
1247:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EVENT_t enumerates multiple protocol event bitmasks. These enumerations can be used 
1248:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1249:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1250:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableEvent(), XMC_USIC_CH_SetInterruptNodePointer() \n\n\n
1251:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1252:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t event)
1253:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1254:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->CCR |= event;
1255:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1256:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1257:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1258:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1259:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				  \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device sup
1260:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Bit mask of the channel events to be disabled. Use @ref XMC_USIC_CH_EVENT_t for the
1261:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC_CH_EVENT_RECEIVE_START, @ref XMC_USIC_CH_EVENT_DATA_LOST etc. Multip
1262:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				can be combined using \a OR operation.
1263:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1264:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1265:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1266:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Disable the channel interrupt events. \n\n
1267:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be combined using the bitwise OR operation and configured in one function ca
1268:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EVENT_t enumerates multiple protocol event bitmasks. These enumerations can be used 
1269:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1270:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1271:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableEvent(), XMC_USIC_CH_SetInterruptNodePointer() \n\n\n
1272:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** */
1273:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t event)
1274:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1275:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->CCR &= (uint32_t)~event;
1276:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1277:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1278:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1279:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1280:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				  \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device sup
1281:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  interrupt_node Interrupt node pointer to be configured. \n
1282:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: @ref XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT,
1283:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  			@ref XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER etc.
1284:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param service_request Service request number.\n
1285:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: 0 to 5.
1286:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1287:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1288:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1289:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the interrupt node for USIC channel events. \n\n
1290:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * For an event to generate interrupt, node pointer should be configured with service request(SR0, 
1291:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * The NVIC node gets linked to the interrupt event by doing so.<br>
1292:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: NVIC node should be separately enabled to generate the interrupt.
1293:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1294:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1295:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableEvent() \n\n\n
1296:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1297:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
1298:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INTERRUPT_NODE_POINTER_t interrupt_node,
1299:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t service_request);
1300:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1301:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1302:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1303:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1304:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Stataus @ref XMC_USIC_CH_TBUF_STATUS_IDLE if transmit buffer is free,
1305:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *                 @ref XMC_USIC_CH_TBUF_STATUS_BUSY if transmit buffer is busy.
1306:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1307:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1308:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets transmit buffer status. \n\n
1309:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Status indicates whether the transmit buffer is free, or busy transmitting data.
1310:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * The status depends on the value of TDV flag in TCSR register.
1311:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * This status can be used while transmitting data. Transmit data when the transmit buffer
1312:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * status is @ref XMC_USIC_CH_TBUF_STATUS_IDLE.
1313:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1314:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1315:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetDataOutputMode() \n\n\n
1316:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1317:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE XMC_USIC_CH_TBUF_STATUS_t XMC_USIC_CH_GetTransmitBufferStatus(XMC_USIC_CH_t *const 
1318:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
  27              	 .loc 1 1318 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
1319:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   return (XMC_USIC_CH_TBUF_STATUS_t)(channel->TCSR & USIC_CH_TCSR_TDV_Msk);
  43              	 .loc 1 1319 0
  44 0008 7B68     	 ldr r3,[r7,#4]
  45 000a 9B6B     	 ldr r3,[r3,#56]
  46 000c DBB2     	 uxtb r3,r3
  47 000e 23F07F03 	 bic r3,r3,#127
  48 0012 DBB2     	 uxtb r3,r3
1320:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
  49              	 .loc 1 1320 0
  50 0014 1846     	 mov r0,r3
  51 0016 0C37     	 adds r7,r7,#12
  52              	.LCFI3:
  53              	 .cfi_def_cfa_offset 4
  54 0018 BD46     	 mov sp,r7
  55              	.LCFI4:
  56              	 .cfi_def_cfa_register 13
  57              	 
  58 001a 5DF8047B 	 ldr r7,[sp],#4
  59              	.LCFI5:
  60              	 .cfi_restore 7
  61              	 .cfi_def_cfa_offset 0
  62 001e 7047     	 bx lr
  63              	 .cfi_endproc
  64              	.LFE199:
  66              	 .section .text.XMC_USIC_CH_SetMode,"ax",%progbits
  67              	 .align 2
  68              	 .thumb
  69              	 .thumb_func
  71              	XMC_USIC_CH_SetMode:
  72              	.LFB240:
1321:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1322:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1323:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @brief API to get receive buffer status
1324:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1325:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1326:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status of data validity check for RBUF0 and RBUF1. \n
1327:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 		   Returned value should be masked with RDV0 and RDV1 bits to know the status. \n
1328:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 		   \b Range: @ref XMC_USIC_CH_RBUF_STATUS_DATA_VALID0, @ref XMC_USIC_CH_RBUF_STATUS_DATA_VALID
1329:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1330:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1331:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if RBUF0 and RBUF1 have valid unread data. \n\n
1332:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * It checks the bits RDV0 and RDV1 of the RBUFSR register.
1333:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Returns the value of RBUFSR masked with bitmasks of RDV0 and RDV1.
1334:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * It can be used to decide whether 2bytes has to be read from RBUF or 1 byte.
1335:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * If both bitmasks XMC_USIC_CH_RBUF_STATUS_DATA_VALID0 and XMC_USIC_CH_RBUF_STATUS_DATA_VALID1
1336:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * are set, then 2 bytes can be read from RBUF. If only either of them is set, then only one byte
1337:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * can be read from RBUF.
1338:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1339:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus() \n\n\n
1340:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1341:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_GetReceiveBufferStatus(XMC_USIC_CH_t *const channel)
1342:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1343:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   return ((uint32_t) (channel->RBUFSR & (USIC_CH_RBUFSR_RDV0_Msk | USIC_CH_RBUFSR_RDV1_Msk)));
1344:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1345:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1346:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1347:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1348:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1349:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1350:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  start_transmision_mode Transmission mode to be enabled. \n
1351:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 								\b Range: @ref XMC_USIC_CH_START_TRANSMISION_DISABLED,
1352:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 								@ref XMC_USIC_CH_START_TRANSMISION_ON_TDV, @ref XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2
1353:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 								@ref XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_1
1354:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1355:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1356:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1357:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1358:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures data transmission. \n\n
1359:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * The configuration affects the data shifted on the DOUT0 pin.
1360:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1361:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1362:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus(), XMC_USIC_CH_SetDataOutputMode() \n\n\n
1363:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1364:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetStartTransmisionMode(XMC_USIC_CH_t *const channel,
1365:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_START_TRANSMISION_MODE_t start_transmision_mode)
1366:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1367:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR = (uint32_t)(channel->TCSR & (~USIC_CH_TCSR_TDEN_Msk)) | (uint32_t)start_transmisio
1368:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1369:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1370:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1371:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1372:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1373:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1374:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  data_output_mode  Data output mode. \n
1375:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_DATA_OUTPUT_MODE_NORMAL, @ref XMC_USIC_CH_DATA_OUTPUT_MODE_INVERTE
1376:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1377:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1378:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1379:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the mode for data output. \n\n
1380:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel can be configured to shift inverted data or direct data based on the input to the A
1381:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1382:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1383:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode() \n\n\n
1384:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1385:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetDataOutputMode(XMC_USIC_CH_t *const channel,
1386:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_DATA_OUTPUT_MODE_t data_output_mode)
1387:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1388:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_DOCFG_Msk)) | (uint32_t)data_output_mod
1389:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1390:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1391:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1392:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1393:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1394:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1395:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1396:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1397:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables automatic update of frame length. \n\n
1398:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * When the automatic update of frame length is enabled, frame length is configured based on the
1399:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * index of the TBUF[]/IN[] register array. When the data is written to TBUF[x], frame length is co
1400:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * with the mask value of \a x at the last 5 bit positions. Same logic is applicable if data is wri
1401:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * IN[x] register.
1402:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1403:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1404:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableFrameLengthControl(), XMC_USIC_CH_TXFIFO_PutDataFLEMode() \n\n\n
1405:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1406:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableFrameLengthControl(XMC_USIC_CH_t *const channel)
1407:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1408:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR = (uint32_t)(channel->TCSR & (~(USIC_CH_TCSR_WLEMD_Msk |
1409:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                              USIC_CH_TCSR_SELMD_Msk |
1410:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                              USIC_CH_TCSR_WAMD_Msk |
1411:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                              USIC_CH_TCSR_HPCMD_Msk))) |
1412:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                   (uint32_t)USIC_CH_TCSR_FLEMD_Msk;
1413:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1414:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1415:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1416:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1417:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1418:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1419:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1420:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1421:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables automatic update of word length. \n\n
1422:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * When the automatic update of word length is enabled, word length is configured based on the
1423:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * index of the TBUF[]/IN[] register array. When the data is written to TBUF[x], word length is con
1424:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * with the mask value of \a x at the last 5 bit positions. Same logic is applicable if data is wri
1425:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * IN[x] register.
1426:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1427:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1428:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableFrameLengthControl(), XMC_USIC_CH_TXFIFO_PutDataFLEMode() \n\n\n
1429:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1430:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableWordLengthControl(XMC_USIC_CH_t *const channel)
1431:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1432:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR = (uint32_t)(channel->TCSR & (~(USIC_CH_TCSR_WLEMD_Msk |
1433:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                              USIC_CH_TCSR_SELMD_Msk |
1434:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                              USIC_CH_TCSR_WAMD_Msk |
1435:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                              USIC_CH_TCSR_HPCMD_Msk))) |
1436:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                   (uint32_t)USIC_CH_TCSR_WLEMD_Msk;
1437:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1438:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1439:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1440:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1441:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1442:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1443:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1444:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1445:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables automatic update of frame length. \n\n
1446:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * When automatic update of frame length is disabled, frame length has to configured explicitly.
1447:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Frame length remains fixed until it is changed again.
1448:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1449:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1450:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl(), XMC_USIC_CH_SetFrameLength() \n\n\n
1451:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1452:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableFrameLengthControl(XMC_USIC_CH_t *const channel)
1453:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1454:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR &= (uint32_t)~USIC_CH_TCSR_FLEMD_Msk;
1455:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1456:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1457:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1458:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1459:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1460:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1461:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1462:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1463:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables automatic update of word length. \n\n
1464:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * When automatic update of word length is disabled, word length has to configured explicitly.
1465:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Word length remains fixed until it is changed again.
1466:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1467:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1468:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl(), XMC_USIC_CH_SetWordLength() \n\n\n
1469:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1470:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableWordLengthControl(XMC_USIC_CH_t *const channel)
1471:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1472:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR &= (uint32_t)~USIC_CH_TCSR_WLEMD_Msk;
1473:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1474:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1475:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1476:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1477:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1478:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1479:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1480:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1481:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Bit TCSR.TE is set if DX2T becomes active while TDV = 1. \n\n
1482:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the transfer trigger unit to set bit TCSR.TE if the trigger signal DX2T becomes active
1483:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * for event driven transfer starts.
1484:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1485:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1486:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableTBUFDataValidTrigger()\n\n\n
1487:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1488:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableTBUFDataValidTrigger(XMC_USIC_CH_t *const channel)
1489:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1490:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR |= (uint32_t)USIC_CH_TCSR_TDVTR_Msk;
1491:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1492:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1493:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1494:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1495:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1496:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1497:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1498:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1499:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the trigger of TDV depending on DX2T signal. \n\n
1500:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Bit TCSR.TE is permanently set.
1501:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1502:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1503:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableTBUFDataValidTrigger() \n\n\n
1504:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1505:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableTBUFDataValidTrigger(XMC_USIC_CH_t *const channel)
1506:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1507:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR &= (uint32_t)~USIC_CH_TCSR_TDVTR_Msk;
1508:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1509:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1510:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1511:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1512:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1513:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  service_request_line service request number of the event to be triggered. \n
1514:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: 0 to 5.
1515:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1516:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1517:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1518:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Trigger a USIC interrupt service request.\n\n
1519:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * When the USIC service request is triggered, the NVIC interrupt associated with it will be
1520:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * generated if enabled.
1521:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1522:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1523:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInterruptNodePointer() \n\n\n
1524:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1525:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TriggerServiceRequest(XMC_USIC_CH_t *const channel, const uint32_t
1526:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1527:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FMR = (uint32_t)(USIC_CH_FMR_SIO0_Msk << service_request_line);
1528:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1529:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1530:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1531:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1532:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1533:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  transmit_buffer_status clearing or setting the TDV flag. \n
1534:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1535:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1536:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1537:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1538:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Modify TCSR.TDV and TCSR.TE to control the start of a data word transmission by software.
1539:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1540:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1541:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus() \n\n\n
1542:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1543:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetTransmitBufferStatus(XMC_USIC_CH_t *const channel,
1544:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_TBUF_STATUS_SET_t transmit_buffer_status)
1545:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1546:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FMR = (uint32_t)transmit_buffer_status;
1547:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1548:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1549:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1550:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1551:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1552:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1553:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1554:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1555:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1556:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Modify TCSR.TDV and TCSR.TE to control the start of a data word transmission by software.
1557:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1558:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1559:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus() \n\n\n
1560:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1561:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_InvalidateReadData(XMC_USIC_CH_t *const channel)
1562:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1563:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FMR = USIC_CH_FMR_CRDV0_Msk | USIC_CH_FMR_CRDV1_Msk;
1564:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1565:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1566:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1567:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1568:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1569:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1570:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  passive_level Value of passive level for the channel. \n
1571:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_PASSIVE_DATA_LEVEL0, @ref XMC_USIC_CH_PASSIVE_DATA_LEVEL1
1572:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1573:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1574:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1575:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Set the passive data level of the output signal. \n\n
1576:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * When the USIC channel transmit stage is idle, the output signal level stays at the
1577:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * configured passive level.
1578:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1579:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1580:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus(), XMC_USIC_CH_SetStartTransmisionMode() \n\n\n
1581:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1582:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetPassiveDataLevel(XMC_USIC_CH_t *const channel,
1583:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_PASSIVE_DATA_LEVEL_t passive_level)
1584:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1585:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR &= (~USIC_CH_SCTR_PDL_Msk);
1586:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR |= (uint32_t)passive_level;
1587:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1588:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1589:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /* TX FIFO APIs */
1590:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1591:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1592:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1593:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data_pointer Start position inside the FIFO buffer. \n
1594:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to 63.
1595:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the transmit FIFO. \n
1596:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1597:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold of transmit FIFO filling level to be considered for generating events. \n
1598:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1599:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1600:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1601:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1602:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Initializes the transmit FIFO. \n\n
1603:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Transmit FIFO is a subset of a common FIFO sized 64 words. This FIFO is shared between 2 channel
1604:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Each channel can share the FIFO for transmission and reception. \a data_pointer represents the s
1605:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * from where transmit data can be put, for the selected USIC channel. \a size represents the size 
1606:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 2. Since the FIFO is shared between 2 USIC channels, FIFO size should be carefully selected. A F
1607:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * event is generated when the FIFO filling level falls below the \a limit value.
1608:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1609:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1610:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EnableEvent(), XMC_USIC_CH_TXFIFO_SetInterruptNodePointer() \n\n\n
1611:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1612:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_TXFIFO_Configure(XMC_USIC_CH_t *const channel,
1613:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t data_pointer,
1614:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
1615:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t limit);
1616:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1617:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1618:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1619:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1620:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the transmit FIFO. \n
1621:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1622:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold for transmit FIFO filling level to be considered for generating events. \
1623:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1624:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1625:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1626:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \deprecated { Use XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit() }
1627:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1628:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1629:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the size and trigger limit for the transmit FIFO. \n\n
1630:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * The API is not to be called for initializing the transmit FIFO. The API shall be used for the
1631:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * runtime change of transmit FIFO trigger limit. FIFO start position will not be affected on execu
1632:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1633:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1634:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit() \n\n\n
1635:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1636:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
1637:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_FIFO_SIZE_t size,
1638:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t limit);
1639:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1640:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1641:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1642:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1643:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1644:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold for transmit FIFO filling level to be considered for generating events. \
1645:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a fifo size -1.
1646:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1647:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1648:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1649:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the trigger limit for the TX FIFO. \n\n
1650:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1651:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1652:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit() \n\n\n
1653:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1654:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_SetTriggerLimit(XMC_USIC_CH_t *const channel,
1655:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t limit)
1656:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1657:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBCTR = (channel->TBCTR & (uint32_t)~USIC_CH_TBCTR_LIMIT_Msk) | ((limit << USIC_CH_TBCTR
1658:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1659:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1660:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1661:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1662:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1663:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1664:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1665:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be enabled. Multiple events can be bitwise OR combined. @ref XMC_USIC_CH_
1666:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1667:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1668:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1669:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the interrupt events related to transmit FIFO. \n\n
1670:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration @ref XMC_USIC_CH_TXFIFO_EVENT_CONF_t.
1671:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be enabled by providing multiple events in a single call. For providing
1672:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation. Events are configured in the TBC
1673:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1674:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: API only enables the events. For interrupt generation, interrupt node must be configured a
1675:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * must be enabled.
1676:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1677:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1678:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_SetInterruptNodePointer() \n\n\n
1679:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1680:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t ev
1681:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1682:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBCTR |= event;
1683:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1684:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1685:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1686:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1687:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1688:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1689:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be disabled. @ref XMC_USIC_CH_TXFIFO_EVENT_CONF_t \n
1690:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1691:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1692:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1693:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the interrupt events related to transmit FIFO. \n\n
1694:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * By disabling the interrupt events, generation of interrupt is stopped. User can poll the event
1695:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * flags from the status register using the API XMC_USIC_CH_TXFIFO_GetEvent().
1696:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration @ref XMC_USIC_CH_TXFIFO_EVENT_CONF_t. Fo
1697:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation.
1698:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1699:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1700:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_GetEvent(), XMC_USIC_CH_TXFIFO_EnableEvent() \n\n\n
1701:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1702:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t e
1703:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1704:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBCTR &= (uint32_t)~event;
1705:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1706:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1707:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1708:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1709:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				      \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1710:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param interrupt_node Node pointer representing the transmit FIFO events. \n
1711:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: @ref XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_STANDARD,
1712:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  			@ref XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE
1713:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param service_request The service request to be used for interrupt generation. \n
1714:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: 0 to 5.
1715:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1716:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1717:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1718:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets an interrupt node for the transmit FIFO events.\n\n
1719:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * A node pointer represents one or more interrupt events. Service request represents the interrupt
1720:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * among the 6 interrupt nodes available for USIC module.
1721:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * API configures the service request to be used for interrupt generation for the events selected.
1722:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * A transmit FIFO event can generate an interrupt only if the interrupt node is configured for the
1723:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * the interrupt generation is enabled for the event. For example, transmit FIFO standard transmit 
1724:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * interrupt is generated if the interrupt node for the same is set and interrupt is enabled.<br>
1725:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1726:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: NVIC node should be explicitly enabled for the interrupt generation.
1727:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1728:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1729:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EnableEvent() \n\n\n
1730:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1731:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_TXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
1732:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t interrupt_node,
1733:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t service_request);
1734:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1735:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1736:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1737:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1738:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted. \n
1739:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: 16bit unsigned data. minimum= 0, maximum= 65535
1740:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1741:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1742:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1743:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data into the transmit FIFO. \n\n
1744:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * The data provided is placed in the transmit FIFO.
1745:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * The transmit FIFO should be configured before calling this API.
1746:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1747:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1748:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EnableEvent() \n\n\n
1749:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1750:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutData(XMC_USIC_CH_t *const channel, const uint16_t data)
1751:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1752:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[0] = data;
1753:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1754:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1755:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1756:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1757:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1758:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted. \n
1759:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: 16bit unsigned data. minimum= 0, maximum= 65535
1760:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param loc Input location. \n
1761:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1762:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1763:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1764:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Transmit data can be loaded to TBUF by software by writing to the transmit buffer input
1765:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * locations TBUFx (x = 00-31), consisting of 32 consecutive addresses. The data written
1766:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * to one of these input locations is stored in the transmit buffer TBUF. Additionally, the
1767:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * address of the written location is evaluated and can be used for additional control
1768:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * purposes. This 5-bit wide information (named Transmit Control Information TCI) can be
1769:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * used for different purposes in different protocols.
1770:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1771:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1772:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableWordLengthControl() \n
1773:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1774:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1775:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutDataEx(XMC_USIC_CH_t *const channel, const uint16_t data
1776:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1777:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[loc] = data;
1778:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1779:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1780:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1781:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1782:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1783:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted.
1784:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param frame_length Frame length to be configured while transmitting the data. \n
1785:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: minimum= 0, maximum= 31. e.g: For a frame length of 16, set \a frame_length as 15.
1786:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1787:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1788:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1789:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data to the transmit FIFO in frame length control mode. \n\n
1790:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * When frame length control is enabled for dynamic update of frame length, this API can be used.
1791:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length represents the frame length to be updated by the peripheral.
1792:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length is used as index for the IN[] register array.
1793:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1794:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1795:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_PutDataEx() \n
1796:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1797:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1798:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutDataFLEMode(XMC_USIC_CH_t *const channel,
1799:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const uint16_t data,
1800:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t frame_length)
1801:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1802:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[frame_length] = data;
1803:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1804:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1805:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1806:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1807:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1808:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted.
1809:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param frame_length Frame length to be configured while transmitting the data. \n
1810:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: minimum= 0, maximum= 31. e.g: For a frame length of 16, set \a frame_length as 15.
1811:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1812:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1813:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1814:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data to the transmit FIFO in hardware port control mode. \n\n
1815:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * When hardware port control is enabled for dynamic update of frame length, this API can be used.
1816:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length represents the frame length to be updated by the peripheral.
1817:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length is used as index for the IN[] register array.
1818:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1819:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1820:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1821:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1822:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutDataHPCMode(XMC_USIC_CH_t *const channel,
1823:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const uint16_t data,
1824:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t frame_length)
1825:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1826:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[frame_length] = data;
1827:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1828:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1829:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1830:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1831:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1832:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1833:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1834:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1835:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the contents of transmit FIFO. \n\n
1836:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Transmit FIFO contents will be cleared and the filling level will be reset to 0.
1837:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1838:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1839:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_GetLevel() \n\n\n
1840:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1841:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_Flush(XMC_USIC_CH_t *const channel)
1842:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1843:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = (uint32_t)USIC_CH_TRBSCR_FLUSHTB_Msk;
1844:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1845:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1846:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1847:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1848:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1849:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if transmit FIFO is full
1850:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if transmit FIFO is not full.
1851:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1852:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1853:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if transmit FIFO is full. \n\n
1854:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * When the transmit FIFO filling level reaches the configured size, FIFO full flag is set.
1855:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * User should not write to the FIFO when the transmit FIFO is full.
1856:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1857:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1858:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_IsEmpty(), XMC_USIC_CH_TXFIFO_Flush() \n\n\n
1859:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1860:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_TXFIFO_IsFull(XMC_USIC_CH_t *const channel)
1861:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1862:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_TFULL_Msk);
1863:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1864:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1865:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1866:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1867:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1868:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if transmit FIFO is empty
1869:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if transmit FIFO has some data.
1870:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1871:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1872:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if transmit FIFO is empty. \n\n
1873:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * When the transmit FIFO is empty, data can be written to FIFO.
1874:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * When the last written word to the transmit FIFO is transmitted out of the FIFO,
1875:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * FIFO empty flag is set.
1876:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1877:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1878:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_Flush(), XMC_USIC_CH_TXFIFO_PutData() \n\n\n
1879:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1880:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_TXFIFO_IsEmpty(XMC_USIC_CH_t *const channel)
1881:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1882:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_TEMPTY_Msk);
1883:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1884:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1885:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1886:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1887:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1888:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Transmit FIFO filling level. \n
1889:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: minimum= 0(FIFO empty), maximum= transmit FIFO size.
1890:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1891:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1892:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the transmit FIFO filling level. \n\n
1893:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * For every word written to the FIFO, filling level is updated. The API gives the value
1894:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * of this filling level.
1895:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1896:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1897:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_Flush(), XMC_USIC_CH_TXFIFO_PutData() \n\n\n
1898:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1899:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_TXFIFO_GetLevel(XMC_USIC_CH_t *const channel)
1900:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1901:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   return ((uint32_t)(channel->TRBSR & USIC_CH_TRBSR_TBFLVL_Msk) >> USIC_CH_TRBSR_TBFLVL_Pos);
1902:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1903:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1904:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1905:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1906:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1907:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status of standard transmit and transmit buffer error events. @ref XMC_USIC_CH_TXFIFO_EV
1908:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1909:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1910:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the transmit FIFO event status. \n\n
1911:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Gives the status of transmit FIFO standard transmit buffer event and transmit buffer error event
1912:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * The status bits are located at their bit positions in the TRBSR register in the returned value.
1913:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * User can make use of the @ref XMC_USIC_CH_TXFIFO_EVENT_t enumeration for checking the status of 
1914:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * The status can be found by using the bitwise AND operation on the returned value with the enumer
1915:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1916:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: Event status flags should be cleared by the user explicitly.
1917:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1918:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1919:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_ClearEvent() \n\n\n
1920:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1921:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_TXFIFO_GetEvent(XMC_USIC_CH_t *const channel)
1922:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1923:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   return (uint32_t)((channel->TRBSR) & (USIC_CH_TRBSR_STBI_Msk |
1924:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                                         USIC_CH_TRBSR_TBERI_Msk));
1925:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1926:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1927:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1928:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1929:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1930:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  event Transmit FIFO events to be cleared. \n
1931:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 			     \b Range: @ref XMC_USIC_CH_TXFIFO_EVENT_STANDARD, @ref XMC_USIC_CH_TXFIFO_EVENT_ERROR.
1932:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1933:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1934:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1935:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the transmit FIFO event flags in the status register. \n\n
1936:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel peripheral does not clear the event flags after they are read.
1937:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * This API clears the events provided in the \a mask value.
1938:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EVENT enumeration can be used as input. Multiple events
1939:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * can be cleared by providing a mask value obtained by bitwise OR operation of
1940:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple event enumerations.
1941:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1942:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1943:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_GetEvent() \n\n\n
1944:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1945:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_ClearEvent(XMC_USIC_CH_t *const channel,
1946:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t event)
1947:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
1948:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = event;
1949:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
1950:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1951:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1952:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1953:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1954:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data_pointer Start position inside the FIFO buffer. \n
1955:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to 63.
1956:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the receive FIFO. \n
1957:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1958:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold of receive FIFO filling level to be considered for generating events. \n
1959:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1960:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1961:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1962:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1963:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the receive FIFO. \n\n
1964:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Receive FIFO is the subset of a common FIFO sized 64 words. This FIFO is shared between 2 channe
1965:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Each channel can share the FIFO for transmission and reception. \a data_pointer represents the s
1966:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * from where received data can be put. \a size represents the size of receive FIFO as a multiple o
1967:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Since the FIFO is shared between 2 USIC channels, FIFO size should be carefully selected. A FIFO
1968:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * event or alternative receive buffer event is generated when the FIFO filling level exceeds the \
1969:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1970:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1971:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_EnableEvent(), XMC_USIC_CH_RXFIFO_SetInterruptNodePointer() \n\n\n
1972:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** */
1973:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_RXFIFO_Configure(XMC_USIC_CH_t *const channel,
1974:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t data_pointer,
1975:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
1976:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t limit);
1977:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
1978:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
1979:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1980:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1981:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the receive FIFO. \n
1982:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1983:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold for receive FIFO filling level to be considered for generating events. \n
1984:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1985:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1986:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1987:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \deprecated { Use XMC_USIC_CH_RXFIFO_SetTriggerLimit() }
1988:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1989:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1990:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the size and trigger limit for the receive FIFO. \n\n
1991:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * The API is not to be called for initializing the receive FIFO. The API shall be used for the
1992:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * runtime change of receive FIFO trigger limit. FIFO start position will not be affected on execut
1993:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
1994:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1995:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit()\ n\n\n
1996:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
1997:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
1998:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_FIFO_SIZE_t size,
1999:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t limit);
2000:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
2001:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
2002:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2003:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2004:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold for transmit FIFO filling level to be considered for generating events. \
2005:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a fifo size -1.
2006:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2007:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2008:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2009:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the trigger limit for the TX FIFO. \n\n
2010:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2011:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2012:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit() \n\n\n
2013:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
2014:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_SetTriggerLimit(XMC_USIC_CH_t *const channel,
2015:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t limit)
2016:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
2017:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->RBCTR = (channel->RBCTR & (uint32_t)~USIC_CH_RBCTR_LIMIT_Msk) | ((limit << USIC_CH_RBCTR
2018:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
2019:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
2020:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
2021:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2022:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2023:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be enabled. Multiple events can be bitwise OR combined. @ref XMC_USIC_CH_
2024:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2025:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2026:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2027:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the interrupt events related to transmit FIFO. \n\n
2028:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration @ref XMC_USIC_CH_RXFIFO_EVENT_CONF_t.
2029:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be enabled by providing multiple events in a single call. For providing
2030:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation.<br>
2031:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2032:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: API only enables the events. For interrupt generation, interrupt node must be configured a
2033:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * must be enabled.
2034:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2035:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2036:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_SetInterruptNodePointer() \n\n\n
2037:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
2038:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t ev
2039:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
2040:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->RBCTR |= event;
2041:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
2042:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
2043:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
2044:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
2045:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2046:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2047:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be disabled. \n
2048:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD, @ref XMC_USIC_CH_RXFIFO_EVENT_CONF_ERR
2049:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 			@ref XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE.
2050:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2051:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2052:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2053:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the selected interrupt events related to receive FIFO. \n\n
2054:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * By disabling the interrupt events, generation of interrupt is stopped. User can poll the event
2055:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * flags from the status register using the API XMC_USIC_CH_RXFIFO_GetEvent().
2056:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration \a XMC_USIC_CH_RXFIFO_EVENT_CONF. For pr
2057:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation.
2058:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2059:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2060:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_GetEvent(), XMC_USIC_CH_RXFIFO_EnableEvent() \n\n\n
2061:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
2062:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t e
2063:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
2064:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->RBCTR &= (uint32_t)~event;
2065:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
2066:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
2067:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
2068:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2069:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2070:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param interrupt_node Node pointer representing the receive FIFO events. \n
2071:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: @ref XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_STANDARD,
2072:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 					@ref XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE
2073:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param service_request The service request to be used for interrupt generation.\n
2074:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: 0 to 5.
2075:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2076:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2077:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2078:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets an interrupt node for the receive FIFO events. \n\n
2079:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * A node pointer represents one or more interrupt events. Service request represents the interrupt
2080:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * among the 6 interrupt nodes available for USIC module.
2081:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * API configures the service request to be used for interrupt generation for the events selected.
2082:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * A receive FIFO event can generate an interrupt only if the interrupt node is configured for the 
2083:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * the interrupt generation is enabled for the event. For example, transmit FIFO standard transmit 
2084:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * interrupt is generated if the interrupt node for the same is set and interrupt is enabled.<br>
2085:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2086:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: NVIC node should be explicitly enabled for the interrupt generation.
2087:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2088:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2089:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_EnableEvent() \n\n\n
2090:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
2091:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_RXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
2092:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t interrupt_node,
2093:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t service_request);
2094:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
2095:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
2096:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2097:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2098:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Value read from the receive FIFO. \n
2099:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: 16bit data. Length of data depends on the word length configuration.
2100:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2101:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2102:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets data from the receive FIFO. \n\n
2103:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Receive FIFO should be read only if data is availble in the FIFO. This can be checked using
2104:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * the API XMC_USIC_CH_RXFIFO_IsEmpty(). Receive FIFO error flag will be set if an attempt is made
2105:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * to read from an empty receive FIFO. To read all the received data, user should keep reading data
2106:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * until receive FIFO is empty.
2107:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2108:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2109:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_ClearEvent() \n\n\n
2110:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
2111:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint16_t XMC_USIC_CH_RXFIFO_GetData(XMC_USIC_CH_t *const channel)
2112:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
2113:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   return (uint16_t)(channel->OUTR);
2114:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
2115:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
2116:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
2117:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2118:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2119:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2120:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2121:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2122:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the contents of receive FIFO. \n\n
2123:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Receive FIFO contents will be cleared and the filling level will be reset to 0.
2124:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2125:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2126:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_GetLevel() \n\n\n
2127:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
2128:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_Flush(XMC_USIC_CH_t *const channel)
2129:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
2130:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = (uint32_t)USIC_CH_TRBSCR_FLUSHRB_Msk;
2131:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
2132:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
2133:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
2134:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2135:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2136:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if receive FIFO is full
2137:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if receive FIFO is not full.
2138:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2139:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2140:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if receive FIFO is full. \n\n
2141:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * When the receive FIFO filling level reaches the configured size, FIFO full flag is set.
2142:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Any data received when the receive FIFO is full, is lost.
2143:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2144:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2145:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_IsEmpty(), XMC_USIC_CH_RXFIFO_Flush() \n\n\n
2146:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
2147:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_RXFIFO_IsFull(XMC_USIC_CH_t *const channel)
2148:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
2149:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_RFULL_Msk);
2150:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
2151:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
2152:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
2153:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2154:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2155:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if receive FIFO is empty,
2156:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if receive FIFO has some data.
2157:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2158:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2159:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if receive FIFO is empty. \n\n
2160:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * When the receive FIFO is empty, received data will be put in receive FIFO.
2161:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * When the last received word in the FIFO is read, FIFO empty flag is set. Any attempt
2162:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * to read from an empty receive FIFO will set the receive FIFO error flag.
2163:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2164:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2165:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_Flush(), XMC_USIC_CH_RXFIFO_PutData() \n\n\n
2166:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
2167:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_RXFIFO_IsEmpty(XMC_USIC_CH_t *const channel)
2168:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
2169:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_REMPTY_Msk);
2170:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
2171:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
2172:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
2173:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2174:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2175:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return uint32_t Receive FIFO filling level. \n
2176:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: minimum= 0(FIFO empty), maximum= receive FIFO size.
2177:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2178:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2179:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the receive FIFO filling level. \n\n
2180:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * For every word received, the filling level is incremented. The API gives the value
2181:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * of this filling level. The filling level is decremented when the data is read out of the
2182:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * receive FIFO.
2183:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2184:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2185:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_Flush(), XMC_USIC_CH_RXFIFO_PutData() \n\n\n
2186:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
2187:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_RXFIFO_GetLevel(XMC_USIC_CH_t *const channel)
2188:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
2189:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   return ((uint32_t)(channel->TRBSR & USIC_CH_TRBSR_RBFLVL_Msk) >> USIC_CH_TRBSR_RBFLVL_Pos);
2190:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
2191:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
2192:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
2193:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2194:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2195:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status of standard receive buffer, alternative receive buffer and receive buffer error e
2196:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_RXFIFO_EVENT_STANDARD, @ref XMC_USIC_CH_RXFIFO_EVENT_ERROR,
2197:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 					  @ref XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE.
2198:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2199:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2200:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the receive FIFO events' status. \n\n
2201:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Gives the status of receive FIFO standard receive buffer event, alternative receive buffer event
2202:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * The status bits are located at their bitpositions in the TRBSR register in the returned value.
2203:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * User can make use of the XMC_USIC_CH_RXFIFO_EVENT enumeration for checking the status of return 
2204:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * The status can be found by using the bitwise AND operation on the returned value with the enumer
2205:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2206:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: Event status flags should be cleared by the user explicitly.
2207:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2208:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2209:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_ClearEvent()\n\n\n
2210:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
2211:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_RXFIFO_GetEvent(XMC_USIC_CH_t *const channel)
2212:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
2213:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   return (uint32_t)((channel->TRBSR) & (USIC_CH_TRBSR_SRBI_Msk |
2214:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                                         USIC_CH_TRBSR_RBERI_Msk |
2215:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                                         USIC_CH_TRBSR_ARBI_Msk));
2216:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
2217:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
2218:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
2219:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2220:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2221:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  event Receive FIFO events to be cleared. \n
2222:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_RXFIFO_EVENT_STANDARD, @ref XMC_USIC_CH_RXFIFO_EVENT_ERROR,
2223:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 					  @ref XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE.
2224:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2225:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2226:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2227:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the receive FIFO event flags in the status register. \n\n
2228:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel peripheral does not clear the event flags after they are read.
2229:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * This API clears the events provided in the \a mask value.
2230:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_EVENT enumeration can be used as input. Multiple events
2231:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * can be cleared by providing a mask value obtained by bitwise OR operation of
2232:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple event enumerations.
2233:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2234:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2235:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_GetEvent() \n\n\n
2236:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
2237:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_ClearEvent(XMC_USIC_CH_t *const channel,
2238:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t event)
2239:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
2240:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = event;
2241:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
2242:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
2243:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
2244:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2245:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2246:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2247:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2248:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2249:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables time measurement using the capture mode timer. \n\n
2250:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Time measurement is enabled by setting the timer enable flag in BRG register.
2251:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2252:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2253:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableTimeMeasurement() \n\n\n
2254:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
2255:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableTimeMeasurement(XMC_USIC_CH_t *const channel)
2256:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
2257:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG |= (uint32_t)USIC_CH_BRG_TMEN_Msk;
2258:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
2259:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
2260:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
2261:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2262:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2263:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2264:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2265:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2266:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables time measurement using the capture mode timer. \n\n
2267:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Time measurement is disabled by clearing the timer enable flag in BRG register.
2268:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2269:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2270:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableTimeMeasurement() \n\n\n
2271:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
2272:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableTimeMeasurement(XMC_USIC_CH_t *const channel)
2273:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
2274:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG &= (uint32_t)~USIC_CH_BRG_TMEN_Msk;
2275:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
2276:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
2277:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
2278:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2279:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2280:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param passive_level Passive level for the master clock output. \n
2281:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: @ref XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_0, @ref XMC_USIC_CH_BRG_MASTER_CL
2282:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2283:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2284:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2285:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the idle mode pin level for the master clock output. \n
2286:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
2287:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetMclkOutputPassiveLevel(XMC_USIC_CH_t *const channel,
2288:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_t passive_level)
2289:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
2290:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG = (uint32_t)(channel->BRG & (~USIC_CH_BRG_MCLKCFG_Msk)) | (uint32_t)passive_level;
2291:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
2292:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
2293:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2294:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2295:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param passive_level Passive level for the clock output. \n
2296:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED,
2297:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 							  @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED,
2298:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 							  @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED,
2299:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *							  @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED,
2300:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param clock_output Shift clock source selection. \n
2301:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: Use @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK,
2302:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 								  @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1
2303:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2304:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2305:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2306:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the idle mode shift clock output level and selects the shift clock source. \n\n
2307:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Shift clock idle mode output level can be set to logic high or low. Shift clock output can be co
2308:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * delay of half shift clock period. Both the configurations are available as enumeration values de
2309:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t.
2310:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * This value should be configured based on the slave device requirement.
2311:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Shift clock source can be selected between internal clock(master) and external input(slave).
2312:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2313:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
2314:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConfigureShiftClockOutput(XMC_USIC_CH_t *const channel,
2315:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t passive_level,
2316:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_t clock_output)
2317:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
2318:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG = (uint32_t)(channel->BRG & (~(USIC_CH_BRG_SCLKCFG_Msk |
2319:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                             USIC_CH_BRG_SCLKOSEL_Msk))) |
2320:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                  (uint32_t)passive_level |
2321:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****                  (uint32_t)clock_output;
2322:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
2323:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** 
2324:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** /**
2325:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2326:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2327:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @param mode USIC channel operation mode. \n
2328:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC_CH_OPERATING_MODE_IDLE, @ref XMC_USIC_CH_OPERATING_MODE_SPI,
2329:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  @ref XMC_USIC_CH_OPERATING_MODE_UART, @ref XMC_USIC_CH_OPERATING_MODE_I2S,
2330:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  @ref XMC_USIC_CH_OPERATING_MODE_I2C.
2331:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2332:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2333:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2334:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the USIC channel operation mode.\n\n
2335:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * A USIC channel can support multiple serial communication protocols like UART, SPI, I2C and I2S.
2336:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * The API sets the input operation mode to the USIC channel.
2337:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  *
2338:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2339:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_Enable(), XMC_USIC_CH_Enable() \n\n\n
2340:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****  */
2341:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetMode(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_OPERATING_
2342:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** {
  73              	 .loc 1 2342 0
  74              	 .cfi_startproc
  75              	 
  76              	 
  77              	 
  78 0000 80B4     	 push {r7}
  79              	.LCFI6:
  80              	 .cfi_def_cfa_offset 4
  81              	 .cfi_offset 7,-4
  82 0002 83B0     	 sub sp,sp,#12
  83              	.LCFI7:
  84              	 .cfi_def_cfa_offset 16
  85 0004 00AF     	 add r7,sp,#0
  86              	.LCFI8:
  87              	 .cfi_def_cfa_register 7
  88 0006 7860     	 str r0,[r7,#4]
  89 0008 0B46     	 mov r3,r1
  90 000a FB70     	 strb r3,[r7,#3]
2343:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h ****   channel->CCR = (uint32_t)(channel->CCR & (~(USIC_CH_CCR_MODE_Msk))) | (uint32_t)mode;
  91              	 .loc 1 2343 0
  92 000c 7B68     	 ldr r3,[r7,#4]
  93 000e 1B6C     	 ldr r3,[r3,#64]
  94 0010 23F00F02 	 bic r2,r3,#15
  95 0014 FB78     	 ldrb r3,[r7,#3]
  96 0016 1A43     	 orrs r2,r2,r3
  97 0018 7B68     	 ldr r3,[r7,#4]
  98 001a 1A64     	 str r2,[r3,#64]
2344:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_usic.h **** }
  99              	 .loc 1 2344 0
 100 001c 0C37     	 adds r7,r7,#12
 101              	.LCFI9:
 102              	 .cfi_def_cfa_offset 4
 103 001e BD46     	 mov sp,r7
 104              	.LCFI10:
 105              	 .cfi_def_cfa_register 13
 106              	 
 107 0020 5DF8047B 	 ldr r7,[sp],#4
 108              	.LCFI11:
 109              	 .cfi_restore 7
 110              	 .cfi_def_cfa_offset 0
 111 0024 7047     	 bx lr
 112              	 .cfi_endproc
 113              	.LFE240:
 115 0026 00BF     	 .section .text.XMC_SPI_CH_ClearStatusFlag,"ax",%progbits
 116              	 .align 2
 117              	 .thumb
 118              	 .thumb_func
 120              	XMC_SPI_CH_ClearStatusFlag:
 121              	.LFB248:
 122              	 .file 2 "D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc/xmc_spi.h"
   1:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** /**
   2:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @file xmc_spi.h
   3:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @date 2020-12-05
   4:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
   5:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @cond
   6:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *****************************************************************************
   7:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
   9:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * All rights reserved.
  11:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
  12:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
  14:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * do so, all subject to the following:
  20:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
  21:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * The copyright notices in the Software and this entire statement, including
  22:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * the above license grant, this restriction and the following disclaimer,
  23:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * all derivative works of the Software, unless such copies or derivative
  25:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * works are solely in the form of machine-executable object code generated by
  26:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * a source language processor.
  27:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
  28:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * DEALINGS IN THE SOFTWARE.
  35:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
  36:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * To improve the quality of the software, users are encouraged to share
  37:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * at XMCSupport@infineon.com.
  39:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *****************************************************************************
  40:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
  41:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * Change History
  42:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * --------------
  43:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
  44:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-02-20:
  45:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Initial
  46:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
  47:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-05-20:
  48:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Documentation improved <br>
  49:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added XMC_SPI_CH_SetSlaveSelectDelay(), XMC_SPI_CH_TriggerServiceRequest() and
  50:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *       XMC_SPI_CH_SelectInterruptNodePointer() <br>
  51:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added XMC_SPI_CH_SetInterwordDelaySCLK() <br>
  52:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
  53:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-06-20:
  54:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  55:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
  56:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-08-24:
  57:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added APIs for enabling/disabling delay compensation XMC_SPI_CH_DisableDelayCompensation()
  58:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *       XMC_SPI_CH_EnableDelayCompensation() <br>
  59:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
  60:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-08-27:
  61:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added APIs for external input for BRG configuration:XMC_SPI_CH_ConfigExternalInputSignalTo
  62:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
  63:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-09-01:
  64:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Modified XMC_SPI_CH_SetInputSource() for avoiding complete DXCR register overwriting. <br>
  65:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Modified XMC_SPI_CH_EVENT_t enum for supporting XMC_SPI_CH_EnableEvent() and XMC_SPI_CH_Di
  66:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *       for supporting multiple events configuration <br>
  67:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
  68:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-09-08:
  69:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Adding API for configuring the receiving clock phase in the slave:XMC_SPI_CH_DataLatchedIn
  70:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
  71:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * 2016-04-10:
  72:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added an API for configuring the transmit mode:XMC_SPI_CH_SetTransmitMode() <br>
  73:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
  74:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * 2016-05-20:
  75:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added XMC_SPI_CH_EnableDataTransmission() and XMC_SPI_CH_DisableDataTransmission()
  76:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
  77:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * 2019-03-30:
  78:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Fix XMC_SPI_CH_MODE_STANDARD_HALFDUPLEX macro value
  79:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
  80:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * 2019-05-07:
  81:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added normal_divider_mode to XMC_SPI_CH_CONFIG_t configuration structure.
  82:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *       It selects normal divider mode for baudrate generator instead of default fractional divide
  83:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added XMC_SPI_CH_SetBaudrateEx()
  84:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
  85:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * 2019-09-04:
  86:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *    - Added XMC_SPI_CLOCK_MODE_t enum
  87:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
  88:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * 2020-12-05:
  89:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *    - Added XMC_SPI_CH_InitEx() that allows user select if automatic baudrate configuration shoul
  90:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * 
  91:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @endcond
  92:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
  93:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  */
  94:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** 
  95:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** #ifndef XMC_SPI_H
  96:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI_H
  97:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** 
  98:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** /**************************************************************************************************
  99:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * HEADER FILES
 100:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  **************************************************************************************************
 101:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** #include "xmc_usic.h"
 102:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** 
 103:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** /**
 104:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @addtogroup XMClib XMC Peripheral Library
 105:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @{
 106:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  */
 107:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** 
 108:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** /**
 109:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @addtogroup SPI
 110:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @brief Synchronous serial channel driver for SPI-like communication.
 111:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
 112:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * The SPI driver uses Universal Serial Interface Channel(USIC) module.
 113:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * The USIC module supports multiple data lines for SPI communication. \n
 114:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Full duplex communication with 2 separate lines for transmission and reception.
 115:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Half duplex communication with 1 common line shared for transmission and reception.
 116:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Dual mode communication with 2 common lines shared for transmission and reception.
 117:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Quad mode communication with 4 common lines shared for transmission and reception.<br><br>
 118:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
 119:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * SPI driver provides structures, enumerations and APIs for configuring the USIC channel for SPI c
 120:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * and also for data transaction.<br>
 121:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * SPI driver features:
 122:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Configuration structure XMC_SPI_CH_CONFIG_t and SPI initialization function XMC_SPI_CH_Init()
 123:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Allows configuration of protocol word and frame length using XMC_SPI_CH_SetWordLength(), XMC_
 124:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Allows manipulation of data frame at runtime using XMC_SPI_CH_EnableSOF(), XMC_SPI_CH_EnableE
 125:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  XMC_SPI_CH_EnableSlaveSelect(), XMC_SPI_CH_DisableSlaveSelect()
 126:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Provides APIs for transmitting data and receiving data using XMC_SPI_CH_Transmit(), XMC_SPI_C
 127:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Allows configuration of shift clock using XMC_SPI_CH_ConfigureShiftClockOutput()
 128:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Provides enumeration of SPI protocol events using @ref XMC_SPI_CH_STATUS_FLAG_t
 129:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @{
 130:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  */
 131:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** 
 132:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** /**************************************************************************************************
 133:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * MACROS
 134:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  **************************************************************************************************
 135:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** 
 136:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** #if defined(USIC0)
 137:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI0_CH0 XMC_USIC0_CH0 /**< SPI0 channel 0 base address */
 138:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI0_CH1 XMC_USIC0_CH1 /**< SPI0 channel 1 base address */
 139:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** #endif
 140:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** 
 141:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** #if defined(USIC1)
 142:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI1_CH0 XMC_USIC1_CH0 /**< SPI1 channel 0 base address */
 143:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI1_CH1 XMC_USIC1_CH1 /**< SPI1 channel 1 base address */
 144:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** #endif
 145:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** 
 146:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** #if defined(USIC2)
 147:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI2_CH0 XMC_USIC2_CH0 /**< SPI2 channel 0 base address */
 148:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI2_CH1 XMC_USIC2_CH1 /**< SPI2 channel 1 base address */
 149:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** #endif
 150:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** 
 151:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** /**************************************************************************************************
 152:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * ENUMS
 153:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  **************************************************************************************************
 154:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** 
 155:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** /**
 156:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines return status of SPI driver APIs
 157:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  */
 158:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_STATUS
 159:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** {
 160:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_OK,    /**< Status of the Module: OK */
 161:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_ERROR, /**< Status of the Module: ERROR */
 162:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_BUSY   /**< The Module is busy */
 163:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_STATUS_t;
 164:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** /**
 165:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines the SPI bus mode
 166:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  */
 167:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_BUS_MODE
 168:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** {
 169:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BUS_MODE_MASTER, /**< SPI Master */
 170:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BUS_MODE_SLAVE   /**< SPI Slave */
 171:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_BUS_MODE_t;
 172:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** 
 173:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** /**
 174:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines the Polarity of the slave select signals SELO[7:0] in relation to the master slave selec
 175:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  */
 176:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_SLAVE_SEL_MSLS_INV
 177:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** {
 178:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SEL_SAME_AS_MSLS = 0x0UL, /**< The SELO outputs have the same polarity as the MS
 179:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****                                                   (active high) */
 180:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SEL_INV_TO_MSLS = 0x1UL << USIC_CH_PCR_SSCMode_SELINV_Pos /**< The SELO outputs 
 181:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                   polarity to the M
 182:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                   (active low)*/
 183:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_SLAVE_SEL_MSLS_INV_t;
 184:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** 
 185:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** /**
 186:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines the Polarity of the data inputs.
 187:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  */
 188:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_DATA_POLARITY
 189:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** {
 190:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_DATA_POLARITY_DIRECT = 0x0UL, /**< The polarity of the data line is not inverted */
 191:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_DATA_POLARITY_INVERT = 0x1UL << USIC_CH_DX2CR_DPOL_Pos /**< The polarity of the data l
 192:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_DATA_POLARITY_t;
 193:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** 
 194:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** /**
 195:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines Slave Select lines
 196:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  */
 197:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_SLAVE_SELECT
 198:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** {
 199:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_0 = 1UL << USIC_CH_PCR_SSCMode_SELO_Pos,  /**< Slave Select line 0 */
 200:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_1 = 2UL << USIC_CH_PCR_SSCMode_SELO_Pos,  /**< Slave Select line 1 */
 201:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_2 = 4UL << USIC_CH_PCR_SSCMode_SELO_Pos,  /**< Slave Select line 2 */
 202:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_3 = 8UL << USIC_CH_PCR_SSCMode_SELO_Pos,  /**< Slave Select line 3 */
 203:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_4 = 16UL << USIC_CH_PCR_SSCMode_SELO_Pos, /**< Slave Select line 4 */
 204:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_5 = 32UL << USIC_CH_PCR_SSCMode_SELO_Pos, /**< Slave Select line 5 */
 205:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_6 = 64UL << USIC_CH_PCR_SSCMode_SELO_Pos, /**< Slave Select line 6 */
 206:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_7 = 128UL << USIC_CH_PCR_SSCMode_SELO_Pos /**< Slave Select line 7 */
 207:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_SLAVE_SELECT_t;
 208:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** 
 209:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** /**
 210:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines SPI specific events
 211:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  */
 212:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_EVENT
 213:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** {
 214:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk, /**< Receive start event */
 215:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk, /**< Data lost event */
 216:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk, /**< Transmit shift event */
 217:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk, /**< Transmit buffer event */
 218:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,  /**< Receive event */
 219:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,  /**< Alternate receive event */
 220:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk, /**< Baudrate generator event */
 221:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** 
 222:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_PARITY_ERROR = USIC_CH_PCR_SSCMode_PARIEN_Msk >> 13U,       /**< Parity error ev
 223:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_MSLS_CHANGE =  USIC_CH_PCR_SSCMode_MSLSIEN_Msk >> 13U,      /**< Master slave se
 224:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_DX2TIEN_ACTIVATED = USIC_CH_PCR_SSCMode_DX2TIEN_Msk >> 13U  /**< Slave select in
 225:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_EVENT_t;
 226:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** 
 227:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** /**
 228:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines SPI event status
 229:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  */
 230:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_STATUS_FLAG
 231:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** {
 232:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_MSLS = USIC_CH_PSR_SSCMode_MSLS_Msk,                          /**< Status 
 233:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             select(
 234:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_DX2S = USIC_CH_PSR_SSCMode_DX2S_Msk,                          /**< Status 
 235:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             input(D
 236:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_MSLS_EVENT_DETECTED = USIC_CH_PSR_SSCMode_MSLSEV_Msk,         /**< Status 
 237:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             output 
 238:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_DX2T_EVENT_DETECTED = USIC_CH_PSR_SSCMode_DX2TEV_Msk,         /**< Status 
 239:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             input s
 240:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_PARITY_ERROR_EVENT_DETECTED = USIC_CH_PSR_SSCMode_PARERR_Msk, /**< Indicat
 241:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             parity 
 242:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_RECEIVER_START_INDICATION = USIC_CH_PSR_SSCMode_RSIF_Msk,     /**< Status 
 243:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             event *
 244:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_DATA_LOST_INDICATION = USIC_CH_PSR_SSCMode_DLIF_Msk,          /**< Status 
 245:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_TRANSMIT_SHIFT_INDICATION = USIC_CH_PSR_SSCMode_TSIF_Msk,      /**< Status
 246:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             event *
 247:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION = USIC_CH_PSR_SSCMode_TBIF_Msk,    /**< Status 
 248:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             event *
 249:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_RECEIVE_INDICATION = USIC_CH_PSR_SSCMode_RIF_Msk,             /**< Status 
 250:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_ALTERNATIVE_RECEIVE_INDICATION = USIC_CH_PSR_SSCMode_AIF_Msk, /**< Status 
 251:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             receive
 252:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_BAUD_RATE_GENERATOR_INDICATION = USIC_CH_PSR_SSCMode_BRGIF_Msk/**< Status 
 253:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             generat
 254:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_STATUS_FLAG_t;
 255:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** 
 256:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** /**
 257:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines input frequency sources for slave select signal delay configuration.
 258:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  */
 259:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_INPUT_FREQ_SLAVE_SELECT_DELAY
 260:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** {
 261:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_FREQ_SLAVE_SELECT_DELAY_FPDIV = 0x0UL, /**< Output of PDIV divider: FPDIV */
 262:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_FREQ_SLAVE_SELECT_DELAY_FPPP  = 0x1UL << USIC_CH_PCR_SSCMode_CTQSEL1_Pos, /**< P
 263:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_FREQ_SLAVE_SELECT_DELAY_FSCLK = 0x2UL << USIC_CH_PCR_SSCMode_CTQSEL1_Pos, /**< S
 264:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_FREQ_SLAVE_SELECT_DELAY_FMCLK = 0x3UL << USIC_CH_PCR_SSCMode_CTQSEL1_Pos  /**< M
 265:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_INPUT_FREQ_SLAVE_SELECT_DELAY_t;
 266:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** 
 267:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** /**
 268:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * Define data and clock input stages
 269:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  */
 270:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_INPUT
 271:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** {
 272:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_DIN0 = 0UL,         /**< Data input stage 0 */
 273:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_SLAVE_SCLKIN = 1UL, /**< Clock input stage */
 274:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_SLAVE_SELIN = 2UL,  /**< Slave select input stage */
 275:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_DIN1 = 3UL,         /**< Data input stage 1 */
 276:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_DIN2 = 4UL,         /**< Data input stage 2 */
 277:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_DIN3 = 5UL          /**< Data input stage 3 */
 278:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_INPUT_t;
 279:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** 
 280:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** /**
 281:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * Define SPI data transfer mode
 282:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  */
 283:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_MODE
 284:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** {
 285:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_MODE_STANDARD = 0UL,            /**< SPI standard full duplex mode */
 286:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_MODE_STANDARD_HALFDUPLEX = 5UL, /**< SPI standard half duplex mode */
 287:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_MODE_DUAL = 6UL,                /**< SPI half duplex mode with dual data lines */
 288:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_MODE_QUAD = 7UL                 /**< SPI half duplex mode with quad data lines */
 289:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_MODE_t;
 290:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** 
 291:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** 
 292:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** /**
 293:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * SPI Baudrate Generator shift clock passive level
 294:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  */
 295:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL
 296:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** {
 297:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   /**< Passive clock level 0, delay disabled */
 298:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED = XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_L
 299:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   /**< Passive clock level 1, delay disabled */
 300:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED = XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_L
 301:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   /**< Passive clock level 0, delay enabled */
 302:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED  = XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_L
 303:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   /**< Passive clock level 1, delay enabled */
 304:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED  = XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_L
 305:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t;
 306:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** 
 307:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** /**
 308:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * SPI clock modes
 309:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  */
 310:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** 
 311:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** /* CPOL=0 is a clock which idles at 0, and each cycle consists of a pulse of 1. That is, the leadin
 312:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** /* CPOL=1 is a clock which idles at 1, and each cycle consists of a pulse of 0. That is, the leadin
 313:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** /* CPHA=0, the "out" side changes the data on the trailing edge of the preceding clock cycle, while
 314:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****    The out side holds the data valid until the trailing edge of the current clock cycle. For the fi
 315:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** /* For CPHA=1, the "out" side changes the data on the leading edge of the current clock cycle, whil
 316:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   The out side holds the data valid until the leading edge of the following clock cycle. For the la
 317:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CLOCK_MODE
 318:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** {
 319:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CPOL_0_CPHA_0 = XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED,
 320:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CPOL_0_CPHA_1 = XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED,
 321:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CPOL_1_CPHA_0 = XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED,
 322:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CPOL_1_CPHA_1 = XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED
 323:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CLOCK_MODE_t;
 324:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** 
 325:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** /**
 326:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * SPI Baudrate Generator shift clock output
 327:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** */
 328:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_BRG_SHIFT_CLOCK_OUTPUT
 329:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** {
 330:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK = XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK,  /**< Baudrate 
 331:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1  = XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1   /**< Clock obta
 332:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_BRG_SHIFT_CLOCK_OUTPUT_t;
 333:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** 
 334:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** /**
 335:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * SPI channel interrupt node pointers
 336:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  */
 337:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_INTERRUPT_NODE_POINTER
 338:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** {
 339:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT      = XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSM
 340:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER     = XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSM
 341:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INTERRUPT_NODE_POINTER_RECEIVE             = XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEIV
 342:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE   = XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTERN
 343:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INTERRUPT_NODE_POINTER_PROTOCOL            = XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOC
 344:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_INTERRUPT_NODE_POINTER_t;
 345:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** 
 346:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** /**************************************************************************************************
 347:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * DATA STRUCTURES
 348:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** ***************************************************************************************************
 349:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** 
 350:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** /**
 351:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * Structure for initializing SPI channel.
 352:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  */
 353:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** typedef struct XMC_SPI_CH_CONFIG
 354:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** {
 355:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   uint32_t baudrate;							                /**< Module baud rate for communication */
 356:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   bool normal_divider_mode;                       /**< Selects normal divider mode for baudrate gen
 357:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BUS_MODE_t bus_mode;                 /**< Bus mode: Master/Slave */
 358:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SEL_MSLS_INV_t selo_inversion; /**< Enable inversion of Slave select signal rela
 359:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****                                                        MSLS signal  */
 360:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_USIC_CH_PARITY_MODE_t parity_mode;          /**< Enable parity check for transmit and receive
 361:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_CONFIG_t;
 362:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** 
 363:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** /**************************************************************************************************
 364:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * API PROTOTYPES
 365:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  **************************************************************************************************
 366:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** 
 367:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** #ifdef __cplusplus
 368:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** extern "C" {
 369:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** #endif
 370:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** 
 371:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** /**
 372:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 373:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @param config pointer to constant SPI channel configuration data structure.\n
 374:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *               Refer data structure @ref XMC_SPI_CH_CONFIG_t for detail.
 375:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @param init_brg Selects if the baudrate generator should be configured automatically.
 376:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
 377:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 378:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
 379:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 380:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * Initializes the selected SPI \a channel with the \a config structure.\n\n
 381:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * Enable SPI channel by calling XMC_USIC_CH_Enable() and then configures
 382:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * <ul>
 383:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Baudrate,</li>
 384:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Passive data level as active high,</li>
 385:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Shift control signal as active high,</li>
 386:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Frame length as 64U,</li>
 387:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Word length as 8U,</li>
 388:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable Hardware port control mode,</li>
 389:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable transmission of data TDV(Transmit data valid) bit is set to 1,</li>
 390:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable invalidation of data in TBUF once loaded into shift register,</li>
 391:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Parity mode settings</li>
 392:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * </ul>
 393:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * And if master mode is selected,
 394:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * <ul>
 395:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enables MSLS signal generation,</li>
 396:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>configures slave selection as normal mode,</li>
 397:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Set polarity for the Slave signal,</li>
 398:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable Frame end mode(MSLS signal is kept active after transmission of a frame)</li>
 399:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * </ul>
 400:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  */
 401:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** void XMC_SPI_CH_InitEx(XMC_USIC_CH_t *const channel, const XMC_SPI_CH_CONFIG_t *const config, bool 
 402:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** 
 403:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** /**
 404:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 405:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @param config pointer to constant SPI channel configuration data structure.\n
 406:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *               Refer data structure @ref XMC_SPI_CH_CONFIG_t for detail.
 407:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
 408:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 409:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
 410:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 411:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * Initializes the selected SPI \a channel with the \a config structure.\n\n
 412:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * Enable SPI channel by calling XMC_USIC_CH_Enable() and then configures
 413:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * <ul>
 414:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Baudrate,</li>
 415:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Passive data level as active high,</li>
 416:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Shift control signal as active high,</li>
 417:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Frame length as 64U,</li>
 418:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Word length as 8U,</li>
 419:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable Hardware port control mode,</li>
 420:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable transmission of data TDV(Transmit data valid) bit is set to 1,</li>
 421:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable invalidation of data in TBUF once loaded into shift register,</li>
 422:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Parity mode settings</li>
 423:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * </ul>
 424:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * And if master mode is selected,
 425:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * <ul>
 426:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enables MSLS signal generation,</li>
 427:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>configures slave selection as normal mode,</li>
 428:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Set polarity for the Slave signal,</li>
 429:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable Frame end mode(MSLS signal is kept active after transmission of a frame)</li>
 430:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * </ul>
 431:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  */
 432:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_Init(XMC_USIC_CH_t *const channel, const XMC_SPI_CH_CONFIG_t *const
 433:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** {
 434:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_InitEx(channel, config, true);
 435:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** }
 436:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** 
 437:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** /**
 438:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 439:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
 440:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 441:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
 442:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 443:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * Set the selected USIC channel to operate in SPI mode, by setting CCR.MODE bits.\n\n
 444:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * It should be executed after XMC_SPI_CH_Init() during initialization. By invoking XMC_SPI_CH_Stop
 445:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * to IDLE state. Call XMC_SPI_CH_Start() to set the SPI mode again, as needed later in the program
 446:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
 447:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 448:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Init(), XMC_SPI_CH_Stop()
 449:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  */
 450:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_Start(XMC_USIC_CH_t *const channel)
 451:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** {
 452:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   /* USIC channel in SPI mode */
 453:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_USIC_CH_SetMode(channel, XMC_USIC_CH_OPERATING_MODE_SPI);
 454:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** }
 455:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** 
 456:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** /**
 457:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 458:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
 459:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @return XMC_SPI_CH_STATUS_t Status of the SPI driver after the request for stopping is processed
 460:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *        XMC_SPI_CH_STATUS_OK- If the USIC channel is successfully put to IDLE mode. \n
 461:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *        XMC_SPI_CH_STATUS_BUSY- If the USIC channel is busy transmitting data.
 462:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
 463:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 464:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * Set the selected SPI channel to IDLE mode, by clearing CCR.MODE bits.\n\n
 465:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * After calling XMC_SPI_CH_Stop, channel is IDLE mode. So no communication is supported. XMC_SPI_C
 466:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * invoked to start the communication again.
 467:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
 468:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 469:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Start()
 470:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  */
 471:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** XMC_SPI_CH_STATUS_t XMC_SPI_CH_Stop(XMC_USIC_CH_t *const channel);
 472:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** 
 473:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** /**
 474:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 475:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @param rate Bus speed in bits per second
 476:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
 477:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @return XMC_SPI_CH_STATUS_t Status of the SPI driver after the request for setting baudrate is p
 478:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *        XMC_SPI_CH_STATUS_OK- If the baudrate is successfully changed. \n
 479:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *        XMC_SPI_CH_STATUS_ERROR- If the new baudrate value is out of range.
 480:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
 481:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 482:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * Sets the bus speed in bits per second
 483:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
 484:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 485:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Init(), XMC_SPI_CH_Stop(), XMC_USIC_CH_GetSCLKFrequency()
 486:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  */
 487:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** XMC_SPI_CH_STATUS_t XMC_SPI_CH_SetBaudrate(XMC_USIC_CH_t *const channel, const uint32_t rate);
 488:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** 
 489:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** /**
 490:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 491:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @param rate Bus speed in bits per second
 492:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @param normal_divider_mode Selects normal divider mode for baudrate generator instead of default
 493:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
 494:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @return XMC_SPI_CH_STATUS_t Status of the SPI driver after the request for setting baudrate is p
 495:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *        XMC_SPI_CH_STATUS_OK- If the baudrate is successfully changed. \n
 496:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *        XMC_SPI_CH_STATUS_ERROR- If the new baudrate value is out of range.
 497:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
 498:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 499:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * Sets the bus speed in bits per second
 500:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
 501:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 502:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Init(), XMC_SPI_CH_Stop(), XMC_USIC_CH_GetSCLKFrequency()
 503:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  */
 504:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** XMC_SPI_CH_STATUS_t XMC_SPI_CH_SetBaudrateEx(XMC_USIC_CH_t *const channel, const uint32_t rate, boo
 505:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** 
 506:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** /**
 507:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 508:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @param slave Slave select signal.\n
 509:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *              Refer @ref XMC_SPI_CH_SLAVE_SELECT_t for valid values.
 510:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
 511:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 512:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
 513:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 514:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * Enable the selected slave signal by setting PCR.SELO bits.\n\n
 515:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * Each slave is connected with one slave select signal. This is not configured in XMC_SPI_CH_Init(
 516:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableSlaveSelect() with required \a slave to to start the communication. After finis
 517:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * communication XMC_SPI_CH_DisableSlaveSelect() can be invoked to disable the slaves.
 518:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
 519:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 520:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_DisableSlaveSelect()
 521:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  */
 522:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** void XMC_SPI_CH_EnableSlaveSelect(XMC_USIC_CH_t *const channel, const XMC_SPI_CH_SLAVE_SELECT_t sla
 523:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** 
 524:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** /**
 525:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant ponter to XMC_USIC_CH_t, pointing to the USIC channel base address.
 526:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
 527:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 528:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
 529:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 530:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * Disable all the slave signals by clearing PCR.SELO bits.\n\n
 531:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableSlaveSelect() has to be invoked to start the communication with the desired sla
 532:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
 533:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 534:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableSlaveSelect()
 535:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  */
 536:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** void XMC_SPI_CH_DisableSlaveSelect(XMC_USIC_CH_t *const channel);
 537:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** 
 538:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** /**
 539:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 540:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @param mode Communication mode of the SPI, based on this mode TCI(Transmit control information)i
 541:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *             Refer @ref XMC_SPI_CH_MODE_t for valid values.
 542:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
 543:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 544:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
 545:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 546:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * In Dual and Quad modes,  hardware port control(CCR.HPCEN) mode is enabled. \n\n
 547:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * By enabling this the direction of the data pin is updated by hardware itself. Before transmittin
 548:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * mode to ensure the proper communication.
 549:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
 550:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 551:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Transmit()
 552:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  */
 553:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_SetTransmitMode(XMC_USIC_CH_t *const channel, const XMC_SPI_CH_MODE
 554:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** {
 555:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   channel->CCR = (channel->CCR & (uint32_t)(~USIC_CH_CCR_HPCEN_Msk)) |
 556:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****                  (((uint32_t) mode << USIC_CH_CCR_HPCEN_Pos) & (uint32_t)USIC_CH_CCR_HPCEN_Msk);
 557:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** }
 558:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** 
 559:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** /**
 560:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 561:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @param data Data to be transmitted
 562:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @param mode Communication mode of the SPI, based on this mode TCI(Transmit control information)i
 563:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *             Refer @ref XMC_SPI_CH_MODE_t for valid values.
 564:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
 565:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 566:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
 567:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 568:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * Puts the data into FIFO, if FIFO mode is enabled or else into standard buffer, by setting the pr
 569:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * In Dual and Quad modes,  hardware port control(CCR.HPCEN) mode is enabled. By enabling this the 
 570:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * pin is updated by hardware itself. TCI(Transmit Control Information) allows dynamic control of b
 571:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * and pin direction during data transfers by writing to SCTR.DSM and SCTR.HPCDIR bit fields. To su
 572:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * update, TCSR.HPCMD(Hardware Port control) will be enabled during the initialization using XMC_SP
 573:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
 574:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
 575:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 576:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Receive()
 577:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  */
 578:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** void XMC_SPI_CH_Transmit(XMC_USIC_CH_t *const channel, const uint16_t data, const XMC_SPI_CH_MODE_t
 579:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** 
 580:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** /**
 581:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 582:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @param mode Communication mode of the SPI, based on this mode TCI(Transmit control information)i
 583:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *             Refer @ref XMC_SPI_CH_MODE_t for valid values.
 584:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
 585:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 586:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
 587:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 588:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * Transmits a dummy data(FFFFH) to provide clock for slave and receives the data from the slave.\n
 589:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Receive() receives the data and places it into buffer based on the FIFO selection. Af
 590:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_GetReceivedData() can be invoked to read the data from the buffers.
 591:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
 592:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 593:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_GetReceivedDaa()
 594:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  */
 595:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_Receive(XMC_USIC_CH_t *const channel, const XMC_SPI_CH_MODE_t mode)
 596:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** {
 597:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   /* Transmit dummy data */
 598:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_Transmit(channel, (uint16_t)0xffffU, (XMC_SPI_CH_MODE_t)((uint16_t)mode & 0xfffbU));
 599:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** }
 600:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** 
 601:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** /**
 602:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 603:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
 604:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @return uint16_t Data read from the receive buffer.
 605:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
 606:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 607:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * Reads data from the receive buffer based on the FIFO selection.\n\n
 608:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * Invocation of XMC_SPI_CH_Receive() receives the data and place it into receive buffer. After rec
 609:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_GetReceivedData() can be used to read the data from the buffer.
 610:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
 611:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 612:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Receive()
 613:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  */
 614:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** uint16_t XMC_SPI_CH_GetReceivedData(XMC_USIC_CH_t *const channel);
 615:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** 
 616:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** /**
 617:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 618:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
 619:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 620:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
 621:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 622:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * Set the order of data transfer from LSB to MSB, by clearing SCTR.SDIR bit.\n\n
 623:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * This is typically based on the slave settings. Invoke XMC_SPI_CH_SetBitOrderLsbFirst() to set di
 624:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * the program.
 625:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
 626:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 627:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_SetBitOrderMsbFirst()
 628:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  */
 629:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_SetBitOrderLsbFirst(XMC_USIC_CH_t *const channel)
 630:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** {
 631:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   channel->SCTR &= (uint32_t)~USIC_CH_SCTR_SDIR_Msk;
 632:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** }
 633:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** 
 634:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** /**
 635:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 636:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
 637:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 638:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
 639:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 640:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * Set the order of data transfer from MSB to LSB, by setting SCTR.SDIR bit.\n\n
 641:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * This is typically based on the slave settings. This is not set during XMC_SPI_CH_Init().
 642:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * Invoke XMC_SPI_CH_SetBitOrderMsbFirst() to set direction as needed in the program.
 643:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
 644:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 645:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_SetBitOrderLsbFirst()
 646:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  */
 647:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_SetBitOrderMsbFirst(XMC_USIC_CH_t *const channel)
 648:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** {
 649:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   channel->SCTR |= (uint32_t)USIC_CH_SCTR_SDIR_Msk;
 650:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** }
 651:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** 
 652:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** /**
 653:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 654:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @param event Protocol events which have to be enabled.
 655:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *              Refer @ XMC_SPI_CH_EVENT_t for valid values. <b>OR</b> combinations of these enum i
 656:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *              as input.
 657:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
 658:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 659:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
 660:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 661:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * Enables the SPI protocol specific events, by configuring PCR register.\n\n
 662:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * Events can be enabled as needed using XMC_SPI_CH_EnableEvent().
 663:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_DisableEvent() can be used to disable the events.
 664:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
 665:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 666:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_DisableEvent()
 667:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  */
 668:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** void XMC_SPI_CH_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t event);
 669:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** 
 670:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** /**
 671:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 672:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @param event Protocol events which have to be disabled.
 673:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *              Refer @ XMC_SPI_CH_EVENT_t for valid values. <b>OR</b> combinations of these enum i
 674:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *              as input.
 675:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
 676:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 677:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
 678:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 679:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * Disables the SPI protocol specific events, by configuring PCR register.\n\n
 680:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * After disabling the events, XMC_SPI_CH_EnableEvent() has to be invoked to re-enable the events.
 681:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
 682:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 683:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableEvent()
 684:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  */
 685:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** void XMC_SPI_CH_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t event);
 686:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** 
 687:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** /**
 688:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 689:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
 690:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @return uint32_t Status of SPI protocol events.
 691:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
 692:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 693:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * Returns the status of the events, by reading PSR register.\n\n
 694:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * This indicates the status of the all the events, for SPI communication.
 695:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
 696:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 697:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_ClearStatusFlag()
 698:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  */
 699:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE uint32_t XMC_SPI_CH_GetStatusFlag(XMC_USIC_CH_t *const channel)
 700:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** {
 701:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   return channel->PSR_SSCMode;
 702:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** }
 703:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** 
 704:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** /**
 705:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 706:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @param flag Protocol event status to be cleared for detection of next occurence.
 707:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *              Refer @ XMC_SPI_CH_STATUS_FLAG_t for valid values. <b>OR</b> combinations of these 
 708:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *              as input.
 709:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 710:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
 711:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 712:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * Clears the events specified, by setting PSCR register.\n\n
 713:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * During communication the events occurred have to be cleared to detect their next occurence.\n
 714:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * e.g: During transmission Transmit buffer event occurs to indicating data word transfer has start
 715:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *       event has to be cleared after transmission of each data word. Otherwise next event cannot 
 716:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  *
 717:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 718:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_GetStatusFlag()
 719:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****  */
 720:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_ClearStatusFlag(XMC_USIC_CH_t *const channel, const uint32_t flag)
 721:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** {
 123              	 .loc 2 721 0
 124              	 .cfi_startproc
 125              	 
 126              	 
 127              	 
 128 0000 80B4     	 push {r7}
 129              	.LCFI12:
 130              	 .cfi_def_cfa_offset 4
 131              	 .cfi_offset 7,-4
 132 0002 83B0     	 sub sp,sp,#12
 133              	.LCFI13:
 134              	 .cfi_def_cfa_offset 16
 135 0004 00AF     	 add r7,sp,#0
 136              	.LCFI14:
 137              	 .cfi_def_cfa_register 7
 138 0006 7860     	 str r0,[r7,#4]
 139 0008 3960     	 str r1,[r7]
 722:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h ****   channel->PSCR |= flag;
 140              	 .loc 2 722 0
 141 000a 7B68     	 ldr r3,[r7,#4]
 142 000c DA6C     	 ldr r2,[r3,#76]
 143 000e 3B68     	 ldr r3,[r7]
 144 0010 1A43     	 orrs r2,r2,r3
 145 0012 7B68     	 ldr r3,[r7,#4]
 146 0014 DA64     	 str r2,[r3,#76]
 723:D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/XMCLib/inc\xmc_spi.h **** }
 147              	 .loc 2 723 0
 148 0016 0C37     	 adds r7,r7,#12
 149              	.LCFI15:
 150              	 .cfi_def_cfa_offset 4
 151 0018 BD46     	 mov sp,r7
 152              	.LCFI16:
 153              	 .cfi_def_cfa_register 13
 154              	 
 155 001a 5DF8047B 	 ldr r7,[sp],#4
 156              	.LCFI17:
 157              	 .cfi_restore 7
 158              	 .cfi_def_cfa_offset 0
 159 001e 7047     	 bx lr
 160              	 .cfi_endproc
 161              	.LFE248:
 163              	 .section .text.XMC_SPI_CH_InitEx,"ax",%progbits
 164              	 .align 2
 165              	 .global XMC_SPI_CH_InitEx
 166              	 .thumb
 167              	 .thumb_func
 169              	XMC_SPI_CH_InitEx:
 170              	.LFB280:
 171              	 .file 3 "../Libraries/XMCLib/src/xmc_spi.c"
   1:../Libraries/XMCLib/src/xmc_spi.c **** /**
   2:../Libraries/XMCLib/src/xmc_spi.c ****  * @file xmc_spi.c
   3:../Libraries/XMCLib/src/xmc_spi.c ****  * @date 2020-12-05
   4:../Libraries/XMCLib/src/xmc_spi.c ****  *
   5:../Libraries/XMCLib/src/xmc_spi.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_spi.c ****  *****************************************************************************
   7:../Libraries/XMCLib/src/xmc_spi.c ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:../Libraries/XMCLib/src/xmc_spi.c ****  *
   9:../Libraries/XMCLib/src/xmc_spi.c ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_spi.c ****  * All rights reserved.
  11:../Libraries/XMCLib/src/xmc_spi.c ****  *
  12:../Libraries/XMCLib/src/xmc_spi.c ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:../Libraries/XMCLib/src/xmc_spi.c ****  *
  14:../Libraries/XMCLib/src/xmc_spi.c ****  * Permission is hereby granted, free of charge, to any person or organization
  15:../Libraries/XMCLib/src/xmc_spi.c ****  * obtaining a copy of the software and accompanying documentation covered by
  16:../Libraries/XMCLib/src/xmc_spi.c ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:../Libraries/XMCLib/src/xmc_spi.c ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:../Libraries/XMCLib/src/xmc_spi.c ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:../Libraries/XMCLib/src/xmc_spi.c ****  * do so, all subject to the following:
  20:../Libraries/XMCLib/src/xmc_spi.c ****  *
  21:../Libraries/XMCLib/src/xmc_spi.c ****  * The copyright notices in the Software and this entire statement, including
  22:../Libraries/XMCLib/src/xmc_spi.c ****  * the above license grant, this restriction and the following disclaimer,
  23:../Libraries/XMCLib/src/xmc_spi.c ****  * must be included in all copies of the Software, in whole or in part, and
  24:../Libraries/XMCLib/src/xmc_spi.c ****  * all derivative works of the Software, unless such copies or derivative
  25:../Libraries/XMCLib/src/xmc_spi.c ****  * works are solely in the form of machine-executable object code generated by
  26:../Libraries/XMCLib/src/xmc_spi.c ****  * a source language processor.
  27:../Libraries/XMCLib/src/xmc_spi.c ****  *
  28:../Libraries/XMCLib/src/xmc_spi.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:../Libraries/XMCLib/src/xmc_spi.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:../Libraries/XMCLib/src/xmc_spi.c ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:../Libraries/XMCLib/src/xmc_spi.c ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:../Libraries/XMCLib/src/xmc_spi.c ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:../Libraries/XMCLib/src/xmc_spi.c ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:../Libraries/XMCLib/src/xmc_spi.c ****  * DEALINGS IN THE SOFTWARE.
  35:../Libraries/XMCLib/src/xmc_spi.c ****  *
  36:../Libraries/XMCLib/src/xmc_spi.c ****  * To improve the quality of the software, users are encouraged to share
  37:../Libraries/XMCLib/src/xmc_spi.c ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:../Libraries/XMCLib/src/xmc_spi.c ****  * at XMCSupport@infineon.com.
  39:../Libraries/XMCLib/src/xmc_spi.c ****  *****************************************************************************
  40:../Libraries/XMCLib/src/xmc_spi.c ****  *
  41:../Libraries/XMCLib/src/xmc_spi.c ****  * Change History
  42:../Libraries/XMCLib/src/xmc_spi.c ****  * --------------
  43:../Libraries/XMCLib/src/xmc_spi.c ****  *
  44:../Libraries/XMCLib/src/xmc_spi.c ****  * 2015-02-20:
  45:../Libraries/XMCLib/src/xmc_spi.c ****  *     - Initial <br>
  46:../Libraries/XMCLib/src/xmc_spi.c ****  *
  47:../Libraries/XMCLib/src/xmc_spi.c ****  * 2015-05-20:
  48:../Libraries/XMCLib/src/xmc_spi.c ****  *     - Modified XMC_SPI_CH_Stop() API for not setting to IDLE the channel if it is busy
  49:../Libraries/XMCLib/src/xmc_spi.c ****  *     - Modified XMC_SPI_CH_SetInterwordDelay() implementation in order to gain accuracy <br>
  50:../Libraries/XMCLib/src/xmc_spi.c ****  *
  51:../Libraries/XMCLib/src/xmc_spi.c ****  * 2015-06-20:
  52:../Libraries/XMCLib/src/xmc_spi.c ****  *     - Removed GetDriverVersion API <br>
  53:../Libraries/XMCLib/src/xmc_spi.c ****  *
  54:../Libraries/XMCLib/src/xmc_spi.c ****  * 2015-09-01:
  55:../Libraries/XMCLib/src/xmc_spi.c ****  *     - Modified XMC_SPI_CH_EnableEvent() and XMC_SPI_CH_DisableEvent() for supporting multiple ev
  56:../Libraries/XMCLib/src/xmc_spi.c ****  *
  57:../Libraries/XMCLib/src/xmc_spi.c ****  * 2015-11-04:
  58:../Libraries/XMCLib/src/xmc_spi.c ****  *     - Modified the check of XMC_USIC_CH_GetTransmitBufferStatus() in the XMC_SPI_CH_Transmit() f
  59:../Libraries/XMCLib/src/xmc_spi.c ****  *
  60:../Libraries/XMCLib/src/xmc_spi.c ****  * 2019-05-07:
  61:../Libraries/XMCLib/src/xmc_spi.c ****  *     - Added XMC_SPI_CH_SetBaudrateEx() which allows to select between baudrate generator normal 
  62:../Libraries/XMCLib/src/xmc_spi.c ****  *
  63:../Libraries/XMCLib/src/xmc_spi.c ****  * 2019-12-16:
  64:../Libraries/XMCLib/src/xmc_spi.c ****  *     - Fix including files following the convention: angle brackets are used for standard include
  65:../Libraries/XMCLib/src/xmc_spi.c ****  *
  66:../Libraries/XMCLib/src/xmc_spi.c ****  * 2020-12-05:
  67:../Libraries/XMCLib/src/xmc_spi.c ****  *     - Added XMC_SPI_CH_InitEx that allows user select if automatic baudrate configuration should
  68:../Libraries/XMCLib/src/xmc_spi.c ****  * 
  69:../Libraries/XMCLib/src/xmc_spi.c ****  * @endcond
  70:../Libraries/XMCLib/src/xmc_spi.c ****  *
  71:../Libraries/XMCLib/src/xmc_spi.c ****  */
  72:../Libraries/XMCLib/src/xmc_spi.c **** /**
  73:../Libraries/XMCLib/src/xmc_spi.c ****  *
  74:../Libraries/XMCLib/src/xmc_spi.c ****  * @brief SPI driver for XMC microcontroller family
  75:../Libraries/XMCLib/src/xmc_spi.c ****  *
  76:../Libraries/XMCLib/src/xmc_spi.c ****  */
  77:../Libraries/XMCLib/src/xmc_spi.c **** /**************************************************************************************************
  78:../Libraries/XMCLib/src/xmc_spi.c ****  * HEADER FILES
  79:../Libraries/XMCLib/src/xmc_spi.c ****  **************************************************************************************************
  80:../Libraries/XMCLib/src/xmc_spi.c **** 
  81:../Libraries/XMCLib/src/xmc_spi.c **** #include "xmc_scu.h"
  82:../Libraries/XMCLib/src/xmc_spi.c **** #include "xmc_spi.h"
  83:../Libraries/XMCLib/src/xmc_spi.c **** 
  84:../Libraries/XMCLib/src/xmc_spi.c **** /**************************************************************************************************
  85:../Libraries/XMCLib/src/xmc_spi.c ****  * MACROS
  86:../Libraries/XMCLib/src/xmc_spi.c ****  **************************************************************************************************
  87:../Libraries/XMCLib/src/xmc_spi.c **** #define XMC_SPI_CH_OVERSAMPLING (2UL)
  88:../Libraries/XMCLib/src/xmc_spi.c **** 
  89:../Libraries/XMCLib/src/xmc_spi.c **** /**************************************************************************************************
  90:../Libraries/XMCLib/src/xmc_spi.c ****  * API IMPLEMENTATION
  91:../Libraries/XMCLib/src/xmc_spi.c ****  **************************************************************************************************
  92:../Libraries/XMCLib/src/xmc_spi.c **** 
  93:../Libraries/XMCLib/src/xmc_spi.c **** /* Initializes the selected SPI channel with the config structure. */
  94:../Libraries/XMCLib/src/xmc_spi.c **** void XMC_SPI_CH_InitEx(XMC_USIC_CH_t *const channel, const XMC_SPI_CH_CONFIG_t *const config, bool 
  95:../Libraries/XMCLib/src/xmc_spi.c **** {
 172              	 .loc 3 95 0
 173              	 .cfi_startproc
 174              	 
 175              	 
 176 0000 80B5     	 push {r7,lr}
 177              	.LCFI18:
 178              	 .cfi_def_cfa_offset 8
 179              	 .cfi_offset 7,-8
 180              	 .cfi_offset 14,-4
 181 0002 84B0     	 sub sp,sp,#16
 182              	.LCFI19:
 183              	 .cfi_def_cfa_offset 24
 184 0004 00AF     	 add r7,sp,#0
 185              	.LCFI20:
 186              	 .cfi_def_cfa_register 7
 187 0006 F860     	 str r0,[r7,#12]
 188 0008 B960     	 str r1,[r7,#8]
 189 000a 1346     	 mov r3,r2
 190 000c FB71     	 strb r3,[r7,#7]
  96:../Libraries/XMCLib/src/xmc_spi.c ****   XMC_USIC_CH_Enable(channel);
 191              	 .loc 3 96 0
 192 000e F868     	 ldr r0,[r7,#12]
 193 0010 FFF7FEFF 	 bl XMC_USIC_CH_Enable
  97:../Libraries/XMCLib/src/xmc_spi.c **** 
  98:../Libraries/XMCLib/src/xmc_spi.c ****   if ((config->bus_mode == XMC_SPI_CH_BUS_MODE_MASTER) && init_brg)
 194              	 .loc 3 98 0
 195 0014 BB68     	 ldr r3,[r7,#8]
 196 0016 5B79     	 ldrb r3,[r3,#5]
 197 0018 002B     	 cmp r3,#0
 198 001a 15D1     	 bne .L6
 199              	 .loc 3 98 0 is_stmt 0 discriminator 1
 200 001c FB79     	 ldrb r3,[r7,#7]
 201 001e 002B     	 cmp r3,#0
 202 0020 12D0     	 beq .L6
  99:../Libraries/XMCLib/src/xmc_spi.c ****   {
 100:../Libraries/XMCLib/src/xmc_spi.c ****     /* Configure baud rate */
 101:../Libraries/XMCLib/src/xmc_spi.c ****     if (config->normal_divider_mode)
 203              	 .loc 3 101 0 is_stmt 1
 204 0022 BB68     	 ldr r3,[r7,#8]
 205 0024 1B79     	 ldrb r3,[r3,#4]
 206 0026 002B     	 cmp r3,#0
 207 0028 07D0     	 beq .L7
 102:../Libraries/XMCLib/src/xmc_spi.c ****     {
 103:../Libraries/XMCLib/src/xmc_spi.c ****       /* Normal divider mode */
 104:../Libraries/XMCLib/src/xmc_spi.c ****       (void)XMC_USIC_CH_SetBaudrateEx(channel, config->baudrate, XMC_SPI_CH_OVERSAMPLING);
 208              	 .loc 3 104 0
 209 002a BB68     	 ldr r3,[r7,#8]
 210 002c 1B68     	 ldr r3,[r3]
 211 002e F868     	 ldr r0,[r7,#12]
 212 0030 1946     	 mov r1,r3
 213 0032 0222     	 movs r2,#2
 214 0034 FFF7FEFF 	 bl XMC_USIC_CH_SetBaudrateEx
 215 0038 06E0     	 b .L6
 216              	.L7:
 105:../Libraries/XMCLib/src/xmc_spi.c ****     }
 106:../Libraries/XMCLib/src/xmc_spi.c ****     else
 107:../Libraries/XMCLib/src/xmc_spi.c ****     {
 108:../Libraries/XMCLib/src/xmc_spi.c ****       /* Fractional divider mode */
 109:../Libraries/XMCLib/src/xmc_spi.c ****       (void)XMC_USIC_CH_SetBaudrate(channel, config->baudrate, XMC_SPI_CH_OVERSAMPLING);
 217              	 .loc 3 109 0
 218 003a BB68     	 ldr r3,[r7,#8]
 219 003c 1B68     	 ldr r3,[r3]
 220 003e F868     	 ldr r0,[r7,#12]
 221 0040 1946     	 mov r1,r3
 222 0042 0222     	 movs r2,#2
 223 0044 FFF7FEFF 	 bl XMC_USIC_CH_SetBaudrate
 224              	.L6:
 110:../Libraries/XMCLib/src/xmc_spi.c ****     }
 111:../Libraries/XMCLib/src/xmc_spi.c ****   }
 112:../Libraries/XMCLib/src/xmc_spi.c **** 
 113:../Libraries/XMCLib/src/xmc_spi.c ****   /* Configuration of USIC Shift Control */
 114:../Libraries/XMCLib/src/xmc_spi.c ****   /* Transmission Mode (TRM) = 1  */
 115:../Libraries/XMCLib/src/xmc_spi.c ****   /* Passive Data Level (PDL) = 1 */
 116:../Libraries/XMCLib/src/xmc_spi.c ****   channel->SCTR = USIC_CH_SCTR_PDL_Msk |
 225              	 .loc 3 116 0
 226 0048 FB68     	 ldr r3,[r7,#12]
 227 004a 0F4A     	 ldr r2,.L9
 228 004c 5A63     	 str r2,[r3,#52]
 117:../Libraries/XMCLib/src/xmc_spi.c ****                   (0x1UL << USIC_CH_SCTR_TRM_Pos) |
 118:../Libraries/XMCLib/src/xmc_spi.c ****                   (0x3fUL << USIC_CH_SCTR_FLE_Pos) |
 119:../Libraries/XMCLib/src/xmc_spi.c ****                   (0x7UL << USIC_CH_SCTR_WLE_Pos);
 120:../Libraries/XMCLib/src/xmc_spi.c **** 
 121:../Libraries/XMCLib/src/xmc_spi.c ****   /* Configuration of USIC Transmit Control/Status Register */
 122:../Libraries/XMCLib/src/xmc_spi.c ****   /* TBUF Data Enable (TDEN) = 1 */
 123:../Libraries/XMCLib/src/xmc_spi.c ****   /* TBUF Data Single Shot Mode (TDSSM) = 1 */
 124:../Libraries/XMCLib/src/xmc_spi.c ****   channel->TCSR = (uint32_t)(USIC_CH_TCSR_HPCMD_Msk |
 229              	 .loc 3 124 0
 230 004e FB68     	 ldr r3,[r7,#12]
 231 0050 4FF4A262 	 mov r2,#1296
 232 0054 9A63     	 str r2,[r3,#56]
 125:../Libraries/XMCLib/src/xmc_spi.c ****                              (0x01UL  << USIC_CH_TCSR_TDEN_Pos) |
 126:../Libraries/XMCLib/src/xmc_spi.c ****                              USIC_CH_TCSR_TDSSM_Msk);
 127:../Libraries/XMCLib/src/xmc_spi.c **** 
 128:../Libraries/XMCLib/src/xmc_spi.c ****   if (config->bus_mode == XMC_SPI_CH_BUS_MODE_MASTER)
 233              	 .loc 3 128 0
 234 0056 BB68     	 ldr r3,[r7,#8]
 235 0058 5B79     	 ldrb r3,[r3,#5]
 236 005a 002B     	 cmp r3,#0
 237 005c 07D1     	 bne .L8
 129:../Libraries/XMCLib/src/xmc_spi.c ****   {
 130:../Libraries/XMCLib/src/xmc_spi.c ****     /* Configuration of Protocol Control Register */
 131:../Libraries/XMCLib/src/xmc_spi.c ****     channel->PCR_SSCMode = (uint32_t)(USIC_CH_PCR_SSCMode_MSLSEN_Msk |
 132:../Libraries/XMCLib/src/xmc_spi.c ****                                       USIC_CH_PCR_SSCMode_SELCTR_Msk |
 133:../Libraries/XMCLib/src/xmc_spi.c ****                                       (uint32_t)config->selo_inversion |
 238              	 .loc 3 133 0
 239 005e BB68     	 ldr r3,[r7,#8]
 240 0060 9B79     	 ldrb r3,[r3,#6]
 131:../Libraries/XMCLib/src/xmc_spi.c ****                                       USIC_CH_PCR_SSCMode_SELCTR_Msk |
 241              	 .loc 3 131 0
 242 0062 43F00B03 	 orr r3,r3,#11
 243 0066 DBB2     	 uxtb r3,r3
 244 0068 1A46     	 mov r2,r3
 245 006a FB68     	 ldr r3,[r7,#12]
 246 006c DA63     	 str r2,[r3,#60]
 247              	.L8:
 134:../Libraries/XMCLib/src/xmc_spi.c ****                                       USIC_CH_PCR_SSCMode_FEM_Msk);
 135:../Libraries/XMCLib/src/xmc_spi.c ****   }
 136:../Libraries/XMCLib/src/xmc_spi.c **** 
 137:../Libraries/XMCLib/src/xmc_spi.c ****   /* Clear protocol status */
 138:../Libraries/XMCLib/src/xmc_spi.c ****   channel->PSCR = 0xFFFFFFFFUL;
 248              	 .loc 3 138 0
 249 006e FB68     	 ldr r3,[r7,#12]
 250 0070 4FF0FF32 	 mov r2,#-1
 251 0074 DA64     	 str r2,[r3,#76]
 139:../Libraries/XMCLib/src/xmc_spi.c **** 
 140:../Libraries/XMCLib/src/xmc_spi.c ****   /* Set parity settings */
 141:../Libraries/XMCLib/src/xmc_spi.c ****   channel->CCR = (uint32_t)config->parity_mode;
 252              	 .loc 3 141 0
 253 0076 BB68     	 ldr r3,[r7,#8]
 254 0078 1B89     	 ldrh r3,[r3,#8]
 255 007a 1A46     	 mov r2,r3
 256 007c FB68     	 ldr r3,[r7,#12]
 257 007e 1A64     	 str r2,[r3,#64]
 142:../Libraries/XMCLib/src/xmc_spi.c **** }
 258              	 .loc 3 142 0
 259 0080 1037     	 adds r7,r7,#16
 260              	.LCFI21:
 261              	 .cfi_def_cfa_offset 8
 262 0082 BD46     	 mov sp,r7
 263              	.LCFI22:
 264              	 .cfi_def_cfa_register 13
 265              	 
 266 0084 80BD     	 pop {r7,pc}
 267              	.L10:
 268 0086 00BF     	 .align 2
 269              	.L9:
 270 0088 02013F07 	 .word 121569538
 271              	 .cfi_endproc
 272              	.LFE280:
 274              	 .section .text.XMC_SPI_CH_SetBaudrate,"ax",%progbits
 275              	 .align 2
 276              	 .global XMC_SPI_CH_SetBaudrate
 277              	 .thumb
 278              	 .thumb_func
 280              	XMC_SPI_CH_SetBaudrate:
 281              	.LFB281:
 143:../Libraries/XMCLib/src/xmc_spi.c **** 
 144:../Libraries/XMCLib/src/xmc_spi.c **** XMC_SPI_CH_STATUS_t XMC_SPI_CH_SetBaudrate(XMC_USIC_CH_t *const channel, const uint32_t rate)
 145:../Libraries/XMCLib/src/xmc_spi.c **** {
 282              	 .loc 3 145 0
 283              	 .cfi_startproc
 284              	 
 285              	 
 286 0000 80B5     	 push {r7,lr}
 287              	.LCFI23:
 288              	 .cfi_def_cfa_offset 8
 289              	 .cfi_offset 7,-8
 290              	 .cfi_offset 14,-4
 291 0002 84B0     	 sub sp,sp,#16
 292              	.LCFI24:
 293              	 .cfi_def_cfa_offset 24
 294 0004 00AF     	 add r7,sp,#0
 295              	.LCFI25:
 296              	 .cfi_def_cfa_register 7
 297 0006 7860     	 str r0,[r7,#4]
 298 0008 3960     	 str r1,[r7]
 146:../Libraries/XMCLib/src/xmc_spi.c ****   XMC_SPI_CH_STATUS_t status;
 147:../Libraries/XMCLib/src/xmc_spi.c **** 
 148:../Libraries/XMCLib/src/xmc_spi.c ****   status = XMC_SPI_CH_STATUS_ERROR;
 299              	 .loc 3 148 0
 300 000a 0123     	 movs r3,#1
 301 000c FB73     	 strb r3,[r7,#15]
 149:../Libraries/XMCLib/src/xmc_spi.c **** 
 150:../Libraries/XMCLib/src/xmc_spi.c ****   if (rate <= (XMC_SCU_CLOCK_GetPeripheralClockFrequency() >> 1U))
 302              	 .loc 3 150 0
 303 000e FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 304 0012 0346     	 mov r3,r0
 305 0014 5A08     	 lsrs r2,r3,#1
 306 0016 3B68     	 ldr r3,[r7]
 307 0018 9A42     	 cmp r2,r3
 308 001a 09D3     	 bcc .L12
 151:../Libraries/XMCLib/src/xmc_spi.c ****   {
 152:../Libraries/XMCLib/src/xmc_spi.c ****     if (XMC_USIC_CH_SetBaudrate(channel, rate, XMC_SPI_CH_OVERSAMPLING) == XMC_USIC_CH_STATUS_OK)
 309              	 .loc 3 152 0
 310 001c 7868     	 ldr r0,[r7,#4]
 311 001e 3968     	 ldr r1,[r7]
 312 0020 0222     	 movs r2,#2
 313 0022 FFF7FEFF 	 bl XMC_USIC_CH_SetBaudrate
 314 0026 0346     	 mov r3,r0
 315 0028 002B     	 cmp r3,#0
 316 002a 01D1     	 bne .L12
 153:../Libraries/XMCLib/src/xmc_spi.c ****     {
 154:../Libraries/XMCLib/src/xmc_spi.c ****       status = XMC_SPI_CH_STATUS_OK;
 317              	 .loc 3 154 0
 318 002c 0023     	 movs r3,#0
 319 002e FB73     	 strb r3,[r7,#15]
 320              	.L12:
 155:../Libraries/XMCLib/src/xmc_spi.c ****     }
 156:../Libraries/XMCLib/src/xmc_spi.c ****   }
 157:../Libraries/XMCLib/src/xmc_spi.c ****   return status;
 321              	 .loc 3 157 0
 322 0030 FB7B     	 ldrb r3,[r7,#15]
 158:../Libraries/XMCLib/src/xmc_spi.c **** }
 323              	 .loc 3 158 0
 324 0032 1846     	 mov r0,r3
 325 0034 1037     	 adds r7,r7,#16
 326              	.LCFI26:
 327              	 .cfi_def_cfa_offset 8
 328 0036 BD46     	 mov sp,r7
 329              	.LCFI27:
 330              	 .cfi_def_cfa_register 13
 331              	 
 332 0038 80BD     	 pop {r7,pc}
 333              	 .cfi_endproc
 334              	.LFE281:
 336 003a 00BF     	 .section .text.XMC_SPI_CH_SetBaudrateEx,"ax",%progbits
 337              	 .align 2
 338              	 .global XMC_SPI_CH_SetBaudrateEx
 339              	 .thumb
 340              	 .thumb_func
 342              	XMC_SPI_CH_SetBaudrateEx:
 343              	.LFB282:
 159:../Libraries/XMCLib/src/xmc_spi.c **** 
 160:../Libraries/XMCLib/src/xmc_spi.c **** XMC_SPI_CH_STATUS_t XMC_SPI_CH_SetBaudrateEx(XMC_USIC_CH_t *const channel, const uint32_t rate, boo
 161:../Libraries/XMCLib/src/xmc_spi.c **** {
 344              	 .loc 3 161 0
 345              	 .cfi_startproc
 346              	 
 347              	 
 348 0000 80B5     	 push {r7,lr}
 349              	.LCFI28:
 350              	 .cfi_def_cfa_offset 8
 351              	 .cfi_offset 7,-8
 352              	 .cfi_offset 14,-4
 353 0002 86B0     	 sub sp,sp,#24
 354              	.LCFI29:
 355              	 .cfi_def_cfa_offset 32
 356 0004 00AF     	 add r7,sp,#0
 357              	.LCFI30:
 358              	 .cfi_def_cfa_register 7
 359 0006 F860     	 str r0,[r7,#12]
 360 0008 B960     	 str r1,[r7,#8]
 361 000a 1346     	 mov r3,r2
 362 000c FB71     	 strb r3,[r7,#7]
 162:../Libraries/XMCLib/src/xmc_spi.c ****   XMC_USIC_CH_STATUS_t status;
 163:../Libraries/XMCLib/src/xmc_spi.c **** 
 164:../Libraries/XMCLib/src/xmc_spi.c ****   if (rate <= (XMC_SCU_CLOCK_GetPeripheralClockFrequency() >> 1U))
 363              	 .loc 3 164 0
 364 000e FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 365 0012 0346     	 mov r3,r0
 366 0014 5A08     	 lsrs r2,r3,#1
 367 0016 BB68     	 ldr r3,[r7,#8]
 368 0018 9A42     	 cmp r2,r3
 369 001a 13D3     	 bcc .L15
 165:../Libraries/XMCLib/src/xmc_spi.c ****   {
 166:../Libraries/XMCLib/src/xmc_spi.c ****     if (normal_divider_mode)
 370              	 .loc 3 166 0
 371 001c FB79     	 ldrb r3,[r7,#7]
 372 001e 002B     	 cmp r3,#0
 373 0020 08D0     	 beq .L16
 167:../Libraries/XMCLib/src/xmc_spi.c ****     {
 168:../Libraries/XMCLib/src/xmc_spi.c ****       /* Normal divider mode */
 169:../Libraries/XMCLib/src/xmc_spi.c ****       status = XMC_USIC_CH_SetBaudrateEx(channel, rate, XMC_SPI_CH_OVERSAMPLING);
 374              	 .loc 3 169 0
 375 0022 BB68     	 ldr r3,[r7,#8]
 376 0024 F868     	 ldr r0,[r7,#12]
 377 0026 1946     	 mov r1,r3
 378 0028 0222     	 movs r2,#2
 379 002a FFF7FEFF 	 bl XMC_USIC_CH_SetBaudrateEx
 380 002e 0346     	 mov r3,r0
 381 0030 FB75     	 strb r3,[r7,#23]
 382 0032 09E0     	 b .L18
 383              	.L16:
 170:../Libraries/XMCLib/src/xmc_spi.c ****     }
 171:../Libraries/XMCLib/src/xmc_spi.c ****     else
 172:../Libraries/XMCLib/src/xmc_spi.c ****     {
 173:../Libraries/XMCLib/src/xmc_spi.c ****       /* Fractional divider mode */
 174:../Libraries/XMCLib/src/xmc_spi.c ****       status = XMC_USIC_CH_SetBaudrate(channel, rate, XMC_SPI_CH_OVERSAMPLING);
 384              	 .loc 3 174 0
 385 0034 F868     	 ldr r0,[r7,#12]
 386 0036 B968     	 ldr r1,[r7,#8]
 387 0038 0222     	 movs r2,#2
 388 003a FFF7FEFF 	 bl XMC_USIC_CH_SetBaudrate
 389 003e 0346     	 mov r3,r0
 390 0040 FB75     	 strb r3,[r7,#23]
 391 0042 01E0     	 b .L18
 392              	.L15:
 175:../Libraries/XMCLib/src/xmc_spi.c ****     }
 176:../Libraries/XMCLib/src/xmc_spi.c ****   }
 177:../Libraries/XMCLib/src/xmc_spi.c ****   else
 178:../Libraries/XMCLib/src/xmc_spi.c ****   {
 179:../Libraries/XMCLib/src/xmc_spi.c ****     status = XMC_USIC_CH_STATUS_ERROR;
 393              	 .loc 3 179 0
 394 0044 0123     	 movs r3,#1
 395 0046 FB75     	 strb r3,[r7,#23]
 396              	.L18:
 180:../Libraries/XMCLib/src/xmc_spi.c ****   }
 181:../Libraries/XMCLib/src/xmc_spi.c **** 
 182:../Libraries/XMCLib/src/xmc_spi.c ****   return (XMC_SPI_CH_STATUS_t)status;
 397              	 .loc 3 182 0
 398 0048 FB7D     	 ldrb r3,[r7,#23]
 183:../Libraries/XMCLib/src/xmc_spi.c **** }
 399              	 .loc 3 183 0
 400 004a 1846     	 mov r0,r3
 401 004c 1837     	 adds r7,r7,#24
 402              	.LCFI31:
 403              	 .cfi_def_cfa_offset 8
 404 004e BD46     	 mov sp,r7
 405              	.LCFI32:
 406              	 .cfi_def_cfa_register 13
 407              	 
 408 0050 80BD     	 pop {r7,pc}
 409              	 .cfi_endproc
 410              	.LFE282:
 412 0052 00BF     	 .section .text.XMC_SPI_CH_EnableSlaveSelect,"ax",%progbits
 413              	 .align 2
 414              	 .global XMC_SPI_CH_EnableSlaveSelect
 415              	 .thumb
 416              	 .thumb_func
 418              	XMC_SPI_CH_EnableSlaveSelect:
 419              	.LFB283:
 184:../Libraries/XMCLib/src/xmc_spi.c **** 
 185:../Libraries/XMCLib/src/xmc_spi.c **** /* Enable the selected slave signal by setting (SELO) bits in PCR register. */
 186:../Libraries/XMCLib/src/xmc_spi.c **** void XMC_SPI_CH_EnableSlaveSelect(XMC_USIC_CH_t *const channel, const XMC_SPI_CH_SLAVE_SELECT_t sla
 187:../Libraries/XMCLib/src/xmc_spi.c **** {
 420              	 .loc 3 187 0
 421              	 .cfi_startproc
 422              	 
 423              	 
 424              	 
 425 0000 80B4     	 push {r7}
 426              	.LCFI33:
 427              	 .cfi_def_cfa_offset 4
 428              	 .cfi_offset 7,-4
 429 0002 83B0     	 sub sp,sp,#12
 430              	.LCFI34:
 431              	 .cfi_def_cfa_offset 16
 432 0004 00AF     	 add r7,sp,#0
 433              	.LCFI35:
 434              	 .cfi_def_cfa_register 7
 435 0006 7860     	 str r0,[r7,#4]
 436 0008 3960     	 str r1,[r7]
 188:../Libraries/XMCLib/src/xmc_spi.c ****   /* Configuration of Protocol Control Register */
 189:../Libraries/XMCLib/src/xmc_spi.c ****   channel->PCR_SSCMode &= (uint32_t)~USIC_CH_PCR_SSCMode_SELO_Msk;
 437              	 .loc 3 189 0
 438 000a 7B68     	 ldr r3,[r7,#4]
 439 000c DB6B     	 ldr r3,[r3,#60]
 440 000e 23F47F02 	 bic r2,r3,#16711680
 441 0012 7B68     	 ldr r3,[r7,#4]
 442 0014 DA63     	 str r2,[r3,#60]
 190:../Libraries/XMCLib/src/xmc_spi.c ****   channel->PCR_SSCMode |= (uint32_t)slave;
 443              	 .loc 3 190 0
 444 0016 7B68     	 ldr r3,[r7,#4]
 445 0018 DA6B     	 ldr r2,[r3,#60]
 446 001a 3B68     	 ldr r3,[r7]
 447 001c 1A43     	 orrs r2,r2,r3
 448 001e 7B68     	 ldr r3,[r7,#4]
 449 0020 DA63     	 str r2,[r3,#60]
 191:../Libraries/XMCLib/src/xmc_spi.c **** }
 450              	 .loc 3 191 0
 451 0022 0C37     	 adds r7,r7,#12
 452              	.LCFI36:
 453              	 .cfi_def_cfa_offset 4
 454 0024 BD46     	 mov sp,r7
 455              	.LCFI37:
 456              	 .cfi_def_cfa_register 13
 457              	 
 458 0026 5DF8047B 	 ldr r7,[sp],#4
 459              	.LCFI38:
 460              	 .cfi_restore 7
 461              	 .cfi_def_cfa_offset 0
 462 002a 7047     	 bx lr
 463              	 .cfi_endproc
 464              	.LFE283:
 466              	 .section .text.XMC_SPI_CH_DisableSlaveSelect,"ax",%progbits
 467              	 .align 2
 468              	 .global XMC_SPI_CH_DisableSlaveSelect
 469              	 .thumb
 470              	 .thumb_func
 472              	XMC_SPI_CH_DisableSlaveSelect:
 473              	.LFB284:
 192:../Libraries/XMCLib/src/xmc_spi.c **** 
 193:../Libraries/XMCLib/src/xmc_spi.c **** /* Disable the slave signals by clearing (SELO) bits in PCR register. */
 194:../Libraries/XMCLib/src/xmc_spi.c **** void XMC_SPI_CH_DisableSlaveSelect(XMC_USIC_CH_t *const channel)
 195:../Libraries/XMCLib/src/xmc_spi.c **** {
 474              	 .loc 3 195 0
 475              	 .cfi_startproc
 476              	 
 477              	 
 478 0000 80B5     	 push {r7,lr}
 479              	.LCFI39:
 480              	 .cfi_def_cfa_offset 8
 481              	 .cfi_offset 7,-8
 482              	 .cfi_offset 14,-4
 483 0002 82B0     	 sub sp,sp,#8
 484              	.LCFI40:
 485              	 .cfi_def_cfa_offset 16
 486 0004 00AF     	 add r7,sp,#0
 487              	.LCFI41:
 488              	 .cfi_def_cfa_register 7
 489 0006 7860     	 str r0,[r7,#4]
 196:../Libraries/XMCLib/src/xmc_spi.c ****   XMC_SPI_CH_ClearStatusFlag(channel, (uint32_t)XMC_SPI_CH_STATUS_FLAG_MSLS);
 490              	 .loc 3 196 0
 491 0008 7868     	 ldr r0,[r7,#4]
 492 000a 0121     	 movs r1,#1
 493 000c FFF7FEFF 	 bl XMC_SPI_CH_ClearStatusFlag
 197:../Libraries/XMCLib/src/xmc_spi.c **** 
 198:../Libraries/XMCLib/src/xmc_spi.c ****   /* Configuration of Protocol Control Register */
 199:../Libraries/XMCLib/src/xmc_spi.c ****   channel->PCR_SSCMode &= (uint32_t)~USIC_CH_PCR_SSCMode_SELO_Msk;
 494              	 .loc 3 199 0
 495 0010 7B68     	 ldr r3,[r7,#4]
 496 0012 DB6B     	 ldr r3,[r3,#60]
 497 0014 23F47F02 	 bic r2,r3,#16711680
 498 0018 7B68     	 ldr r3,[r7,#4]
 499 001a DA63     	 str r2,[r3,#60]
 200:../Libraries/XMCLib/src/xmc_spi.c **** }
 500              	 .loc 3 200 0
 501 001c 0837     	 adds r7,r7,#8
 502              	.LCFI42:
 503              	 .cfi_def_cfa_offset 8
 504 001e BD46     	 mov sp,r7
 505              	.LCFI43:
 506              	 .cfi_def_cfa_register 13
 507              	 
 508 0020 80BD     	 pop {r7,pc}
 509              	 .cfi_endproc
 510              	.LFE284:
 512 0022 00BF     	 .section .text.XMC_SPI_CH_Transmit,"ax",%progbits
 513              	 .align 2
 514              	 .global XMC_SPI_CH_Transmit
 515              	 .thumb
 516              	 .thumb_func
 518              	XMC_SPI_CH_Transmit:
 519              	.LFB285:
 201:../Libraries/XMCLib/src/xmc_spi.c **** 
 202:../Libraries/XMCLib/src/xmc_spi.c **** /* Puts the data into FIFO if FIFO mode is enabled or else into standard buffers, by setting the pr
 203:../Libraries/XMCLib/src/xmc_spi.c **** void XMC_SPI_CH_Transmit(XMC_USIC_CH_t *const channel, const uint16_t data, const XMC_SPI_CH_MODE_t
 204:../Libraries/XMCLib/src/xmc_spi.c **** {
 520              	 .loc 3 204 0
 521              	 .cfi_startproc
 522              	 
 523              	 
 524 0000 80B5     	 push {r7,lr}
 525              	.LCFI44:
 526              	 .cfi_def_cfa_offset 8
 527              	 .cfi_offset 7,-8
 528              	 .cfi_offset 14,-4
 529 0002 82B0     	 sub sp,sp,#8
 530              	.LCFI45:
 531              	 .cfi_def_cfa_offset 16
 532 0004 00AF     	 add r7,sp,#0
 533              	.LCFI46:
 534              	 .cfi_def_cfa_register 7
 535 0006 7860     	 str r0,[r7,#4]
 536 0008 0B46     	 mov r3,r1
 537 000a 7B80     	 strh r3,[r7,#2]
 538 000c 1346     	 mov r3,r2
 539 000e 7B70     	 strb r3,[r7,#1]
 205:../Libraries/XMCLib/src/xmc_spi.c **** 
 206:../Libraries/XMCLib/src/xmc_spi.c ****   channel->CCR = (channel->CCR & (uint32_t)(~USIC_CH_CCR_HPCEN_Msk)) |
 540              	 .loc 3 206 0
 541 0010 7B68     	 ldr r3,[r7,#4]
 542 0012 1B6C     	 ldr r3,[r3,#64]
 543 0014 23F0C002 	 bic r2,r3,#192
 207:../Libraries/XMCLib/src/xmc_spi.c ****                  (((uint32_t) mode << USIC_CH_CCR_HPCEN_Pos) & (uint32_t)USIC_CH_CCR_HPCEN_Msk);
 544              	 .loc 3 207 0
 545 0018 7B78     	 ldrb r3,[r7,#1]
 546 001a 9B01     	 lsls r3,r3,#6
 547 001c DBB2     	 uxtb r3,r3
 206:../Libraries/XMCLib/src/xmc_spi.c ****                  (((uint32_t) mode << USIC_CH_CCR_HPCEN_Pos) & (uint32_t)USIC_CH_CCR_HPCEN_Msk);
 548              	 .loc 3 206 0
 549 001e 1A43     	 orrs r2,r2,r3
 550 0020 7B68     	 ldr r3,[r7,#4]
 551 0022 1A64     	 str r2,[r3,#64]
 208:../Libraries/XMCLib/src/xmc_spi.c **** 
 209:../Libraries/XMCLib/src/xmc_spi.c **** 
 210:../Libraries/XMCLib/src/xmc_spi.c ****   /* Check FIFO size */
 211:../Libraries/XMCLib/src/xmc_spi.c ****   if ((channel->TBCTR & USIC_CH_TBCTR_SIZE_Msk) == 0U)
 552              	 .loc 3 211 0
 553 0024 7B68     	 ldr r3,[r7,#4]
 554 0026 D3F80831 	 ldr r3,[r3,#264]
 555 002a 03F0E063 	 and r3,r3,#117440512
 556 002e 002B     	 cmp r3,#0
 557 0030 12D1     	 bne .L23
 212:../Libraries/XMCLib/src/xmc_spi.c ****   {
 213:../Libraries/XMCLib/src/xmc_spi.c ****     while (XMC_USIC_CH_GetTransmitBufferStatus(channel) == XMC_USIC_CH_TBUF_STATUS_BUSY)
 558              	 .loc 3 213 0
 559 0032 00BF     	 nop
 560              	.L24:
 561              	 .loc 3 213 0 is_stmt 0 discriminator 1
 562 0034 7868     	 ldr r0,[r7,#4]
 563 0036 FFF7FEFF 	 bl XMC_USIC_CH_GetTransmitBufferStatus
 564 003a 0346     	 mov r3,r0
 565 003c 802B     	 cmp r3,#128
 566 003e F9D0     	 beq .L24
 214:../Libraries/XMCLib/src/xmc_spi.c ****     {
 215:../Libraries/XMCLib/src/xmc_spi.c ****     }
 216:../Libraries/XMCLib/src/xmc_spi.c **** 
 217:../Libraries/XMCLib/src/xmc_spi.c ****     XMC_SPI_CH_ClearStatusFlag(channel, (uint32_t)XMC_SPI_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION
 567              	 .loc 3 217 0 is_stmt 1
 568 0040 7868     	 ldr r0,[r7,#4]
 569 0042 4FF40051 	 mov r1,#8192
 570 0046 FFF7FEFF 	 bl XMC_SPI_CH_ClearStatusFlag
 218:../Libraries/XMCLib/src/xmc_spi.c **** 
 219:../Libraries/XMCLib/src/xmc_spi.c ****     channel->TBUF[mode] = data;
 571              	 .loc 3 219 0
 572 004a 7A78     	 ldrb r2,[r7,#1]
 573 004c 7988     	 ldrh r1,[r7,#2]
 574 004e 7B68     	 ldr r3,[r7,#4]
 575 0050 2032     	 adds r2,r2,#32
 576 0052 43F82210 	 str r1,[r3,r2,lsl#2]
 577 0056 05E0     	 b .L22
 578              	.L23:
 220:../Libraries/XMCLib/src/xmc_spi.c ****   }
 221:../Libraries/XMCLib/src/xmc_spi.c ****   else
 222:../Libraries/XMCLib/src/xmc_spi.c ****   {
 223:../Libraries/XMCLib/src/xmc_spi.c ****     channel->IN[mode] = data;
 579              	 .loc 3 223 0
 580 0058 7A78     	 ldrb r2,[r7,#1]
 581 005a 7988     	 ldrh r1,[r7,#2]
 582 005c 7B68     	 ldr r3,[r7,#4]
 583 005e 6032     	 adds r2,r2,#96
 584 0060 43F82210 	 str r1,[r3,r2,lsl#2]
 585              	.L22:
 224:../Libraries/XMCLib/src/xmc_spi.c ****   }
 225:../Libraries/XMCLib/src/xmc_spi.c **** }
 586              	 .loc 3 225 0
 587 0064 0837     	 adds r7,r7,#8
 588              	.LCFI47:
 589              	 .cfi_def_cfa_offset 8
 590 0066 BD46     	 mov sp,r7
 591              	.LCFI48:
 592              	 .cfi_def_cfa_register 13
 593              	 
 594 0068 80BD     	 pop {r7,pc}
 595              	 .cfi_endproc
 596              	.LFE285:
 598 006a 00BF     	 .section .text.XMC_SPI_CH_GetReceivedData,"ax",%progbits
 599              	 .align 2
 600              	 .global XMC_SPI_CH_GetReceivedData
 601              	 .thumb
 602              	 .thumb_func
 604              	XMC_SPI_CH_GetReceivedData:
 605              	.LFB286:
 226:../Libraries/XMCLib/src/xmc_spi.c **** 
 227:../Libraries/XMCLib/src/xmc_spi.c **** /* Reads the data from the buffers based on the FIFO mode selection. */
 228:../Libraries/XMCLib/src/xmc_spi.c **** uint16_t XMC_SPI_CH_GetReceivedData(XMC_USIC_CH_t *const channel)
 229:../Libraries/XMCLib/src/xmc_spi.c **** {
 606              	 .loc 3 229 0
 607              	 .cfi_startproc
 608              	 
 609              	 
 610              	 
 611 0000 80B4     	 push {r7}
 612              	.LCFI49:
 613              	 .cfi_def_cfa_offset 4
 614              	 .cfi_offset 7,-4
 615 0002 85B0     	 sub sp,sp,#20
 616              	.LCFI50:
 617              	 .cfi_def_cfa_offset 24
 618 0004 00AF     	 add r7,sp,#0
 619              	.LCFI51:
 620              	 .cfi_def_cfa_register 7
 621 0006 7860     	 str r0,[r7,#4]
 230:../Libraries/XMCLib/src/xmc_spi.c ****   uint16_t retval;
 231:../Libraries/XMCLib/src/xmc_spi.c **** 
 232:../Libraries/XMCLib/src/xmc_spi.c ****   /* Check FIFO size */
 233:../Libraries/XMCLib/src/xmc_spi.c ****   if ((channel->RBCTR & USIC_CH_RBCTR_SIZE_Msk) == 0U)
 622              	 .loc 3 233 0
 623 0008 7B68     	 ldr r3,[r7,#4]
 624 000a D3F80C31 	 ldr r3,[r3,#268]
 625 000e 03F0E063 	 and r3,r3,#117440512
 626 0012 002B     	 cmp r3,#0
 627 0014 03D1     	 bne .L27
 234:../Libraries/XMCLib/src/xmc_spi.c ****   {
 235:../Libraries/XMCLib/src/xmc_spi.c ****     retval = (uint16_t)channel->RBUF;
 628              	 .loc 3 235 0
 629 0016 7B68     	 ldr r3,[r7,#4]
 630 0018 5B6D     	 ldr r3,[r3,#84]
 631 001a FB81     	 strh r3,[r7,#14]
 632 001c 03E0     	 b .L28
 633              	.L27:
 236:../Libraries/XMCLib/src/xmc_spi.c ****   }
 237:../Libraries/XMCLib/src/xmc_spi.c ****   else
 238:../Libraries/XMCLib/src/xmc_spi.c ****   {
 239:../Libraries/XMCLib/src/xmc_spi.c ****     retval = (uint16_t)channel->OUTR;
 634              	 .loc 3 239 0
 635 001e 7B68     	 ldr r3,[r7,#4]
 636 0020 D3F81C31 	 ldr r3,[r3,#284]
 637 0024 FB81     	 strh r3,[r7,#14]
 638              	.L28:
 240:../Libraries/XMCLib/src/xmc_spi.c ****   }
 241:../Libraries/XMCLib/src/xmc_spi.c **** 
 242:../Libraries/XMCLib/src/xmc_spi.c ****   return retval;
 639              	 .loc 3 242 0
 640 0026 FB89     	 ldrh r3,[r7,#14]
 243:../Libraries/XMCLib/src/xmc_spi.c **** }
 641              	 .loc 3 243 0
 642 0028 1846     	 mov r0,r3
 643 002a 1437     	 adds r7,r7,#20
 644              	.LCFI52:
 645              	 .cfi_def_cfa_offset 4
 646 002c BD46     	 mov sp,r7
 647              	.LCFI53:
 648              	 .cfi_def_cfa_register 13
 649              	 
 650 002e 5DF8047B 	 ldr r7,[sp],#4
 651              	.LCFI54:
 652              	 .cfi_restore 7
 653              	 .cfi_def_cfa_offset 0
 654 0032 7047     	 bx lr
 655              	 .cfi_endproc
 656              	.LFE286:
 658              	 .section .text.XMC_SPI_CH_SetInterwordDelay,"ax",%progbits
 659              	 .align 2
 660              	 .global XMC_SPI_CH_SetInterwordDelay
 661              	 .thumb
 662              	 .thumb_func
 664              	XMC_SPI_CH_SetInterwordDelay:
 665              	.LFB287:
 244:../Libraries/XMCLib/src/xmc_spi.c **** 
 245:../Libraries/XMCLib/src/xmc_spi.c **** /* Configures the inter word delay by setting PCR.PCTQ1, PCR.DCTQ1 bit fields. */
 246:../Libraries/XMCLib/src/xmc_spi.c **** void XMC_SPI_CH_SetInterwordDelay(XMC_USIC_CH_t *const channel, uint32_t tinterword_delay_us)
 247:../Libraries/XMCLib/src/xmc_spi.c **** {
 666              	 .loc 3 247 0
 667              	 .cfi_startproc
 668              	 
 669              	 
 670 0000 80B5     	 push {r7,lr}
 671              	.LCFI55:
 672              	 .cfi_def_cfa_offset 8
 673              	 .cfi_offset 7,-8
 674              	 .cfi_offset 14,-4
 675 0002 8EB0     	 sub sp,sp,#56
 676              	.LCFI56:
 677              	 .cfi_def_cfa_offset 64
 678 0004 00AF     	 add r7,sp,#0
 679              	.LCFI57:
 680              	 .cfi_def_cfa_register 7
 681 0006 7860     	 str r0,[r7,#4]
 682 0008 3960     	 str r1,[r7]
 248:../Libraries/XMCLib/src/xmc_spi.c ****   uint32_t peripheral_clock;
 249:../Libraries/XMCLib/src/xmc_spi.c ****   uint32_t pdiv;
 250:../Libraries/XMCLib/src/xmc_spi.c ****   uint32_t step;
 251:../Libraries/XMCLib/src/xmc_spi.c ****   uint32_t fFD;
 252:../Libraries/XMCLib/src/xmc_spi.c ****   uint32_t fpdiv;
 253:../Libraries/XMCLib/src/xmc_spi.c ****   uint32_t divider_factor1 = 0U;
 683              	 .loc 3 253 0
 684 000a 0023     	 movs r3,#0
 685 000c FB61     	 str r3,[r7,#28]
 254:../Libraries/XMCLib/src/xmc_spi.c ****   uint32_t divider_factor2 = 32U;
 686              	 .loc 3 254 0
 687 000e 2023     	 movs r3,#32
 688 0010 7B63     	 str r3,[r7,#52]
 255:../Libraries/XMCLib/src/xmc_spi.c ****   uint32_t divider_factor1_int = 0U;
 689              	 .loc 3 255 0
 690 0012 0023     	 movs r3,#0
 691 0014 3B63     	 str r3,[r7,#48]
 256:../Libraries/XMCLib/src/xmc_spi.c ****   uint32_t divider_factor1_int_min = 4U;
 692              	 .loc 3 256 0
 693 0016 0423     	 movs r3,#4
 694 0018 FB62     	 str r3,[r7,#44]
 257:../Libraries/XMCLib/src/xmc_spi.c ****   uint32_t divider_factor1_frac_min = 100U;
 695              	 .loc 3 257 0
 696 001a 6423     	 movs r3,#100
 697 001c BB62     	 str r3,[r7,#40]
 258:../Libraries/XMCLib/src/xmc_spi.c ****   uint32_t divider_factor1_frac = 0U;
 698              	 .loc 3 258 0
 699 001e 0023     	 movs r3,#0
 700 0020 7B62     	 str r3,[r7,#36]
 259:../Libraries/XMCLib/src/xmc_spi.c ****   uint32_t divider_factor2_temp = 0U;
 701              	 .loc 3 259 0
 702 0022 0023     	 movs r3,#0
 703 0024 3B62     	 str r3,[r7,#32]
 260:../Libraries/XMCLib/src/xmc_spi.c ****   peripheral_clock = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 704              	 .loc 3 260 0
 705 0026 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 706 002a B861     	 str r0,[r7,#24]
 261:../Libraries/XMCLib/src/xmc_spi.c ****   pdiv = (uint32_t)(channel->BRG & USIC_CH_BRG_PDIV_Msk) >> USIC_CH_BRG_PDIV_Pos;
 707              	 .loc 3 261 0
 708 002c 7B68     	 ldr r3,[r7,#4]
 709 002e 5A69     	 ldr r2,[r3,#20]
 710 0030 3C4B     	 ldr r3,.L37
 711 0032 1340     	 ands r3,r3,r2
 712 0034 1B0C     	 lsrs r3,r3,#16
 713 0036 7B61     	 str r3,[r7,#20]
 262:../Libraries/XMCLib/src/xmc_spi.c ****   step = (uint32_t)(channel->FDR & USIC_CH_FDR_STEP_Msk) >> USIC_CH_FDR_STEP_Pos;
 714              	 .loc 3 262 0
 715 0038 7B68     	 ldr r3,[r7,#4]
 716 003a 1B69     	 ldr r3,[r3,#16]
 717 003c C3F30903 	 ubfx r3,r3,#0,#10
 718 0040 3B61     	 str r3,[r7,#16]
 263:../Libraries/XMCLib/src/xmc_spi.c ****   fFD = (uint32_t)((peripheral_clock >> 10U) * step);
 719              	 .loc 3 263 0
 720 0042 BB69     	 ldr r3,[r7,#24]
 721 0044 9B0A     	 lsrs r3,r3,#10
 722 0046 3A69     	 ldr r2,[r7,#16]
 723 0048 02FB03F3 	 mul r3,r2,r3
 724 004c FB60     	 str r3,[r7,#12]
 264:../Libraries/XMCLib/src/xmc_spi.c ****   fpdiv = fFD / (1U + pdiv);
 725              	 .loc 3 264 0
 726 004e 7B69     	 ldr r3,[r7,#20]
 727 0050 0133     	 adds r3,r3,#1
 728 0052 FA68     	 ldr r2,[r7,#12]
 729 0054 B2FBF3F3 	 udiv r3,r2,r3
 730 0058 BB60     	 str r3,[r7,#8]
 265:../Libraries/XMCLib/src/xmc_spi.c **** 
 266:../Libraries/XMCLib/src/xmc_spi.c ****   if (tinterword_delay_us < (128000000 / fpdiv))
 731              	 .loc 3 266 0
 732 005a 334A     	 ldr r2,.L37+4
 733 005c BB68     	 ldr r3,[r7,#8]
 734 005e B2FBF3F2 	 udiv r2,r2,r3
 735 0062 3B68     	 ldr r3,[r7]
 736 0064 9A42     	 cmp r2,r3
 737 0066 46D9     	 bls .L31
 267:../Libraries/XMCLib/src/xmc_spi.c ****   {
 268:../Libraries/XMCLib/src/xmc_spi.c ****     for (divider_factor2_temp = 32U; divider_factor2_temp > 0U; --divider_factor2_temp)
 738              	 .loc 3 268 0
 739 0068 2023     	 movs r3,#32
 740 006a 3B62     	 str r3,[r7,#32]
 741 006c 40E0     	 b .L32
 742              	.L36:
 269:../Libraries/XMCLib/src/xmc_spi.c ****     {
 270:../Libraries/XMCLib/src/xmc_spi.c **** 
 271:../Libraries/XMCLib/src/xmc_spi.c ****       divider_factor1 = (tinterword_delay_us * fpdiv) / (divider_factor2_temp * 10000);
 743              	 .loc 3 271 0
 744 006e 3B68     	 ldr r3,[r7]
 745 0070 BA68     	 ldr r2,[r7,#8]
 746 0072 02FB03F2 	 mul r2,r2,r3
 747 0076 3B6A     	 ldr r3,[r7,#32]
 748 0078 42F21071 	 movw r1,#10000
 749 007c 01FB03F3 	 mul r3,r1,r3
 750 0080 B2FBF3F3 	 udiv r3,r2,r3
 751 0084 FB61     	 str r3,[r7,#28]
 272:../Libraries/XMCLib/src/xmc_spi.c ****       divider_factor1_frac = divider_factor1 % 100U;
 752              	 .loc 3 272 0
 753 0086 FB69     	 ldr r3,[r7,#28]
 754 0088 284A     	 ldr r2,.L37+8
 755 008a A2FB0312 	 umull r1,r2,r2,r3
 756 008e 5209     	 lsrs r2,r2,#5
 757 0090 6421     	 movs r1,#100
 758 0092 01FB02F2 	 mul r2,r1,r2
 759 0096 9B1A     	 subs r3,r3,r2
 760 0098 7B62     	 str r3,[r7,#36]
 273:../Libraries/XMCLib/src/xmc_spi.c **** 
 274:../Libraries/XMCLib/src/xmc_spi.c ****       if (divider_factor1_frac > 50)
 761              	 .loc 3 274 0
 762 009a 7B6A     	 ldr r3,[r7,#36]
 763 009c 322B     	 cmp r3,#50
 764 009e 0ED9     	 bls .L33
 275:../Libraries/XMCLib/src/xmc_spi.c ****       {
 276:../Libraries/XMCLib/src/xmc_spi.c ****         divider_factor1_int =  (divider_factor1 / 100U) + 1;
 765              	 .loc 3 276 0
 766 00a0 FB69     	 ldr r3,[r7,#28]
 767 00a2 224A     	 ldr r2,.L37+8
 768 00a4 A2FB0323 	 umull r2,r3,r2,r3
 769 00a8 5B09     	 lsrs r3,r3,#5
 770 00aa 0133     	 adds r3,r3,#1
 771 00ac 3B63     	 str r3,[r7,#48]
 277:../Libraries/XMCLib/src/xmc_spi.c ****         divider_factor1_frac = (divider_factor1_int * 100) - divider_factor1;
 772              	 .loc 3 277 0
 773 00ae 3B6B     	 ldr r3,[r7,#48]
 774 00b0 6422     	 movs r2,#100
 775 00b2 02FB03F2 	 mul r2,r2,r3
 776 00b6 FB69     	 ldr r3,[r7,#28]
 777 00b8 D31A     	 subs r3,r2,r3
 778 00ba 7B62     	 str r3,[r7,#36]
 779 00bc 05E0     	 b .L34
 780              	.L33:
 278:../Libraries/XMCLib/src/xmc_spi.c ****       }
 279:../Libraries/XMCLib/src/xmc_spi.c ****       else
 280:../Libraries/XMCLib/src/xmc_spi.c ****       {
 281:../Libraries/XMCLib/src/xmc_spi.c ****         divider_factor1_int =  (divider_factor1 / 100U);
 781              	 .loc 3 281 0
 782 00be FB69     	 ldr r3,[r7,#28]
 783 00c0 1A4A     	 ldr r2,.L37+8
 784 00c2 A2FB0323 	 umull r2,r3,r2,r3
 785 00c6 5B09     	 lsrs r3,r3,#5
 786 00c8 3B63     	 str r3,[r7,#48]
 787              	.L34:
 282:../Libraries/XMCLib/src/xmc_spi.c ****       }
 283:../Libraries/XMCLib/src/xmc_spi.c **** 
 284:../Libraries/XMCLib/src/xmc_spi.c ****       if ((divider_factor1_int < 5U) && (divider_factor1_int > 0) && (divider_factor1_frac < divide
 788              	 .loc 3 284 0
 789 00ca 3B6B     	 ldr r3,[r7,#48]
 790 00cc 042B     	 cmp r3,#4
 791 00ce 0CD8     	 bhi .L35
 792              	 .loc 3 284 0 is_stmt 0 discriminator 1
 793 00d0 3B6B     	 ldr r3,[r7,#48]
 794 00d2 002B     	 cmp r3,#0
 795 00d4 09D0     	 beq .L35
 796              	 .loc 3 284 0 discriminator 2
 797 00d6 7A6A     	 ldr r2,[r7,#36]
 798 00d8 BB6A     	 ldr r3,[r7,#40]
 799 00da 9A42     	 cmp r2,r3
 800 00dc 05D2     	 bcs .L35
 285:../Libraries/XMCLib/src/xmc_spi.c ****       {
 286:../Libraries/XMCLib/src/xmc_spi.c ****         divider_factor1_frac_min = divider_factor1_frac;
 801              	 .loc 3 286 0 is_stmt 1
 802 00de 7B6A     	 ldr r3,[r7,#36]
 803 00e0 BB62     	 str r3,[r7,#40]
 287:../Libraries/XMCLib/src/xmc_spi.c ****         divider_factor1_int_min = divider_factor1_int;
 804              	 .loc 3 287 0
 805 00e2 3B6B     	 ldr r3,[r7,#48]
 806 00e4 FB62     	 str r3,[r7,#44]
 288:../Libraries/XMCLib/src/xmc_spi.c ****         divider_factor2 = divider_factor2_temp;
 807              	 .loc 3 288 0
 808 00e6 3B6A     	 ldr r3,[r7,#32]
 809 00e8 7B63     	 str r3,[r7,#52]
 810              	.L35:
 268:../Libraries/XMCLib/src/xmc_spi.c ****     {
 811              	 .loc 3 268 0 discriminator 2
 812 00ea 3B6A     	 ldr r3,[r7,#32]
 813 00ec 013B     	 subs r3,r3,#1
 814 00ee 3B62     	 str r3,[r7,#32]
 815              	.L32:
 268:../Libraries/XMCLib/src/xmc_spi.c ****     {
 816              	 .loc 3 268 0 is_stmt 0 discriminator 1
 817 00f0 3B6A     	 ldr r3,[r7,#32]
 818 00f2 002B     	 cmp r3,#0
 819 00f4 BBD1     	 bne .L36
 820              	.L31:
 289:../Libraries/XMCLib/src/xmc_spi.c ****       }
 290:../Libraries/XMCLib/src/xmc_spi.c ****     }
 291:../Libraries/XMCLib/src/xmc_spi.c ****   }
 292:../Libraries/XMCLib/src/xmc_spi.c **** 
 293:../Libraries/XMCLib/src/xmc_spi.c ****   channel->PCR_SSCMode = (uint32_t)((channel->PCR_SSCMode) & (~(USIC_CH_PCR_SSCMode_DCTQ1_Msk |
 821              	 .loc 3 293 0 is_stmt 1
 822 00f6 7B68     	 ldr r3,[r7,#4]
 823 00f8 DB6B     	 ldr r3,[r3,#60]
 824 00fa 23F4FF53 	 bic r3,r3,#8160
 825 00fe 23F01003 	 bic r3,r3,#16
 294:../Libraries/XMCLib/src/xmc_spi.c ****                                     USIC_CH_PCR_SSCMode_PCTQ1_Msk |
 295:../Libraries/XMCLib/src/xmc_spi.c ****                                     USIC_CH_PCR_SSCMode_CTQSEL1_Msk))) |
 296:../Libraries/XMCLib/src/xmc_spi.c ****                          (((divider_factor1_int_min - 1) << USIC_CH_PCR_SSCMode_PCTQ1_Pos) & (uint3
 826              	 .loc 3 296 0
 827 0102 FA6A     	 ldr r2,[r7,#44]
 828 0104 013A     	 subs r2,r2,#1
 829 0106 9201     	 lsls r2,r2,#6
 830 0108 D2B2     	 uxtb r2,r2
 295:../Libraries/XMCLib/src/xmc_spi.c ****                          (((divider_factor1_int_min - 1) << USIC_CH_PCR_SSCMode_PCTQ1_Pos) & (uint3
 831              	 .loc 3 295 0
 832 010a 1A43     	 orrs r2,r2,r3
 297:../Libraries/XMCLib/src/xmc_spi.c ****                          (((divider_factor2 - 1 ) << USIC_CH_PCR_SSCMode_DCTQ1_Pos) & (uint32_t)USI
 833              	 .loc 3 297 0
 834 010c 7B6B     	 ldr r3,[r7,#52]
 835 010e 013B     	 subs r3,r3,#1
 836 0110 1B02     	 lsls r3,r3,#8
 837 0112 03F4F853 	 and r3,r3,#7936
 296:../Libraries/XMCLib/src/xmc_spi.c ****                          (((divider_factor2 - 1 ) << USIC_CH_PCR_SSCMode_DCTQ1_Pos) & (uint32_t)USI
 838              	 .loc 3 296 0
 839 0116 1A43     	 orrs r2,r2,r3
 293:../Libraries/XMCLib/src/xmc_spi.c ****                                     USIC_CH_PCR_SSCMode_PCTQ1_Msk |
 840              	 .loc 3 293 0
 841 0118 7B68     	 ldr r3,[r7,#4]
 842 011a DA63     	 str r2,[r3,#60]
 298:../Libraries/XMCLib/src/xmc_spi.c **** }
 843              	 .loc 3 298 0
 844 011c 3837     	 adds r7,r7,#56
 845              	.LCFI58:
 846              	 .cfi_def_cfa_offset 8
 847 011e BD46     	 mov sp,r7
 848              	.LCFI59:
 849              	 .cfi_def_cfa_register 13
 850              	 
 851 0120 80BD     	 pop {r7,pc}
 852              	.L38:
 853 0122 00BF     	 .align 2
 854              	.L37:
 855 0124 0000FF03 	 .word 67043328
 856 0128 0020A107 	 .word 128000000
 857 012c 1F85EB51 	 .word 1374389535
 858              	 .cfi_endproc
 859              	.LFE287:
 861              	 .section .text.XMC_SPI_CH_Stop,"ax",%progbits
 862              	 .align 2
 863              	 .global XMC_SPI_CH_Stop
 864              	 .thumb
 865              	 .thumb_func
 867              	XMC_SPI_CH_Stop:
 868              	.LFB288:
 299:../Libraries/XMCLib/src/xmc_spi.c **** 
 300:../Libraries/XMCLib/src/xmc_spi.c **** XMC_SPI_CH_STATUS_t XMC_SPI_CH_Stop(XMC_USIC_CH_t *const channel)
 301:../Libraries/XMCLib/src/xmc_spi.c **** {
 869              	 .loc 3 301 0
 870              	 .cfi_startproc
 871              	 
 872              	 
 873 0000 80B5     	 push {r7,lr}
 874              	.LCFI60:
 875              	 .cfi_def_cfa_offset 8
 876              	 .cfi_offset 7,-8
 877              	 .cfi_offset 14,-4
 878 0002 84B0     	 sub sp,sp,#16
 879              	.LCFI61:
 880              	 .cfi_def_cfa_offset 24
 881 0004 00AF     	 add r7,sp,#0
 882              	.LCFI62:
 883              	 .cfi_def_cfa_register 7
 884 0006 7860     	 str r0,[r7,#4]
 302:../Libraries/XMCLib/src/xmc_spi.c ****   XMC_SPI_CH_STATUS_t status = XMC_SPI_CH_STATUS_OK;
 885              	 .loc 3 302 0
 886 0008 0023     	 movs r3,#0
 887 000a FB73     	 strb r3,[r7,#15]
 303:../Libraries/XMCLib/src/xmc_spi.c **** 
 304:../Libraries/XMCLib/src/xmc_spi.c ****   if (XMC_USIC_CH_GetTransmitBufferStatus(channel) == XMC_USIC_CH_TBUF_STATUS_BUSY)
 888              	 .loc 3 304 0
 889 000c 7868     	 ldr r0,[r7,#4]
 890 000e FFF7FEFF 	 bl XMC_USIC_CH_GetTransmitBufferStatus
 891 0012 0346     	 mov r3,r0
 892 0014 802B     	 cmp r3,#128
 893 0016 02D1     	 bne .L40
 305:../Libraries/XMCLib/src/xmc_spi.c ****   {
 306:../Libraries/XMCLib/src/xmc_spi.c ****     status = XMC_SPI_CH_STATUS_BUSY;
 894              	 .loc 3 306 0
 895 0018 0223     	 movs r3,#2
 896 001a FB73     	 strb r3,[r7,#15]
 897 001c 03E0     	 b .L41
 898              	.L40:
 307:../Libraries/XMCLib/src/xmc_spi.c ****   }
 308:../Libraries/XMCLib/src/xmc_spi.c ****   else
 309:../Libraries/XMCLib/src/xmc_spi.c ****   {
 310:../Libraries/XMCLib/src/xmc_spi.c **** 
 311:../Libraries/XMCLib/src/xmc_spi.c ****     /* USIC channel in IDLE mode */
 312:../Libraries/XMCLib/src/xmc_spi.c ****     XMC_USIC_CH_SetMode(channel, XMC_USIC_CH_OPERATING_MODE_IDLE);
 899              	 .loc 3 312 0
 900 001e 7868     	 ldr r0,[r7,#4]
 901 0020 0021     	 movs r1,#0
 902 0022 FFF7FEFF 	 bl XMC_USIC_CH_SetMode
 903              	.L41:
 313:../Libraries/XMCLib/src/xmc_spi.c ****   }
 314:../Libraries/XMCLib/src/xmc_spi.c **** 
 315:../Libraries/XMCLib/src/xmc_spi.c ****   return status;
 904              	 .loc 3 315 0
 905 0026 FB7B     	 ldrb r3,[r7,#15]
 316:../Libraries/XMCLib/src/xmc_spi.c **** }
 906              	 .loc 3 316 0
 907 0028 1846     	 mov r0,r3
 908 002a 1037     	 adds r7,r7,#16
 909              	.LCFI63:
 910              	 .cfi_def_cfa_offset 8
 911 002c BD46     	 mov sp,r7
 912              	.LCFI64:
 913              	 .cfi_def_cfa_register 13
 914              	 
 915 002e 80BD     	 pop {r7,pc}
 916              	 .cfi_endproc
 917              	.LFE288:
 919              	 .section .text.XMC_SPI_CH_EnableEvent,"ax",%progbits
 920              	 .align 2
 921              	 .global XMC_SPI_CH_EnableEvent
 922              	 .thumb
 923              	 .thumb_func
 925              	XMC_SPI_CH_EnableEvent:
 926              	.LFB289:
 317:../Libraries/XMCLib/src/xmc_spi.c **** 
 318:../Libraries/XMCLib/src/xmc_spi.c **** void XMC_SPI_CH_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t event)
 319:../Libraries/XMCLib/src/xmc_spi.c **** {
 927              	 .loc 3 319 0
 928              	 .cfi_startproc
 929              	 
 930              	 
 931              	 
 932 0000 80B4     	 push {r7}
 933              	.LCFI65:
 934              	 .cfi_def_cfa_offset 4
 935              	 .cfi_offset 7,-4
 936 0002 83B0     	 sub sp,sp,#12
 937              	.LCFI66:
 938              	 .cfi_def_cfa_offset 16
 939 0004 00AF     	 add r7,sp,#0
 940              	.LCFI67:
 941              	 .cfi_def_cfa_register 7
 942 0006 7860     	 str r0,[r7,#4]
 943 0008 3960     	 str r1,[r7]
 320:../Libraries/XMCLib/src/xmc_spi.c ****   channel->CCR |= (event & 0x1fc00U);
 944              	 .loc 3 320 0
 945 000a 7B68     	 ldr r3,[r7,#4]
 946 000c 1A6C     	 ldr r2,[r3,#64]
 947 000e 3B68     	 ldr r3,[r7]
 948 0010 03F4FE33 	 and r3,r3,#130048
 949 0014 1A43     	 orrs r2,r2,r3
 950 0016 7B68     	 ldr r3,[r7,#4]
 951 0018 1A64     	 str r2,[r3,#64]
 321:../Libraries/XMCLib/src/xmc_spi.c ****   channel->PCR_SSCMode |= ((event << 13U) & 0xe000U);
 952              	 .loc 3 321 0
 953 001a 7B68     	 ldr r3,[r7,#4]
 954 001c DA6B     	 ldr r2,[r3,#60]
 955 001e 3B68     	 ldr r3,[r7]
 956 0020 5B03     	 lsls r3,r3,#13
 957 0022 9BB2     	 uxth r3,r3
 958 0024 1A43     	 orrs r2,r2,r3
 959 0026 7B68     	 ldr r3,[r7,#4]
 960 0028 DA63     	 str r2,[r3,#60]
 322:../Libraries/XMCLib/src/xmc_spi.c **** }
 961              	 .loc 3 322 0
 962 002a 0C37     	 adds r7,r7,#12
 963              	.LCFI68:
 964              	 .cfi_def_cfa_offset 4
 965 002c BD46     	 mov sp,r7
 966              	.LCFI69:
 967              	 .cfi_def_cfa_register 13
 968              	 
 969 002e 5DF8047B 	 ldr r7,[sp],#4
 970              	.LCFI70:
 971              	 .cfi_restore 7
 972              	 .cfi_def_cfa_offset 0
 973 0032 7047     	 bx lr
 974              	 .cfi_endproc
 975              	.LFE289:
 977              	 .section .text.XMC_SPI_CH_DisableEvent,"ax",%progbits
 978              	 .align 2
 979              	 .global XMC_SPI_CH_DisableEvent
 980              	 .thumb
 981              	 .thumb_func
 983              	XMC_SPI_CH_DisableEvent:
 984              	.LFB290:
 323:../Libraries/XMCLib/src/xmc_spi.c **** 
 324:../Libraries/XMCLib/src/xmc_spi.c **** void XMC_SPI_CH_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t event)
 325:../Libraries/XMCLib/src/xmc_spi.c **** {
 985              	 .loc 3 325 0
 986              	 .cfi_startproc
 987              	 
 988              	 
 989              	 
 990 0000 80B4     	 push {r7}
 991              	.LCFI71:
 992              	 .cfi_def_cfa_offset 4
 993              	 .cfi_offset 7,-4
 994 0002 83B0     	 sub sp,sp,#12
 995              	.LCFI72:
 996              	 .cfi_def_cfa_offset 16
 997 0004 00AF     	 add r7,sp,#0
 998              	.LCFI73:
 999              	 .cfi_def_cfa_register 7
 1000 0006 7860     	 str r0,[r7,#4]
 1001 0008 3960     	 str r1,[r7]
 326:../Libraries/XMCLib/src/xmc_spi.c ****   channel->CCR &= (uint32_t)~(event & 0x1fc00U);
 1002              	 .loc 3 326 0
 1003 000a 7B68     	 ldr r3,[r7,#4]
 1004 000c 1A6C     	 ldr r2,[r3,#64]
 1005 000e 3B68     	 ldr r3,[r7]
 1006 0010 03F4FE33 	 and r3,r3,#130048
 1007 0014 DB43     	 mvns r3,r3
 1008 0016 1A40     	 ands r2,r2,r3
 1009 0018 7B68     	 ldr r3,[r7,#4]
 1010 001a 1A64     	 str r2,[r3,#64]
 327:../Libraries/XMCLib/src/xmc_spi.c ****   channel->PCR_SSCMode &= (uint32_t)~((event << 13U) & 0xe000U);
 1011              	 .loc 3 327 0
 1012 001c 7B68     	 ldr r3,[r7,#4]
 1013 001e DA6B     	 ldr r2,[r3,#60]
 1014 0020 3B68     	 ldr r3,[r7]
 1015 0022 5B03     	 lsls r3,r3,#13
 1016 0024 9BB2     	 uxth r3,r3
 1017 0026 DB43     	 mvns r3,r3
 1018 0028 1A40     	 ands r2,r2,r3
 1019 002a 7B68     	 ldr r3,[r7,#4]
 1020 002c DA63     	 str r2,[r3,#60]
 328:../Libraries/XMCLib/src/xmc_spi.c **** }
 1021              	 .loc 3 328 0
 1022 002e 0C37     	 adds r7,r7,#12
 1023              	.LCFI74:
 1024              	 .cfi_def_cfa_offset 4
 1025 0030 BD46     	 mov sp,r7
 1026              	.LCFI75:
 1027              	 .cfi_def_cfa_register 13
 1028              	 
 1029 0032 5DF8047B 	 ldr r7,[sp],#4
 1030              	.LCFI76:
 1031              	 .cfi_restore 7
 1032              	 .cfi_def_cfa_offset 0
 1033 0036 7047     	 bx lr
 1034              	 .cfi_endproc
 1035              	.LFE290:
 1037              	 .text
 1038              	.Letext0:
 1039              	 .file 4 "d:\\programs\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1040              	 .file 5 "d:\\programs\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1041              	 .file 6 "D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/CMSIS/Include/cmsis_gcc.h"
 1042              	 .file 7 "D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/CMSIS/Include/core_cm4.h"
 1043              	 .file 8 "D:/Workspace/Development/my/DAVE/Infineon_CANopen/Libraries/CMSIS/Infineon/XMC4800_series/Include/system_XMC4800.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_spi.c
    {standard input}:20     .text.XMC_USIC_CH_GetTransmitBufferStatus:00000000 $t
    {standard input}:24     .text.XMC_USIC_CH_GetTransmitBufferStatus:00000000 XMC_USIC_CH_GetTransmitBufferStatus
    {standard input}:67     .text.XMC_USIC_CH_SetMode:00000000 $t
    {standard input}:71     .text.XMC_USIC_CH_SetMode:00000000 XMC_USIC_CH_SetMode
    {standard input}:116    .text.XMC_SPI_CH_ClearStatusFlag:00000000 $t
    {standard input}:120    .text.XMC_SPI_CH_ClearStatusFlag:00000000 XMC_SPI_CH_ClearStatusFlag
    {standard input}:164    .text.XMC_SPI_CH_InitEx:00000000 $t
    {standard input}:169    .text.XMC_SPI_CH_InitEx:00000000 XMC_SPI_CH_InitEx
    {standard input}:270    .text.XMC_SPI_CH_InitEx:00000088 $d
    {standard input}:275    .text.XMC_SPI_CH_SetBaudrate:00000000 $t
    {standard input}:280    .text.XMC_SPI_CH_SetBaudrate:00000000 XMC_SPI_CH_SetBaudrate
    {standard input}:337    .text.XMC_SPI_CH_SetBaudrateEx:00000000 $t
    {standard input}:342    .text.XMC_SPI_CH_SetBaudrateEx:00000000 XMC_SPI_CH_SetBaudrateEx
    {standard input}:413    .text.XMC_SPI_CH_EnableSlaveSelect:00000000 $t
    {standard input}:418    .text.XMC_SPI_CH_EnableSlaveSelect:00000000 XMC_SPI_CH_EnableSlaveSelect
    {standard input}:467    .text.XMC_SPI_CH_DisableSlaveSelect:00000000 $t
    {standard input}:472    .text.XMC_SPI_CH_DisableSlaveSelect:00000000 XMC_SPI_CH_DisableSlaveSelect
    {standard input}:513    .text.XMC_SPI_CH_Transmit:00000000 $t
    {standard input}:518    .text.XMC_SPI_CH_Transmit:00000000 XMC_SPI_CH_Transmit
    {standard input}:599    .text.XMC_SPI_CH_GetReceivedData:00000000 $t
    {standard input}:604    .text.XMC_SPI_CH_GetReceivedData:00000000 XMC_SPI_CH_GetReceivedData
    {standard input}:659    .text.XMC_SPI_CH_SetInterwordDelay:00000000 $t
    {standard input}:664    .text.XMC_SPI_CH_SetInterwordDelay:00000000 XMC_SPI_CH_SetInterwordDelay
    {standard input}:855    .text.XMC_SPI_CH_SetInterwordDelay:00000124 $d
    {standard input}:862    .text.XMC_SPI_CH_Stop:00000000 $t
    {standard input}:867    .text.XMC_SPI_CH_Stop:00000000 XMC_SPI_CH_Stop
    {standard input}:920    .text.XMC_SPI_CH_EnableEvent:00000000 $t
    {standard input}:925    .text.XMC_SPI_CH_EnableEvent:00000000 XMC_SPI_CH_EnableEvent
    {standard input}:978    .text.XMC_SPI_CH_DisableEvent:00000000 $t
    {standard input}:983    .text.XMC_SPI_CH_DisableEvent:00000000 XMC_SPI_CH_DisableEvent
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_USIC_CH_Enable
XMC_USIC_CH_SetBaudrateEx
XMC_USIC_CH_SetBaudrate
XMC_SCU_CLOCK_GetPeripheralClockFrequency
