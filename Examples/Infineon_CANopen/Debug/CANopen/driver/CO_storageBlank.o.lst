   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "CO_storageBlank.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .bss.eepromAddrNextAuto,"aw",%nobits
  20              	 .align 2
  23              	eepromAddrNextAuto:
  24 0000 00000000 	 .space 4
  25              	 .section .data.eepromAddrNextProt,"aw",%progbits
  26              	 .align 2
  29              	eepromAddrNextProt:
  30 0000 00100000 	 .word 4096
  31              	 .section .bss.dummy,"aw",%nobits
  32              	 .align 2
  35              	dummy:
  36 0000 00000000 	 .space 4
  37              	 .section .text.storeBlank,"ax",%progbits
  38              	 .align 2
  39              	 .thumb
  40              	 .thumb_func
  42              	storeBlank:
  43              	.LFB33:
  44              	 .file 1 "../CANopen/driver/CO_storageBlank.c"
   1:../CANopen/driver/CO_storageBlank.c **** /*
   2:../CANopen/driver/CO_storageBlank.c ****  * CANopen Object Dictionary storage object (blank example).
   3:../CANopen/driver/CO_storageBlank.c ****  *
   4:../CANopen/driver/CO_storageBlank.c ****  * @file        CO_storageBlank.c
   5:../CANopen/driver/CO_storageBlank.c ****  * @author      Janez Paternoster
   6:../CANopen/driver/CO_storageBlank.c ****  * @copyright   2021 Janez Paternoster
   7:../CANopen/driver/CO_storageBlank.c ****  *
   8:../CANopen/driver/CO_storageBlank.c ****  * This file is part of CANopenNode, an opensource CANopen Stack.
   9:../CANopen/driver/CO_storageBlank.c ****  * Project home page is <https://github.com/CANopenNode/CANopenNode>.
  10:../CANopen/driver/CO_storageBlank.c ****  * For more information on CANopen see <http://www.can-cia.org/>.
  11:../CANopen/driver/CO_storageBlank.c ****  *
  12:../CANopen/driver/CO_storageBlank.c ****  * Licensed under the Apache License, Version 2.0 (the "License");
  13:../CANopen/driver/CO_storageBlank.c ****  * you may not use this file except in compliance with the License.
  14:../CANopen/driver/CO_storageBlank.c ****  * You may obtain a copy of the License at
  15:../CANopen/driver/CO_storageBlank.c ****  *
  16:../CANopen/driver/CO_storageBlank.c ****  *     http://www.apache.org/licenses/LICENSE-2.0
  17:../CANopen/driver/CO_storageBlank.c ****  *
  18:../CANopen/driver/CO_storageBlank.c ****  * Unless required by applicable law or agreed to in writing, software
  19:../CANopen/driver/CO_storageBlank.c ****  * distributed under the License is distributed on an "AS IS" BASIS,
  20:../CANopen/driver/CO_storageBlank.c ****  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:../CANopen/driver/CO_storageBlank.c ****  * See the License for the specific language governing permissions and
  22:../CANopen/driver/CO_storageBlank.c ****  * limitations under the License.
  23:../CANopen/driver/CO_storageBlank.c ****  */
  24:../CANopen/driver/CO_storageBlank.c **** /* Includes ------------------------------------------------------------------*/
  25:../CANopen/driver/CO_storageBlank.c **** #include "CO_storageBlank.h"
  26:../CANopen/driver/CO_storageBlank.c **** 
  27:../CANopen/driver/CO_storageBlank.c **** 
  28:../CANopen/driver/CO_storageBlank.c **** #if (CO_CONFIG_STORAGE) & CO_CONFIG_STORAGE_ENABLE
  29:../CANopen/driver/CO_storageBlank.c **** #include "CANopenHardware.h"
  30:../CANopen/driver/CO_storageBlank.c **** #include "301/crc16-ccitt.h"
  31:../CANopen/driver/CO_storageBlank.c **** #include <stdlib.h>
  32:../CANopen/driver/CO_storageBlank.c **** #include "EEPROM_25Series.h"
  33:../CANopen/driver/CO_storageBlank.c **** 
  34:../CANopen/driver/CO_storageBlank.c **** 
  35:../CANopen/driver/CO_storageBlank.c **** /* Defines -------------------------------------------------------------------*/
  36:../CANopen/driver/CO_storageBlank.c **** #ifndef CO_STORAGE_EEPROM_TOTAL_SIZE
  37:../CANopen/driver/CO_storageBlank.c ****  #define CO_STORAGE_EEPROM_TOTAL_SIZE            EEPROM_TOTAL_SIZE
  38:../CANopen/driver/CO_storageBlank.c **** #endif
  39:../CANopen/driver/CO_storageBlank.c **** #ifndef CO_STORAGE_EEPROM_PAGE_SIZE
  40:../CANopen/driver/CO_storageBlank.c ****  #define CO_STORAGE_EEPROM_PAGE_SIZE             EEPROM_PAGE_SIZE
  41:../CANopen/driver/CO_storageBlank.c **** #endif
  42:../CANopen/driver/CO_storageBlank.c **** 
  43:../CANopen/driver/CO_storageBlank.c **** 
  44:../CANopen/driver/CO_storageBlank.c **** /* Enum definitions ----------------------------------------------------------*/
  45:../CANopen/driver/CO_storageBlank.c **** 
  46:../CANopen/driver/CO_storageBlank.c **** /* Structure definitions -----------------------------------------------------*/
  47:../CANopen/driver/CO_storageBlank.c **** 
  48:../CANopen/driver/CO_storageBlank.c **** /* External variables --------------------------------------------------------*/
  49:../CANopen/driver/CO_storageBlank.c **** 
  50:../CANopen/driver/CO_storageBlank.c **** /* Private variables ---------------------------------------------------------*/
  51:../CANopen/driver/CO_storageBlank.c **** /*
  52:../CANopen/driver/CO_storageBlank.c ****  * Eeprom is configured so, that first half of memory locations is not write
  53:../CANopen/driver/CO_storageBlank.c ****  * protected, so it is suitable for auto storage variables. Second half of
  54:../CANopen/driver/CO_storageBlank.c ****  * memory locations is write protected. It is used for storage on command, which
  55:../CANopen/driver/CO_storageBlank.c ****  * disables the protection for the short time when writing. Below are two
  56:../CANopen/driver/CO_storageBlank.c ****  * internal variables, used for indicating next free address in eeprom, one for
  57:../CANopen/driver/CO_storageBlank.c ****  * autonomous storage and one for protected storage
  58:../CANopen/driver/CO_storageBlank.c ****  */
  59:../CANopen/driver/CO_storageBlank.c **** static size_t eepromAddrNextAuto = 0;
  60:../CANopen/driver/CO_storageBlank.c **** static size_t eepromAddrNextProt = 0x1000;			//  Default: CO_STORAGE_EEPROM_TOTAL_SIZE / 2;
  61:../CANopen/driver/CO_storageBlank.c **** static volatile uint32_t dummy;
  62:../CANopen/driver/CO_storageBlank.c **** 
  63:../CANopen/driver/CO_storageBlank.c **** 
  64:../CANopen/driver/CO_storageBlank.c **** /* Private function prototypes -----------------------------------------------*/
  65:../CANopen/driver/CO_storageBlank.c **** 
  66:../CANopen/driver/CO_storageBlank.c **** 
  67:../CANopen/driver/CO_storageBlank.c **** /* Functions -----------------------------------------------------------------*/
  68:../CANopen/driver/CO_storageBlank.c **** /*
  69:../CANopen/driver/CO_storageBlank.c ****  * Function for writing data on "Store parameters" command - OD object 1010
  70:../CANopen/driver/CO_storageBlank.c ****  *
  71:../CANopen/driver/CO_storageBlank.c ****  * For more information see file CO_storage.h, CO_storage_entry_t.
  72:../CANopen/driver/CO_storageBlank.c ****  */
  73:../CANopen/driver/CO_storageBlank.c **** static ODR_t storeBlank(CO_storage_entry_t *entry, CO_CANmodule_t *CANmodule) {
  45              	 .loc 1 73 0
  46              	 .cfi_startproc
  47              	 
  48              	 
  49              	 
  50 0000 80B4     	 push {r7}
  51              	.LCFI0:
  52              	 .cfi_def_cfa_offset 4
  53              	 .cfi_offset 7,-4
  54 0002 83B0     	 sub sp,sp,#12
  55              	.LCFI1:
  56              	 .cfi_def_cfa_offset 16
  57 0004 00AF     	 add r7,sp,#0
  58              	.LCFI2:
  59              	 .cfi_def_cfa_register 7
  60 0006 7860     	 str r0,[r7,#4]
  61 0008 3960     	 str r1,[r7]
  74:../CANopen/driver/CO_storageBlank.c **** 
  75:../CANopen/driver/CO_storageBlank.c ****     /* Open a file and write data to it */
  76:../CANopen/driver/CO_storageBlank.c ****     /* file = open(entry->pathToFileOrPointerToMemory); */
  77:../CANopen/driver/CO_storageBlank.c ****     CO_LOCK_OD(CANmodule);
  78:../CANopen/driver/CO_storageBlank.c ****     /* write(entry->addr, entry->len, file); */
  79:../CANopen/driver/CO_storageBlank.c ****     CO_UNLOCK_OD(CANmodule);
  80:../CANopen/driver/CO_storageBlank.c **** 
  81:../CANopen/driver/CO_storageBlank.c ****     return ODR_OK;
  62              	 .loc 1 81 0
  63 000a 0023     	 movs r3,#0
  64 000c 5BB2     	 sxtb r3,r3
  82:../CANopen/driver/CO_storageBlank.c **** }
  65              	 .loc 1 82 0
  66 000e 1846     	 mov r0,r3
  67 0010 0C37     	 adds r7,r7,#12
  68              	.LCFI3:
  69              	 .cfi_def_cfa_offset 4
  70 0012 BD46     	 mov sp,r7
  71              	.LCFI4:
  72              	 .cfi_def_cfa_register 13
  73              	 
  74 0014 5DF8047B 	 ldr r7,[sp],#4
  75              	.LCFI5:
  76              	 .cfi_restore 7
  77              	 .cfi_def_cfa_offset 0
  78 0018 7047     	 bx lr
  79              	 .cfi_endproc
  80              	.LFE33:
  82 001a 00BF     	 .section .text.restoreBlank,"ax",%progbits
  83              	 .align 2
  84              	 .thumb
  85              	 .thumb_func
  87              	restoreBlank:
  88              	.LFB34:
  83:../CANopen/driver/CO_storageBlank.c **** 
  84:../CANopen/driver/CO_storageBlank.c **** 
  85:../CANopen/driver/CO_storageBlank.c **** /*
  86:../CANopen/driver/CO_storageBlank.c ****  * Function for restoring data on "Restore default parameters" command - OD 1011
  87:../CANopen/driver/CO_storageBlank.c ****  *
  88:../CANopen/driver/CO_storageBlank.c ****  * For more information see file CO_storage.h, CO_storage_entry_t.
  89:../CANopen/driver/CO_storageBlank.c ****  */
  90:../CANopen/driver/CO_storageBlank.c **** static ODR_t restoreBlank(CO_storage_entry_t *entry, CO_CANmodule_t *CANmodule){
  89              	 .loc 1 90 0
  90              	 .cfi_startproc
  91              	 
  92              	 
  93              	 
  94 0000 80B4     	 push {r7}
  95              	.LCFI6:
  96              	 .cfi_def_cfa_offset 4
  97              	 .cfi_offset 7,-4
  98 0002 83B0     	 sub sp,sp,#12
  99              	.LCFI7:
 100              	 .cfi_def_cfa_offset 16
 101 0004 00AF     	 add r7,sp,#0
 102              	.LCFI8:
 103              	 .cfi_def_cfa_register 7
 104 0006 7860     	 str r0,[r7,#4]
 105 0008 3960     	 str r1,[r7]
  91:../CANopen/driver/CO_storageBlank.c **** 
  92:../CANopen/driver/CO_storageBlank.c ****     /* disable (delete) the file, so default values will stay after startup */
  93:../CANopen/driver/CO_storageBlank.c **** 
  94:../CANopen/driver/CO_storageBlank.c ****     return ODR_OK;
 106              	 .loc 1 94 0
 107 000a 0023     	 movs r3,#0
 108 000c 5BB2     	 sxtb r3,r3
  95:../CANopen/driver/CO_storageBlank.c **** }
 109              	 .loc 1 95 0
 110 000e 1846     	 mov r0,r3
 111 0010 0C37     	 adds r7,r7,#12
 112              	.LCFI9:
 113              	 .cfi_def_cfa_offset 4
 114 0012 BD46     	 mov sp,r7
 115              	.LCFI10:
 116              	 .cfi_def_cfa_register 13
 117              	 
 118 0014 5DF8047B 	 ldr r7,[sp],#4
 119              	.LCFI11:
 120              	 .cfi_restore 7
 121              	 .cfi_def_cfa_offset 0
 122 0018 7047     	 bx lr
 123              	 .cfi_endproc
 124              	.LFE34:
 126 001a 00BF     	 .section .text.CO_storageBlank_init,"ax",%progbits
 127              	 .align 2
 128              	 .global CO_storageBlank_init
 129              	 .thumb
 130              	 .thumb_func
 132              	CO_storageBlank_init:
 133              	.LFB35:
  96:../CANopen/driver/CO_storageBlank.c **** 
  97:../CANopen/driver/CO_storageBlank.c **** 
  98:../CANopen/driver/CO_storageBlank.c **** CO_ReturnError_t CO_storageBlank_init(CO_storage_t *storage,
  99:../CANopen/driver/CO_storageBlank.c ****                                       CO_CANmodule_t *CANmodule,
 100:../CANopen/driver/CO_storageBlank.c ****                                       OD_entry_t *OD_1010_StoreParameters,
 101:../CANopen/driver/CO_storageBlank.c ****                                       OD_entry_t *OD_1011_RestoreDefaultParam,
 102:../CANopen/driver/CO_storageBlank.c ****                                       CO_storage_entry_t *entries,
 103:../CANopen/driver/CO_storageBlank.c ****                                       uint8_t entriesCount,
 104:../CANopen/driver/CO_storageBlank.c ****                                       uint32_t *storageInitError)
 105:../CANopen/driver/CO_storageBlank.c **** {
 134              	 .loc 1 105 0
 135              	 .cfi_startproc
 136              	 
 137              	 
 138 0000 80B5     	 push {r7,lr}
 139              	.LCFI12:
 140              	 .cfi_def_cfa_offset 8
 141              	 .cfi_offset 7,-8
 142              	 .cfi_offset 14,-4
 143 0002 8AB0     	 sub sp,sp,#40
 144              	.LCFI13:
 145              	 .cfi_def_cfa_offset 48
 146 0004 04AF     	 add r7,sp,#16
 147              	.LCFI14:
 148              	 .cfi_def_cfa 7,32
 149 0006 F860     	 str r0,[r7,#12]
 150 0008 B960     	 str r1,[r7,#8]
 151 000a 7A60     	 str r2,[r7,#4]
 152 000c 3B60     	 str r3,[r7]
 106:../CANopen/driver/CO_storageBlank.c ****     CO_ReturnError_t ret;
 107:../CANopen/driver/CO_storageBlank.c **** 
 108:../CANopen/driver/CO_storageBlank.c ****     /* verify arguments */
 109:../CANopen/driver/CO_storageBlank.c ****     if (storage == NULL || entries == NULL || entriesCount == 0
 153              	 .loc 1 109 0
 154 000e FB68     	 ldr r3,[r7,#12]
 155 0010 002B     	 cmp r3,#0
 156 0012 09D0     	 beq .L6
 157              	 .loc 1 109 0 is_stmt 0 discriminator 1
 158 0014 3B6A     	 ldr r3,[r7,#32]
 159 0016 002B     	 cmp r3,#0
 160 0018 06D0     	 beq .L6
 161              	 .loc 1 109 0 discriminator 2
 162 001a 97F82430 	 ldrb r3,[r7,#36]
 163 001e 002B     	 cmp r3,#0
 164 0020 02D0     	 beq .L6
 110:../CANopen/driver/CO_storageBlank.c ****         || storageInitError == NULL
 165              	 .loc 1 110 0 is_stmt 1
 166 0022 BB6A     	 ldr r3,[r7,#40]
 167 0024 002B     	 cmp r3,#0
 168 0026 01D1     	 bne .L7
 169              	.L6:
 111:../CANopen/driver/CO_storageBlank.c ****     ) {
 112:../CANopen/driver/CO_storageBlank.c ****         return CO_ERROR_ILLEGAL_ARGUMENT;
 170              	 .loc 1 112 0
 171 0028 FF23     	 movs r3,#255
 172 002a 3FE0     	 b .L8
 173              	.L7:
 113:../CANopen/driver/CO_storageBlank.c ****     }
 114:../CANopen/driver/CO_storageBlank.c **** 
 115:../CANopen/driver/CO_storageBlank.c ****     /* initialize storage and OD extensions */
 116:../CANopen/driver/CO_storageBlank.c ****     ret = CO_storage_init(storage,
 174              	 .loc 1 116 0
 175 002c 224B     	 ldr r3,.L14
 176 002e 0093     	 str r3,[sp]
 177 0030 224B     	 ldr r3,.L14+4
 178 0032 0193     	 str r3,[sp,#4]
 179 0034 3B6A     	 ldr r3,[r7,#32]
 180 0036 0293     	 str r3,[sp,#8]
 181 0038 97F82430 	 ldrb r3,[r7,#36]
 182 003c 0393     	 str r3,[sp,#12]
 183 003e F868     	 ldr r0,[r7,#12]
 184 0040 B968     	 ldr r1,[r7,#8]
 185 0042 7A68     	 ldr r2,[r7,#4]
 186 0044 3B68     	 ldr r3,[r7]
 187 0046 FFF7FEFF 	 bl CO_storage_init
 188 004a 0346     	 mov r3,r0
 189 004c BB75     	 strb r3,[r7,#22]
 117:../CANopen/driver/CO_storageBlank.c ****                           CANmodule,
 118:../CANopen/driver/CO_storageBlank.c ****                           OD_1010_StoreParameters,
 119:../CANopen/driver/CO_storageBlank.c ****                           OD_1011_RestoreDefaultParam,
 120:../CANopen/driver/CO_storageBlank.c ****                           storeBlank,
 121:../CANopen/driver/CO_storageBlank.c ****                           restoreBlank,
 122:../CANopen/driver/CO_storageBlank.c ****                           entries,
 123:../CANopen/driver/CO_storageBlank.c ****                           entriesCount);
 124:../CANopen/driver/CO_storageBlank.c ****     if (ret != CO_ERROR_NO) {
 190              	 .loc 1 124 0
 191 004e 97F91630 	 ldrsb r3,[r7,#22]
 192 0052 002B     	 cmp r3,#0
 193 0054 01D0     	 beq .L9
 125:../CANopen/driver/CO_storageBlank.c ****         return ret;
 194              	 .loc 1 125 0
 195 0056 BB7D     	 ldrb r3,[r7,#22]
 196 0058 28E0     	 b .L8
 197              	.L9:
 126:../CANopen/driver/CO_storageBlank.c ****     }
 127:../CANopen/driver/CO_storageBlank.c **** 
 128:../CANopen/driver/CO_storageBlank.c ****     /* initialize entries */
 129:../CANopen/driver/CO_storageBlank.c ****     *storageInitError = 0;
 198              	 .loc 1 129 0
 199 005a BB6A     	 ldr r3,[r7,#40]
 200 005c 0022     	 movs r2,#0
 201 005e 1A60     	 str r2,[r3]
 202              	.LBB2:
 130:../CANopen/driver/CO_storageBlank.c ****     for (uint8_t i = 0; i < entriesCount; i++) {
 203              	 .loc 1 130 0
 204 0060 0023     	 movs r3,#0
 205 0062 FB75     	 strb r3,[r7,#23]
 206 0064 1CE0     	 b .L10
 207              	.L13:
 208              	.LBB3:
 131:../CANopen/driver/CO_storageBlank.c ****         CO_storage_entry_t *entry = &entries[i];
 209              	 .loc 1 131 0
 210 0066 FA7D     	 ldrb r2,[r7,#23]
 211 0068 1346     	 mov r3,r2
 212 006a 9B00     	 lsls r3,r3,#2
 213 006c 1344     	 add r3,r3,r2
 214 006e DB00     	 lsls r3,r3,#3
 215 0070 1A46     	 mov r2,r3
 216 0072 3B6A     	 ldr r3,[r7,#32]
 217 0074 1344     	 add r3,r3,r2
 218 0076 3B61     	 str r3,[r7,#16]
 132:../CANopen/driver/CO_storageBlank.c **** 
 133:../CANopen/driver/CO_storageBlank.c ****         /* verify arguments */
 134:../CANopen/driver/CO_storageBlank.c ****         if (entry->addr == NULL || entry->len == 0 || entry->subIndexOD < 2) {
 219              	 .loc 1 134 0
 220 0078 3B69     	 ldr r3,[r7,#16]
 221 007a 1B68     	 ldr r3,[r3]
 222 007c 002B     	 cmp r3,#0
 223 007e 07D0     	 beq .L11
 224              	 .loc 1 134 0 is_stmt 0 discriminator 1
 225 0080 3B69     	 ldr r3,[r7,#16]
 226 0082 5B68     	 ldr r3,[r3,#4]
 227 0084 002B     	 cmp r3,#0
 228 0086 03D0     	 beq .L11
 229              	 .loc 1 134 0 discriminator 2
 230 0088 3B69     	 ldr r3,[r7,#16]
 231 008a 1B7A     	 ldrb r3,[r3,#8]
 232 008c 012B     	 cmp r3,#1
 233 008e 04D8     	 bhi .L12
 234              	.L11:
 135:../CANopen/driver/CO_storageBlank.c ****             *storageInitError = i;
 235              	 .loc 1 135 0 is_stmt 1
 236 0090 FA7D     	 ldrb r2,[r7,#23]
 237 0092 BB6A     	 ldr r3,[r7,#40]
 238 0094 1A60     	 str r2,[r3]
 136:../CANopen/driver/CO_storageBlank.c ****             return CO_ERROR_ILLEGAL_ARGUMENT;
 239              	 .loc 1 136 0
 240 0096 FF23     	 movs r3,#255
 241 0098 08E0     	 b .L8
 242              	.L12:
 243              	.LBE3:
 130:../CANopen/driver/CO_storageBlank.c ****         CO_storage_entry_t *entry = &entries[i];
 244              	 .loc 1 130 0 discriminator 2
 245 009a FB7D     	 ldrb r3,[r7,#23]
 246 009c 0133     	 adds r3,r3,#1
 247 009e FB75     	 strb r3,[r7,#23]
 248              	.L10:
 130:../CANopen/driver/CO_storageBlank.c ****         CO_storage_entry_t *entry = &entries[i];
 249              	 .loc 1 130 0 is_stmt 0 discriminator 1
 250 00a0 FA7D     	 ldrb r2,[r7,#23]
 251 00a2 97F82430 	 ldrb r3,[r7,#36]
 252 00a6 9A42     	 cmp r2,r3
 253 00a8 DDD3     	 bcc .L13
 254              	.LBE2:
 137:../CANopen/driver/CO_storageBlank.c ****         }
 138:../CANopen/driver/CO_storageBlank.c **** 
 139:../CANopen/driver/CO_storageBlank.c ****         /* Open a file and read data from file to entry->addr */
 140:../CANopen/driver/CO_storageBlank.c ****         /* file = open(entry->pathToFileOrPointerToMemory); */
 141:../CANopen/driver/CO_storageBlank.c ****         /* read(entry->addr, entry->len, file); */
 142:../CANopen/driver/CO_storageBlank.c **** 
 143:../CANopen/driver/CO_storageBlank.c ****     }
 144:../CANopen/driver/CO_storageBlank.c **** 
 145:../CANopen/driver/CO_storageBlank.c ****     return ret;
 255              	 .loc 1 145 0 is_stmt 1
 256 00aa BB7D     	 ldrb r3,[r7,#22]
 257              	.L8:
 258 00ac 5BB2     	 sxtb r3,r3
 146:../CANopen/driver/CO_storageBlank.c **** }
 259              	 .loc 1 146 0
 260 00ae 1846     	 mov r0,r3
 261 00b0 1837     	 adds r7,r7,#24
 262              	.LCFI15:
 263              	 .cfi_def_cfa_offset 8
 264 00b2 BD46     	 mov sp,r7
 265              	.LCFI16:
 266              	 .cfi_def_cfa_register 13
 267              	 
 268 00b4 80BD     	 pop {r7,pc}
 269              	.L15:
 270 00b6 00BF     	 .align 2
 271              	.L14:
 272 00b8 00000000 	 .word storeBlank
 273 00bc 00000000 	 .word restoreBlank
 274              	 .cfi_endproc
 275              	.LFE35:
 277              	 .section .text.CO_eeprom_init,"ax",%progbits
 278              	 .align 2
 279              	 .global CO_eeprom_init
 280              	 .thumb
 281              	 .thumb_func
 283              	CO_eeprom_init:
 284              	.LFB36:
 147:../CANopen/driver/CO_storageBlank.c **** 
 148:../CANopen/driver/CO_storageBlank.c **** 
 149:../CANopen/driver/CO_storageBlank.c **** /*******************************************************************************************/
 150:../CANopen/driver/CO_storageBlank.c **** 
 151:../CANopen/driver/CO_storageBlank.c **** /**
 152:../CANopen/driver/CO_storageBlank.c ****  * Initialize eeprom device, target system specific function.
 153:../CANopen/driver/CO_storageBlank.c ****  *
 154:../CANopen/driver/CO_storageBlank.c ****  * @param storageModule Pointer to storage module.
 155:../CANopen/driver/CO_storageBlank.c ****  *
 156:../CANopen/driver/CO_storageBlank.c ****  * @return True on success
 157:../CANopen/driver/CO_storageBlank.c ****  */
 158:../CANopen/driver/CO_storageBlank.c **** bool_t CO_eeprom_init(void *storageModule)
 159:../CANopen/driver/CO_storageBlank.c **** {
 285              	 .loc 1 159 0
 286              	 .cfi_startproc
 287              	 
 288              	 
 289 0000 80B5     	 push {r7,lr}
 290              	.LCFI17:
 291              	 .cfi_def_cfa_offset 8
 292              	 .cfi_offset 7,-8
 293              	 .cfi_offset 14,-4
 294 0002 82B0     	 sub sp,sp,#8
 295              	.LCFI18:
 296              	 .cfi_def_cfa_offset 16
 297 0004 00AF     	 add r7,sp,#0
 298              	.LCFI19:
 299              	 .cfi_def_cfa_register 7
 300 0006 7860     	 str r0,[r7,#4]
 160:../CANopen/driver/CO_storageBlank.c ****     if (xEEPROM_Init() == EEPROM_STATUS_SUCCESS)
 301              	 .loc 1 160 0
 302 0008 FFF7FEFF 	 bl xEEPROM_Init
 303 000c 0346     	 mov r3,r0
 304 000e 002B     	 cmp r3,#0
 305 0010 01D1     	 bne .L17
 161:../CANopen/driver/CO_storageBlank.c ****         return true;
 306              	 .loc 1 161 0
 307 0012 0123     	 movs r3,#1
 308 0014 00E0     	 b .L18
 309              	.L17:
 162:../CANopen/driver/CO_storageBlank.c **** 
 163:../CANopen/driver/CO_storageBlank.c ****     return false;
 310              	 .loc 1 163 0
 311 0016 0023     	 movs r3,#0
 312              	.L18:
 164:../CANopen/driver/CO_storageBlank.c **** }
 313              	 .loc 1 164 0
 314 0018 1846     	 mov r0,r3
 315 001a 0837     	 adds r7,r7,#8
 316              	.LCFI20:
 317              	 .cfi_def_cfa_offset 8
 318 001c BD46     	 mov sp,r7
 319              	.LCFI21:
 320              	 .cfi_def_cfa_register 13
 321              	 
 322 001e 80BD     	 pop {r7,pc}
 323              	 .cfi_endproc
 324              	.LFE36:
 326              	 .section .text.CO_eeprom_getAddr,"ax",%progbits
 327              	 .align 2
 328              	 .global CO_eeprom_getAddr
 329              	 .thumb
 330              	 .thumb_func
 332              	CO_eeprom_getAddr:
 333              	.LFB37:
 165:../CANopen/driver/CO_storageBlank.c **** 
 166:../CANopen/driver/CO_storageBlank.c **** 
 167:../CANopen/driver/CO_storageBlank.c **** /**
 168:../CANopen/driver/CO_storageBlank.c ****  * Get free address inside eeprom, target system specific function.
 169:../CANopen/driver/CO_storageBlank.c ****  *
 170:../CANopen/driver/CO_storageBlank.c ****  * Function is called several times for each storage block in the initialization
 171:../CANopen/driver/CO_storageBlank.c ****  * phase after CO_eeprom_init().
 172:../CANopen/driver/CO_storageBlank.c ****  *
 173:../CANopen/driver/CO_storageBlank.c ****  * @param storageModule Pointer to storage module.
 174:../CANopen/driver/CO_storageBlank.c ****  * @param isAuto True, if variable is auto stored or false if protected
 175:../CANopen/driver/CO_storageBlank.c ****  * @param len Length of data, which will be stored to that location
 176:../CANopen/driver/CO_storageBlank.c ****  * @param [out] overflow set to true, if not enough eeprom memory
 177:../CANopen/driver/CO_storageBlank.c ****  *
 178:../CANopen/driver/CO_storageBlank.c ****  * @return Asigned eeprom address
 179:../CANopen/driver/CO_storageBlank.c ****  */
 180:../CANopen/driver/CO_storageBlank.c **** size_t CO_eeprom_getAddr(void *storageModule, bool_t isAuto, size_t len, bool_t *overflow)
 181:../CANopen/driver/CO_storageBlank.c **** {
 334              	 .loc 1 181 0
 335              	 .cfi_startproc
 336              	 
 337              	 
 338              	 
 339 0000 80B4     	 push {r7}
 340              	.LCFI22:
 341              	 .cfi_def_cfa_offset 4
 342              	 .cfi_offset 7,-4
 343 0002 87B0     	 sub sp,sp,#28
 344              	.LCFI23:
 345              	 .cfi_def_cfa_offset 32
 346 0004 00AF     	 add r7,sp,#0
 347              	.LCFI24:
 348              	 .cfi_def_cfa_register 7
 349 0006 F860     	 str r0,[r7,#12]
 350 0008 B960     	 str r1,[r7,#8]
 351 000a 7A60     	 str r2,[r7,#4]
 352 000c 3B60     	 str r3,[r7]
 182:../CANopen/driver/CO_storageBlank.c ****     size_t addr;
 183:../CANopen/driver/CO_storageBlank.c **** 
 184:../CANopen/driver/CO_storageBlank.c ****     if (isAuto) {
 353              	 .loc 1 184 0
 354 000e BB68     	 ldr r3,[r7,#8]
 355 0010 002B     	 cmp r3,#0
 356 0012 11D0     	 beq .L20
 185:../CANopen/driver/CO_storageBlank.c ****         /* auto storage is processed byte by byte, no alignment necessary */
 186:../CANopen/driver/CO_storageBlank.c ****         addr = eepromAddrNextAuto;
 357              	 .loc 1 186 0
 358 0014 1B4B     	 ldr r3,.L25
 359 0016 1B68     	 ldr r3,[r3]
 360 0018 7B61     	 str r3,[r7,#20]
 187:../CANopen/driver/CO_storageBlank.c ****         eepromAddrNextAuto += len;
 361              	 .loc 1 187 0
 362 001a 1A4B     	 ldr r3,.L25
 363 001c 1A68     	 ldr r2,[r3]
 364 001e 7B68     	 ldr r3,[r7,#4]
 365 0020 1344     	 add r3,r3,r2
 366 0022 184A     	 ldr r2,.L25
 367 0024 1360     	 str r3,[r2]
 188:../CANopen/driver/CO_storageBlank.c ****         if (eepromAddrNextAuto > (CO_STORAGE_EEPROM_TOTAL_SIZE / 2)) {
 368              	 .loc 1 188 0
 369 0026 174B     	 ldr r3,.L25
 370 0028 1B68     	 ldr r3,[r3]
 371 002a B3F5804F 	 cmp r3,#16384
 372 002e 21D9     	 bls .L22
 189:../CANopen/driver/CO_storageBlank.c ****             *overflow = true;
 373              	 .loc 1 189 0
 374 0030 3B68     	 ldr r3,[r7]
 375 0032 0122     	 movs r2,#1
 376 0034 1A60     	 str r2,[r3]
 377 0036 1DE0     	 b .L22
 378              	.L20:
 379              	.LBB4:
 190:../CANopen/driver/CO_storageBlank.c ****         }
 191:../CANopen/driver/CO_storageBlank.c ****     }
 192:../CANopen/driver/CO_storageBlank.c ****     else {
 193:../CANopen/driver/CO_storageBlank.c ****         /* addresses for storage on command must be page aligned */
 194:../CANopen/driver/CO_storageBlank.c ****         addr = eepromAddrNextProt;
 380              	 .loc 1 194 0
 381 0038 134B     	 ldr r3,.L25+4
 382 003a 1B68     	 ldr r3,[r3]
 383 003c 7B61     	 str r3,[r7,#20]
 195:../CANopen/driver/CO_storageBlank.c ****         size_t lenAligned = len & (~(CO_STORAGE_EEPROM_TOTAL_SIZE - 1));
 384              	 .loc 1 195 0
 385 003e 7B68     	 ldr r3,[r7,#4]
 386 0040 23F4FF43 	 bic r3,r3,#32640
 387 0044 23F07F03 	 bic r3,r3,#127
 388 0048 3B61     	 str r3,[r7,#16]
 196:../CANopen/driver/CO_storageBlank.c ****         if (lenAligned < len) {
 389              	 .loc 1 196 0
 390 004a 3A69     	 ldr r2,[r7,#16]
 391 004c 7B68     	 ldr r3,[r7,#4]
 392 004e 9A42     	 cmp r2,r3
 393 0050 02D2     	 bcs .L23
 197:../CANopen/driver/CO_storageBlank.c ****             lenAligned += CO_STORAGE_EEPROM_PAGE_SIZE;
 394              	 .loc 1 197 0
 395 0052 3B69     	 ldr r3,[r7,#16]
 396 0054 4033     	 adds r3,r3,#64
 397 0056 3B61     	 str r3,[r7,#16]
 398              	.L23:
 198:../CANopen/driver/CO_storageBlank.c ****         }
 199:../CANopen/driver/CO_storageBlank.c ****         eepromAddrNextProt += lenAligned;
 399              	 .loc 1 199 0
 400 0058 0B4B     	 ldr r3,.L25+4
 401 005a 1A68     	 ldr r2,[r3]
 402 005c 3B69     	 ldr r3,[r7,#16]
 403 005e 1344     	 add r3,r3,r2
 404 0060 094A     	 ldr r2,.L25+4
 405 0062 1360     	 str r3,[r2]
 200:../CANopen/driver/CO_storageBlank.c ****         if (eepromAddrNextProt > CO_STORAGE_EEPROM_TOTAL_SIZE) {
 406              	 .loc 1 200 0
 407 0064 084B     	 ldr r3,.L25+4
 408 0066 1B68     	 ldr r3,[r3]
 409 0068 B3F5004F 	 cmp r3,#32768
 410 006c 02D9     	 bls .L22
 201:../CANopen/driver/CO_storageBlank.c ****             *overflow = true;
 411              	 .loc 1 201 0
 412 006e 3B68     	 ldr r3,[r7]
 413 0070 0122     	 movs r2,#1
 414 0072 1A60     	 str r2,[r3]
 415              	.L22:
 416              	.LBE4:
 202:../CANopen/driver/CO_storageBlank.c ****         }
 203:../CANopen/driver/CO_storageBlank.c ****     }
 204:../CANopen/driver/CO_storageBlank.c **** 
 205:../CANopen/driver/CO_storageBlank.c ****     return addr;
 417              	 .loc 1 205 0
 418 0074 7B69     	 ldr r3,[r7,#20]
 206:../CANopen/driver/CO_storageBlank.c **** }
 419              	 .loc 1 206 0
 420 0076 1846     	 mov r0,r3
 421 0078 1C37     	 adds r7,r7,#28
 422              	.LCFI25:
 423              	 .cfi_def_cfa_offset 4
 424 007a BD46     	 mov sp,r7
 425              	.LCFI26:
 426              	 .cfi_def_cfa_register 13
 427              	 
 428 007c 5DF8047B 	 ldr r7,[sp],#4
 429              	.LCFI27:
 430              	 .cfi_restore 7
 431              	 .cfi_def_cfa_offset 0
 432 0080 7047     	 bx lr
 433              	.L26:
 434 0082 00BF     	 .align 2
 435              	.L25:
 436 0084 00000000 	 .word eepromAddrNextAuto
 437 0088 00000000 	 .word eepromAddrNextProt
 438              	 .cfi_endproc
 439              	.LFE37:
 441              	 .section .text.CO_eeprom_readBlock,"ax",%progbits
 442              	 .align 2
 443              	 .global CO_eeprom_readBlock
 444              	 .thumb
 445              	 .thumb_func
 447              	CO_eeprom_readBlock:
 448              	.LFB38:
 207:../CANopen/driver/CO_storageBlank.c **** 
 208:../CANopen/driver/CO_storageBlank.c **** 
 209:../CANopen/driver/CO_storageBlank.c **** /**
 210:../CANopen/driver/CO_storageBlank.c ****  * Read block of data from the eeprom, target system specific function.
 211:../CANopen/driver/CO_storageBlank.c ****  *
 212:../CANopen/driver/CO_storageBlank.c ****  * @param storageModule Pointer to storage module.
 213:../CANopen/driver/CO_storageBlank.c ****  * @param data Pointer to data buffer, where data will be stored.
 214:../CANopen/driver/CO_storageBlank.c ****  * @param eepromAddr Address in eeprom, from where data will be read.
 215:../CANopen/driver/CO_storageBlank.c ****  * @param len Length of the data block to be read.
 216:../CANopen/driver/CO_storageBlank.c ****  */
 217:../CANopen/driver/CO_storageBlank.c **** void CO_eeprom_readBlock(void *storageModule, uint8_t *data, size_t eepromAddr, size_t len)
 218:../CANopen/driver/CO_storageBlank.c **** {
 449              	 .loc 1 218 0
 450              	 .cfi_startproc
 451              	 
 452              	 
 453 0000 80B5     	 push {r7,lr}
 454              	.LCFI28:
 455              	 .cfi_def_cfa_offset 8
 456              	 .cfi_offset 7,-8
 457              	 .cfi_offset 14,-4
 458 0002 84B0     	 sub sp,sp,#16
 459              	.LCFI29:
 460              	 .cfi_def_cfa_offset 24
 461 0004 00AF     	 add r7,sp,#0
 462              	.LCFI30:
 463              	 .cfi_def_cfa_register 7
 464 0006 F860     	 str r0,[r7,#12]
 465 0008 B960     	 str r1,[r7,#8]
 466 000a 7A60     	 str r2,[r7,#4]
 467 000c 3B60     	 str r3,[r7]
 219:../CANopen/driver/CO_storageBlank.c **** 	vEEPROM_Read(eepromAddr, data, len);
 468              	 .loc 1 219 0
 469 000e 7B68     	 ldr r3,[r7,#4]
 470 0010 9AB2     	 uxth r2,r3
 471 0012 3B68     	 ldr r3,[r7]
 472 0014 9BB2     	 uxth r3,r3
 473 0016 1046     	 mov r0,r2
 474 0018 B968     	 ldr r1,[r7,#8]
 475 001a 1A46     	 mov r2,r3
 476 001c FFF7FEFF 	 bl vEEPROM_Read
 220:../CANopen/driver/CO_storageBlank.c **** }
 477              	 .loc 1 220 0
 478 0020 1037     	 adds r7,r7,#16
 479              	.LCFI31:
 480              	 .cfi_def_cfa_offset 8
 481 0022 BD46     	 mov sp,r7
 482              	.LCFI32:
 483              	 .cfi_def_cfa_register 13
 484              	 
 485 0024 80BD     	 pop {r7,pc}
 486              	 .cfi_endproc
 487              	.LFE38:
 489 0026 00BF     	 .section .text.CO_eeprom_writeBlock,"ax",%progbits
 490              	 .align 2
 491              	 .global CO_eeprom_writeBlock
 492              	 .thumb
 493              	 .thumb_func
 495              	CO_eeprom_writeBlock:
 496              	.LFB39:
 221:../CANopen/driver/CO_storageBlank.c **** 
 222:../CANopen/driver/CO_storageBlank.c **** 
 223:../CANopen/driver/CO_storageBlank.c **** /**
 224:../CANopen/driver/CO_storageBlank.c ****  * Write block of data to the eeprom, target system specific function.
 225:../CANopen/driver/CO_storageBlank.c ****  *
 226:../CANopen/driver/CO_storageBlank.c ****  * It is blocking function, so it waits, until all data is written.
 227:../CANopen/driver/CO_storageBlank.c ****  *
 228:../CANopen/driver/CO_storageBlank.c ****  * @param storageModule Pointer to storage module.
 229:../CANopen/driver/CO_storageBlank.c ****  * @param data Pointer to data buffer which will be written.
 230:../CANopen/driver/CO_storageBlank.c ****  * @param eepromAddr Address in eeprom, where data will be written. If data is
 231:../CANopen/driver/CO_storageBlank.c ****  * stored accross multiple pages, address must be aligned with page.
 232:../CANopen/driver/CO_storageBlank.c ****  * @param len Length of the data block.
 233:../CANopen/driver/CO_storageBlank.c ****  *
 234:../CANopen/driver/CO_storageBlank.c ****  * @return true on success
 235:../CANopen/driver/CO_storageBlank.c ****  */
 236:../CANopen/driver/CO_storageBlank.c **** bool_t CO_eeprom_writeBlock(void *storageModule, uint8_t *data, size_t eepromAddr, size_t len)
 237:../CANopen/driver/CO_storageBlank.c **** {
 497              	 .loc 1 237 0
 498              	 .cfi_startproc
 499              	 
 500              	 
 501 0000 80B5     	 push {r7,lr}
 502              	.LCFI33:
 503              	 .cfi_def_cfa_offset 8
 504              	 .cfi_offset 7,-8
 505              	 .cfi_offset 14,-4
 506 0002 84B0     	 sub sp,sp,#16
 507              	.LCFI34:
 508              	 .cfi_def_cfa_offset 24
 509 0004 00AF     	 add r7,sp,#0
 510              	.LCFI35:
 511              	 .cfi_def_cfa_register 7
 512 0006 F860     	 str r0,[r7,#12]
 513 0008 B960     	 str r1,[r7,#8]
 514 000a 7A60     	 str r2,[r7,#4]
 515 000c 3B60     	 str r3,[r7]
 238:../CANopen/driver/CO_storageBlank.c **** 	if ( vEEPROM_Write(eepromAddr, data, (uint16_t)len) == EEPROM_STATUS_SUCCESS )
 516              	 .loc 1 238 0
 517 000e 7B68     	 ldr r3,[r7,#4]
 518 0010 9AB2     	 uxth r2,r3
 519 0012 3B68     	 ldr r3,[r7]
 520 0014 9BB2     	 uxth r3,r3
 521 0016 1046     	 mov r0,r2
 522 0018 B968     	 ldr r1,[r7,#8]
 523 001a 1A46     	 mov r2,r3
 524 001c FFF7FEFF 	 bl vEEPROM_Write
 525 0020 0346     	 mov r3,r0
 526 0022 002B     	 cmp r3,#0
 527 0024 01D1     	 bne .L29
 239:../CANopen/driver/CO_storageBlank.c **** 		return true;
 528              	 .loc 1 239 0
 529 0026 0123     	 movs r3,#1
 530 0028 00E0     	 b .L30
 531              	.L29:
 240:../CANopen/driver/CO_storageBlank.c **** 
 241:../CANopen/driver/CO_storageBlank.c **** 	return false;
 532              	 .loc 1 241 0
 533 002a 0023     	 movs r3,#0
 534              	.L30:
 242:../CANopen/driver/CO_storageBlank.c **** }
 535              	 .loc 1 242 0
 536 002c 1846     	 mov r0,r3
 537 002e 1037     	 adds r7,r7,#16
 538              	.LCFI36:
 539              	 .cfi_def_cfa_offset 8
 540 0030 BD46     	 mov sp,r7
 541              	.LCFI37:
 542              	 .cfi_def_cfa_register 13
 543              	 
 544 0032 80BD     	 pop {r7,pc}
 545              	 .cfi_endproc
 546              	.LFE39:
 548              	 .section .text.CO_eeprom_getCrcBlock,"ax",%progbits
 549              	 .align 2
 550              	 .global CO_eeprom_getCrcBlock
 551              	 .thumb
 552              	 .thumb_func
 554              	CO_eeprom_getCrcBlock:
 555              	.LFB40:
 243:../CANopen/driver/CO_storageBlank.c **** 
 244:../CANopen/driver/CO_storageBlank.c **** 
 245:../CANopen/driver/CO_storageBlank.c **** /**
 246:../CANopen/driver/CO_storageBlank.c ****  * Get CRC checksum of the block of data stored in the eeprom, target system
 247:../CANopen/driver/CO_storageBlank.c ****  * specific function.
 248:../CANopen/driver/CO_storageBlank.c ****  *
 249:../CANopen/driver/CO_storageBlank.c ****  * @param storageModule Pointer to storage module.
 250:../CANopen/driver/CO_storageBlank.c ****  * @param eepromAddr Address of data in eeprom.
 251:../CANopen/driver/CO_storageBlank.c ****  * @param len Length of the data.
 252:../CANopen/driver/CO_storageBlank.c ****  *
 253:../CANopen/driver/CO_storageBlank.c ****  * @return CRC checksum
 254:../CANopen/driver/CO_storageBlank.c ****  */
 255:../CANopen/driver/CO_storageBlank.c **** uint16_t CO_eeprom_getCrcBlock(void *storageModule, size_t eepromAddr, size_t len)
 256:../CANopen/driver/CO_storageBlank.c **** {
 556              	 .loc 1 256 0
 557              	 .cfi_startproc
 558              	 
 559              	 
 560 0000 80B5     	 push {r7,lr}
 561              	.LCFI38:
 562              	 .cfi_def_cfa_offset 8
 563              	 .cfi_offset 7,-8
 564              	 .cfi_offset 14,-4
 565 0002 86B0     	 sub sp,sp,#24
 566              	.LCFI39:
 567              	 .cfi_def_cfa_offset 32
 568 0004 00AF     	 add r7,sp,#0
 569              	.LCFI40:
 570              	 .cfi_def_cfa_register 7
 571 0006 F860     	 str r0,[r7,#12]
 572 0008 B960     	 str r1,[r7,#8]
 573 000a 7A60     	 str r2,[r7,#4]
 257:../CANopen/driver/CO_storageBlank.c ****     uint16_t crc = 0;
 574              	 .loc 1 257 0
 575 000c 0023     	 movs r3,#0
 576 000e FB82     	 strh r3,[r7,#22]
 258:../CANopen/driver/CO_storageBlank.c ****     uint8_t *buf = malloc(len*sizeof(uint8_t));
 577              	 .loc 1 258 0
 578 0010 7868     	 ldr r0,[r7,#4]
 579 0012 FFF7FEFF 	 bl malloc
 580 0016 0346     	 mov r3,r0
 581 0018 3B61     	 str r3,[r7,#16]
 259:../CANopen/driver/CO_storageBlank.c **** 
 260:../CANopen/driver/CO_storageBlank.c ****     vEEPROM_Read(eepromAddr, buf, len);
 582              	 .loc 1 260 0
 583 001a BB68     	 ldr r3,[r7,#8]
 584 001c 9AB2     	 uxth r2,r3
 585 001e 7B68     	 ldr r3,[r7,#4]
 586 0020 9BB2     	 uxth r3,r3
 587 0022 1046     	 mov r0,r2
 588 0024 3969     	 ldr r1,[r7,#16]
 589 0026 1A46     	 mov r2,r3
 590 0028 FFF7FEFF 	 bl vEEPROM_Read
 261:../CANopen/driver/CO_storageBlank.c **** 
 262:../CANopen/driver/CO_storageBlank.c ****     crc = crc16_ccitt(buf, len, crc);
 591              	 .loc 1 262 0
 592 002c FB8A     	 ldrh r3,[r7,#22]
 593 002e 3869     	 ldr r0,[r7,#16]
 594 0030 7968     	 ldr r1,[r7,#4]
 595 0032 1A46     	 mov r2,r3
 596 0034 FFF7FEFF 	 bl crc16_ccitt
 597 0038 0346     	 mov r3,r0
 598 003a FB82     	 strh r3,[r7,#22]
 263:../CANopen/driver/CO_storageBlank.c **** 
 264:../CANopen/driver/CO_storageBlank.c ****     free(buf);
 599              	 .loc 1 264 0
 600 003c 3869     	 ldr r0,[r7,#16]
 601 003e FFF7FEFF 	 bl free
 265:../CANopen/driver/CO_storageBlank.c **** 
 266:../CANopen/driver/CO_storageBlank.c ****     return crc;
 602              	 .loc 1 266 0
 603 0042 FB8A     	 ldrh r3,[r7,#22]
 267:../CANopen/driver/CO_storageBlank.c **** }
 604              	 .loc 1 267 0
 605 0044 1846     	 mov r0,r3
 606 0046 1837     	 adds r7,r7,#24
 607              	.LCFI41:
 608              	 .cfi_def_cfa_offset 8
 609 0048 BD46     	 mov sp,r7
 610              	.LCFI42:
 611              	 .cfi_def_cfa_register 13
 612              	 
 613 004a 80BD     	 pop {r7,pc}
 614              	 .cfi_endproc
 615              	.LFE40:
 617              	 .section .text.CO_eeprom_updateByte,"ax",%progbits
 618              	 .align 2
 619              	 .global CO_eeprom_updateByte
 620              	 .thumb
 621              	 .thumb_func
 623              	CO_eeprom_updateByte:
 624              	.LFB41:
 268:../CANopen/driver/CO_storageBlank.c **** 
 269:../CANopen/driver/CO_storageBlank.c **** 
 270:../CANopen/driver/CO_storageBlank.c **** /**
 271:../CANopen/driver/CO_storageBlank.c ****  * Update one byte of data in the eeprom, target system specific function.
 272:../CANopen/driver/CO_storageBlank.c ****  *
 273:../CANopen/driver/CO_storageBlank.c ****  * Function is used by automatic storage. It updates byte in eeprom only if
 274:../CANopen/driver/CO_storageBlank.c ****  * differs from data.
 275:../CANopen/driver/CO_storageBlank.c ****  *
 276:../CANopen/driver/CO_storageBlank.c ****  * @param storageModule Pointer to storage module.
 277:../CANopen/driver/CO_storageBlank.c ****  * @param data Data byte to be written
 278:../CANopen/driver/CO_storageBlank.c ****  * @param eepromAddr Address in eeprom, from where data will be updated.
 279:../CANopen/driver/CO_storageBlank.c ****  *
 280:../CANopen/driver/CO_storageBlank.c ****  * @return true if write was successful or false, if still waiting previous
 281:../CANopen/driver/CO_storageBlank.c ****  * data to finish writing.
 282:../CANopen/driver/CO_storageBlank.c ****  */
 283:../CANopen/driver/CO_storageBlank.c **** bool_t CO_eeprom_updateByte(void *storageModule, uint8_t data, size_t eepromAddr)
 284:../CANopen/driver/CO_storageBlank.c **** {
 625              	 .loc 1 284 0
 626              	 .cfi_startproc
 627              	 
 628              	 
 629 0000 80B5     	 push {r7,lr}
 630              	.LCFI43:
 631              	 .cfi_def_cfa_offset 8
 632              	 .cfi_offset 7,-8
 633              	 .cfi_offset 14,-4
 634 0002 84B0     	 sub sp,sp,#16
 635              	.LCFI44:
 636              	 .cfi_def_cfa_offset 24
 637 0004 00AF     	 add r7,sp,#0
 638              	.LCFI45:
 639              	 .cfi_def_cfa_register 7
 640 0006 F860     	 str r0,[r7,#12]
 641 0008 0B46     	 mov r3,r1
 642 000a 7A60     	 str r2,[r7,#4]
 643 000c FB72     	 strb r3,[r7,#11]
 285:../CANopen/driver/CO_storageBlank.c **** 
 286:../CANopen/driver/CO_storageBlank.c **** 	vEEPROM_UpdateByte(eepromAddr, data);
 644              	 .loc 1 286 0
 645 000e 7B68     	 ldr r3,[r7,#4]
 646 0010 9AB2     	 uxth r2,r3
 647 0012 FB7A     	 ldrb r3,[r7,#11]
 648 0014 1046     	 mov r0,r2
 649 0016 1946     	 mov r1,r3
 650 0018 FFF7FEFF 	 bl vEEPROM_UpdateByte
 287:../CANopen/driver/CO_storageBlank.c **** 
 288:../CANopen/driver/CO_storageBlank.c ****     return true;
 651              	 .loc 1 288 0
 652 001c 0123     	 movs r3,#1
 289:../CANopen/driver/CO_storageBlank.c **** }
 653              	 .loc 1 289 0
 654 001e 1846     	 mov r0,r3
 655 0020 1037     	 adds r7,r7,#16
 656              	.LCFI46:
 657              	 .cfi_def_cfa_offset 8
 658 0022 BD46     	 mov sp,r7
 659              	.LCFI47:
 660              	 .cfi_def_cfa_register 13
 661              	 
 662 0024 80BD     	 pop {r7,pc}
 663              	 .cfi_endproc
 664              	.LFE41:
 666              	 .text
 667              	.Letext0:
 668              	 .file 2 "d:\\programs\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\lib\\gcc\\arm-none-eabi\\4.9.3\\include\\stddef.h"
 669              	 .file 3 "d:\\programs\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 670              	 .file 4 "d:\\programs\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 671              	 .file 5 "D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/driver/CO_driver_target.h"
 672              	 .file 6 "D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301/CO_driver.h"
 673              	 .file 7 "D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301/CO_ODinterface.h"
 674              	 .file 8 "D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/storage/CO_storage.h"
 675              	 .file 9 "D:/Workspace/Development/my/DAVE/Infineon_CANopen/EEPROM/EEPROM_25Series.h"
DEFINED SYMBOLS
                            *ABS*:00000000 CO_storageBlank.c
    {standard input}:20     .bss.eepromAddrNextAuto:00000000 $d
    {standard input}:23     .bss.eepromAddrNextAuto:00000000 eepromAddrNextAuto
    {standard input}:26     .data.eepromAddrNextProt:00000000 $d
    {standard input}:29     .data.eepromAddrNextProt:00000000 eepromAddrNextProt
    {standard input}:32     .bss.dummy:00000000 $d
    {standard input}:35     .bss.dummy:00000000 dummy
    {standard input}:38     .text.storeBlank:00000000 $t
    {standard input}:42     .text.storeBlank:00000000 storeBlank
    {standard input}:83     .text.restoreBlank:00000000 $t
    {standard input}:87     .text.restoreBlank:00000000 restoreBlank
    {standard input}:127    .text.CO_storageBlank_init:00000000 $t
    {standard input}:132    .text.CO_storageBlank_init:00000000 CO_storageBlank_init
    {standard input}:272    .text.CO_storageBlank_init:000000b8 $d
    {standard input}:278    .text.CO_eeprom_init:00000000 $t
    {standard input}:283    .text.CO_eeprom_init:00000000 CO_eeprom_init
    {standard input}:327    .text.CO_eeprom_getAddr:00000000 $t
    {standard input}:332    .text.CO_eeprom_getAddr:00000000 CO_eeprom_getAddr
    {standard input}:436    .text.CO_eeprom_getAddr:00000084 $d
    {standard input}:442    .text.CO_eeprom_readBlock:00000000 $t
    {standard input}:447    .text.CO_eeprom_readBlock:00000000 CO_eeprom_readBlock
    {standard input}:490    .text.CO_eeprom_writeBlock:00000000 $t
    {standard input}:495    .text.CO_eeprom_writeBlock:00000000 CO_eeprom_writeBlock
    {standard input}:549    .text.CO_eeprom_getCrcBlock:00000000 $t
    {standard input}:554    .text.CO_eeprom_getCrcBlock:00000000 CO_eeprom_getCrcBlock
    {standard input}:618    .text.CO_eeprom_updateByte:00000000 $t
    {standard input}:623    .text.CO_eeprom_updateByte:00000000 CO_eeprom_updateByte
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
CO_storage_init
xEEPROM_Init
vEEPROM_Read
vEEPROM_Write
malloc
crc16_ccitt
free
vEEPROM_UpdateByte
