   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "CO_SYNC.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.CO_getUint8,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	CO_getUint8:
  25              	.LFB0:
  26              	 .file 1 "D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301/CO_driver.h"
   1:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
   2:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Interface between CAN hardware and CANopenNode.
   3:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
   4:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @file        CO_driver.h
   5:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @ingroup     CO_driver
   6:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @author      Janez Paternoster
   7:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @copyright   2004 - 2020 Janez Paternoster
   8:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
   9:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * This file is part of CANopenNode, an opensource CANopen Stack.
  10:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Project home page is <https://github.com/CANopenNode/CANopenNode>.
  11:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * For more information on CANopen see <http://www.can-cia.org/>.
  12:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
  13:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Licensed under the Apache License, Version 2.0 (the "License");
  14:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * you may not use this file except in compliance with the License.
  15:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * You may obtain a copy of the License at
  16:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
  17:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *     http://www.apache.org/licenses/LICENSE-2.0
  18:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
  19:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Unless required by applicable law or agreed to in writing, software
  20:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * distributed under the License is distributed on an "AS IS" BASIS,
  21:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  22:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * See the License for the specific language governing permissions and
  23:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * limitations under the License.
  24:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
  25:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
  26:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #ifndef CO_DRIVER_H
  27:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #define CO_DRIVER_H
  28:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
  29:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #include <string.h>
  30:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
  31:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #include "CO_config.h"
  32:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #include "CO_driver_target.h"
  33:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
  34:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #ifdef __cplusplus
  35:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** extern "C" {
  36:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #endif
  37:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
  38:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /* Stack configuration default global values.
  39:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * For more information see file CO_config.h. */
  40:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #ifndef CO_CONFIG_GLOBAL_FLAG_CALLBACK_PRE
  41:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  #define CO_CONFIG_GLOBAL_FLAG_CALLBACK_PRE (0)
  42:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #endif
  43:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #ifndef CO_CONFIG_GLOBAL_RT_FLAG_CALLBACK_PRE
  44:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  #define CO_CONFIG_GLOBAL_RT_FLAG_CALLBACK_PRE (0)
  45:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #endif
  46:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #ifndef CO_CONFIG_GLOBAL_FLAG_TIMERNEXT
  47:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  #define CO_CONFIG_GLOBAL_FLAG_TIMERNEXT (0)
  48:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #endif
  49:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #ifndef CO_CONFIG_GLOBAL_FLAG_OD_DYNAMIC
  50:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  #define CO_CONFIG_GLOBAL_FLAG_OD_DYNAMIC CO_CONFIG_FLAG_OD_DYNAMIC
  51:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #endif
  52:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #ifdef CO_DEBUG_COMMON
  53:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  #if (CO_CONFIG_DEBUG) & CO_CONFIG_DEBUG_SDO_CLIENT
  54:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****   #define CO_DEBUG_SDO_CLIENT(msg) CO_DEBUG_COMMON(msg)
  55:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  #endif
  56:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  #if (CO_CONFIG_DEBUG) & CO_CONFIG_DEBUG_SDO_SERVER
  57:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****   #define CO_DEBUG_SDO_SERVER(msg) CO_DEBUG_COMMON(msg)
  58:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  #endif
  59:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #endif
  60:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
  61:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
  62:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @defgroup CO_driver Driver
  63:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Interface between CAN hardware and CANopenNode.
  64:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
  65:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @ingroup CO_CANopen_301
  66:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @{
  67:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * CANopenNode is designed for speed and portability. It runs efficiently on
  68:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * devices from simple 16-bit microcontrollers to PC computers. It can run in
  69:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * multiple threads. Reception of CAN messages is pre-processed with very fast
  70:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * functions. Time critical objects, such as PDO or SYNC are processed in
  71:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * real-time thread and other objects are processed in normal thread. See
  72:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Flowchart in [README.md](index.html) for more information.
  73:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
  74:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @anchor CO_obj
  75:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * #### CANopenNode Object
  76:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * CANopenNode is implemented as a collection of different objects, for example
  77:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * SDO, SYNC, Emergency, PDO, NMT, Heartbeat, etc. Code is written in C language
  78:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * and tries to be object oriented. So each CANopenNode Object is implemented in
  79:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * a pair of .h/.c files. It basically contains a structure with all necessary
  80:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * variables and some functions which operates on it. CANopenNode Object is
  81:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * usually connected with one or more CAN receive or transmit Message Objects.
  82:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * (CAN message Object is a CAN message with specific 11-bit CAN identifier
  83:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * (usually one fixed or a range).)
  84:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
  85:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * #### Hardware interface of CANopenNode
  86:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * It consists of minimum three files:
  87:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * - **CO_driver.h** file declares common functions. This file is part of the
  88:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * CANopenNode. It is included from each .c file from CANopenNode.
  89:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * - **CO_driver_target.h** file declares microcontroller specific type
  90:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * declarations and defines some macros, which are necessary for CANopenNode.
  91:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * This file is included from CO_driver.h.
  92:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * - **CO_driver.c** file defines functions declared in CO_driver.h.
  93:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
  94:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * **CO_driver_target.h** and **CO_driver.c** files are specific for each
  95:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * different microcontroller and are not part of CANopenNode. There are separate
  96:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * projects for different microcontrollers, which usually include CANopenNode as
  97:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * a git submodule. CANopenNode only includes those two files in the `example`
  98:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * directory and they are basically empty. It should be possible to compile the
  99:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * `CANopenNode/example` on any system, however compiled program is not usable.
 100:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * CO_driver.h contains documentation for all necessary macros, types and
 101:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * functions.
 102:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 103:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * See [CANopenNode/Wiki](https://github.com/CANopenNode/CANopenNode/wiki) for a
 104:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * known list of available implementations of CANopenNode on different systems
 105:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * and microcontrollers. Everybody is welcome to extend the list with a link to
 106:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * his own implementation.
 107:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 108:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Implementation of the hardware interface for specific microcontroller is not
 109:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * always an easy task. For reliable and efficient operation it is necessary to
 110:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * know some parts of the target microcontroller in detail (for example threads
 111:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * (or interrupts), CAN module, etc.).
 112:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
 113:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 114:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** Major version number of CANopenNode */
 115:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #define CO_VERSION_MAJOR 4
 116:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** Minor version number of CANopenNode */
 117:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #define CO_VERSION_MINOR 0
 118:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 119:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 120:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /* Macros and declarations in following part are only used for documentation. */
 121:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #ifdef CO_DOXYGEN
 122:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
 123:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @defgroup CO_dataTypes Basic definitions
 124:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @{
 125:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 126:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Target specific basic definitions and data types.
 127:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 128:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Must be defined in the **CO_driver_target.h** file.
 129:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 130:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Depending on processor or compiler architecture, one of the two macros must
 131:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * be defined: CO_LITTLE_ENDIAN or CO_BIG_ENDIAN. CANopen itself is little
 132:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * endian.
 133:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 134:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Basic data types may be specified differently on different architectures.
 135:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Usually `true` and `false` are defined in `<stdbool.h>`, `NULL` is defined in
 136:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * `<stddef.h>`, `int8_t` to `uint64_t` are defined in `<stdint.h>`.
 137:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
 138:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** CO_LITTLE_ENDIAN or CO_BIG_ENDIAN must be defined */
 139:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #define CO_LITTLE_ENDIAN
 140:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** Macro must swap bytes, if CO_BIG_ENDIAN is defined */
 141:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #define CO_SWAP_16(x) x
 142:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** Macro must swap bytes, if CO_BIG_ENDIAN is defined */
 143:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #define CO_SWAP_32(x) x
 144:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** Macro must swap bytes, if CO_BIG_ENDIAN is defined */
 145:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #define CO_SWAP_64(x) x
 146:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** NULL, for general usage */
 147:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #define NULL (0)
 148:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** Logical true, for general use */
 149:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #define true 1
 150:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** Logical false, for general use */
 151:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #define false 0
 152:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** Boolean data type for general use */
 153:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** typedef uint_fast8_t bool_t;
 154:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** INTEGER8 in CANopen (0002h), 8-bit signed integer */
 155:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** typedef signed char int8_t;
 156:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** INTEGER16 in CANopen (0003h), 16-bit signed integer */
 157:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** typedef signed int int16_t;
 158:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** INTEGER32 in CANopen (0004h), 32-bit signed integer */
 159:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** typedef signed long int int32_t;
 160:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** INTEGER64 in CANopen (0015h), 64-bit signed integer */
 161:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** typedef signed long long int int64_t;
 162:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** UNSIGNED8 in CANopen (0005h), 8-bit unsigned integer */
 163:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** typedef unsigned char uint8_t;
 164:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** UNSIGNED16 in CANopen (0006h), 16-bit unsigned integer */
 165:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** typedef unsigned int uint16_t;
 166:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** UNSIGNED32 in CANopen (0007h), 32-bit unsigned integer */
 167:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** typedef unsigned long int uint32_t;
 168:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** UNSIGNED64 in CANopen (001Bh), 64-bit unsigned integer */
 169:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** typedef unsigned long long int uint64_t;
 170:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** REAL32 in CANopen (0008h), single precision floating point value, 32-bit */
 171:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** typedef float float32_t;
 172:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** REAL64 in CANopen (0011h), double precision floating point value, 64-bit */
 173:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** typedef double float64_t;
 174:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** @} */
 175:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 176:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 177:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
 178:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @defgroup CO_CAN_Message_reception Reception of CAN messages
 179:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @{
 180:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 181:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Target specific definitions and description of CAN message reception
 182:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 183:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * CAN messages in CANopenNode are usually received by its own thread or higher
 184:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * priority interrupt. Received CAN messages are first filtered by hardware or
 185:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * by software. Thread then examines its 11-bit CAN-id and mask and determines,
 186:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * to which \ref CO_obj "CANopenNode Object" it belongs to. After that it calls
 187:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * predefined CANrx_callback() function, which quickly pre-processes the message
 188:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * and fetches the relevant data. CANrx_callback() function is defined by each
 189:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * \ref CO_obj "CANopenNode Object" separately. Pre-processed fetched data are
 190:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * later processed in another thread.
 191:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 192:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * If \ref CO_obj "CANopenNode Object" reception of specific CAN message, it
 193:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * must first configure its own CO_CANrx_t object with the CO_CANrxBufferInit()
 194:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * function.
 195:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
 196:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 197:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
 198:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * CAN receive callback function which pre-processes received CAN message
 199:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 200:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * It is called by fast CAN receive thread. Each \ref CO_obj "CANopenNode
 201:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Object" defines its own and registers it with CO_CANrxBufferInit(), by
 202:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * passing function pointer.
 203:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 204:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param object pointer to specific \ref CO_obj "CANopenNode Object",
 205:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * registered with CO_CANrxBufferInit()
 206:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param rxMsg pointer to received CAN message
 207:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
 208:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** void CANrx_callback(void *object, void *rxMsg);
 209:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 210:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
 211:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * CANrx_callback() can read CAN identifier from received CAN message
 212:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 213:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Must be defined in the **CO_driver_target.h** file.
 214:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 215:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * This is target specific function and is specific for specific
 216:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * microcontroller. It is best to implement it by using inline function or
 217:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * macro. `rxMsg` parameter should cast to a pointer to structure. For best
 218:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * efficiency structure may have the same alignment as CAN registers inside CAN
 219:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * module.
 220:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 221:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param rxMsg Pointer to received message
 222:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @return 11-bit CAN standard identifier.
 223:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
 224:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** static inline uint16_t CO_CANrxMsg_readIdent(void *rxMsg) {
 225:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     return 0;
 226:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** }
 227:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 228:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
 229:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * CANrx_callback() can read Data Length Code from received CAN message
 230:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 231:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * See also CO_CANrxMsg_readIdent():
 232:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 233:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param rxMsg Pointer to received message
 234:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @return data length in bytes (0 to 8)
 235:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
 236:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** static inline uint8_t CO_CANrxMsg_readDLC(void *rxMsg) {
 237:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     return 0;
 238:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** }
 239:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 240:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
 241:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * CANrx_callback() can read pointer to data from received CAN message
 242:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 243:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * See also CO_CANrxMsg_readIdent():
 244:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 245:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param rxMsg Pointer to received message
 246:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @return pointer to data buffer
 247:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
 248:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** static inline uint8_t *CO_CANrxMsg_readData(void *rxMsg) {
 249:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     return NULL;
 250:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** }
 251:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 252:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
 253:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Configuration object for CAN received message for specific \ref CO_obj
 254:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * "CANopenNode Object".
 255:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 256:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Must be defined in the **CO_driver_target.h** file.
 257:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 258:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Data fields of this structure are used exclusively by the driver. Usually it
 259:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * has the following data fields, but they may differ for different
 260:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * microcontrollers. Array of multiple CO_CANrx_t objects is included inside
 261:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * CO_CANmodule_t.
 262:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
 263:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** typedef struct {
 264:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     uint16_t ident; /**< Standard CAN Identifier (bits 0..10) + RTR (bit 11) */
 265:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     uint16_t mask;  /**< Standard CAN Identifier mask with the same alignment as
 266:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                        ident */
 267:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     void *object;   /**< \ref CO_obj "CANopenNode Object" initialized in from
 268:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                        CO_CANrxBufferInit() */
 269:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     void (*pCANrx_callback)(
 270:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****         void *object, void *message); /**< Pointer to CANrx_callback()
 271:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                          initialized in CO_CANrxBufferInit() */
 272:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** } CO_CANrx_t;
 273:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** @} */
 274:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 275:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 276:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
 277:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @defgroup CO_CAN_Message_transmission Transmission of CAN messages
 278:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @{
 279:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 280:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Target specific definitions and description of CAN message transmission
 281:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 282:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * If \ref CO_obj "CANopenNode Object" needs transmitting CAN message, it must
 283:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * first configure its own CO_CANtx_t object with the CO_CANtxBufferInit()
 284:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * function. CAN message can then be sent with CO_CANsend() function. If at that
 285:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * moment CAN transmit buffer inside microcontroller's CAN module is free,
 286:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * message is copied directly to the CAN module. Otherwise CO_CANsend() function
 287:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * sets _bufferFull_ flag to true. Message will be then sent by CAN TX interrupt
 288:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * as soon as CAN module is freed. Until message is not copied to CAN module,
 289:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * its contents must not change. If there are multiple CO_CANtx_t objects with
 290:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * _bufferFull_ flag set to true, then CO_CANtx_t with lower index will be sent
 291:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * first.
 292:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
 293:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 294:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
 295:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Configuration object for CAN transmit message for specific \ref CO_obj
 296:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * "CANopenNode Object".
 297:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 298:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Must be defined in the **CO_driver_target.h** file.
 299:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 300:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Data fields of this structure are used exclusively by the driver. Usually it
 301:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * has the following data fields, but they may differ for different
 302:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * microcontrollers. Array of multiple CO_CANtx_t objects is included inside
 303:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * CO_CANmodule_t.
 304:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
 305:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** typedef struct {
 306:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     uint32_t ident;             /**< CAN identifier as aligned in CAN module */
 307:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     uint8_t DLC;                /**< Length of CAN message */
 308:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     uint8_t data[8];            /**< 8 data bytes */
 309:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     volatile bool_t bufferFull; /**< True if previous message is still in the
 310:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                      buffer */
 311:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     volatile bool_t syncFlag;   /**< Synchronous PDO messages has this flag set.
 312:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                   It prevents them to be sent outside the synchronous window */
 313:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** } CO_CANtx_t;
 314:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** @} */
 315:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 316:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 317:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
 318:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Complete CAN module object.
 319:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 320:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Must be defined in the **CO_driver_target.h** file.
 321:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 322:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Usually it has the following data fields, but they may differ for different
 323:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * microcontrollers.
 324:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
 325:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** typedef struct {
 326:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     void *CANptr;                      /**< From CO_CANmodule_init() */
 327:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CANrx_t *rxArray;               /**< From CO_CANmodule_init() */
 328:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     uint16_t rxSize;                   /**< From CO_CANmodule_init() */
 329:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CANtx_t *txArray;               /**< From CO_CANmodule_init() */
 330:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     uint16_t txSize;                   /**< From CO_CANmodule_init() */
 331:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     uint16_t CANerrorStatus;           /**< CAN error status bitfield,
 332:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                             see @ref CO_CAN_ERR_status_t */
 333:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     volatile bool_t CANnormal;         /**< CAN module is in normal mode */
 334:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     volatile bool_t useCANrxFilters;   /**< Value different than zero indicates,
 335:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****             that CAN module hardware filters are used for CAN reception. If
 336:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****             there is not enough hardware filters, they won't be used. In this
 337:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****             case will be *all* received CAN messages processed by software. */
 338:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     volatile bool_t bufferInhibitFlag; /**< If flag is true, then message in
 339:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****             transmit buffer is synchronous PDO message, which will be aborted,
 340:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****             if CO_clearPendingSyncPDOs() function will be called by application.
 341:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****             This may be necessary if Synchronous window time was expired. */
 342:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     volatile bool_t firstCANtxMessage; /**< Equal to 1, when the first
 343:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****             transmitted message (bootup message) is in CAN TX buffers */
 344:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     volatile uint16_t CANtxCount;      /**< Number of messages in transmit
 345:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****             buffer, which are waiting to be copied to the CAN module */
 346:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     uint32_t errOld;                   /**< Previous state of CAN errors */
 347:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** } CO_CANmodule_t;
 348:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 349:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 350:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
 351:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Data storage object for one entry.
 352:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 353:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Must be defined in the **CO_driver_target.h** file.
 354:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 355:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * For more information on Data storage see @ref CO_storage or **CO_storage.h**
 356:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * file. Structure members documented here are always required or required with
 357:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @ref CO_storage_eeprom. Target system may add own additional, hardware
 358:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * specific variables.
 359:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
 360:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** typedef struct {
 361:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     /** Address of data to store, always required. */
 362:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     void *addr;
 363:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     /** Length of data to store, always required. */
 364:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     size_t len;
 365:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     /** Sub index in OD objects 1010 and 1011, from 2 to 127. Writing
 366:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****      * 0x65766173 to 1010,subIndexOD will store data to non-volatile memory.
 367:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****      * Writing 0x64616F6C to 1011,subIndexOD will restore default data, always
 368:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****      * required. */
 369:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     uint8_t subIndexOD;
 370:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     /** Attribute from @ref CO_storage_attributes_t, always required. */
 371:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     uint8_t attr;
 372:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     /** Pointer to storage module, target system specific usage, required with
 373:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****      * @ref CO_storage_eeprom. */
 374:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     void *storageModule;
 375:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     /** CRC checksum of the data stored in eeprom, set on store, required with
 376:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****      * @ref CO_storage_eeprom. */
 377:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     uint16_t crc;
 378:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     /** Address of entry signature inside eeprom, set by init, required with
 379:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****      * @ref CO_storage_eeprom. */
 380:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     size_t eepromAddrSignature;
 381:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     /** Address of data inside eeprom, set by init, required with
 382:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****      * @ref CO_storage_eeprom. */
 383:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     size_t eepromAddr;
 384:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     /** Offset of next byte being updated by automatic storage, required with
 385:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****      * @ref CO_storage_eeprom. */
 386:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     size_t offset;
 387:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     /** Additional target specific parameters, optional. */
 388:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     void *additionalParameters;
 389:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** } CO_storage_entry_t;
 390:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 391:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 392:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
 393:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @defgroup CO_critical_sections Critical sections
 394:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @{
 395:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 396:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Protection of critical sections in multi-threaded operation.
 397:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 398:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * CANopenNode is designed to run in different threads, as described in
 399:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * [README.md](index.html). Threads are implemented differently in different
 400:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * systems. In microcontrollers threads are interrupts with different
 401:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * priorities, for example. It is necessary to protect sections, where different
 402:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * threads access to the same resource. In simple systems interrupts or
 403:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * scheduler may be temporary disabled between access to the shared resource.
 404:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Otherwise mutexes or semaphores can be used.
 405:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 406:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * #### Reentrant functions
 407:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Functions CO_CANsend() from C_driver.h, and CO_error() from CO_Emergency.h
 408:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * may be called from different threads. Critical sections must be protected.
 409:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Either by disabling scheduler or interrupts or by mutexes or semaphores.
 410:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Lock/unlock macro is called with pointer to CAN module, which may be used
 411:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * inside.
 412:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 413:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * #### Object Dictionary variables
 414:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * In general, there are two threads, which accesses OD variables: mainline
 415:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * (initialization, storage, SDO access) and timer (PDO access). CANopenNode
 416:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * uses locking mechanism, where SDO server (or other mainline code) prevents
 417:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * execution of the real-time thread at the moment it reads or writes OD
 418:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * variable. CO_LOCK_OD(CAN_MODULE) and CO_UNLOCK_OD(CAN_MODULE) macros
 419:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * are used to protect:
 420:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * - Whole real-time thread,
 421:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * - SDO server protects read/write access to OD variable, if specific OD
 422:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *   variable has ODA_TRPDO or ODA_TRSRDO from @ref OD_attributes_t set. If
 423:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *   those attributes are not set, OD variable is not locked by SDO server.
 424:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *   Locking of long OD variables, not accessible from real-time thread, may
 425:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *   block RT thread.
 426:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * - Any mainline code, which accesses PDO-mappable OD variable, must protect
 427:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *   read/write with locking macros. Use @ref OD_mappable() for check.
 428:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * - Other cases, where non-PDO-mappable OD variable is used inside real-time
 429:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *   thread by some other part of the user application must be considered with
 430:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *   special care.
 431:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 432:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * #### Synchronization functions for CAN receive
 433:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * After CAN message is received, it is pre-processed in CANrx_callback(), which
 434:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * copies some data into appropriate object and at the end sets **new_message**
 435:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * flag. This flag is then pooled in another thread, which further processes the
 436:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * message. The problem is, that compiler optimization may shuffle memory
 437:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * operations, so it is necessary to ensure, that **new_message** flag is surely
 438:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * set at the end. It is necessary to use [Memory
 439:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * barrier](https://en.wikipedia.org/wiki/Memory_barrier).
 440:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 441:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * If receive function runs inside IRQ, no further synchronization is needed.
 442:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Otherwise, some kind of synchronization has to be included. The following
 443:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * example uses GCC builtin memory barrier `__sync_synchronize()`. More
 444:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * information can be found
 445:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * [here](https://stackoverflow.com/questions/982129/what-does-sync-synchronize-do#982179).
 446:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
 447:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 448:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** Lock critical section in CO_CANsend() */
 449:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #define CO_LOCK_CAN_SEND(CAN_MODULE)
 450:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** Unlock critical section in CO_CANsend() */
 451:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #define CO_UNLOCK_CAN_SEND(CAN_MODULE)
 452:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** Lock critical section in CO_errorReport() or CO_errorReset() */
 453:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #define CO_LOCK_EMCY(CAN_MODULE)
 454:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** Unlock critical section in CO_errorReport() or CO_errorReset() */
 455:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #define CO_UNLOCK_EMCY(CAN_MODULE)
 456:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** Lock critical section when accessing Object Dictionary */
 457:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #define CO_LOCK_OD(CAN_MODULE)
 458:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** Unock critical section when accessing Object Dictionary */
 459:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #define CO_UNLOCK_OD(CAN_MODULE)
 460:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 461:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** Check if new message has arrived */
 462:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #define CO_FLAG_READ(rxNew) ((rxNew) != NULL)
 463:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** Set new message flag */
 464:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #define CO_FLAG_SET(rxNew) { __sync_synchronize(); rxNew = (void *)1L; }
 465:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** Clear new message flag */
 466:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #define CO_FLAG_CLEAR(rxNew) { __sync_synchronize(); rxNew = NULL; }
 467:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 468:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** @} */
 469:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #endif /* CO_DOXYGEN */
 470:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 471:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 472:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
 473:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Default CANopen identifiers.
 474:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 475:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Default CANopen identifiers for CANopen communication objects. Same as
 476:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * 11-bit addresses of CAN messages. These are default identifiers and
 477:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * can be changed in CANopen. Especially PDO identifiers are configured
 478:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * in PDO linking phase of the CANopen network configuration.
 479:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
 480:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** typedef enum {
 481:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ID_NMT_SERVICE = 0x000, /**< 0x000, Network management */
 482:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ID_GFC = 0x001,         /**< 0x001, Global fail-safe command */
 483:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ID_SYNC = 0x080,        /**< 0x080, Synchronous message */
 484:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ID_EMERGENCY = 0x080,   /**< 0x080, Emergency messages (+nodeID) */
 485:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ID_TIME = 0x100,        /**< 0x100, Time message */
 486:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ID_SRDO_1 = 0x0FF,      /**< 0x0FF, Default SRDO1 (+2*nodeID) */
 487:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ID_TPDO_1 = 0x180,      /**< 0x180, Default TPDO1 (+nodeID) */
 488:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ID_RPDO_1 = 0x200,      /**< 0x200, Default RPDO1 (+nodeID) */
 489:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ID_TPDO_2 = 0x280,      /**< 0x280, Default TPDO2 (+nodeID) */
 490:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ID_RPDO_2 = 0x300,      /**< 0x300, Default RPDO2 (+nodeID) */
 491:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ID_TPDO_3 = 0x380,      /**< 0x380, Default TPDO3 (+nodeID) */
 492:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ID_RPDO_3 = 0x400,      /**< 0x400, Default RPDO3 (+nodeID) */
 493:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ID_TPDO_4 = 0x480,      /**< 0x480, Default TPDO4 (+nodeID) */
 494:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ID_RPDO_4 = 0x500,      /**< 0x500, Default RPDO5 (+nodeID) */
 495:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ID_SDO_SRV = 0x580, /**< 0x580, SDO response from server (+nodeID) */
 496:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ID_SDO_CLI = 0x600, /**< 0x600, SDO request from client (+nodeID) */
 497:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ID_HEARTBEAT = 0x700,   /**< 0x700, Heartbeat message */
 498:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ID_LSS_SLV = 0x7E4,     /**< 0x7E4, LSS response from slave */
 499:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ID_LSS_MST = 0x7E5      /**< 0x7E5, LSS request from master */
 500:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** } CO_Default_CAN_ID_t;
 501:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 502:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 503:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
 504:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Restricted CAN-IDs
 505:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 506:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Macro for verifying 'Restricted CAN-IDs', as specified by standard CiA301.
 507:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * They shall not be used for SYNC, TIME, EMCY, PDO and SDO.
 508:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
 509:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #ifndef CO_IS_RESTRICTED_CAN_ID
 510:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #define CO_IS_RESTRICTED_CAN_ID(CAN_ID) ((CAN_ID) <= 0x7F \
 511:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****         || ((CAN_ID) >= 0x101 && (CAN_ID) <= 0x180) \
 512:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****         || ((CAN_ID) >= 0x581 && (CAN_ID) <= 0x5FF) \
 513:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****         || ((CAN_ID) >= 0x601 && (CAN_ID) <= 0x67F) \
 514:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****         || ((CAN_ID) >= 0x6E0 && (CAN_ID) <= 0x6FF) \
 515:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****         || (CAN_ID) >= 0x701)
 516:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #endif
 517:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 518:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 519:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
 520:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * CAN error status bitmasks.
 521:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 522:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * CAN warning level is reached, if CAN transmit or receive error counter is
 523:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * more or equal to 96. CAN passive level is reached, if counters are more or
 524:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * equal to 128. Transmitter goes in error state 'bus off' if transmit error
 525:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * counter is more or equal to 256.
 526:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
 527:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** typedef enum {
 528:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ERRTX_WARNING = 0x0001,  /**< 0x0001, CAN transmitter warning */
 529:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ERRTX_PASSIVE = 0x0002,  /**< 0x0002, CAN transmitter passive */
 530:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ERRTX_BUS_OFF = 0x0004,  /**< 0x0004, CAN transmitter bus off */
 531:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ERRTX_OVERFLOW = 0x0008, /**< 0x0008, CAN transmitter overflow */
 532:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 533:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ERRTX_PDO_LATE = 0x0080, /**< 0x0080, TPDO is outside sync window */
 534:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 535:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ERRRX_WARNING = 0x0100,  /**< 0x0100, CAN receiver warning */
 536:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ERRRX_PASSIVE = 0x0200,  /**< 0x0200, CAN receiver passive */
 537:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ERRRX_OVERFLOW = 0x0800, /**< 0x0800, CAN receiver overflow */
 538:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 539:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ERR_WARN_PASSIVE = 0x0303/**< 0x0303, combination */
 540:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** } CO_CAN_ERR_status_t;
 541:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 542:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 543:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
 544:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Return values of some CANopen functions. If function was executed
 545:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * successfully it returns 0 otherwise it returns <0.
 546:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
 547:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** typedef enum {
 548:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_ERROR_NO = 0,                /**< Operation completed successfully */
 549:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_ERROR_ILLEGAL_ARGUMENT = -1, /**< Error in function arguments */
 550:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_ERROR_OUT_OF_MEMORY = -2,    /**< Memory allocation failed */
 551:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_ERROR_TIMEOUT = -3,          /**< Function timeout */
 552:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_ERROR_ILLEGAL_BAUDRATE = -4, /**< Illegal baudrate passed to function
 553:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                          CO_CANmodule_init() */
 554:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_ERROR_RX_OVERFLOW = -5,      /**< Previous message was not processed
 555:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                          yet */
 556:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_ERROR_RX_PDO_OVERFLOW = -6,  /**< previous PDO was not processed yet */
 557:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_ERROR_RX_MSG_LENGTH = -7,    /**< Wrong receive message length */
 558:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_ERROR_RX_PDO_LENGTH = -8,    /**< Wrong receive PDO length */
 559:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_ERROR_TX_OVERFLOW = -9,      /**< Previous message is still waiting,
 560:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                          buffer full */
 561:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_ERROR_TX_PDO_WINDOW = -10,   /**< Synchronous TPDO is outside window */
 562:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_ERROR_TX_UNCONFIGURED = -11, /**< Transmit buffer was not configured
 563:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                          properly */
 564:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_ERROR_OD_PARAMETERS = -12,   /**< Error in Object Dictionary parameters*/
 565:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_ERROR_DATA_CORRUPT = -13,    /**< Stored data are corrupt */
 566:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_ERROR_CRC = -14,             /**< CRC does not match */
 567:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_ERROR_TX_BUSY = -15,         /**< Sending rejected because driver is
 568:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                          busy. Try again */
 569:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_ERROR_WRONG_NMT_STATE = -16, /**< Command can't be processed in current
 570:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                          state */
 571:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_ERROR_SYSCALL = -17,         /**< Syscall failed */
 572:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_ERROR_INVALID_STATE = -18,   /**< Driver not ready */
 573:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_ERROR_NODE_ID_UNCONFIGURED_LSS = -19 /**< Node-id is in LSS unconfigured
 574:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                          state. If objects are handled properly,
 575:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                          this may not be an error. */
 576:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** } CO_ReturnError_t;
 577:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 578:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 579:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
 580:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Request CAN configuration (stopped) mode and *wait* until it is set.
 581:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 582:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param CANptr Pointer to CAN device
 583:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
 584:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** void CO_CANsetConfigurationMode(void *CANptr);
 585:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 586:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 587:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
 588:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Request CAN normal (operational) mode and *wait* until it is set.
 589:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 590:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param CANmodule CO_CANmodule_t object.
 591:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
 592:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** void CO_CANsetNormalMode(CO_CANmodule_t *CANmodule);
 593:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 594:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 595:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
 596:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Initialize CAN module object.
 597:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 598:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Function must be called in the communication reset section. CAN module must
 599:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * be in Configuration Mode before.
 600:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 601:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param CANmodule This object will be initialized.
 602:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param CANptr Pointer to CAN device.
 603:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param rxArray Array for handling received CAN messages
 604:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param rxSize Size of the above array. Must be equal to number of receiving
 605:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * CAN objects.
 606:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param txArray Array for handling transmitting CAN messages
 607:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param txSize Size of the above array. Must be equal to number of
 608:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * transmitting CAN objects.
 609:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param CANbitRate Valid values are (in kbps): 10, 20, 50, 125, 250, 500, 800,
 610:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * 1000. If value is illegal, bitrate defaults to 125.
 611:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 612:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Return #CO_ReturnError_t: CO_ERROR_NO or CO_ERROR_ILLEGAL_ARGUMENT.
 613:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
 614:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** CO_ReturnError_t CO_CANmodule_init(CO_CANmodule_t *CANmodule,
 615:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                    void *CANptr,
 616:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                    CO_CANrx_t rxArray[],
 617:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                    uint16_t rxSize,
 618:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                    CO_CANtx_t txArray[],
 619:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                    uint16_t txSize,
 620:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                    uint16_t CANbitRate);
 621:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 622:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 623:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
 624:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Switch off CANmodule. Call at program exit.
 625:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 626:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param CANmodule CAN module object.
 627:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
 628:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** void CO_CANmodule_disable(CO_CANmodule_t *CANmodule);
 629:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 630:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 631:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
 632:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Configure CAN message receive buffer.
 633:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 634:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Function configures specific CAN receive buffer. It sets CAN identifier
 635:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * and connects buffer with specific object. Function must be called for each
 636:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * member in _rxArray_ from CO_CANmodule_t.
 637:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 638:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param CANmodule This object.
 639:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param index Index of the specific buffer in _rxArray_.
 640:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param ident 11-bit standard CAN Identifier. If two or more CANrx buffers
 641:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * have the same _ident_, then buffer with lowest _index_ has precedence and
 642:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * other CANrx buffers will be ignored.
 643:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param mask 11-bit mask for identifier. Most usually set to 0x7FF.
 644:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Received message (rcvMsg) will be accepted if the following
 645:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * condition is true: (((rcvMsgId ^ ident) & mask) == 0).
 646:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param rtr If true, 'Remote Transmit Request' messages will be accepted.
 647:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param object CANopen object, to which buffer is connected. It will be used
 648:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * as an argument to CANrx_callback. Its type is (void), CANrx_callback will
 649:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * change its type back to the correct object type.
 650:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param CANrx_callback Pointer to function, which will be called, if received
 651:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * CAN message matches the identifier. It must be fast function.
 652:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 653:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Return #CO_ReturnError_t: CO_ERROR_NO CO_ERROR_ILLEGAL_ARGUMENT or
 654:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * CO_ERROR_OUT_OF_MEMORY (not enough masks for configuration).
 655:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
 656:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** CO_ReturnError_t CO_CANrxBufferInit(CO_CANmodule_t *CANmodule,
 657:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                     uint16_t index,
 658:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                     uint16_t ident,
 659:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                     uint16_t mask,
 660:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                     bool_t rtr,
 661:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                     void *object,
 662:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                     void (*CANrx_callback)(void *object,
 663:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                                            void *message));
 664:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 665:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 666:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
 667:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Configure CAN message transmit buffer.
 668:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 669:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Function configures specific CAN transmit buffer. Function must be called for
 670:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * each member in _txArray_ from CO_CANmodule_t.
 671:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 672:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param CANmodule This object.
 673:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param index Index of the specific buffer in _txArray_.
 674:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param ident 11-bit standard CAN Identifier.
 675:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param rtr If true, 'Remote Transmit Request' messages will be transmitted.
 676:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param noOfBytes Length of CAN message in bytes (0 to 8 bytes).
 677:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param syncFlag This flag bit is used for synchronous TPDO messages. If it is
 678:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * set, message will not be sent, if current time is outside synchronous window.
 679:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 680:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @return Pointer to CAN transmit message buffer. 8 bytes data array inside
 681:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * buffer should be written, before CO_CANsend() function is called.
 682:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Zero is returned in case of wrong arguments.
 683:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
 684:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** CO_CANtx_t *CO_CANtxBufferInit(CO_CANmodule_t *CANmodule,
 685:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                uint16_t index,
 686:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                uint16_t ident,
 687:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                bool_t rtr,
 688:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                uint8_t noOfBytes,
 689:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                bool_t syncFlag);
 690:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 691:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 692:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
 693:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Send CAN message.
 694:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 695:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param CANmodule This object.
 696:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param buffer Pointer to transmit buffer, returned by CO_CANtxBufferInit().
 697:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Data bytes must be written in buffer before function call.
 698:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 699:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @return #CO_ReturnError_t: CO_ERROR_NO, CO_ERROR_TX_OVERFLOW or
 700:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * CO_ERROR_TX_PDO_WINDOW (Synchronous TPDO is outside window).
 701:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
 702:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** CO_ReturnError_t CO_CANsend(CO_CANmodule_t *CANmodule, CO_CANtx_t *buffer);
 703:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 704:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 705:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
 706:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Clear all synchronous TPDOs from CAN module transmit buffers.
 707:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 708:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * CANopen allows synchronous PDO communication only inside time between SYNC
 709:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * message and SYNC Window. If time is outside this window, new synchronous PDOs
 710:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * must not be sent and all pending sync TPDOs, which may be on CAN TX buffers,
 711:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * may optionally be cleared.
 712:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 713:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * This function checks (and aborts transmission if necessary) CAN TX buffers
 714:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * when it is called. Function should be called by the stack in the moment,
 715:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * when SYNC time was just passed out of synchronous window.
 716:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 717:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param CANmodule This object.
 718:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
 719:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** void CO_CANclearPendingSyncPDOs(CO_CANmodule_t *CANmodule);
 720:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 721:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 722:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
 723:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Process can module - verify CAN errors
 724:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 725:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Function must be called cyclically. It should calculate CANerrorStatus
 726:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * bitfield for CAN errors defined in @ref CO_CAN_ERR_status_t.
 727:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 728:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param CANmodule This object.
 729:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
 730:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** void CO_CANmodule_process(CO_CANmodule_t *CANmodule);
 731:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 732:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 733:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
 734:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Get uint8_t value from memory buffer
 735:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 736:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param buf Memory buffer to get value from.
 737:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 738:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @return Value
 739:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
 740:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** static inline uint8_t CO_getUint8(const void *buf) {
  27              	 .loc 1 740 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 85B0     	 sub sp,sp,#20
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 24
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
 741:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #if (C2000_PORT != 0)
 742:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     uint8_t value = 0;
 743:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     value = (*((uint8_t *)buf) & 0x00FF);
 744:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     return value;
 745:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #else
 746:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     uint8_t value; memmove(&value, buf, sizeof(value)); return value;
  43              	 .loc 1 746 0
  44 0008 7B68     	 ldr r3,[r7,#4]
  45 000a 1B78     	 ldrb r3,[r3]
  46 000c FB73     	 strb r3,[r7,#15]
  47 000e FB7B     	 ldrb r3,[r7,#15]
 747:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #endif
 748:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** }
  48              	 .loc 1 748 0
  49 0010 1846     	 mov r0,r3
  50 0012 1437     	 adds r7,r7,#20
  51              	.LCFI3:
  52              	 .cfi_def_cfa_offset 4
  53 0014 BD46     	 mov sp,r7
  54              	.LCFI4:
  55              	 .cfi_def_cfa_register 13
  56              	 
  57 0016 5DF8047B 	 ldr r7,[sp],#4
  58              	.LCFI5:
  59              	 .cfi_restore 7
  60              	 .cfi_def_cfa_offset 0
  61 001a 7047     	 bx lr
  62              	 .cfi_endproc
  63              	.LFE0:
  65              	 .section .text.CO_getUint32,"ax",%progbits
  66              	 .align 2
  67              	 .thumb
  68              	 .thumb_func
  70              	CO_getUint32:
  71              	.LFB2:
 749:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** Get uint16_t value from memory buffer, see @ref CO_getUint8 */
 750:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** static inline uint16_t CO_getUint16(const void *buf) {
 751:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #if (C2000_PORT != 0)
 752:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     uint16_t value = 0;
 753:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     uint8_t * pBuf8 = (uint8_t *)buf;
 754:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     for (int i = 0; i < 2; i++) {
 755:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****         value += ((uint16_t)(pBuf8[i])) << (8 * i);
 756:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     }
 757:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     return value;
 758:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #else
 759:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     uint16_t value; memmove(&value, buf, sizeof(value)); return value;
 760:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #endif
 761:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** }
 762:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** Get uint32_t value from memory buffer, see @ref CO_getUint8 */
 763:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** static inline uint32_t CO_getUint32(const void *buf) {
  72              	 .loc 1 763 0
  73              	 .cfi_startproc
  74              	 
  75              	 
  76 0000 80B5     	 push {r7,lr}
  77              	.LCFI6:
  78              	 .cfi_def_cfa_offset 8
  79              	 .cfi_offset 7,-8
  80              	 .cfi_offset 14,-4
  81 0002 84B0     	 sub sp,sp,#16
  82              	.LCFI7:
  83              	 .cfi_def_cfa_offset 24
  84 0004 00AF     	 add r7,sp,#0
  85              	.LCFI8:
  86              	 .cfi_def_cfa_register 7
  87 0006 7860     	 str r0,[r7,#4]
 764:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #if (C2000_PORT != 0)
 765:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     uint32_t value = 0;
 766:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     uint8_t * pBuf8 = (uint8_t *)buf;
 767:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     for(int i = 0; i < 4; i++) {
 768:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****         value += ((uint32_t)(pBuf8[i])) << (8 * i);
 769:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     }
 770:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     return value;
 771:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #else
 772:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     uint32_t value; memmove(&value, buf, sizeof(value)); return value;
  88              	 .loc 1 772 0
  89 0008 07F10C03 	 add r3,r7,#12
  90 000c 1846     	 mov r0,r3
  91 000e 7968     	 ldr r1,[r7,#4]
  92 0010 0422     	 movs r2,#4
  93 0012 FFF7FEFF 	 bl memmove
  94 0016 FB68     	 ldr r3,[r7,#12]
 773:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #endif
 774:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** }
  95              	 .loc 1 774 0
  96 0018 1846     	 mov r0,r3
  97 001a 1037     	 adds r7,r7,#16
  98              	.LCFI9:
  99              	 .cfi_def_cfa_offset 8
 100 001c BD46     	 mov sp,r7
 101              	.LCFI10:
 102              	 .cfi_def_cfa_register 13
 103              	 
 104 001e 80BD     	 pop {r7,pc}
 105              	 .cfi_endproc
 106              	.LFE2:
 108              	 .section .text.OD_getIndex,"ax",%progbits
 109              	 .align 2
 110              	 .thumb
 111              	 .thumb_func
 113              	OD_getIndex:
 114              	.LFB6:
 115              	 .file 2 "D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301/CO_ODinterface.h"
   1:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /**
   2:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * CANopen Object Dictionary interface
   3:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
   4:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @file        CO_ODinterface.h
   5:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @ingroup     CO_ODinterface
   6:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @author      Janez Paternoster
   7:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @copyright   2020 Janez Paternoster
   8:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
   9:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * This file is part of CANopenNode, an opensource CANopen Stack.
  10:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Project home page is <https://github.com/CANopenNode/CANopenNode>.
  11:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * For more information on CANopen see <http://www.can-cia.org/>.
  12:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
  13:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Licensed under the Apache License, Version 2.0 (the "License");
  14:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * you may not use this file except in compliance with the License.
  15:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * You may obtain a copy of the License at
  16:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
  17:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *     http://www.apache.org/licenses/LICENSE-2.0
  18:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
  19:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Unless required by applicable law or agreed to in writing, software
  20:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * distributed under the License is distributed on an "AS IS" BASIS,
  21:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  22:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * See the License for the specific language governing permissions and
  23:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * limitations under the License.
  24:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  */
  25:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
  26:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #ifndef CO_OD_INTERFACE_H
  27:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #define CO_OD_INTERFACE_H
  28:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
  29:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #include "301/CO_driver.h"
  30:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
  31:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #ifdef __cplusplus
  32:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** extern "C" {
  33:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #endif
  34:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
  35:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /**
  36:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @defgroup CO_ODinterface OD interface
  37:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * CANopen Object Dictionary interface.
  38:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
  39:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @ingroup CO_CANopen_301
  40:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @{
  41:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * See @ref doc/objectDictionary.md
  42:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  */
  43:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
  44:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #ifndef CO_OD_OWN_TYPES
  45:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /** Variable of type OD_size_t contains data length in bytes of OD variable */
  46:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** typedef uint32_t OD_size_t;
  47:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /** Type (and size) of Object Dictionary attribute */
  48:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** typedef uint8_t OD_attr_t;
  49:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #endif
  50:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
  51:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #ifndef OD_FLAGS_PDO_SIZE
  52:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /** Size of of flagsPDO variable inside @ref OD_extension_t, from 0 to 32. */
  53:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #define OD_FLAGS_PDO_SIZE 4
  54:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #endif
  55:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
  56:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #ifndef CO_PROGMEM
  57:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /** Modifier for OD objects. This is large amount of data and is specified in
  58:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Object Dictionary (OD.c file usually) */
  59:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #define CO_PROGMEM const
  60:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #endif
  61:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
  62:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
  63:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /**
  64:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Common DS301 object dictionary entries.
  65:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  */
  66:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** typedef enum {
  67:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1000_DEV_TYPE           = 0x1000U,/**< Device type */
  68:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1001_ERR_REG            = 0x1001U,/**< Error register */
  69:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1002_MANUF_STATUS_REG   = 0x1002U,/**< Manufacturer status register */
  70:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1003_PREDEF_ERR_FIELD   = 0x1003U,/**< Predefined error field */
  71:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1004_RSV                = 0x1004U,/**< Reserved */
  72:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1005_COBID_SYNC         = 0x1005U,/**< Sync message cob-id */
  73:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1006_COMM_CYCL_PERIOD   = 0x1006U,/**< Communication cycle period */
  74:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1007_SYNC_WINDOW_LEN    = 0x1007U,/**< Sync windows length */
  75:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1008_MANUF_DEV_NAME     = 0x1008U,/**< Manufacturer device name */
  76:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1009_MANUF_HW_VERSION   = 0x1009U,/**< Manufacturer hardware version */
  77:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H100A_MANUF_SW_VERSION   = 0x100AU,/**< Manufacturer software version */
  78:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H100B_RSV                = 0x100BU,/**< Reserved */
  79:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H100C_GUARD_TIME         = 0x100CU,/**< Guard time */
  80:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H100D_LIFETIME_FACTOR    = 0x100DU,/**< Life time factor */
  81:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H100E_RSV                = 0x100EU,/**< Reserved */
  82:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H100F_RSV                = 0x100FU,/**< Reserved */
  83:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1010_STORE_PARAMETERS   = 0x1010U,/**< Store params in persistent mem.*/
  84:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1011_RESTORE_DEFAULT    = 0x1011U,/**< Restore default parameters */
  85:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1012_COBID_TIME         = 0x1012U,/**< Timestamp message cob-id */
  86:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1013_HIGH_RES_TIMESTAMP = 0x1013U,/**< High resolution timestamp */
  87:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1014_COBID_EMERGENCY    = 0x1014U,/**< Emergency message cob-id */
  88:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1015_INHIBIT_TIME_EMCY  = 0x1015U,/**< Inhibit time emergency message */
  89:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1016_CONSUMER_HB_TIME   = 0x1016U,/**< Consumer heartbeat time */
  90:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1017_PRODUCER_HB_TIME   = 0x1017U,/**< Producer heartbeat time */
  91:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1018_IDENTITY_OBJECT    = 0x1018U,/**< Identity object */
  92:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1019_SYNC_CNT_OVERFLOW  = 0x1019U,/**< Sync counter overflow value */
  93:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1020_VERIFY_CONFIG      = 0x1020U,/**< Verify configuration */
  94:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1021_STORE_EDS          = 0x1021U,/**< Store EDS */
  95:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1022_STORE_FORMAT       = 0x1022U,/**< Store format */
  96:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1023_OS_CMD             = 0x1023U,/**< OS command */
  97:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1024_OS_CMD_MODE        = 0x1024U,/**< OS command mode */
  98:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1025_OS_DBG_INTERFACE   = 0x1025U,/**< OS debug interface */
  99:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1026_OS_PROMPT          = 0x1026U,/**< OS prompt */
 100:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1027_MODULE_LIST        = 0x1027U,/**< Module list */
 101:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1028_EMCY_CONSUMER      = 0x1028U,/**< Emergency consumer object */
 102:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1029_ERR_BEHAVIOR       = 0x1029U,/**< Error behaviour */
 103:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1200_SDO_SERVER_1_PARAM = 0x1200U,/**< SDO server parameter */
 104:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1280_SDO_CLIENT_1_PARAM = 0x1280U,/**< SDO client parameter */
 105:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1300_GFC_PARAM          = 0x1300U,/**< Global fail-safe command param */
 106:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1301_SRDO_1_PARAM       = 0x1301U,/**< SRDO communication parameter */
 107:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1381_SRDO_1_MAPPING     = 0x1381U,/**< SRDO mapping parameter */
 108:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H13FE_SRDO_VALID         = 0x13FEU,/**< SRDO Configuration valid */
 109:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H13FF_SRDO_CHECKSUM      = 0x13FFU,/**< SRDO configuration checksum */
 110:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1400_RXPDO_1_PARAM      = 0x1400U,/**< RXPDO communication parameter */
 111:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1600_RXPDO_1_MAPPING    = 0x1600U,/**< RXPDO mapping parameters */
 112:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1800_TXPDO_1_PARAM      = 0x1800U,/**< TXPDO communication parameter */
 113:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1A00_TXPDO_1_MAPPING    = 0x1A00U,/**< TXPDO mapping parameters */
 114:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** } OD_ObjDicId_30x_t;
 115:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 116:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 117:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /**
 118:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Attributes (bit masks) for OD sub-object.
 119:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  */
 120:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** typedef enum {
 121:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODA_SDO_R = 0x01, /**< SDO server may read from the variable */
 122:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODA_SDO_W = 0x02, /**< SDO server may write to the variable */
 123:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODA_SDO_RW = 0x03, /**< SDO server may read from or write to the variable */
 124:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODA_TPDO = 0x04, /**< Variable is mappable into TPDO (can be read) */
 125:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODA_RPDO = 0x08, /**< Variable is mappable into RPDO (can be written) */
 126:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODA_TRPDO = 0x0C, /**< Variable is mappable into TPDO or RPDO */
 127:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODA_TSRDO = 0x10, /**< Variable is mappable into transmitting SRDO */
 128:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODA_RSRDO = 0x20, /**< Variable is mappable into receiving SRDO */
 129:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODA_TRSRDO = 0x30, /**< Variable is mappable into tx or rx SRDO */
 130:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODA_MB = 0x40, /**< Variable is multi-byte ((u)int16_t to (u)int64_t) */
 131:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODA_STR = 0x80 /**< Shorter value, than specified variable size, may be
 132:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     written to the variable. SDO write will fill remaining memory with zeroes.
 133:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     Attribute is used for VISIBLE_STRING and UNICODE_STRING. */
 134:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** } OD_attributes_t;
 135:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 136:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 137:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /**
 138:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Return codes from OD access functions.
 139:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 140:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @ref OD_getSDOabCode() can be used to retrieve corresponding SDO abort code.
 141:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  */
 142:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** typedef enum {
 143:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /* !!!! WARNING !!!!
 144:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * If changing these values, change also OD_getSDOabCode() function!
 145:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  */
 146:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** Read/write is only partial, make more calls */
 147:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_PARTIAL = -1,
 148:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** SDO abort 0x00000000 - Read/write successfully finished */
 149:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_OK = 0,
 150:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** SDO abort 0x05040005 - Out of memory */
 151:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_OUT_OF_MEM = 1,
 152:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** SDO abort 0x06010000 - Unsupported access to an object */
 153:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_UNSUPP_ACCESS = 2,
 154:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** SDO abort 0x06010001 - Attempt to read a write only object */
 155:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_WRITEONLY = 3,
 156:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** SDO abort 0x06010002 - Attempt to write a read only object */
 157:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_READONLY = 4,
 158:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** SDO abort 0x06020000 - Object does not exist in the object dict. */
 159:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_IDX_NOT_EXIST = 5,
 160:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** SDO abort 0x06040041 - Object cannot be mapped to the PDO */
 161:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_NO_MAP = 6,
 162:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** SDO abort 0x06040042 - PDO length exceeded */
 163:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_MAP_LEN = 7,
 164:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** SDO abort 0x06040043 - General parameter incompatibility reasons */
 165:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_PAR_INCOMPAT = 8,
 166:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** SDO abort 0x06040047 - General internal incompatibility in device */
 167:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_DEV_INCOMPAT = 9,
 168:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** SDO abort 0x06060000 - Access failed due to hardware error */
 169:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_HW = 10,
 170:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** SDO abort 0x06070010 - Data type does not match */
 171:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_TYPE_MISMATCH = 11,
 172:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** SDO abort 0x06070012 - Data type does not match, length too high */
 173:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_DATA_LONG = 12,
 174:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** SDO abort 0x06070013 - Data type does not match, length too short */
 175:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_DATA_SHORT = 13,
 176:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** SDO abort 0x06090011 - Sub index does not exist */
 177:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_SUB_NOT_EXIST = 14,
 178:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** SDO abort 0x06090030 - Invalid value for parameter (download only) */
 179:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_INVALID_VALUE = 15,
 180:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** SDO abort 0x06090031 - Value range of parameter written too high */
 181:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_VALUE_HIGH = 16,
 182:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** SDO abort 0x06090032 - Value range of parameter written too low */
 183:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_VALUE_LOW = 17,
 184:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** SDO abort 0x06090036 - Maximum value is less than minimum value */
 185:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_MAX_LESS_MIN = 18,
 186:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** SDO abort 0x060A0023 - Resource not available: SDO connection */
 187:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_NO_RESOURCE = 19,
 188:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** SDO abort 0x08000000 - General error */
 189:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_GENERAL = 20,
 190:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** SDO abort 0x08000020 - Data cannot be transferred or stored to app */
 191:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_DATA_TRANSF = 21,
 192:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** SDO abort 0x08000021 - Data can't be transferred (local control) */
 193:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_DATA_LOC_CTRL = 22,
 194:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** SDO abort 0x08000022 - Data can't be transf. (present device state) */
 195:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_DATA_DEV_STATE = 23,
 196:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** SDO abort 0x08000023 - Object dictionary not present */
 197:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_OD_MISSING = 23,
 198:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** SDO abort 0x08000024 - No data available */
 199:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_NO_DATA = 25,
 200:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** Last element, number of responses */
 201:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_COUNT = 26
 202:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** } ODR_t;
 203:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 204:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 205:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /**
 206:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * IO stream structure, used for read/write access to OD variable, part of
 207:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @ref OD_IO_t.
 208:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  */
 209:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** typedef struct {
 210:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** Pointer to original data object, defined by Object Dictionary. Default
 211:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * read/write functions operate on it. If memory for data object is not
 212:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * specified by Object Dictionary, then dataOrig is NULL.
 213:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      */
 214:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     void *dataOrig;
 215:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** Pointer to object, passed by @ref OD_extension_init(). Can be used
 216:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * inside read / write functions from IO extension.
 217:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      */
 218:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     void *object;
 219:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** Data length in bytes or 0, if length is not specified */
 220:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_size_t dataLength;
 221:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** In case of large data, dataOffset indicates position of already
 222:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * transferred data */
 223:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_size_t dataOffset;
 224:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** Attribute bit-field of the OD sub-object, see @ref OD_attributes_t */
 225:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_attr_t attribute;
 226:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** Sub index of the OD sub-object, informative */
 227:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     uint8_t subIndex;
 228:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** } OD_stream_t;
 229:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 230:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 231:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /**
 232:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Structure for input / output on the OD variable. It is initialized with
 233:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @ref OD_getSub() function. Access principle to OD variable is via read/write
 234:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * functions operating on stream, similar as standard read/write.
 235:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  */
 236:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** typedef struct {
 237:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** Object Dictionary stream object, passed to read or write */
 238:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_stream_t stream;
 239:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /**
 240:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * Function pointer for reading value from specified variable from Object
 241:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * Dictionary. If OD variable is larger than buf, then this function must
 242:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * be called several times. After completed successful read function returns
 243:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * 'ODR_OK'. If read is partial, it returns 'ODR_PARTIAL'. In case of errors
 244:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * function returns code similar to SDO abort code.
 245:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      *
 246:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * Read can be restarted with @ref OD_rwRestart() function.
 247:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      *
 248:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * At the moment, when Object Dictionary is initialized, every variable has
 249:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * assigned the same "read" function. This default function simply copies
 250:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * data from Object Dictionary variable. Application can bind its own "read"
 251:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * function for specific object. In that case application is able to
 252:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * calculate data for reading from own internal state at the moment of
 253:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * "read" function call. Own "read" function on OD object can be initialized
 254:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * with @ref OD_extension_init() function.
 255:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      *
 256:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * "read" function must always copy all own data to buf, except if "buf" is
 257:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * not large enough. ("*returnCode" must not return 'ODR_PARTIAL', if there
 258:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * is still space in "buf".)
 259:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      *
 260:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * @warning When accessing OD variables by calling the read() function, it
 261:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * may be necessary to use @ref CO_LOCK_OD() and @ref CO_UNLOCK_OD() macros.
 262:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * See @ref CO_critical_sections for more information.
 263:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      *
 264:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * @param stream Object Dictionary stream object.
 265:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * @param buf Pointer to external buffer, where to data will be copied.
 266:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * @param count Size of the external buffer in bytes.
 267:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * @param [out] countRead If return value is "ODR_OK" or "ODR_PARTIAL",
 268:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * then number of bytes successfully read must be returned here.
 269:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      *
 270:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * @return Value from @ref ODR_t, "ODR_OK" in case of success.
 271:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      */
 272:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_t (*read)(OD_stream_t *stream, void *buf,
 273:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****                   OD_size_t count, OD_size_t *countRead);
 274:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /**
 275:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * Function pointer for writing value into specified variable inside Object
 276:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * Dictionary. If OD variable is larger than buf, then this function must
 277:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * be called several times. After completed successful write function
 278:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * returns 'ODR_OK'. If write is partial, it returns 'ODR_PARTIAL'. In case
 279:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * of errors function returns code similar to SDO abort code.
 280:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      *
 281:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * Write can be restarted with @ref OD_rwRestart() function.
 282:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      *
 283:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * At the moment, when Object Dictionary is initialized, every variable has
 284:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * assigned the same "write" function, which simply copies data to Object
 285:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * Dictionary variable. Application can bind its own "write" function,
 286:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * similar as it can bind "read" function.
 287:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      *
 288:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * "write" function must always copy all available data from buf. If OD
 289:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * variable expect more data, then "*returnCode" must return 'ODR_PARTIAL'.
 290:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      *
 291:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * @warning When accessing OD variables by calling the read() function, it
 292:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * may be necessary to use @ref CO_LOCK_OD() and @ref CO_UNLOCK_OD() macros.
 293:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * See @ref CO_critical_sections for more information.
 294:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      *
 295:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * @param stream Object Dictionary stream object.
 296:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * @param buf Pointer to external buffer, from where data will be copied.
 297:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * @param count Size of the external buffer in bytes.
 298:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * @param [out] countWritten If return value is "ODR_OK" or "ODR_PARTIAL",
 299:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * then number of bytes successfully written must be returned here.
 300:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      *
 301:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * @return Value from @ref ODR_t, "ODR_OK" in case of success.
 302:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      */
 303:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_t (*write)(OD_stream_t *stream, const void *buf,
 304:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****                    OD_size_t count, OD_size_t *countWritten);
 305:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** } OD_IO_t;
 306:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 307:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 308:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /**
 309:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Extension of OD object, which can optionally be specified by application in
 310:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * initialization phase with @ref OD_extension_init() function.
 311:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  */
 312:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** typedef struct {
 313:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** Object on which read and write will operate, part of @ref OD_stream_t */
 314:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     void *object;
 315:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** Application specified read function pointer. If NULL, then read will be
 316:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * disabled. @ref OD_readOriginal can be used here to keep the original read
 317:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * function. For function description see @ref OD_IO_t. */
 318:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_t (*read)(OD_stream_t *stream, void *buf,
 319:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****                   OD_size_t count, OD_size_t *countRead);
 320:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** Application specified write function pointer. If NULL, then write will
 321:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * be disabled. @ref OD_writeOriginal can be used here to keep the original
 322:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * write function. For function description see @ref OD_IO_t. */
 323:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_t (*write)(OD_stream_t *stream, const void *buf,
 324:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****                    OD_size_t count, OD_size_t *countWritten);
 325:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #if OD_FLAGS_PDO_SIZE > 0
 326:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /**PDO flags bit-field provides one bit for each OD variable, which exist
 327:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * inside OD object at specific sub index. If application clears that bit,
 328:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * and OD variable is mapped to an event driven TPDO, then TPDO will be
 329:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * sent.
 330:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      *
 331:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * @ref OD_FLAGS_PDO_SIZE can have a value from 0 to 32 bytes, which
 332:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * corresponds to 0 to 256 available bits. If, for example,
 333:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * @ref OD_FLAGS_PDO_SIZE has value 4, then OD variables with sub index up
 334:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * to 31 will have the TPDO requesting functionality.
 335:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * See also @ref OD_requestTPDO and @ref OD_TPDOtransmitted. */
 336:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     uint8_t flagsPDO[OD_FLAGS_PDO_SIZE];
 337:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #endif
 338:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** } OD_extension_t;
 339:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 340:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 341:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /**
 342:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Object Dictionary entry for one OD object.
 343:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 344:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * OD entries are collected inside OD_t as array (list). Each OD entry contains
 345:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * basic information about OD object (index and subEntriesCount), pointer to
 346:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * odObject with additional information about var, array or record entry and
 347:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * pointer to extension, configurable by application.
 348:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  */
 349:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** typedef struct {
 350:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** Object Dictionary index */
 351:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     uint16_t index;
 352:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** Number of all sub-entries, including sub-entry at sub-index 0 */
 353:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     uint8_t subEntriesCount;
 354:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** Type of the odObject, indicated by @ref OD_objectTypes_t enumerator. */
 355:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     uint8_t odObjectType;
 356:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** OD object of type indicated by odObjectType, from which @ref OD_getSub()
 357:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * fetches the information */
 358:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     CO_PROGMEM void *odObject;
 359:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** Extension to OD, specified by application */
 360:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_extension_t *extension;
 361:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** } OD_entry_t;
 362:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 363:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 364:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /**
 365:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Object Dictionary
 366:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  */
 367:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** typedef struct {
 368:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** Number of elements in the list, without last element, which is blank */
 369:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     uint16_t size;
 370:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** List OD entries (table of contents), ordered by index */
 371:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_entry_t *list;
 372:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** } OD_t;
 373:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 374:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 375:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /**
 376:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Read value from original OD location
 377:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 378:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * This function can be used inside read / write functions, specified by
 379:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @ref OD_extension_init(). It reads data directly from memory location
 380:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * specified by Object dictionary. If no IO extension is used on OD entry, then
 381:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * io->read returned by @ref OD_getSub() equals to this function. See
 382:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * also @ref OD_IO_t.
 383:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  */
 384:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** ODR_t OD_readOriginal(OD_stream_t *stream, void *buf,
 385:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****                       OD_size_t count, OD_size_t *countRead);
 386:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 387:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 388:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /**
 389:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Write value to original OD location
 390:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 391:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * This function can be used inside read / write functions, specified by
 392:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @ref OD_extension_init(). It writes data directly to memory location
 393:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * specified by Object dictionary. If no IO extension is used on OD entry, then
 394:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * io->write returned by @ref OD_getSub() equals to this function. See
 395:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * also @ref OD_IO_t.
 396:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  */
 397:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** ODR_t OD_writeOriginal(OD_stream_t *stream, const void *buf,
 398:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****                        OD_size_t count, OD_size_t *countWritten);
 399:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 400:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 401:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /**
 402:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Find OD entry in Object Dictionary
 403:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 404:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @param od Object Dictionary
 405:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @param index CANopen Object Dictionary index of object in Object Dictionary
 406:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 407:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @return Pointer to OD entry or NULL if not found
 408:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  */
 409:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** OD_entry_t *OD_find(OD_t *od, uint16_t index);
 410:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 411:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 412:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /**
 413:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Find sub-object with specified sub-index on OD entry returned by OD_find.
 414:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Function populates io structure with sub-object data.
 415:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 416:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @warning
 417:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Read and write functions may be called from different threads, so critical
 418:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * sections in custom functions must be observed, see @ref CO_critical_sections.
 419:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 420:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @param entry OD entry returned by @ref OD_find().
 421:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @param subIndex Sub-index of the variable from the OD object.
 422:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @param [out] io Structure will be populated on success.
 423:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @param odOrig If true, then potential IO extension on entry will be
 424:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * ignored and access to data entry in the original OD location will be returned
 425:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 426:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @return Value from @ref ODR_t, "ODR_OK" in case of success.
 427:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  */
 428:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** ODR_t OD_getSub(const OD_entry_t *entry, uint8_t subIndex,
 429:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****                 OD_IO_t *io, bool_t odOrig);
 430:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 431:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 432:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /**
 433:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Return index from OD entry
 434:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 435:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @param entry OD entry returned by @ref OD_find().
 436:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 437:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @return OD index
 438:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  */
 439:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** static inline uint16_t OD_getIndex(const OD_entry_t *entry) {
 116              	 .loc 2 439 0
 117              	 .cfi_startproc
 118              	 
 119              	 
 120              	 
 121 0000 80B4     	 push {r7}
 122              	.LCFI11:
 123              	 .cfi_def_cfa_offset 4
 124              	 .cfi_offset 7,-4
 125 0002 83B0     	 sub sp,sp,#12
 126              	.LCFI12:
 127              	 .cfi_def_cfa_offset 16
 128 0004 00AF     	 add r7,sp,#0
 129              	.LCFI13:
 130              	 .cfi_def_cfa_register 7
 131 0006 7860     	 str r0,[r7,#4]
 440:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     return (entry != NULL) ? entry->index : 0;
 132              	 .loc 2 440 0
 133 0008 7B68     	 ldr r3,[r7,#4]
 134 000a 002B     	 cmp r3,#0
 135 000c 02D0     	 beq .L6
 136              	 .loc 2 440 0 is_stmt 0 discriminator 1
 137 000e 7B68     	 ldr r3,[r7,#4]
 138 0010 1B88     	 ldrh r3,[r3]
 139 0012 00E0     	 b .L7
 140              	.L6:
 141              	 .loc 2 440 0 discriminator 2
 142 0014 0023     	 movs r3,#0
 143              	.L7:
 441:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** }
 144              	 .loc 2 441 0 is_stmt 1 discriminator 4
 145 0016 1846     	 mov r0,r3
 146 0018 0C37     	 adds r7,r7,#12
 147              	.LCFI14:
 148              	 .cfi_def_cfa_offset 4
 149 001a BD46     	 mov sp,r7
 150              	.LCFI15:
 151              	 .cfi_def_cfa_register 13
 152              	 
 153 001c 5DF8047B 	 ldr r7,[sp],#4
 154              	.LCFI16:
 155              	 .cfi_restore 7
 156              	 .cfi_def_cfa_offset 0
 157 0020 7047     	 bx lr
 158              	 .cfi_endproc
 159              	.LFE6:
 161 0022 00BF     	 .section .text.OD_extension_init,"ax",%progbits
 162              	 .align 2
 163              	 .thumb
 164              	 .thumb_func
 166              	OD_extension_init:
 167              	.LFB12:
 442:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 443:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 444:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /**
 445:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Check, if OD variable is mappable to PDO or SRDO.
 446:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 447:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * If OD variable is mappable, then it may be necessary to protect read/write
 448:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * access from mainline function. See @ref CO_critical_sections.
 449:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 450:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @param stream Object Dictionary stream object.
 451:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 452:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @return true, if OD variable is mappable.
 453:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  */
 454:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** static inline bool_t OD_mappable(OD_stream_t *stream) {
 455:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     return (stream != NULL)
 456:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****          ? (stream->attribute & (ODA_TRPDO | ODA_TRSRDO)) != 0 : false;
 457:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** }
 458:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 459:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 460:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /**
 461:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Restart read or write operation on OD variable
 462:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 463:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * It is not necessary to call this function, if stream was initialized by
 464:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @ref OD_getSub(). It is also not necessary to call this function, if
 465:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * previous read or write was successfully finished.
 466:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 467:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @param stream Object Dictionary stream object.
 468:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  */
 469:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** static inline void OD_rwRestart(OD_stream_t *stream) {
 470:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     if (stream != NULL) stream->dataOffset = 0;
 471:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** }
 472:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 473:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 474:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /**
 475:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Get TPDO request flags for OD entry.
 476:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 477:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * flagsPDO can be used for @ref OD_requestTPDO() or @ref OD_TPDOtransmitted().
 478:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 479:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @param entry OD entry returned by @ref OD_find().
 480:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 481:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @return pointer to flagsPDO
 482:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  */
 483:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** static inline uint8_t *OD_getFlagsPDO(OD_entry_t *entry) {
 484:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #if OD_FLAGS_PDO_SIZE > 0
 485:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     if (entry != NULL && entry->extension != NULL) {
 486:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****         return &entry->extension->flagsPDO[0];
 487:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     }
 488:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #endif
 489:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     return 0;
 490:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** }
 491:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 492:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 493:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /**
 494:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Request TPDO, to which OD variable is mapped
 495:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 496:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Function clears the flagPDO bit, which corresponds to OD variable at specific
 497:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * OD index and subindex. For this functionality to work, @ref OD_extension_t
 498:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * must be enabled on OD variable. If OD variable is mapped to any TPDO with
 499:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * event driven transmission, then TPDO will be transmitted after this function
 500:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * call. If OD variable is mapped to more than one TPDO with event driven
 501:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * transmission, only the first matched TPDO will be transmitted.
 502:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 503:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * TPDO event driven transmission is enabled, if TPDO communication parameter,
 504:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * transmission type is set to 0, 254 or 255. For other transmission types
 505:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * (synchronous) flagPDO bit is ignored.
 506:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 507:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @param flagsPDO TPDO request flags returned by @ref OD_getFlagsPDO.
 508:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @param subIndex subIndex of the OD variable.
 509:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  */
 510:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** static inline void OD_requestTPDO(uint8_t *flagsPDO, uint8_t subIndex) {
 511:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #if OD_FLAGS_PDO_SIZE > 0
 512:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     if (flagsPDO != NULL && subIndex < (OD_FLAGS_PDO_SIZE * 8)) {
 513:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****         /* clear subIndex-th bit */
 514:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****         uint8_t mask = ~(1 << (subIndex & 0x07));
 515:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****         flagsPDO[subIndex >> 3] &= mask;
 516:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     }
 517:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #endif
 518:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** }
 519:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 520:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 521:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /**
 522:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Check if requested TPDO was transmitted
 523:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 524:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @param flagsPDO TPDO request flags returned by @ref OD_getFlagsPDO.
 525:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @param subIndex subIndex of the OD variable.
 526:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 527:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @return Return true if event driven TPDO with mapping to OD variable,
 528:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * indicated by flagsPDO and subIndex, was transmitted since last
 529:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @ref OD_requestTPDO call. If there was no @ref OD_requestTPDO call yet and
 530:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * TPDO was transmitted by other event, function also returns true.
 531:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  */
 532:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** static inline bool_t OD_TPDOtransmitted(uint8_t *flagsPDO, uint8_t subIndex) {
 533:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #if OD_FLAGS_PDO_SIZE > 0
 534:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     if (flagsPDO != NULL && subIndex < (OD_FLAGS_PDO_SIZE * 8)) {
 535:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****         /* return true, if subIndex-th bit is set */
 536:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****         uint8_t mask = 1 << (subIndex & 0x07);
 537:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****         if ((flagsPDO[subIndex >> 3] & mask) != 0) {
 538:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****             return true;
 539:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****         }
 540:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     }
 541:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #endif
 542:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     return false;
 543:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** }
 544:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 545:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 546:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /**
 547:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Get SDO abort code from returnCode
 548:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 549:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @param returnCode Returned from some OD access functions
 550:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 551:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @return Corresponding @ref CO_SDO_abortCode_t
 552:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  */
 553:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** uint32_t OD_getSDOabCode(ODR_t returnCode);
 554:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 555:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 556:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /**
 557:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Extend OD object with own read/write functions and/or flagsPDO
 558:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 559:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * This function gives application very powerful tool: definition of own IO
 560:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * access on OD object. Structure and attributes are the same as defined in
 561:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * original OD object, but data are read directly from (or written directly to)
 562:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * application specified object via custom function calls.
 563:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 564:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Before this function specifies extension, OD variables are accessed from
 565:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * original OD location. After this function specifies extension OD variables
 566:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * are accessed from read/write functions specified by extension. (Except when
 567:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * "odOrig" argument to @ref OD_getSub() is set to true.)
 568:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 569:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * This function must also be used, when flagsPDO needs to be enabled for
 570:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * specific entry.
 571:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 572:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @warning
 573:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Object dictionary storage works only directly on OD variables. It does not
 574:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * access read function specified here. So, if extended OD objects needs to be
 575:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * preserved, then @ref OD_writeOriginal can be used inside custom write
 576:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * function.
 577:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 578:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @warning
 579:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Read and write functions may be called from different threads, so critical
 580:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * sections in custom functions must be observed, see @ref CO_critical_sections.
 581:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 582:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @param entry OD entry returned by @ref OD_find().
 583:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @param extension Extension object, which must be initialized externally.
 584:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Extension object must exist permanently. If NULL, extension will be removed.
 585:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 586:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @return "ODR_OK" on success, "ODR_IDX_NOT_EXIST" if OD object doesn't exist.
 587:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  */
 588:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** static inline ODR_t OD_extension_init(OD_entry_t *entry,
 589:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****                                       OD_extension_t *extension)
 590:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** {
 168              	 .loc 2 590 0
 169              	 .cfi_startproc
 170              	 
 171              	 
 172              	 
 173 0000 80B4     	 push {r7}
 174              	.LCFI17:
 175              	 .cfi_def_cfa_offset 4
 176              	 .cfi_offset 7,-4
 177 0002 83B0     	 sub sp,sp,#12
 178              	.LCFI18:
 179              	 .cfi_def_cfa_offset 16
 180 0004 00AF     	 add r7,sp,#0
 181              	.LCFI19:
 182              	 .cfi_def_cfa_register 7
 183 0006 7860     	 str r0,[r7,#4]
 184 0008 3960     	 str r1,[r7]
 591:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     if (entry == NULL) return ODR_IDX_NOT_EXIST;
 185              	 .loc 2 591 0
 186 000a 7B68     	 ldr r3,[r7,#4]
 187 000c 002B     	 cmp r3,#0
 188 000e 01D1     	 bne .L10
 189              	 .loc 2 591 0 is_stmt 0 discriminator 1
 190 0010 0523     	 movs r3,#5
 191 0012 03E0     	 b .L11
 192              	.L10:
 592:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     entry->extension = extension;
 193              	 .loc 2 592 0 is_stmt 1
 194 0014 7B68     	 ldr r3,[r7,#4]
 195 0016 3A68     	 ldr r2,[r7]
 196 0018 9A60     	 str r2,[r3,#8]
 593:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     return ODR_OK;
 197              	 .loc 2 593 0
 198 001a 0023     	 movs r3,#0
 199              	.L11:
 200 001c 5BB2     	 sxtb r3,r3
 594:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** }
 201              	 .loc 2 594 0
 202 001e 1846     	 mov r0,r3
 203 0020 0C37     	 adds r7,r7,#12
 204              	.LCFI20:
 205              	 .cfi_def_cfa_offset 4
 206 0022 BD46     	 mov sp,r7
 207              	.LCFI21:
 208              	 .cfi_def_cfa_register 13
 209              	 
 210 0024 5DF8047B 	 ldr r7,[sp],#4
 211              	.LCFI22:
 212              	 .cfi_restore 7
 213              	 .cfi_def_cfa_offset 0
 214 0028 7047     	 bx lr
 215              	 .cfi_endproc
 216              	.LFE12:
 218 002a 00BF     	 .section .text.OD_get_u8,"ax",%progbits
 219              	 .align 2
 220              	 .thumb
 221              	 .thumb_func
 223              	OD_get_u8:
 224              	.LFB17:
 595:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 596:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 597:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /**
 598:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @defgroup CO_ODgetSetters Getters and setters
 599:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @{
 600:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 601:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Getter and setter helper functions for accessing different types of Object
 602:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Dictionary variables.
 603:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  */
 604:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /**
 605:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Get variable from Object Dictionary
 606:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 607:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @param entry OD entry returned by @ref OD_find().
 608:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @param subIndex Sub-index of the variable from the OD object.
 609:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @param [out] val Value will be written here.
 610:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @param len Size of value to retrieve from OD.
 611:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @param odOrig If true, then potential IO extension on entry will be
 612:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * ignored and data in the original OD location will be returned.
 613:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 614:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @return Value from @ref ODR_t, "ODR_OK" in case of success. Error, if
 615:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * variable does not exist in object dictionary or it does not have the correct
 616:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * length or other reason.
 617:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  */
 618:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** ODR_t OD_get_value(const OD_entry_t *entry, uint8_t subIndex,
 619:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****                    void *val, OD_size_t len, bool_t odOrig);
 620:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 621:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /** Get int8_t variable from Object Dictionary, see @ref OD_get_value */
 622:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** static inline ODR_t OD_get_i8(const OD_entry_t *entry, uint8_t subIndex,
 623:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****                               int8_t *val, bool_t odOrig)
 624:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** {
 625:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #if C2000_PORT != 0
 626:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     return OD_get_value(entry, subIndex, val, 1, odOrig);
 627:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #else
 628:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     return OD_get_value(entry, subIndex, val, sizeof(*val), odOrig);
 629:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #endif
 630:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** }
 631:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 632:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /** Get int16_t variable from Object Dictionary, see @ref OD_get_value */
 633:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** static inline ODR_t OD_get_i16(const OD_entry_t *entry, uint8_t subIndex,
 634:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****                                int16_t *val, bool_t odOrig)
 635:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** {
 636:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #if C2000_PORT != 0
 637:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     return OD_get_value(entry, subIndex, val, 2, odOrig);
 638:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #else
 639:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     return OD_get_value(entry, subIndex, val, sizeof(*val), odOrig);
 640:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #endif
 641:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** }
 642:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 643:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /** Get int32_t variable from Object Dictionary, see @ref OD_get_value */
 644:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** static inline ODR_t OD_get_i32(const OD_entry_t *entry, uint8_t subIndex,
 645:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****                                int32_t *val, bool_t odOrig)
 646:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** {
 647:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #if C2000_PORT != 0
 648:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     return OD_get_value(entry, subIndex, val, 4, odOrig);
 649:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #else
 650:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     return OD_get_value(entry, subIndex, val, sizeof(*val), odOrig);
 651:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #endif
 652:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** }
 653:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 654:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /** Get int64_t variable from Object Dictionary, see @ref OD_get_value */
 655:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** static inline ODR_t OD_get_i64(const OD_entry_t *entry, uint8_t subIndex,
 656:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****                                int64_t *val, bool_t odOrig)
 657:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** {
 658:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #if C2000_PORT != 0
 659:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     return OD_get_value(entry, subIndex, val, 8, odOrig);
 660:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #else
 661:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     return OD_get_value(entry, subIndex, val, sizeof(*val), odOrig);
 662:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #endif
 663:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** }
 664:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 665:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /** Get uint8_t variable from Object Dictionary, see @ref OD_get_value */
 666:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** static inline ODR_t OD_get_u8(const OD_entry_t *entry, uint8_t subIndex,
 667:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****                               uint8_t *val, bool_t odOrig)
 668:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** {
 225              	 .loc 2 668 0
 226              	 .cfi_startproc
 227              	 
 228              	 
 229 0000 80B5     	 push {r7,lr}
 230              	.LCFI23:
 231              	 .cfi_def_cfa_offset 8
 232              	 .cfi_offset 7,-8
 233              	 .cfi_offset 14,-4
 234 0002 86B0     	 sub sp,sp,#24
 235              	.LCFI24:
 236              	 .cfi_def_cfa_offset 32
 237 0004 02AF     	 add r7,sp,#8
 238              	.LCFI25:
 239              	 .cfi_def_cfa 7,24
 240 0006 F860     	 str r0,[r7,#12]
 241 0008 7A60     	 str r2,[r7,#4]
 242 000a 3B60     	 str r3,[r7]
 243 000c 0B46     	 mov r3,r1
 244 000e FB72     	 strb r3,[r7,#11]
 669:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #if C2000_PORT != 0
 670:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     return OD_get_value(entry, subIndex, val, 1, odOrig);
 671:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #else
 672:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     return OD_get_value(entry, subIndex, val, sizeof(*val), odOrig);
 245              	 .loc 2 672 0
 246 0010 FA7A     	 ldrb r2,[r7,#11]
 247 0012 3B68     	 ldr r3,[r7]
 248 0014 0093     	 str r3,[sp]
 249 0016 F868     	 ldr r0,[r7,#12]
 250 0018 1146     	 mov r1,r2
 251 001a 7A68     	 ldr r2,[r7,#4]
 252 001c 0123     	 movs r3,#1
 253 001e FFF7FEFF 	 bl OD_get_value
 254 0022 0346     	 mov r3,r0
 673:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #endif
 674:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** }
 255              	 .loc 2 674 0
 256 0024 1846     	 mov r0,r3
 257 0026 1037     	 adds r7,r7,#16
 258              	.LCFI26:
 259              	 .cfi_def_cfa_offset 8
 260 0028 BD46     	 mov sp,r7
 261              	.LCFI27:
 262              	 .cfi_def_cfa_register 13
 263              	 
 264 002a 80BD     	 pop {r7,pc}
 265              	 .cfi_endproc
 266              	.LFE17:
 268              	 .section .text.OD_get_u32,"ax",%progbits
 269              	 .align 2
 270              	 .thumb
 271              	 .thumb_func
 273              	OD_get_u32:
 274              	.LFB19:
 675:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 676:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /** Get uint16_t variable from Object Dictionary, see @ref OD_get_value */
 677:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** static inline ODR_t OD_get_u16(const OD_entry_t *entry, uint8_t subIndex,
 678:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****                                uint16_t *val, bool_t odOrig)
 679:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** {
 680:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #if C2000_PORT != 0
 681:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     return OD_get_value(entry, subIndex, val, 2, odOrig);
 682:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #else
 683:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     return OD_get_value(entry, subIndex, val, sizeof(*val), odOrig);
 684:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #endif
 685:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** }
 686:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 687:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /** Get uint32_t variable from Object Dictionary, see @ref OD_get_value */
 688:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** static inline ODR_t OD_get_u32(const OD_entry_t *entry, uint8_t subIndex,
 689:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****                                uint32_t *val, bool_t odOrig)
 690:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** {
 275              	 .loc 2 690 0
 276              	 .cfi_startproc
 277              	 
 278              	 
 279 0000 80B5     	 push {r7,lr}
 280              	.LCFI28:
 281              	 .cfi_def_cfa_offset 8
 282              	 .cfi_offset 7,-8
 283              	 .cfi_offset 14,-4
 284 0002 86B0     	 sub sp,sp,#24
 285              	.LCFI29:
 286              	 .cfi_def_cfa_offset 32
 287 0004 02AF     	 add r7,sp,#8
 288              	.LCFI30:
 289              	 .cfi_def_cfa 7,24
 290 0006 F860     	 str r0,[r7,#12]
 291 0008 7A60     	 str r2,[r7,#4]
 292 000a 3B60     	 str r3,[r7]
 293 000c 0B46     	 mov r3,r1
 294 000e FB72     	 strb r3,[r7,#11]
 691:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #if C2000_PORT != 0
 692:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     return OD_get_value(entry, subIndex, val, 4, odOrig);
 693:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #else
 694:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     return OD_get_value(entry, subIndex, val, sizeof(*val), odOrig);
 295              	 .loc 2 694 0
 296 0010 FA7A     	 ldrb r2,[r7,#11]
 297 0012 3B68     	 ldr r3,[r7]
 298 0014 0093     	 str r3,[sp]
 299 0016 F868     	 ldr r0,[r7,#12]
 300 0018 1146     	 mov r1,r2
 301 001a 7A68     	 ldr r2,[r7,#4]
 302 001c 0423     	 movs r3,#4
 303 001e FFF7FEFF 	 bl OD_get_value
 304 0022 0346     	 mov r3,r0
 695:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #endif
 696:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** }
 305              	 .loc 2 696 0
 306 0024 1846     	 mov r0,r3
 307 0026 1037     	 adds r7,r7,#16
 308              	.LCFI31:
 309              	 .cfi_def_cfa_offset 8
 310 0028 BD46     	 mov sp,r7
 311              	.LCFI32:
 312              	 .cfi_def_cfa_register 13
 313              	 
 314 002a 80BD     	 pop {r7,pc}
 315              	 .cfi_endproc
 316              	.LFE19:
 318              	 .section .text.CO_SYNCsend,"ax",%progbits
 319              	 .align 2
 320              	 .thumb
 321              	 .thumb_func
 323              	CO_SYNCsend:
 324              	.LFB35:
 325              	 .file 3 "D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301/CO_SYNC.h"
   1:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** /**
   2:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * CANopen Synchronisation protocol.
   3:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  *
   4:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * @file        CO_SYNC.h
   5:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * @ingroup     CO_SYNC
   6:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * @author      Janez Paternoster
   7:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * @copyright   2004 - 2020 Janez Paternoster
   8:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  *
   9:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * This file is part of CANopenNode, an opensource CANopen Stack.
  10:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * Project home page is <https://github.com/CANopenNode/CANopenNode>.
  11:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * For more information on CANopen see <http://www.can-cia.org/>.
  12:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  *
  13:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * Licensed under the Apache License, Version 2.0 (the "License");
  14:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * you may not use this file except in compliance with the License.
  15:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * You may obtain a copy of the License at
  16:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  *
  17:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  *     http://www.apache.org/licenses/LICENSE-2.0
  18:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  *
  19:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * Unless required by applicable law or agreed to in writing, software
  20:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * distributed under the License is distributed on an "AS IS" BASIS,
  21:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  22:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * See the License for the specific language governing permissions and
  23:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * limitations under the License.
  24:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  */
  25:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** 
  26:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** #ifndef CO_SYNC_H
  27:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** #define CO_SYNC_H
  28:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** 
  29:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** #include "301/CO_driver.h"
  30:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** #include "301/CO_ODinterface.h"
  31:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** #include "301/CO_Emergency.h"
  32:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** 
  33:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** 
  34:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** /* default configuration, see CO_config.h */
  35:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** #ifndef CO_CONFIG_SYNC
  36:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** #define CO_CONFIG_SYNC (CO_CONFIG_SYNC_ENABLE | \
  37:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****                         CO_CONFIG_SYNC_PRODUCER | \
  38:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****                         CO_CONFIG_GLOBAL_RT_FLAG_CALLBACK_PRE | \
  39:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****                         CO_CONFIG_GLOBAL_FLAG_TIMERNEXT | \
  40:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****                         CO_CONFIG_GLOBAL_FLAG_OD_DYNAMIC)
  41:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** #endif
  42:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** 
  43:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** #if ((CO_CONFIG_SYNC) & CO_CONFIG_SYNC_ENABLE) || defined CO_DOXYGEN
  44:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** 
  45:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** #ifdef __cplusplus
  46:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** extern "C" {
  47:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** #endif
  48:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** 
  49:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** /**
  50:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * @defgroup CO_SYNC SYNC
  51:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * CANopen Synchronisation protocol.
  52:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  *
  53:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * @ingroup CO_CANopen_301
  54:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * @{
  55:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * For CAN identifier see #CO_Default_CAN_ID_t
  56:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  *
  57:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * SYNC message is used for synchronization of the nodes on network. One node
  58:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * can be SYNC producer, others can be SYNC consumers. Synchronous TPDOs are
  59:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * transmitted after the CANopen SYNC message. Synchronous received PDOs are
  60:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * accepted(copied to OD) immediatelly after the reception of the next SYNC
  61:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * message.
  62:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  *
  63:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * ####Contents of SYNC message
  64:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * By default SYNC message has no data. If _Synchronous counter overflow value_
  65:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * from Object dictionary (index 0x1019) is different than 0, SYNC message has
  66:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * one data byte: _counter_ incremented by 1 with every SYNC transmission.
  67:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  *
  68:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * ####SYNC in CANopenNode
  69:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * According to CANopen, synchronous RPDOs must be processed after reception of
  70:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * the next sync messsage. For that reason, there is a double receive buffer
  71:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * for each synchronous RPDO. At the moment, when SYNC is received or
  72:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * transmitted, internal variable CANrxToggle toggles. That variable is then
  73:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * used by synchronous RPDO to determine, which of the two buffers is used for
  74:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * RPDO reception and which for RPDO processing.
  75:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  */
  76:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** 
  77:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** 
  78:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** /**
  79:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * SYNC producer and consumer object.
  80:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  */
  81:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** typedef struct {
  82:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     /** From CO_SYNC_init() */
  83:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     CO_EM_t *em;
  84:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     /** Indicates, if new SYNC message received from CAN bus */
  85:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     volatile void *CANrxNew;
  86:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     /** Set to nonzero value, if SYNC with wrong data length is received */
  87:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     uint8_t receiveError;
  88:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     /** Variable toggles, if new SYNC message received from CAN bus */
  89:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     bool_t CANrxToggle;
  90:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     /** Sync timeout monitoring: 0 = not started; 1 = started; 2 = sync timeout
  91:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****      * error state */
  92:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     uint8_t timeoutError;
  93:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     /** Value from _Synchronous counter overflow value_ variable from Object
  94:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     dictionary (index 0x1019) */
  95:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     uint8_t counterOverflowValue;
  96:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     /** Counter of the SYNC message if counterOverflowValue is different than
  97:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****      * zero */
  98:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     uint8_t counter;
  99:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     /** True, if current time is outside "synchronous window" (OD 1007) */
 100:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     bool_t syncIsOutsideWindow;
 101:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     /** Timer for the SYNC message in [microseconds].
 102:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     Set to zero after received or transmitted SYNC message */
 103:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     uint32_t timer;
 104:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     /**Pointer to variable in OD, "Communication cycle period" in microseconds*/
 105:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     uint32_t *OD_1006_period;
 106:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     /** Pointer to variable in OD, "Synchronous window length" in microseconds*/
 107:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     uint32_t *OD_1007_window;
 108:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** 
 109:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** #if ((CO_CONFIG_SYNC) & CO_CONFIG_SYNC_PRODUCER) || defined CO_DOXYGEN
 110:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     /** True, if device is SYNC producer. Calculated from _COB ID SYNC Message_
 111:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     variable from Object dictionary (index 0x1005). */
 112:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     bool_t isProducer;
 113:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     /** CAN transmit buffer inside CANdevTx */
 114:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     CO_CANtx_t *CANtxBuff;
 115:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** #endif
 116:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** 
 117:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** #if ((CO_CONFIG_SYNC) & CO_CONFIG_FLAG_OD_DYNAMIC) || defined CO_DOXYGEN
 118:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     /** From CO_SYNC_init() */
 119:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     CO_CANmodule_t *CANdevRx;
 120:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     /** From CO_SYNC_init() */
 121:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     uint16_t CANdevRxIdx;
 122:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     /** Extension for OD object */
 123:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     OD_extension_t OD_1005_extension;
 124:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     /** CAN ID of the SYNC message. Calculated from _COB ID SYNC Message_
 125:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     variable from Object dictionary (index 0x1005). */
 126:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     uint16_t CAN_ID;
 127:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  #if ((CO_CONFIG_SYNC) & CO_CONFIG_SYNC_PRODUCER) || defined CO_DOXYGEN
 128:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     /** From CO_SYNC_init() */
 129:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     CO_CANmodule_t *CANdevTx;
 130:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     /** From CO_SYNC_init() */
 131:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     uint16_t CANdevTxIdx;
 132:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     /** Extension for OD object */
 133:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     OD_extension_t OD_1019_extension;
 134:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  #endif
 135:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** #endif
 136:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** 
 137:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** #if ((CO_CONFIG_SYNC) & CO_CONFIG_FLAG_CALLBACK_PRE) || defined CO_DOXYGEN
 138:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     /** From CO_SYNC_initCallbackPre() or NULL */
 139:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     void (*pFunctSignalPre)(void *object);
 140:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     /** From CO_SYNC_initCallbackPre() or NULL */
 141:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     void *functSignalObjectPre;
 142:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** #endif
 143:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** } CO_SYNC_t;
 144:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** 
 145:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** 
 146:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** /** Return value for @ref CO_SYNC_process */
 147:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** typedef enum {
 148:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     /** No SYNC event in last cycle */
 149:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     CO_SYNC_NONE = 0,
 150:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     /** SYNC message was received or transmitted in last cycle */
 151:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     CO_SYNC_RX_TX = 1,
 152:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     /** Time has just passed SYNC window (OD_1007) in last cycle */
 153:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     CO_SYNC_PASSED_WINDOW = 2
 154:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** } CO_SYNC_status_t;
 155:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** 
 156:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** 
 157:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** /**
 158:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * Initialize SYNC object.
 159:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  *
 160:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * Function must be called in the communication reset section.
 161:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  *
 162:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * @param SYNC This object will be initialized.
 163:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * @param em Emergency object.
 164:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * @param OD_1005_cobIdSync OD entry for 0x1005 - "COB-ID SYNC message",
 165:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * entry is required.
 166:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * @param OD_1006_commCyclePeriod OD entry for 0x1006 - "Communication cycle
 167:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * period", entry is required if device is sync producer.
 168:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * @param OD_1007_syncWindowLen OD entry for 0x1007 - "Synchronous window
 169:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * length", entry is optional, may be NULL.
 170:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * @param OD_1019_syncCounterOvf OD entry for 0x1019 - "Synchronous counter
 171:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * overflow value", entry is optional, may be NULL.
 172:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * @param CANdevRx CAN device for SYNC reception.
 173:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * @param CANdevRxIdx Index of receive buffer in the above CAN device.
 174:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * @param CANdevTx CAN device for SYNC transmission.
 175:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * @param CANdevTxIdx Index of transmit buffer in the above CAN device.
 176:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * @param [out] errInfo Additional information in case of error, may be NULL.
 177:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  *
 178:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * @return #CO_ReturnError_t CO_ERROR_NO on success.
 179:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  */
 180:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** CO_ReturnError_t CO_SYNC_init(CO_SYNC_t *SYNC,
 181:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****                               CO_EM_t *em,
 182:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****                               OD_entry_t *OD_1005_cobIdSync,
 183:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****                               OD_entry_t *OD_1006_commCyclePeriod,
 184:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****                               OD_entry_t *OD_1007_syncWindowLen,
 185:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****                               OD_entry_t *OD_1019_syncCounterOvf,
 186:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****                               CO_CANmodule_t *CANdevRx,
 187:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****                               uint16_t CANdevRxIdx,
 188:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** #if ((CO_CONFIG_SYNC) & CO_CONFIG_SYNC_PRODUCER) || defined CO_DOXYGEN
 189:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****                               CO_CANmodule_t *CANdevTx,
 190:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****                               uint16_t CANdevTxIdx,
 191:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** #endif
 192:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****                               uint32_t *errInfo);
 193:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** 
 194:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** 
 195:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** #if ((CO_CONFIG_SYNC) & CO_CONFIG_FLAG_CALLBACK_PRE) || defined CO_DOXYGEN
 196:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** /**
 197:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * Initialize SYNC callback function.
 198:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  *
 199:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * Function initializes optional callback function, which should immediately
 200:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * start processing of CO_SYNC_process() function.
 201:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * Callback is called after SYNC message is received from the CAN bus.
 202:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  *
 203:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * @param SYNC This object.
 204:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * @param object Pointer to object, which will be passed to pFunctSignalPre().
 205:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * @param pFunctSignalPre Pointer to the callback function. Not called if NULL.
 206:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  */
 207:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** void CO_SYNC_initCallbackPre(CO_SYNC_t *SYNC,
 208:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****                              void *object,
 209:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****                              void (*pFunctSignalPre)(void *object));
 210:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** #endif
 211:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** 
 212:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** 
 213:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** #if ((CO_CONFIG_SYNC) & CO_CONFIG_SYNC_PRODUCER) || defined CO_DOXYGEN
 214:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** /**
 215:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * Send SYNC message.
 216:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  *
 217:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * This function prepares and sends a SYNC object. The application should only
 218:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * call this if direct control of SYNC transmission is needed, otherwise use
 219:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * CO_SYNC_process().
 220:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  *
 221:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * @param SYNC SYNC object.
 222:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  *
 223:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  * @return Same as CO_CANsend().
 224:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****  */
 225:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** static inline CO_ReturnError_t CO_SYNCsend(CO_SYNC_t *SYNC) {
 326              	 .loc 3 225 0
 327              	 .cfi_startproc
 328              	 
 329              	 
 330 0000 80B5     	 push {r7,lr}
 331              	.LCFI33:
 332              	 .cfi_def_cfa_offset 8
 333              	 .cfi_offset 7,-8
 334              	 .cfi_offset 14,-4
 335 0002 82B0     	 sub sp,sp,#8
 336              	.LCFI34:
 337              	 .cfi_def_cfa_offset 16
 338 0004 00AF     	 add r7,sp,#0
 339              	.LCFI35:
 340              	 .cfi_def_cfa_register 7
 341 0006 7860     	 str r0,[r7,#4]
 226:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     if (++SYNC->counter > SYNC->counterOverflowValue) SYNC->counter = 1;
 342              	 .loc 3 226 0
 343 0008 7B68     	 ldr r3,[r7,#4]
 344 000a 9B7C     	 ldrb r3,[r3,#18]
 345 000c 0133     	 adds r3,r3,#1
 346 000e DAB2     	 uxtb r2,r3
 347 0010 7B68     	 ldr r3,[r7,#4]
 348 0012 9A74     	 strb r2,[r3,#18]
 349 0014 7B68     	 ldr r3,[r7,#4]
 350 0016 9A7C     	 ldrb r2,[r3,#18]
 351 0018 7B68     	 ldr r3,[r7,#4]
 352 001a 5B7C     	 ldrb r3,[r3,#17]
 353 001c 9A42     	 cmp r2,r3
 354 001e 02D9     	 bls .L17
 355              	 .loc 3 226 0 is_stmt 0 discriminator 1
 356 0020 7B68     	 ldr r3,[r7,#4]
 357 0022 0122     	 movs r2,#1
 358 0024 9A74     	 strb r2,[r3,#18]
 359              	.L17:
 227:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     SYNC->timer = 0;
 360              	 .loc 3 227 0 is_stmt 1
 361 0026 7B68     	 ldr r3,[r7,#4]
 362 0028 0022     	 movs r2,#0
 363 002a 9A61     	 str r2,[r3,#24]
 228:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     SYNC->CANrxToggle = SYNC->CANrxToggle ? false : true;
 364              	 .loc 3 228 0
 365 002c 7B68     	 ldr r3,[r7,#4]
 366 002e DB68     	 ldr r3,[r3,#12]
 367 0030 002B     	 cmp r3,#0
 368 0032 0CBF     	 ite eq
 369 0034 0123     	 moveq r3,#1
 370 0036 0023     	 movne r3,#0
 371 0038 DBB2     	 uxtb r3,r3
 372 003a 1A46     	 mov r2,r3
 373 003c 7B68     	 ldr r3,[r7,#4]
 374 003e DA60     	 str r2,[r3,#12]
 229:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     SYNC->CANtxBuff->data[0] = SYNC->counter;
 375              	 .loc 3 229 0
 376 0040 7B68     	 ldr r3,[r7,#4]
 377 0042 9B6A     	 ldr r3,[r3,#40]
 378 0044 7A68     	 ldr r2,[r7,#4]
 379 0046 927C     	 ldrb r2,[r2,#18]
 380 0048 5A71     	 strb r2,[r3,#5]
 230:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h ****     return CO_CANsend(SYNC->CANdevTx, SYNC->CANtxBuff);
 381              	 .loc 3 230 0
 382 004a 7B68     	 ldr r3,[r7,#4]
 383 004c 9A6C     	 ldr r2,[r3,#72]
 384 004e 7B68     	 ldr r3,[r7,#4]
 385 0050 9B6A     	 ldr r3,[r3,#40]
 386 0052 1046     	 mov r0,r2
 387 0054 1946     	 mov r1,r3
 388 0056 FFF7FEFF 	 bl CO_CANsend
 389 005a 0346     	 mov r3,r0
 231:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_SYNC.h **** }
 390              	 .loc 3 231 0
 391 005c 1846     	 mov r0,r3
 392 005e 0837     	 adds r7,r7,#8
 393              	.LCFI36:
 394              	 .cfi_def_cfa_offset 8
 395 0060 BD46     	 mov sp,r7
 396              	.LCFI37:
 397              	 .cfi_def_cfa_register 13
 398              	 
 399 0062 80BD     	 pop {r7,pc}
 400              	 .cfi_endproc
 401              	.LFE35:
 403              	 .section .text.CO_SYNC_receive,"ax",%progbits
 404              	 .align 2
 405              	 .thumb
 406              	 .thumb_func
 408              	CO_SYNC_receive:
 409              	.LFB36:
 410              	 .file 4 "../CANopen/stack/301/CO_SYNC.c"
   1:../CANopen/stack/301/CO_SYNC.c **** /*
   2:../CANopen/stack/301/CO_SYNC.c ****  * CANopen SYNC object.
   3:../CANopen/stack/301/CO_SYNC.c ****  *
   4:../CANopen/stack/301/CO_SYNC.c ****  * @file        CO_SYNC.c
   5:../CANopen/stack/301/CO_SYNC.c ****  * @ingroup     CO_SYNC
   6:../CANopen/stack/301/CO_SYNC.c ****  * @author      Janez Paternoster
   7:../CANopen/stack/301/CO_SYNC.c ****  * @copyright   2021 Janez Paternoster
   8:../CANopen/stack/301/CO_SYNC.c ****  *
   9:../CANopen/stack/301/CO_SYNC.c ****  * This file is part of CANopenNode, an opensource CANopen Stack.
  10:../CANopen/stack/301/CO_SYNC.c ****  * Project home page is <https://github.com/CANopenNode/CANopenNode>.
  11:../CANopen/stack/301/CO_SYNC.c ****  * For more information on CANopen see <http://www.can-cia.org/>.
  12:../CANopen/stack/301/CO_SYNC.c ****  *
  13:../CANopen/stack/301/CO_SYNC.c ****  * Licensed under the Apache License, Version 2.0 (the "License");
  14:../CANopen/stack/301/CO_SYNC.c ****  * you may not use this file except in compliance with the License.
  15:../CANopen/stack/301/CO_SYNC.c ****  * You may obtain a copy of the License at
  16:../CANopen/stack/301/CO_SYNC.c ****  *
  17:../CANopen/stack/301/CO_SYNC.c ****  *     http://www.apache.org/licenses/LICENSE-2.0
  18:../CANopen/stack/301/CO_SYNC.c ****  *
  19:../CANopen/stack/301/CO_SYNC.c ****  * Unless required by applicable law or agreed to in writing, software
  20:../CANopen/stack/301/CO_SYNC.c ****  * distributed under the License is distributed on an "AS IS" BASIS,
  21:../CANopen/stack/301/CO_SYNC.c ****  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  22:../CANopen/stack/301/CO_SYNC.c ****  * See the License for the specific language governing permissions and
  23:../CANopen/stack/301/CO_SYNC.c ****  * limitations under the License.
  24:../CANopen/stack/301/CO_SYNC.c ****  */
  25:../CANopen/stack/301/CO_SYNC.c **** 
  26:../CANopen/stack/301/CO_SYNC.c **** #include "301/CO_SYNC.h"
  27:../CANopen/stack/301/CO_SYNC.c **** 
  28:../CANopen/stack/301/CO_SYNC.c **** #if (CO_CONFIG_SYNC) & CO_CONFIG_SYNC_ENABLE
  29:../CANopen/stack/301/CO_SYNC.c **** 
  30:../CANopen/stack/301/CO_SYNC.c **** /*
  31:../CANopen/stack/301/CO_SYNC.c ****  * Read received message from CAN module.
  32:../CANopen/stack/301/CO_SYNC.c ****  *
  33:../CANopen/stack/301/CO_SYNC.c ****  * Function will be called (by CAN receive interrupt) every time, when CAN
  34:../CANopen/stack/301/CO_SYNC.c ****  * message with correct identifier will be received. For more information and
  35:../CANopen/stack/301/CO_SYNC.c ****  * description of parameters see file CO_driver.h.
  36:../CANopen/stack/301/CO_SYNC.c ****  */
  37:../CANopen/stack/301/CO_SYNC.c **** static void CO_SYNC_receive(void *object, void *msg) {
 411              	 .loc 4 37 0
 412              	 .cfi_startproc
 413              	 
 414              	 
 415              	 
 416 0000 80B4     	 push {r7}
 417              	.LCFI38:
 418              	 .cfi_def_cfa_offset 4
 419              	 .cfi_offset 7,-4
 420 0002 87B0     	 sub sp,sp,#28
 421              	.LCFI39:
 422              	 .cfi_def_cfa_offset 32
 423 0004 00AF     	 add r7,sp,#0
 424              	.LCFI40:
 425              	 .cfi_def_cfa_register 7
 426 0006 7860     	 str r0,[r7,#4]
 427 0008 3960     	 str r1,[r7]
  38:../CANopen/stack/301/CO_SYNC.c ****     CO_SYNC_t *SYNC = object;
 428              	 .loc 4 38 0
 429 000a 7B68     	 ldr r3,[r7,#4]
 430 000c 3B61     	 str r3,[r7,#16]
  39:../CANopen/stack/301/CO_SYNC.c ****     uint8_t DLC = CO_CANrxMsg_readDLC(msg);
 431              	 .loc 4 39 0
 432 000e 3B68     	 ldr r3,[r7]
 433 0010 1B79     	 ldrb r3,[r3,#4]
 434 0012 FB73     	 strb r3,[r7,#15]
  40:../CANopen/stack/301/CO_SYNC.c ****     bool_t syncReceived = false;
 435              	 .loc 4 40 0
 436 0014 0023     	 movs r3,#0
 437 0016 7B61     	 str r3,[r7,#20]
  41:../CANopen/stack/301/CO_SYNC.c **** 
  42:../CANopen/stack/301/CO_SYNC.c ****     if (SYNC->counterOverflowValue == 0) {
 438              	 .loc 4 42 0
 439 0018 3B69     	 ldr r3,[r7,#16]
 440 001a 5B7C     	 ldrb r3,[r3,#17]
 441 001c 002B     	 cmp r3,#0
 442 001e 0CD1     	 bne .L20
  43:../CANopen/stack/301/CO_SYNC.c ****         if (DLC == 0) {
 443              	 .loc 4 43 0
 444 0020 FB7B     	 ldrb r3,[r7,#15]
 445 0022 002B     	 cmp r3,#0
 446 0024 02D1     	 bne .L21
  44:../CANopen/stack/301/CO_SYNC.c ****             syncReceived = true;
 447              	 .loc 4 44 0
 448 0026 0123     	 movs r3,#1
 449 0028 7B61     	 str r3,[r7,#20]
 450 002a 19E0     	 b .L23
 451              	.L21:
  45:../CANopen/stack/301/CO_SYNC.c ****         }
  46:../CANopen/stack/301/CO_SYNC.c ****         else {
  47:../CANopen/stack/301/CO_SYNC.c ****             SYNC->receiveError = DLC | 0x40;
 452              	 .loc 4 47 0
 453 002c FB7B     	 ldrb r3,[r7,#15]
 454 002e 43F04003 	 orr r3,r3,#64
 455 0032 DAB2     	 uxtb r2,r3
 456 0034 3B69     	 ldr r3,[r7,#16]
 457 0036 1A72     	 strb r2,[r3,#8]
 458 0038 12E0     	 b .L23
 459              	.L20:
  48:../CANopen/stack/301/CO_SYNC.c ****         }
  49:../CANopen/stack/301/CO_SYNC.c ****     }
  50:../CANopen/stack/301/CO_SYNC.c ****     else {
  51:../CANopen/stack/301/CO_SYNC.c ****         if (DLC == 1) {
 460              	 .loc 4 51 0
 461 003a FB7B     	 ldrb r3,[r7,#15]
 462 003c 012B     	 cmp r3,#1
 463 003e 09D1     	 bne .L24
 464              	.LBB2:
  52:../CANopen/stack/301/CO_SYNC.c ****             uint8_t *data = CO_CANrxMsg_readData(msg);
 465              	 .loc 4 52 0
 466 0040 3B68     	 ldr r3,[r7]
 467 0042 0533     	 adds r3,r3,#5
 468 0044 BB60     	 str r3,[r7,#8]
  53:../CANopen/stack/301/CO_SYNC.c ****             SYNC->counter = data[0];
 469              	 .loc 4 53 0
 470 0046 BB68     	 ldr r3,[r7,#8]
 471 0048 1A78     	 ldrb r2,[r3]
 472 004a 3B69     	 ldr r3,[r7,#16]
 473 004c 9A74     	 strb r2,[r3,#18]
  54:../CANopen/stack/301/CO_SYNC.c ****             syncReceived = true;
 474              	 .loc 4 54 0
 475 004e 0123     	 movs r3,#1
 476 0050 7B61     	 str r3,[r7,#20]
 477              	.LBE2:
 478 0052 05E0     	 b .L23
 479              	.L24:
  55:../CANopen/stack/301/CO_SYNC.c ****         }
  56:../CANopen/stack/301/CO_SYNC.c ****         else {
  57:../CANopen/stack/301/CO_SYNC.c ****             SYNC->receiveError = DLC | 0x80;
 480              	 .loc 4 57 0
 481 0054 FB7B     	 ldrb r3,[r7,#15]
 482 0056 63F07F03 	 orn r3,r3,#127
 483 005a DAB2     	 uxtb r2,r3
 484 005c 3B69     	 ldr r3,[r7,#16]
 485 005e 1A72     	 strb r2,[r3,#8]
 486              	.L23:
  58:../CANopen/stack/301/CO_SYNC.c ****         }
  59:../CANopen/stack/301/CO_SYNC.c ****     }
  60:../CANopen/stack/301/CO_SYNC.c **** 
  61:../CANopen/stack/301/CO_SYNC.c ****     if (syncReceived) {
 487              	 .loc 4 61 0
 488 0060 7B69     	 ldr r3,[r7,#20]
 489 0062 002B     	 cmp r3,#0
 490 0064 0CD0     	 beq .L19
  62:../CANopen/stack/301/CO_SYNC.c ****         /* toggle PDO receive buffer */
  63:../CANopen/stack/301/CO_SYNC.c ****         SYNC->CANrxToggle = SYNC->CANrxToggle ? false : true;
 491              	 .loc 4 63 0
 492 0066 3B69     	 ldr r3,[r7,#16]
 493 0068 DB68     	 ldr r3,[r3,#12]
 494 006a 002B     	 cmp r3,#0
 495 006c 0CBF     	 ite eq
 496 006e 0123     	 moveq r3,#1
 497 0070 0023     	 movne r3,#0
 498 0072 DBB2     	 uxtb r3,r3
 499 0074 1A46     	 mov r2,r3
 500 0076 3B69     	 ldr r3,[r7,#16]
 501 0078 DA60     	 str r2,[r3,#12]
  64:../CANopen/stack/301/CO_SYNC.c **** 
  65:../CANopen/stack/301/CO_SYNC.c ****         CO_FLAG_SET(SYNC->CANrxNew);
 502              	 .loc 4 65 0
 503 007a 3B69     	 ldr r3,[r7,#16]
 504 007c 0122     	 movs r2,#1
 505 007e 5A60     	 str r2,[r3,#4]
 506              	.L19:
  66:../CANopen/stack/301/CO_SYNC.c **** 
  67:../CANopen/stack/301/CO_SYNC.c **** #if (CO_CONFIG_SYNC) & CO_CONFIG_FLAG_CALLBACK_PRE
  68:../CANopen/stack/301/CO_SYNC.c ****         /* Optional signal to RTOS, which can resume task, which handles SYNC.*/
  69:../CANopen/stack/301/CO_SYNC.c ****         if (SYNC->pFunctSignalPre != NULL) {
  70:../CANopen/stack/301/CO_SYNC.c ****             SYNC->pFunctSignalPre(SYNC->functSignalObjectPre);
  71:../CANopen/stack/301/CO_SYNC.c ****         }
  72:../CANopen/stack/301/CO_SYNC.c **** #endif
  73:../CANopen/stack/301/CO_SYNC.c ****     }
  74:../CANopen/stack/301/CO_SYNC.c **** }
 507              	 .loc 4 74 0
 508 0080 1C37     	 adds r7,r7,#28
 509              	.LCFI41:
 510              	 .cfi_def_cfa_offset 4
 511 0082 BD46     	 mov sp,r7
 512              	.LCFI42:
 513              	 .cfi_def_cfa_register 13
 514              	 
 515 0084 5DF8047B 	 ldr r7,[sp],#4
 516              	.LCFI43:
 517              	 .cfi_restore 7
 518              	 .cfi_def_cfa_offset 0
 519 0088 7047     	 bx lr
 520              	 .cfi_endproc
 521              	.LFE36:
 523 008a 00BF     	 .section .text.OD_write_1005,"ax",%progbits
 524              	 .align 2
 525              	 .thumb
 526              	 .thumb_func
 528              	OD_write_1005:
 529              	.LFB37:
  75:../CANopen/stack/301/CO_SYNC.c **** 
  76:../CANopen/stack/301/CO_SYNC.c **** 
  77:../CANopen/stack/301/CO_SYNC.c **** #if (CO_CONFIG_SYNC) & CO_CONFIG_FLAG_OD_DYNAMIC
  78:../CANopen/stack/301/CO_SYNC.c **** /*
  79:../CANopen/stack/301/CO_SYNC.c ****  * Custom function for writing OD object "COB-ID sync message"
  80:../CANopen/stack/301/CO_SYNC.c ****  *
  81:../CANopen/stack/301/CO_SYNC.c ****  * For more information see file CO_ODinterface.h, OD_IO_t.
  82:../CANopen/stack/301/CO_SYNC.c ****  */
  83:../CANopen/stack/301/CO_SYNC.c **** static ODR_t OD_write_1005(OD_stream_t *stream, const void *buf,
  84:../CANopen/stack/301/CO_SYNC.c ****                            OD_size_t count, OD_size_t *countWritten)
  85:../CANopen/stack/301/CO_SYNC.c **** {
 530              	 .loc 4 85 0
 531              	 .cfi_startproc
 532              	 
 533              	 
 534 0000 80B5     	 push {r7,lr}
 535              	.LCFI44:
 536              	 .cfi_def_cfa_offset 8
 537              	 .cfi_offset 7,-8
 538              	 .cfi_offset 14,-4
 539 0002 8EB0     	 sub sp,sp,#56
 540              	.LCFI45:
 541              	 .cfi_def_cfa_offset 64
 542 0004 04AF     	 add r7,sp,#16
 543              	.LCFI46:
 544              	 .cfi_def_cfa 7,48
 545 0006 F860     	 str r0,[r7,#12]
 546 0008 B960     	 str r1,[r7,#8]
 547 000a 7A60     	 str r2,[r7,#4]
 548 000c 3B60     	 str r3,[r7]
  86:../CANopen/stack/301/CO_SYNC.c ****     if (stream == NULL || stream->subIndex != 0 || buf == NULL
 549              	 .loc 4 86 0
 550 000e FB68     	 ldr r3,[r7,#12]
 551 0010 002B     	 cmp r3,#0
 552 0012 0CD0     	 beq .L27
 553              	 .loc 4 86 0 is_stmt 0 discriminator 1
 554 0014 FB68     	 ldr r3,[r7,#12]
 555 0016 5B7C     	 ldrb r3,[r3,#17]
 556 0018 002B     	 cmp r3,#0
 557 001a 08D1     	 bne .L27
 558              	 .loc 4 86 0 discriminator 2
 559 001c BB68     	 ldr r3,[r7,#8]
 560 001e 002B     	 cmp r3,#0
 561 0020 05D0     	 beq .L27
  87:../CANopen/stack/301/CO_SYNC.c **** #if (C2000_PORT != 0)
  88:../CANopen/stack/301/CO_SYNC.c ****         || count != 4 || countWritten == NULL
  89:../CANopen/stack/301/CO_SYNC.c **** #else
  90:../CANopen/stack/301/CO_SYNC.c ****         || count != sizeof(uint32_t) || countWritten == NULL
 562              	 .loc 4 90 0 is_stmt 1
 563 0022 7B68     	 ldr r3,[r7,#4]
 564 0024 042B     	 cmp r3,#4
 565 0026 02D1     	 bne .L27
 566              	 .loc 4 90 0 is_stmt 0 discriminator 1
 567 0028 3B68     	 ldr r3,[r7]
 568 002a 002B     	 cmp r3,#0
 569 002c 01D1     	 bne .L28
 570              	.L27:
  91:../CANopen/stack/301/CO_SYNC.c **** #endif
  92:../CANopen/stack/301/CO_SYNC.c ****     ) {
  93:../CANopen/stack/301/CO_SYNC.c ****         return ODR_DEV_INCOMPAT;
 571              	 .loc 4 93 0 is_stmt 1
 572 002e 0923     	 movs r3,#9
 573 0030 A2E0     	 b .L29
 574              	.L28:
  94:../CANopen/stack/301/CO_SYNC.c ****     }
  95:../CANopen/stack/301/CO_SYNC.c **** 
  96:../CANopen/stack/301/CO_SYNC.c ****     CO_SYNC_t *SYNC = stream->object;
 575              	 .loc 4 96 0
 576 0032 FB68     	 ldr r3,[r7,#12]
 577 0034 5B68     	 ldr r3,[r3,#4]
 578 0036 7B62     	 str r3,[r7,#36]
  97:../CANopen/stack/301/CO_SYNC.c ****     uint32_t cobIdSync = CO_getUint32(buf);
 579              	 .loc 4 97 0
 580 0038 B868     	 ldr r0,[r7,#8]
 581 003a FFF7FEFF 	 bl CO_getUint32
 582 003e 3862     	 str r0,[r7,#32]
  98:../CANopen/stack/301/CO_SYNC.c ****     uint16_t CAN_ID = (uint16_t)(cobIdSync & 0x7FF);
 583              	 .loc 4 98 0
 584 0040 3B6A     	 ldr r3,[r7,#32]
 585 0042 9BB2     	 uxth r3,r3
 586 0044 C3F30A03 	 ubfx r3,r3,#0,#11
 587 0048 FB83     	 strh r3,[r7,#30]
  99:../CANopen/stack/301/CO_SYNC.c **** 
 100:../CANopen/stack/301/CO_SYNC.c ****     /* verify written value */
 101:../CANopen/stack/301/CO_SYNC.c **** #if (CO_CONFIG_SYNC) & CO_CONFIG_SYNC_PRODUCER
 102:../CANopen/stack/301/CO_SYNC.c ****     bool_t isProducer = (cobIdSync & 0x40000000) != 0;
 588              	 .loc 4 102 0
 589 004a 3B6A     	 ldr r3,[r7,#32]
 590 004c 03F08043 	 and r3,r3,#1073741824
 591 0050 002B     	 cmp r3,#0
 592 0052 14BF     	 ite ne
 593 0054 0123     	 movne r3,#1
 594 0056 0023     	 moveq r3,#0
 595 0058 DBB2     	 uxtb r3,r3
 596 005a BB61     	 str r3,[r7,#24]
 103:../CANopen/stack/301/CO_SYNC.c ****     if ((cobIdSync & 0xBFFFF800) != 0 || CO_IS_RESTRICTED_CAN_ID(CAN_ID)
 597              	 .loc 4 103 0
 598 005c 3A6A     	 ldr r2,[r7,#32]
 599 005e 494B     	 ldr r3,.L40
 600 0060 1340     	 ands r3,r3,r2
 601 0062 002B     	 cmp r3,#0
 602 0064 33D1     	 bne .L30
 603              	 .loc 4 103 0 is_stmt 0 discriminator 1
 604 0066 FB8B     	 ldrh r3,[r7,#30]
 605 0068 7F2B     	 cmp r3,#127
 606 006a 30D9     	 bls .L30
 607              	 .loc 4 103 0 discriminator 2
 608 006c FB8B     	 ldrh r3,[r7,#30]
 609 006e B3F5807F 	 cmp r3,#256
 610 0072 03D9     	 bls .L31
 611              	 .loc 4 103 0 discriminator 3
 612 0074 FB8B     	 ldrh r3,[r7,#30]
 613 0076 B3F5C07F 	 cmp r3,#384
 614 007a 28D9     	 bls .L30
 615              	.L31:
 616              	 .loc 4 103 0 discriminator 5
 617 007c FB8B     	 ldrh r3,[r7,#30]
 618 007e B3F5B06F 	 cmp r3,#1408
 619 0082 03D9     	 bls .L32
 620              	 .loc 4 103 0 discriminator 6
 621 0084 FB8B     	 ldrh r3,[r7,#30]
 622 0086 B3F5C06F 	 cmp r3,#1536
 623 008a 20D3     	 bcc .L30
 624              	.L32:
 625              	 .loc 4 103 0 discriminator 8
 626 008c FB8B     	 ldrh r3,[r7,#30]
 627 008e B3F5C06F 	 cmp r3,#1536
 628 0092 03D9     	 bls .L33
 629              	 .loc 4 103 0 discriminator 9
 630 0094 FB8B     	 ldrh r3,[r7,#30]
 631 0096 B3F5D06F 	 cmp r3,#1664
 632 009a 18D3     	 bcc .L30
 633              	.L33:
 634              	 .loc 4 103 0 discriminator 11
 635 009c FB8B     	 ldrh r3,[r7,#30]
 636 009e B3F5DC6F 	 cmp r3,#1760
 637 00a2 03D3     	 bcc .L34
 638              	 .loc 4 103 0 discriminator 12
 639 00a4 FB8B     	 ldrh r3,[r7,#30]
 640 00a6 B3F5E06F 	 cmp r3,#1792
 641 00aa 10D3     	 bcc .L30
 642              	.L34:
 643              	 .loc 4 103 0 discriminator 14
 644 00ac FB8B     	 ldrh r3,[r7,#30]
 645 00ae B3F5E06F 	 cmp r3,#1792
 646 00b2 0CD8     	 bhi .L30
 104:../CANopen/stack/301/CO_SYNC.c ****         || (SYNC->isProducer && isProducer && CAN_ID != SYNC->CAN_ID)
 647              	 .loc 4 104 0 is_stmt 1
 648 00b4 7B6A     	 ldr r3,[r7,#36]
 649 00b6 5B6A     	 ldr r3,[r3,#36]
 650 00b8 002B     	 cmp r3,#0
 651 00ba 0AD0     	 beq .L35
 652              	 .loc 4 104 0 is_stmt 0 discriminator 1
 653 00bc BB69     	 ldr r3,[r7,#24]
 654 00be 002B     	 cmp r3,#0
 655 00c0 07D0     	 beq .L35
 656              	 .loc 4 104 0 discriminator 2
 657 00c2 7B6A     	 ldr r3,[r7,#36]
 658 00c4 B3F84430 	 ldrh r3,[r3,#68]
 659 00c8 FA8B     	 ldrh r2,[r7,#30]
 660 00ca 9A42     	 cmp r2,r3
 661 00cc 01D0     	 beq .L35
 662              	.L30:
 105:../CANopen/stack/301/CO_SYNC.c ****     ) {
 106:../CANopen/stack/301/CO_SYNC.c ****         return ODR_INVALID_VALUE;
 663              	 .loc 4 106 0 is_stmt 1
 664 00ce 0F23     	 movs r3,#15
 665 00d0 52E0     	 b .L29
 666              	.L35:
 107:../CANopen/stack/301/CO_SYNC.c ****     }
 108:../CANopen/stack/301/CO_SYNC.c **** #else
 109:../CANopen/stack/301/CO_SYNC.c ****     if ((cobIdSync & 0xFFFFF800) != 0 || CO_IS_RESTRICTED_CAN_ID(CAN_ID)) {
 110:../CANopen/stack/301/CO_SYNC.c ****         return ODR_INVALID_VALUE;
 111:../CANopen/stack/301/CO_SYNC.c ****     }
 112:../CANopen/stack/301/CO_SYNC.c **** #endif
 113:../CANopen/stack/301/CO_SYNC.c **** 
 114:../CANopen/stack/301/CO_SYNC.c ****     /* Configure CAN receive and transmit buffers */
 115:../CANopen/stack/301/CO_SYNC.c ****     if (CAN_ID != SYNC->CAN_ID) {
 667              	 .loc 4 115 0
 668 00d2 7B6A     	 ldr r3,[r7,#36]
 669 00d4 B3F84430 	 ldrh r3,[r3,#68]
 670 00d8 FA8B     	 ldrh r2,[r7,#30]
 671 00da 9A42     	 cmp r2,r3
 672 00dc 39D0     	 beq .L36
 673              	.LBB3:
 116:../CANopen/stack/301/CO_SYNC.c ****         CO_ReturnError_t CANret = CO_CANrxBufferInit(
 674              	 .loc 4 116 0
 675 00de 7B6A     	 ldr r3,[r7,#36]
 676 00e0 D86A     	 ldr r0,[r3,#44]
 677 00e2 7B6A     	 ldr r3,[r7,#36]
 678 00e4 198E     	 ldrh r1,[r3,#48]
 679 00e6 FA8B     	 ldrh r2,[r7,#30]
 680 00e8 0023     	 movs r3,#0
 681 00ea 0093     	 str r3,[sp]
 682 00ec 7B6A     	 ldr r3,[r7,#36]
 683 00ee 0193     	 str r3,[sp,#4]
 684 00f0 254B     	 ldr r3,.L40+4
 685 00f2 0293     	 str r3,[sp,#8]
 686 00f4 40F2FF73 	 movw r3,#2047
 687 00f8 FFF7FEFF 	 bl CO_CANrxBufferInit
 688 00fc 0346     	 mov r3,r0
 689 00fe FB75     	 strb r3,[r7,#23]
 117:../CANopen/stack/301/CO_SYNC.c ****             SYNC->CANdevRx,     /* CAN device */
 118:../CANopen/stack/301/CO_SYNC.c ****             SYNC->CANdevRxIdx,  /* rx buffer index */
 119:../CANopen/stack/301/CO_SYNC.c ****             CAN_ID,             /* CAN identifier */
 120:../CANopen/stack/301/CO_SYNC.c ****             0x7FF,              /* mask */
 121:../CANopen/stack/301/CO_SYNC.c ****             0,                  /* rtr */
 122:../CANopen/stack/301/CO_SYNC.c ****             (void*)SYNC,        /* object passed to receive function */
 123:../CANopen/stack/301/CO_SYNC.c ****             CO_SYNC_receive);   /* this function will process received message*/
 124:../CANopen/stack/301/CO_SYNC.c **** 
 125:../CANopen/stack/301/CO_SYNC.c ****         if (CANret != CO_ERROR_NO) {
 690              	 .loc 4 125 0
 691 0100 97F91730 	 ldrsb r3,[r7,#23]
 692 0104 002B     	 cmp r3,#0
 693 0106 01D0     	 beq .L37
 126:../CANopen/stack/301/CO_SYNC.c ****             return ODR_DEV_INCOMPAT;
 694              	 .loc 4 126 0
 695 0108 0923     	 movs r3,#9
 696 010a 35E0     	 b .L29
 697              	.L37:
 127:../CANopen/stack/301/CO_SYNC.c ****         }
 128:../CANopen/stack/301/CO_SYNC.c **** 
 129:../CANopen/stack/301/CO_SYNC.c **** #if (CO_CONFIG_SYNC) & CO_CONFIG_SYNC_PRODUCER
 130:../CANopen/stack/301/CO_SYNC.c ****         SYNC->CANtxBuff = CO_CANtxBufferInit(
 698              	 .loc 4 130 0
 699 010c 7B6A     	 ldr r3,[r7,#36]
 700 010e 986C     	 ldr r0,[r3,#72]
 701 0110 7B6A     	 ldr r3,[r7,#36]
 702 0112 B3F84C10 	 ldrh r1,[r3,#76]
 131:../CANopen/stack/301/CO_SYNC.c ****             SYNC->CANdevTx,     /* CAN device */
 132:../CANopen/stack/301/CO_SYNC.c ****             SYNC->CANdevTxIdx,  /* index of specific buffer inside CAN module */
 133:../CANopen/stack/301/CO_SYNC.c ****             CAN_ID,             /* CAN identifier */
 134:../CANopen/stack/301/CO_SYNC.c ****             0,                  /* rtr */
 135:../CANopen/stack/301/CO_SYNC.c ****             SYNC->counterOverflowValue != 0 ? 1 : 0, /* number of data bytes */
 703              	 .loc 4 135 0
 704 0116 7B6A     	 ldr r3,[r7,#36]
 705 0118 5B7C     	 ldrb r3,[r3,#17]
 130:../CANopen/stack/301/CO_SYNC.c ****             SYNC->CANdevTx,     /* CAN device */
 706              	 .loc 4 130 0
 707 011a 002B     	 cmp r3,#0
 708 011c 14BF     	 ite ne
 709 011e 0123     	 movne r3,#1
 710 0120 0023     	 moveq r3,#0
 711 0122 DBB2     	 uxtb r3,r3
 712 0124 FA8B     	 ldrh r2,[r7,#30]
 713 0126 0093     	 str r3,[sp]
 714 0128 0023     	 movs r3,#0
 715 012a 0193     	 str r3,[sp,#4]
 716 012c 0023     	 movs r3,#0
 717 012e FFF7FEFF 	 bl CO_CANtxBufferInit
 718 0132 0246     	 mov r2,r0
 719 0134 7B6A     	 ldr r3,[r7,#36]
 720 0136 9A62     	 str r2,[r3,#40]
 136:../CANopen/stack/301/CO_SYNC.c ****             0);                 /* synchronous message flag bit */
 137:../CANopen/stack/301/CO_SYNC.c **** 
 138:../CANopen/stack/301/CO_SYNC.c ****         if (SYNC->CANtxBuff == NULL) {
 721              	 .loc 4 138 0
 722 0138 7B6A     	 ldr r3,[r7,#36]
 723 013a 9B6A     	 ldr r3,[r3,#40]
 724 013c 002B     	 cmp r3,#0
 725 013e 04D1     	 bne .L38
 139:../CANopen/stack/301/CO_SYNC.c ****             SYNC->isProducer = false;
 726              	 .loc 4 139 0
 727 0140 7B6A     	 ldr r3,[r7,#36]
 728 0142 0022     	 movs r2,#0
 729 0144 5A62     	 str r2,[r3,#36]
 140:../CANopen/stack/301/CO_SYNC.c ****             return ODR_DEV_INCOMPAT;
 730              	 .loc 4 140 0
 731 0146 0923     	 movs r3,#9
 732 0148 16E0     	 b .L29
 733              	.L38:
 141:../CANopen/stack/301/CO_SYNC.c ****         }
 142:../CANopen/stack/301/CO_SYNC.c **** #endif
 143:../CANopen/stack/301/CO_SYNC.c **** 
 144:../CANopen/stack/301/CO_SYNC.c ****         SYNC->CAN_ID = CAN_ID;
 734              	 .loc 4 144 0
 735 014a 7B6A     	 ldr r3,[r7,#36]
 736 014c FA8B     	 ldrh r2,[r7,#30]
 737 014e A3F84420 	 strh r2,[r3,#68]
 738              	.L36:
 739              	.LBE3:
 145:../CANopen/stack/301/CO_SYNC.c ****     }
 146:../CANopen/stack/301/CO_SYNC.c **** 
 147:../CANopen/stack/301/CO_SYNC.c **** #if (CO_CONFIG_SYNC) & CO_CONFIG_SYNC_PRODUCER
 148:../CANopen/stack/301/CO_SYNC.c ****     SYNC->isProducer = isProducer;
 740              	 .loc 4 148 0
 741 0152 7B6A     	 ldr r3,[r7,#36]
 742 0154 BA69     	 ldr r2,[r7,#24]
 743 0156 5A62     	 str r2,[r3,#36]
 149:../CANopen/stack/301/CO_SYNC.c ****     if (isProducer) {
 744              	 .loc 4 149 0
 745 0158 BB69     	 ldr r3,[r7,#24]
 746 015a 002B     	 cmp r3,#0
 747 015c 05D0     	 beq .L39
 150:../CANopen/stack/301/CO_SYNC.c ****         SYNC->counter = 0;
 748              	 .loc 4 150 0
 749 015e 7B6A     	 ldr r3,[r7,#36]
 750 0160 0022     	 movs r2,#0
 751 0162 9A74     	 strb r2,[r3,#18]
 151:../CANopen/stack/301/CO_SYNC.c ****         SYNC->timer = 0;
 752              	 .loc 4 151 0
 753 0164 7B6A     	 ldr r3,[r7,#36]
 754 0166 0022     	 movs r2,#0
 755 0168 9A61     	 str r2,[r3,#24]
 756              	.L39:
 152:../CANopen/stack/301/CO_SYNC.c ****     }
 153:../CANopen/stack/301/CO_SYNC.c **** #endif /* CO_CONFIG_SYNC) & CO_CONFIG_SYNC_PRODUCER */
 154:../CANopen/stack/301/CO_SYNC.c **** 
 155:../CANopen/stack/301/CO_SYNC.c ****     /* write value to the original location in the Object Dictionary */
 156:../CANopen/stack/301/CO_SYNC.c ****     return OD_writeOriginal(stream, buf, count, countWritten);
 757              	 .loc 4 156 0
 758 016a F868     	 ldr r0,[r7,#12]
 759 016c B968     	 ldr r1,[r7,#8]
 760 016e 7A68     	 ldr r2,[r7,#4]
 761 0170 3B68     	 ldr r3,[r7]
 762 0172 FFF7FEFF 	 bl OD_writeOriginal
 763 0176 0346     	 mov r3,r0
 764              	.L29:
 765 0178 5BB2     	 sxtb r3,r3
 157:../CANopen/stack/301/CO_SYNC.c **** }
 766              	 .loc 4 157 0
 767 017a 1846     	 mov r0,r3
 768 017c 2837     	 adds r7,r7,#40
 769              	.LCFI47:
 770              	 .cfi_def_cfa_offset 8
 771 017e BD46     	 mov sp,r7
 772              	.LCFI48:
 773              	 .cfi_def_cfa_register 13
 774              	 
 775 0180 80BD     	 pop {r7,pc}
 776              	.L41:
 777 0182 00BF     	 .align 2
 778              	.L40:
 779 0184 00F8FFBF 	 .word -1073743872
 780 0188 00000000 	 .word CO_SYNC_receive
 781              	 .cfi_endproc
 782              	.LFE37:
 784              	 .section .text.OD_write_1019,"ax",%progbits
 785              	 .align 2
 786              	 .thumb
 787              	 .thumb_func
 789              	OD_write_1019:
 790              	.LFB38:
 158:../CANopen/stack/301/CO_SYNC.c **** 
 159:../CANopen/stack/301/CO_SYNC.c **** #if (CO_CONFIG_SYNC) & CO_CONFIG_SYNC_PRODUCER
 160:../CANopen/stack/301/CO_SYNC.c **** /*
 161:../CANopen/stack/301/CO_SYNC.c ****  * Custom function for writing OD object "Synchronous counter overflow value"
 162:../CANopen/stack/301/CO_SYNC.c ****  *
 163:../CANopen/stack/301/CO_SYNC.c ****  * For more information see file CO_ODinterface.h, OD_IO_t.
 164:../CANopen/stack/301/CO_SYNC.c ****  */
 165:../CANopen/stack/301/CO_SYNC.c **** static ODR_t OD_write_1019(OD_stream_t *stream, const void *buf,
 166:../CANopen/stack/301/CO_SYNC.c ****                            OD_size_t count, OD_size_t *countWritten)
 167:../CANopen/stack/301/CO_SYNC.c **** {
 791              	 .loc 4 167 0
 792              	 .cfi_startproc
 793              	 
 794              	 
 795 0000 80B5     	 push {r7,lr}
 796              	.LCFI49:
 797              	 .cfi_def_cfa_offset 8
 798              	 .cfi_offset 7,-8
 799              	 .cfi_offset 14,-4
 800 0002 88B0     	 sub sp,sp,#32
 801              	.LCFI50:
 802              	 .cfi_def_cfa_offset 40
 803 0004 02AF     	 add r7,sp,#8
 804              	.LCFI51:
 805              	 .cfi_def_cfa 7,32
 806 0006 F860     	 str r0,[r7,#12]
 807 0008 B960     	 str r1,[r7,#8]
 808 000a 7A60     	 str r2,[r7,#4]
 809 000c 3B60     	 str r3,[r7]
 168:../CANopen/stack/301/CO_SYNC.c ****     if (stream == NULL || stream->subIndex != 0 || buf == NULL
 810              	 .loc 4 168 0
 811 000e FB68     	 ldr r3,[r7,#12]
 812 0010 002B     	 cmp r3,#0
 813 0012 0CD0     	 beq .L43
 814              	 .loc 4 168 0 is_stmt 0 discriminator 1
 815 0014 FB68     	 ldr r3,[r7,#12]
 816 0016 5B7C     	 ldrb r3,[r3,#17]
 817 0018 002B     	 cmp r3,#0
 818 001a 08D1     	 bne .L43
 819              	 .loc 4 168 0 discriminator 2
 820 001c BB68     	 ldr r3,[r7,#8]
 821 001e 002B     	 cmp r3,#0
 822 0020 05D0     	 beq .L43
 169:../CANopen/stack/301/CO_SYNC.c **** #if (C2000_PORT != 0)
 170:../CANopen/stack/301/CO_SYNC.c ****         || count != 4 || countWritten == NULL
 171:../CANopen/stack/301/CO_SYNC.c **** #else
 172:../CANopen/stack/301/CO_SYNC.c ****         || count != sizeof(uint8_t) || countWritten == NULL
 823              	 .loc 4 172 0 is_stmt 1
 824 0022 7B68     	 ldr r3,[r7,#4]
 825 0024 012B     	 cmp r3,#1
 826 0026 02D1     	 bne .L43
 827              	 .loc 4 172 0 is_stmt 0 discriminator 1
 828 0028 3B68     	 ldr r3,[r7]
 829 002a 002B     	 cmp r3,#0
 830 002c 01D1     	 bne .L44
 831              	.L43:
 173:../CANopen/stack/301/CO_SYNC.c **** #endif
 174:../CANopen/stack/301/CO_SYNC.c ****     ) {
 175:../CANopen/stack/301/CO_SYNC.c ****         return ODR_DEV_INCOMPAT;
 832              	 .loc 4 175 0 is_stmt 1
 833 002e 0923     	 movs r3,#9
 834 0030 40E0     	 b .L45
 835              	.L44:
 176:../CANopen/stack/301/CO_SYNC.c ****     }
 177:../CANopen/stack/301/CO_SYNC.c **** 
 178:../CANopen/stack/301/CO_SYNC.c ****     CO_SYNC_t *SYNC = stream->object;
 836              	 .loc 4 178 0
 837 0032 FB68     	 ldr r3,[r7,#12]
 838 0034 5B68     	 ldr r3,[r3,#4]
 839 0036 7B61     	 str r3,[r7,#20]
 179:../CANopen/stack/301/CO_SYNC.c ****     uint8_t syncCounterOvf = CO_getUint8(buf);
 840              	 .loc 4 179 0
 841 0038 B868     	 ldr r0,[r7,#8]
 842 003a FFF7FEFF 	 bl CO_getUint8
 843 003e 0346     	 mov r3,r0
 844 0040 FB74     	 strb r3,[r7,#19]
 180:../CANopen/stack/301/CO_SYNC.c **** 
 181:../CANopen/stack/301/CO_SYNC.c ****     /* verify written value */
 182:../CANopen/stack/301/CO_SYNC.c ****     if (syncCounterOvf == 1 || syncCounterOvf > 240) {
 845              	 .loc 4 182 0
 846 0042 FB7C     	 ldrb r3,[r7,#19]
 847 0044 012B     	 cmp r3,#1
 848 0046 02D0     	 beq .L46
 849              	 .loc 4 182 0 is_stmt 0 discriminator 1
 850 0048 FB7C     	 ldrb r3,[r7,#19]
 851 004a F02B     	 cmp r3,#240
 852 004c 01D9     	 bls .L47
 853              	.L46:
 183:../CANopen/stack/301/CO_SYNC.c ****         return ODR_INVALID_VALUE;
 854              	 .loc 4 183 0 is_stmt 1
 855 004e 0F23     	 movs r3,#15
 856 0050 30E0     	 b .L45
 857              	.L47:
 184:../CANopen/stack/301/CO_SYNC.c ****     }
 185:../CANopen/stack/301/CO_SYNC.c ****     if (*SYNC->OD_1006_period != 0) {
 858              	 .loc 4 185 0
 859 0052 7B69     	 ldr r3,[r7,#20]
 860 0054 DB69     	 ldr r3,[r3,#28]
 861 0056 1B68     	 ldr r3,[r3]
 862 0058 002B     	 cmp r3,#0
 863 005a 01D0     	 beq .L48
 186:../CANopen/stack/301/CO_SYNC.c ****         return ODR_DATA_DEV_STATE;
 864              	 .loc 4 186 0
 865 005c 1723     	 movs r3,#23
 866 005e 29E0     	 b .L45
 867              	.L48:
 187:../CANopen/stack/301/CO_SYNC.c ****     }
 188:../CANopen/stack/301/CO_SYNC.c **** 
 189:../CANopen/stack/301/CO_SYNC.c ****     /* Configure CAN transmit buffer */
 190:../CANopen/stack/301/CO_SYNC.c ****     SYNC->CANtxBuff = CO_CANtxBufferInit(
 868              	 .loc 4 190 0
 869 0060 7B69     	 ldr r3,[r7,#20]
 870 0062 986C     	 ldr r0,[r3,#72]
 871 0064 7B69     	 ldr r3,[r7,#20]
 872 0066 B3F84C10 	 ldrh r1,[r3,#76]
 873 006a 7B69     	 ldr r3,[r7,#20]
 874 006c B3F84420 	 ldrh r2,[r3,#68]
 875 0070 FB7C     	 ldrb r3,[r7,#19]
 876 0072 002B     	 cmp r3,#0
 877 0074 14BF     	 ite ne
 878 0076 0123     	 movne r3,#1
 879 0078 0023     	 moveq r3,#0
 880 007a DBB2     	 uxtb r3,r3
 881 007c 0093     	 str r3,[sp]
 882 007e 0023     	 movs r3,#0
 883 0080 0193     	 str r3,[sp,#4]
 884 0082 0023     	 movs r3,#0
 885 0084 FFF7FEFF 	 bl CO_CANtxBufferInit
 886 0088 0246     	 mov r2,r0
 887 008a 7B69     	 ldr r3,[r7,#20]
 888 008c 9A62     	 str r2,[r3,#40]
 191:../CANopen/stack/301/CO_SYNC.c ****         SYNC->CANdevTx,     /* CAN device */
 192:../CANopen/stack/301/CO_SYNC.c ****         SYNC->CANdevTxIdx,  /* index of specific buffer inside CAN module */
 193:../CANopen/stack/301/CO_SYNC.c ****         SYNC->CAN_ID,       /* CAN identifier */
 194:../CANopen/stack/301/CO_SYNC.c ****         0,                  /* rtr */
 195:../CANopen/stack/301/CO_SYNC.c ****         syncCounterOvf != 0 ? 1 : 0, /* number of data bytes */
 196:../CANopen/stack/301/CO_SYNC.c ****         0);                 /* synchronous message flag bit */
 197:../CANopen/stack/301/CO_SYNC.c **** 
 198:../CANopen/stack/301/CO_SYNC.c ****     if (SYNC->CANtxBuff == NULL) {
 889              	 .loc 4 198 0
 890 008e 7B69     	 ldr r3,[r7,#20]
 891 0090 9B6A     	 ldr r3,[r3,#40]
 892 0092 002B     	 cmp r3,#0
 893 0094 04D1     	 bne .L49
 199:../CANopen/stack/301/CO_SYNC.c ****         SYNC->isProducer = false;
 894              	 .loc 4 199 0
 895 0096 7B69     	 ldr r3,[r7,#20]
 896 0098 0022     	 movs r2,#0
 897 009a 5A62     	 str r2,[r3,#36]
 200:../CANopen/stack/301/CO_SYNC.c ****         return ODR_DEV_INCOMPAT;
 898              	 .loc 4 200 0
 899 009c 0923     	 movs r3,#9
 900 009e 09E0     	 b .L45
 901              	.L49:
 201:../CANopen/stack/301/CO_SYNC.c ****     }
 202:../CANopen/stack/301/CO_SYNC.c **** 
 203:../CANopen/stack/301/CO_SYNC.c ****     SYNC->counterOverflowValue = syncCounterOvf;
 902              	 .loc 4 203 0
 903 00a0 7B69     	 ldr r3,[r7,#20]
 904 00a2 FA7C     	 ldrb r2,[r7,#19]
 905 00a4 5A74     	 strb r2,[r3,#17]
 204:../CANopen/stack/301/CO_SYNC.c **** 
 205:../CANopen/stack/301/CO_SYNC.c ****     /* write value to the original location in the Object Dictionary */
 206:../CANopen/stack/301/CO_SYNC.c ****     return OD_writeOriginal(stream, buf, count, countWritten);
 906              	 .loc 4 206 0
 907 00a6 F868     	 ldr r0,[r7,#12]
 908 00a8 B968     	 ldr r1,[r7,#8]
 909 00aa 7A68     	 ldr r2,[r7,#4]
 910 00ac 3B68     	 ldr r3,[r7]
 911 00ae FFF7FEFF 	 bl OD_writeOriginal
 912 00b2 0346     	 mov r3,r0
 913              	.L45:
 914 00b4 5BB2     	 sxtb r3,r3
 207:../CANopen/stack/301/CO_SYNC.c **** }
 915              	 .loc 4 207 0
 916 00b6 1846     	 mov r0,r3
 917 00b8 1837     	 adds r7,r7,#24
 918              	.LCFI52:
 919              	 .cfi_def_cfa_offset 8
 920 00ba BD46     	 mov sp,r7
 921              	.LCFI53:
 922              	 .cfi_def_cfa_register 13
 923              	 
 924 00bc 80BD     	 pop {r7,pc}
 925              	 .cfi_endproc
 926              	.LFE38:
 928              	 .section .text.CO_SYNC_init,"ax",%progbits
 929              	 .align 2
 930              	 .global CO_SYNC_init
 931              	 .thumb
 932              	 .thumb_func
 934              	CO_SYNC_init:
 935              	.LFB39:
 208:../CANopen/stack/301/CO_SYNC.c **** #endif /* (CO_CONFIG_SYNC) & CO_CONFIG_SYNC_PRODUCER */
 209:../CANopen/stack/301/CO_SYNC.c **** #endif /* (CO_CONFIG_SYNC) & CO_CONFIG_FLAG_OD_DYNAMIC */
 210:../CANopen/stack/301/CO_SYNC.c **** 
 211:../CANopen/stack/301/CO_SYNC.c **** 
 212:../CANopen/stack/301/CO_SYNC.c **** /******************************************************************************/
 213:../CANopen/stack/301/CO_SYNC.c **** CO_ReturnError_t CO_SYNC_init(CO_SYNC_t *SYNC,
 214:../CANopen/stack/301/CO_SYNC.c ****                               CO_EM_t *em,
 215:../CANopen/stack/301/CO_SYNC.c ****                               OD_entry_t *OD_1005_cobIdSync,
 216:../CANopen/stack/301/CO_SYNC.c ****                               OD_entry_t *OD_1006_commCyclePeriod,
 217:../CANopen/stack/301/CO_SYNC.c ****                               OD_entry_t *OD_1007_syncWindowLen,
 218:../CANopen/stack/301/CO_SYNC.c ****                               OD_entry_t *OD_1019_syncCounterOvf,
 219:../CANopen/stack/301/CO_SYNC.c ****                               CO_CANmodule_t *CANdevRx,
 220:../CANopen/stack/301/CO_SYNC.c ****                               uint16_t CANdevRxIdx,
 221:../CANopen/stack/301/CO_SYNC.c **** #if (CO_CONFIG_SYNC) & CO_CONFIG_SYNC_PRODUCER
 222:../CANopen/stack/301/CO_SYNC.c ****                               CO_CANmodule_t *CANdevTx,
 223:../CANopen/stack/301/CO_SYNC.c ****                               uint16_t CANdevTxIdx,
 224:../CANopen/stack/301/CO_SYNC.c **** #endif
 225:../CANopen/stack/301/CO_SYNC.c ****                               uint32_t *errInfo)
 226:../CANopen/stack/301/CO_SYNC.c **** {
 936              	 .loc 4 226 0
 937              	 .cfi_startproc
 938              	 
 939              	 
 940 0000 80B5     	 push {r7,lr}
 941              	.LCFI54:
 942              	 .cfi_def_cfa_offset 8
 943              	 .cfi_offset 7,-8
 944              	 .cfi_offset 14,-4
 945 0002 8CB0     	 sub sp,sp,#48
 946              	.LCFI55:
 947              	 .cfi_def_cfa_offset 56
 948 0004 04AF     	 add r7,sp,#16
 949              	.LCFI56:
 950              	 .cfi_def_cfa 7,40
 951 0006 F860     	 str r0,[r7,#12]
 952 0008 B960     	 str r1,[r7,#8]
 953 000a 7A60     	 str r2,[r7,#4]
 954 000c 3B60     	 str r3,[r7]
 227:../CANopen/stack/301/CO_SYNC.c ****     ODR_t odRet;
 228:../CANopen/stack/301/CO_SYNC.c **** 
 229:../CANopen/stack/301/CO_SYNC.c ****     /* verify arguments */
 230:../CANopen/stack/301/CO_SYNC.c ****     if (SYNC == NULL || em == NULL || OD_1005_cobIdSync == NULL
 955              	 .loc 4 230 0
 956 000e FB68     	 ldr r3,[r7,#12]
 957 0010 002B     	 cmp r3,#0
 958 0012 0ED0     	 beq .L51
 959              	 .loc 4 230 0 is_stmt 0 discriminator 1
 960 0014 BB68     	 ldr r3,[r7,#8]
 961 0016 002B     	 cmp r3,#0
 962 0018 0BD0     	 beq .L51
 963              	 .loc 4 230 0 discriminator 2
 964 001a 7B68     	 ldr r3,[r7,#4]
 965 001c 002B     	 cmp r3,#0
 966 001e 08D0     	 beq .L51
 231:../CANopen/stack/301/CO_SYNC.c **** #if (CO_CONFIG_SYNC) & CO_CONFIG_SYNC_PRODUCER
 232:../CANopen/stack/301/CO_SYNC.c ****         || OD_1006_commCyclePeriod == NULL || CANdevTx == NULL
 967              	 .loc 4 232 0 is_stmt 1
 968 0020 3B68     	 ldr r3,[r7]
 969 0022 002B     	 cmp r3,#0
 970 0024 05D0     	 beq .L51
 971              	 .loc 4 232 0 is_stmt 0 discriminator 1
 972 0026 BB6B     	 ldr r3,[r7,#56]
 973 0028 002B     	 cmp r3,#0
 974 002a 02D0     	 beq .L51
 233:../CANopen/stack/301/CO_SYNC.c **** #endif
 234:../CANopen/stack/301/CO_SYNC.c ****         || CANdevRx == NULL
 975              	 .loc 4 234 0 is_stmt 1
 976 002c 3B6B     	 ldr r3,[r7,#48]
 977 002e 002B     	 cmp r3,#0
 978 0030 01D1     	 bne .L52
 979              	.L51:
 235:../CANopen/stack/301/CO_SYNC.c ****     ) {
 236:../CANopen/stack/301/CO_SYNC.c ****         return CO_ERROR_ILLEGAL_ARGUMENT;
 980              	 .loc 4 236 0
 981 0032 FF23     	 movs r3,#255
 982 0034 F9E0     	 b .L67
 983              	.L52:
 237:../CANopen/stack/301/CO_SYNC.c ****     }
 238:../CANopen/stack/301/CO_SYNC.c **** 
 239:../CANopen/stack/301/CO_SYNC.c ****     /* clear object */
 240:../CANopen/stack/301/CO_SYNC.c ****     memset(SYNC, 0, sizeof(CO_SYNC_t));
 984              	 .loc 4 240 0
 985 0036 F868     	 ldr r0,[r7,#12]
 986 0038 0021     	 movs r1,#0
 987 003a 6022     	 movs r2,#96
 988 003c FFF7FEFF 	 bl memset
 241:../CANopen/stack/301/CO_SYNC.c **** 
 242:../CANopen/stack/301/CO_SYNC.c ****     /* get and verify "COB-ID SYNC message" from OD and configure extension */
 243:../CANopen/stack/301/CO_SYNC.c ****     uint32_t cobIdSync = 0x00000080;
 989              	 .loc 4 243 0
 990 0040 8023     	 movs r3,#128
 991 0042 BB61     	 str r3,[r7,#24]
 244:../CANopen/stack/301/CO_SYNC.c **** 
 245:../CANopen/stack/301/CO_SYNC.c ****     odRet = OD_get_u32(OD_1005_cobIdSync, 0, &cobIdSync, true);
 992              	 .loc 4 245 0
 993 0044 07F11803 	 add r3,r7,#24
 994 0048 7868     	 ldr r0,[r7,#4]
 995 004a 0021     	 movs r1,#0
 996 004c 1A46     	 mov r2,r3
 997 004e 0123     	 movs r3,#1
 998 0050 FFF7FEFF 	 bl OD_get_u32
 999 0054 0346     	 mov r3,r0
 1000 0056 FB77     	 strb r3,[r7,#31]
 246:../CANopen/stack/301/CO_SYNC.c ****     if (odRet != ODR_OK) {
 1001              	 .loc 4 246 0
 1002 0058 97F91F30 	 ldrsb r3,[r7,#31]
 1003 005c 002B     	 cmp r3,#0
 1004 005e 0BD0     	 beq .L54
 247:../CANopen/stack/301/CO_SYNC.c ****         if (errInfo != NULL) *errInfo = OD_getIndex(OD_1005_cobIdSync);
 1005              	 .loc 4 247 0
 1006 0060 3B6C     	 ldr r3,[r7,#64]
 1007 0062 002B     	 cmp r3,#0
 1008 0064 06D0     	 beq .L55
 1009              	 .loc 4 247 0 is_stmt 0 discriminator 1
 1010 0066 7868     	 ldr r0,[r7,#4]
 1011 0068 FFF7FEFF 	 bl OD_getIndex
 1012 006c 0346     	 mov r3,r0
 1013 006e 1A46     	 mov r2,r3
 1014 0070 3B6C     	 ldr r3,[r7,#64]
 1015 0072 1A60     	 str r2,[r3]
 1016              	.L55:
 248:../CANopen/stack/301/CO_SYNC.c ****         return CO_ERROR_OD_PARAMETERS;
 1017              	 .loc 4 248 0 is_stmt 1
 1018 0074 F423     	 movs r3,#244
 1019 0076 D8E0     	 b .L67
 1020              	.L54:
 249:../CANopen/stack/301/CO_SYNC.c ****     }
 250:../CANopen/stack/301/CO_SYNC.c **** #if (CO_CONFIG_SYNC) & CO_CONFIG_FLAG_OD_DYNAMIC
 251:../CANopen/stack/301/CO_SYNC.c ****     SYNC->OD_1005_extension.object = SYNC;
 1021              	 .loc 4 251 0
 1022 0078 FB68     	 ldr r3,[r7,#12]
 1023 007a FA68     	 ldr r2,[r7,#12]
 1024 007c 5A63     	 str r2,[r3,#52]
 252:../CANopen/stack/301/CO_SYNC.c ****     SYNC->OD_1005_extension.read = OD_readOriginal;
 1025              	 .loc 4 252 0
 1026 007e FB68     	 ldr r3,[r7,#12]
 1027 0080 6C4A     	 ldr r2,.L68
 1028 0082 9A63     	 str r2,[r3,#56]
 253:../CANopen/stack/301/CO_SYNC.c ****     SYNC->OD_1005_extension.write = OD_write_1005;
 1029              	 .loc 4 253 0
 1030 0084 FB68     	 ldr r3,[r7,#12]
 1031 0086 6C4A     	 ldr r2,.L68+4
 1032 0088 DA63     	 str r2,[r3,#60]
 254:../CANopen/stack/301/CO_SYNC.c ****     OD_extension_init(OD_1005_cobIdSync, &SYNC->OD_1005_extension);
 1033              	 .loc 4 254 0
 1034 008a FB68     	 ldr r3,[r7,#12]
 1035 008c 3433     	 adds r3,r3,#52
 1036 008e 7868     	 ldr r0,[r7,#4]
 1037 0090 1946     	 mov r1,r3
 1038 0092 FFF7FEFF 	 bl OD_extension_init
 255:../CANopen/stack/301/CO_SYNC.c **** #endif
 256:../CANopen/stack/301/CO_SYNC.c **** 
 257:../CANopen/stack/301/CO_SYNC.c ****     /* get and verify "Communication cycle period" from OD */
 258:../CANopen/stack/301/CO_SYNC.c ****     SYNC->OD_1006_period = OD_getPtr(OD_1006_commCyclePeriod, 0,
 1039              	 .loc 4 258 0
 1040 0096 3868     	 ldr r0,[r7]
 1041 0098 0021     	 movs r1,#0
 1042 009a 0422     	 movs r2,#4
 1043 009c 0023     	 movs r3,#0
 1044 009e FFF7FEFF 	 bl OD_getPtr
 1045 00a2 0246     	 mov r2,r0
 1046 00a4 FB68     	 ldr r3,[r7,#12]
 1047 00a6 DA61     	 str r2,[r3,#28]
 259:../CANopen/stack/301/CO_SYNC.c **** #if (C2000_PORT != 0)
 260:../CANopen/stack/301/CO_SYNC.c ****                                      4, NULL);
 261:../CANopen/stack/301/CO_SYNC.c **** #else
 262:../CANopen/stack/301/CO_SYNC.c ****                                      sizeof(uint32_t), NULL);
 263:../CANopen/stack/301/CO_SYNC.c **** #endif
 264:../CANopen/stack/301/CO_SYNC.c **** #if (CO_CONFIG_SYNC) & CO_CONFIG_SYNC_PRODUCER
 265:../CANopen/stack/301/CO_SYNC.c ****     if (SYNC->OD_1006_period == NULL) {
 1048              	 .loc 4 265 0
 1049 00a8 FB68     	 ldr r3,[r7,#12]
 1050 00aa DB69     	 ldr r3,[r3,#28]
 1051 00ac 002B     	 cmp r3,#0
 1052 00ae 0BD1     	 bne .L56
 266:../CANopen/stack/301/CO_SYNC.c ****         if (errInfo != NULL) *errInfo = OD_getIndex(OD_1006_commCyclePeriod);
 1053              	 .loc 4 266 0
 1054 00b0 3B6C     	 ldr r3,[r7,#64]
 1055 00b2 002B     	 cmp r3,#0
 1056 00b4 06D0     	 beq .L57
 1057              	 .loc 4 266 0 is_stmt 0 discriminator 1
 1058 00b6 3868     	 ldr r0,[r7]
 1059 00b8 FFF7FEFF 	 bl OD_getIndex
 1060 00bc 0346     	 mov r3,r0
 1061 00be 1A46     	 mov r2,r3
 1062 00c0 3B6C     	 ldr r3,[r7,#64]
 1063 00c2 1A60     	 str r2,[r3]
 1064              	.L57:
 267:../CANopen/stack/301/CO_SYNC.c ****         return CO_ERROR_OD_PARAMETERS;
 1065              	 .loc 4 267 0 is_stmt 1
 1066 00c4 F423     	 movs r3,#244
 1067 00c6 B0E0     	 b .L67
 1068              	.L56:
 268:../CANopen/stack/301/CO_SYNC.c ****     }
 269:../CANopen/stack/301/CO_SYNC.c **** #else
 270:../CANopen/stack/301/CO_SYNC.c ****     if (OD_1006_commCyclePeriod != NULL && SYNC->OD_1006_period == NULL) {
 271:../CANopen/stack/301/CO_SYNC.c ****         if (errInfo != NULL) *errInfo = OD_getIndex(OD_1006_commCyclePeriod);
 272:../CANopen/stack/301/CO_SYNC.c ****         return CO_ERROR_OD_PARAMETERS;
 273:../CANopen/stack/301/CO_SYNC.c ****     }
 274:../CANopen/stack/301/CO_SYNC.c **** #endif
 275:../CANopen/stack/301/CO_SYNC.c **** 
 276:../CANopen/stack/301/CO_SYNC.c ****     /* get "Synchronous window length" from OD (optional parameter) */
 277:../CANopen/stack/301/CO_SYNC.c ****     SYNC->OD_1007_window = OD_getPtr(OD_1007_syncWindowLen, 0,
 1069              	 .loc 4 277 0
 1070 00c8 B86A     	 ldr r0,[r7,#40]
 1071 00ca 0021     	 movs r1,#0
 1072 00cc 0422     	 movs r2,#4
 1073 00ce 0023     	 movs r3,#0
 1074 00d0 FFF7FEFF 	 bl OD_getPtr
 1075 00d4 0246     	 mov r2,r0
 1076 00d6 FB68     	 ldr r3,[r7,#12]
 1077 00d8 1A62     	 str r2,[r3,#32]
 278:../CANopen/stack/301/CO_SYNC.c **** #if (C2000_PORT != 0)
 279:../CANopen/stack/301/CO_SYNC.c ****                                      4, NULL);
 280:../CANopen/stack/301/CO_SYNC.c **** #else
 281:../CANopen/stack/301/CO_SYNC.c ****                                      sizeof(uint32_t), NULL);
 282:../CANopen/stack/301/CO_SYNC.c **** #endif
 283:../CANopen/stack/301/CO_SYNC.c ****     if (OD_1007_syncWindowLen != NULL && SYNC->OD_1007_window == NULL) {
 1078              	 .loc 4 283 0
 1079 00da BB6A     	 ldr r3,[r7,#40]
 1080 00dc 002B     	 cmp r3,#0
 1081 00de 0FD0     	 beq .L58
 1082              	 .loc 4 283 0 is_stmt 0 discriminator 1
 1083 00e0 FB68     	 ldr r3,[r7,#12]
 1084 00e2 1B6A     	 ldr r3,[r3,#32]
 1085 00e4 002B     	 cmp r3,#0
 1086 00e6 0BD1     	 bne .L58
 284:../CANopen/stack/301/CO_SYNC.c ****         if (errInfo != NULL) *errInfo = OD_getIndex(OD_1007_syncWindowLen);
 1087              	 .loc 4 284 0 is_stmt 1
 1088 00e8 3B6C     	 ldr r3,[r7,#64]
 1089 00ea 002B     	 cmp r3,#0
 1090 00ec 06D0     	 beq .L59
 1091              	 .loc 4 284 0 is_stmt 0 discriminator 1
 1092 00ee B86A     	 ldr r0,[r7,#40]
 1093 00f0 FFF7FEFF 	 bl OD_getIndex
 1094 00f4 0346     	 mov r3,r0
 1095 00f6 1A46     	 mov r2,r3
 1096 00f8 3B6C     	 ldr r3,[r7,#64]
 1097 00fa 1A60     	 str r2,[r3]
 1098              	.L59:
 285:../CANopen/stack/301/CO_SYNC.c ****         return CO_ERROR_OD_PARAMETERS;
 1099              	 .loc 4 285 0 is_stmt 1
 1100 00fc F423     	 movs r3,#244
 1101 00fe 94E0     	 b .L67
 1102              	.L58:
 286:../CANopen/stack/301/CO_SYNC.c ****     }
 287:../CANopen/stack/301/CO_SYNC.c **** 
 288:../CANopen/stack/301/CO_SYNC.c ****     /* get and verify optional "Synchronous counter overflow value" from OD and
 289:../CANopen/stack/301/CO_SYNC.c ****      * configure extension */
 290:../CANopen/stack/301/CO_SYNC.c ****     uint8_t syncCounterOvf = 0;
 1103              	 .loc 4 290 0
 1104 0100 0023     	 movs r3,#0
 1105 0102 FB75     	 strb r3,[r7,#23]
 291:../CANopen/stack/301/CO_SYNC.c **** 
 292:../CANopen/stack/301/CO_SYNC.c ****     if (OD_1019_syncCounterOvf != NULL) {
 1106              	 .loc 4 292 0
 1107 0104 FB6A     	 ldr r3,[r7,#44]
 1108 0106 002B     	 cmp r3,#0
 1109 0108 33D0     	 beq .L60
 293:../CANopen/stack/301/CO_SYNC.c ****         odRet = OD_get_u8(OD_1019_syncCounterOvf, 0, &syncCounterOvf, true);
 1110              	 .loc 4 293 0
 1111 010a 07F11703 	 add r3,r7,#23
 1112 010e F86A     	 ldr r0,[r7,#44]
 1113 0110 0021     	 movs r1,#0
 1114 0112 1A46     	 mov r2,r3
 1115 0114 0123     	 movs r3,#1
 1116 0116 FFF7FEFF 	 bl OD_get_u8
 1117 011a 0346     	 mov r3,r0
 1118 011c FB77     	 strb r3,[r7,#31]
 294:../CANopen/stack/301/CO_SYNC.c ****         if (odRet != ODR_OK) {
 1119              	 .loc 4 294 0
 1120 011e 97F91F30 	 ldrsb r3,[r7,#31]
 1121 0122 002B     	 cmp r3,#0
 1122 0124 0BD0     	 beq .L61
 295:../CANopen/stack/301/CO_SYNC.c ****             if (errInfo != NULL) *errInfo = OD_getIndex(OD_1019_syncCounterOvf);
 1123              	 .loc 4 295 0
 1124 0126 3B6C     	 ldr r3,[r7,#64]
 1125 0128 002B     	 cmp r3,#0
 1126 012a 06D0     	 beq .L62
 1127              	 .loc 4 295 0 is_stmt 0 discriminator 1
 1128 012c F86A     	 ldr r0,[r7,#44]
 1129 012e FFF7FEFF 	 bl OD_getIndex
 1130 0132 0346     	 mov r3,r0
 1131 0134 1A46     	 mov r2,r3
 1132 0136 3B6C     	 ldr r3,[r7,#64]
 1133 0138 1A60     	 str r2,[r3]
 1134              	.L62:
 296:../CANopen/stack/301/CO_SYNC.c ****             return CO_ERROR_OD_PARAMETERS;
 1135              	 .loc 4 296 0 is_stmt 1
 1136 013a F423     	 movs r3,#244
 1137 013c 75E0     	 b .L67
 1138              	.L61:
 297:../CANopen/stack/301/CO_SYNC.c ****         }
 298:../CANopen/stack/301/CO_SYNC.c ****         if (syncCounterOvf == 1) syncCounterOvf = 2;
 1139              	 .loc 4 298 0
 1140 013e FB7D     	 ldrb r3,[r7,#23]
 1141 0140 012B     	 cmp r3,#1
 1142 0142 02D1     	 bne .L63
 1143              	 .loc 4 298 0 is_stmt 0 discriminator 1
 1144 0144 0223     	 movs r3,#2
 1145 0146 FB75     	 strb r3,[r7,#23]
 1146 0148 04E0     	 b .L64
 1147              	.L63:
 299:../CANopen/stack/301/CO_SYNC.c ****         else if (syncCounterOvf > 240) syncCounterOvf = 240;
 1148              	 .loc 4 299 0 is_stmt 1
 1149 014a FB7D     	 ldrb r3,[r7,#23]
 1150 014c F02B     	 cmp r3,#240
 1151 014e 01D9     	 bls .L64
 1152              	 .loc 4 299 0 is_stmt 0 discriminator 1
 1153 0150 F023     	 movs r3,#240
 1154 0152 FB75     	 strb r3,[r7,#23]
 1155              	.L64:
 300:../CANopen/stack/301/CO_SYNC.c **** 
 301:../CANopen/stack/301/CO_SYNC.c **** #if (CO_CONFIG_SYNC) & CO_CONFIG_FLAG_OD_DYNAMIC
 302:../CANopen/stack/301/CO_SYNC.c **** #if (CO_CONFIG_SYNC) & CO_CONFIG_SYNC_PRODUCER
 303:../CANopen/stack/301/CO_SYNC.c ****         SYNC->OD_1019_extension.object = SYNC;
 1156              	 .loc 4 303 0 is_stmt 1
 1157 0154 FB68     	 ldr r3,[r7,#12]
 1158 0156 FA68     	 ldr r2,[r7,#12]
 1159 0158 1A65     	 str r2,[r3,#80]
 304:../CANopen/stack/301/CO_SYNC.c ****         SYNC->OD_1019_extension.read = OD_readOriginal;
 1160              	 .loc 4 304 0
 1161 015a FB68     	 ldr r3,[r7,#12]
 1162 015c 354A     	 ldr r2,.L68
 1163 015e 5A65     	 str r2,[r3,#84]
 305:../CANopen/stack/301/CO_SYNC.c ****         SYNC->OD_1019_extension.write = OD_write_1019;
 1164              	 .loc 4 305 0
 1165 0160 FB68     	 ldr r3,[r7,#12]
 1166 0162 364A     	 ldr r2,.L68+8
 1167 0164 9A65     	 str r2,[r3,#88]
 306:../CANopen/stack/301/CO_SYNC.c ****         OD_extension_init(OD_1019_syncCounterOvf, &SYNC->OD_1019_extension);
 1168              	 .loc 4 306 0
 1169 0166 FB68     	 ldr r3,[r7,#12]
 1170 0168 5033     	 adds r3,r3,#80
 1171 016a F86A     	 ldr r0,[r7,#44]
 1172 016c 1946     	 mov r1,r3
 1173 016e FFF7FEFF 	 bl OD_extension_init
 1174              	.L60:
 307:../CANopen/stack/301/CO_SYNC.c **** #endif
 308:../CANopen/stack/301/CO_SYNC.c **** #endif
 309:../CANopen/stack/301/CO_SYNC.c ****     }
 310:../CANopen/stack/301/CO_SYNC.c ****     SYNC->counterOverflowValue = syncCounterOvf;
 1175              	 .loc 4 310 0
 1176 0172 FA7D     	 ldrb r2,[r7,#23]
 1177 0174 FB68     	 ldr r3,[r7,#12]
 1178 0176 5A74     	 strb r2,[r3,#17]
 311:../CANopen/stack/301/CO_SYNC.c **** 
 312:../CANopen/stack/301/CO_SYNC.c ****     /* Configure object variables */
 313:../CANopen/stack/301/CO_SYNC.c ****     SYNC->em = em;
 1179              	 .loc 4 313 0
 1180 0178 FB68     	 ldr r3,[r7,#12]
 1181 017a BA68     	 ldr r2,[r7,#8]
 1182 017c 1A60     	 str r2,[r3]
 314:../CANopen/stack/301/CO_SYNC.c **** #if (CO_CONFIG_SYNC) & CO_CONFIG_SYNC_PRODUCER
 315:../CANopen/stack/301/CO_SYNC.c ****     SYNC->isProducer = (cobIdSync & 0x40000000) != 0;
 1183              	 .loc 4 315 0
 1184 017e BB69     	 ldr r3,[r7,#24]
 1185 0180 03F08043 	 and r3,r3,#1073741824
 1186 0184 002B     	 cmp r3,#0
 1187 0186 14BF     	 ite ne
 1188 0188 0123     	 movne r3,#1
 1189 018a 0023     	 moveq r3,#0
 1190 018c DBB2     	 uxtb r3,r3
 1191 018e 1A46     	 mov r2,r3
 1192 0190 FB68     	 ldr r3,[r7,#12]
 1193 0192 5A62     	 str r2,[r3,#36]
 316:../CANopen/stack/301/CO_SYNC.c **** #endif
 317:../CANopen/stack/301/CO_SYNC.c **** #if (CO_CONFIG_SYNC) & CO_CONFIG_FLAG_OD_DYNAMIC
 318:../CANopen/stack/301/CO_SYNC.c ****     SYNC->CAN_ID = cobIdSync & 0x7FF;
 1194              	 .loc 4 318 0
 1195 0194 BB69     	 ldr r3,[r7,#24]
 1196 0196 9BB2     	 uxth r3,r3
 1197 0198 C3F30A03 	 ubfx r3,r3,#0,#11
 1198 019c 9AB2     	 uxth r2,r3
 1199 019e FB68     	 ldr r3,[r7,#12]
 1200 01a0 A3F84420 	 strh r2,[r3,#68]
 319:../CANopen/stack/301/CO_SYNC.c ****     SYNC->CANdevRx = CANdevRx;
 1201              	 .loc 4 319 0
 1202 01a4 FB68     	 ldr r3,[r7,#12]
 1203 01a6 3A6B     	 ldr r2,[r7,#48]
 1204 01a8 DA62     	 str r2,[r3,#44]
 320:../CANopen/stack/301/CO_SYNC.c ****     SYNC->CANdevRxIdx = CANdevRxIdx;
 1205              	 .loc 4 320 0
 1206 01aa FB68     	 ldr r3,[r7,#12]
 1207 01ac BA8E     	 ldrh r2,[r7,#52]
 1208 01ae 1A86     	 strh r2,[r3,#48]
 321:../CANopen/stack/301/CO_SYNC.c ****  #if (CO_CONFIG_SYNC) & CO_CONFIG_SYNC_PRODUCER
 322:../CANopen/stack/301/CO_SYNC.c ****     SYNC->CANdevTx = CANdevTx;
 1209              	 .loc 4 322 0
 1210 01b0 FB68     	 ldr r3,[r7,#12]
 1211 01b2 BA6B     	 ldr r2,[r7,#56]
 1212 01b4 9A64     	 str r2,[r3,#72]
 323:../CANopen/stack/301/CO_SYNC.c ****     SYNC->CANdevTxIdx = CANdevTxIdx;
 1213              	 .loc 4 323 0
 1214 01b6 FB68     	 ldr r3,[r7,#12]
 1215 01b8 BA8F     	 ldrh r2,[r7,#60]
 1216 01ba A3F84C20 	 strh r2,[r3,#76]
 324:../CANopen/stack/301/CO_SYNC.c ****  #endif
 325:../CANopen/stack/301/CO_SYNC.c **** #endif
 326:../CANopen/stack/301/CO_SYNC.c **** 
 327:../CANopen/stack/301/CO_SYNC.c ****     /* configure SYNC CAN reception and transmission */
 328:../CANopen/stack/301/CO_SYNC.c ****     CO_ReturnError_t ret = CO_CANrxBufferInit(
 1217              	 .loc 4 328 0
 1218 01be BB69     	 ldr r3,[r7,#24]
 1219 01c0 9BB2     	 uxth r3,r3
 1220 01c2 C3F30A03 	 ubfx r3,r3,#0,#11
 1221 01c6 9AB2     	 uxth r2,r3
 1222 01c8 B98E     	 ldrh r1,[r7,#52]
 1223 01ca 0023     	 movs r3,#0
 1224 01cc 0093     	 str r3,[sp]
 1225 01ce FB68     	 ldr r3,[r7,#12]
 1226 01d0 0193     	 str r3,[sp,#4]
 1227 01d2 1B4B     	 ldr r3,.L68+12
 1228 01d4 0293     	 str r3,[sp,#8]
 1229 01d6 386B     	 ldr r0,[r7,#48]
 1230 01d8 40F2FF73 	 movw r3,#2047
 1231 01dc FFF7FEFF 	 bl CO_CANrxBufferInit
 1232 01e0 0346     	 mov r3,r0
 1233 01e2 BB77     	 strb r3,[r7,#30]
 329:../CANopen/stack/301/CO_SYNC.c ****             CANdevRx,           /* CAN device */
 330:../CANopen/stack/301/CO_SYNC.c ****             CANdevRxIdx,        /* rx buffer index */
 331:../CANopen/stack/301/CO_SYNC.c ****             cobIdSync & 0x7FF,  /* CAN identifier */
 332:../CANopen/stack/301/CO_SYNC.c ****             0x7FF,              /* mask */
 333:../CANopen/stack/301/CO_SYNC.c ****             0,                  /* rtr */
 334:../CANopen/stack/301/CO_SYNC.c ****             (void*)SYNC,        /* object passed to receive function */
 335:../CANopen/stack/301/CO_SYNC.c ****             CO_SYNC_receive);   /* this function will process received message*/
 336:../CANopen/stack/301/CO_SYNC.c ****     if (ret != CO_ERROR_NO)
 1234              	 .loc 4 336 0
 1235 01e4 97F91E30 	 ldrsb r3,[r7,#30]
 1236 01e8 002B     	 cmp r3,#0
 1237 01ea 01D0     	 beq .L65
 337:../CANopen/stack/301/CO_SYNC.c ****         return ret;
 1238              	 .loc 4 337 0
 1239 01ec BB7F     	 ldrb r3,[r7,#30]
 1240 01ee 1CE0     	 b .L67
 1241              	.L65:
 338:../CANopen/stack/301/CO_SYNC.c **** 
 339:../CANopen/stack/301/CO_SYNC.c **** #if (CO_CONFIG_SYNC) & CO_CONFIG_SYNC_PRODUCER
 340:../CANopen/stack/301/CO_SYNC.c ****     SYNC->CANtxBuff = CO_CANtxBufferInit(
 1242              	 .loc 4 340 0
 1243 01f0 BB69     	 ldr r3,[r7,#24]
 1244 01f2 9BB2     	 uxth r3,r3
 1245 01f4 C3F30A03 	 ubfx r3,r3,#0,#11
 1246 01f8 9AB2     	 uxth r2,r3
 1247 01fa FB7D     	 ldrb r3,[r7,#23]
 1248 01fc 002B     	 cmp r3,#0
 1249 01fe 14BF     	 ite ne
 1250 0200 0123     	 movne r3,#1
 1251 0202 0023     	 moveq r3,#0
 1252 0204 DBB2     	 uxtb r3,r3
 1253 0206 B98F     	 ldrh r1,[r7,#60]
 1254 0208 0093     	 str r3,[sp]
 1255 020a 0023     	 movs r3,#0
 1256 020c 0193     	 str r3,[sp,#4]
 1257 020e B86B     	 ldr r0,[r7,#56]
 1258 0210 0023     	 movs r3,#0
 1259 0212 FFF7FEFF 	 bl CO_CANtxBufferInit
 1260 0216 0246     	 mov r2,r0
 1261 0218 FB68     	 ldr r3,[r7,#12]
 1262 021a 9A62     	 str r2,[r3,#40]
 341:../CANopen/stack/301/CO_SYNC.c ****             CANdevTx,           /* CAN device */
 342:../CANopen/stack/301/CO_SYNC.c ****             CANdevTxIdx,        /* index of specific buffer inside CAN module */
 343:../CANopen/stack/301/CO_SYNC.c ****             cobIdSync & 0x7FF,  /* CAN identifier */
 344:../CANopen/stack/301/CO_SYNC.c ****             0,                  /* rtr */
 345:../CANopen/stack/301/CO_SYNC.c ****             syncCounterOvf != 0 ? 1 : 0, /* number of data bytes */
 346:../CANopen/stack/301/CO_SYNC.c ****             0);                 /* synchronous message flag bit */
 347:../CANopen/stack/301/CO_SYNC.c **** 
 348:../CANopen/stack/301/CO_SYNC.c ****     if (SYNC->CANtxBuff == NULL)
 1263              	 .loc 4 348 0
 1264 021c FB68     	 ldr r3,[r7,#12]
 1265 021e 9B6A     	 ldr r3,[r3,#40]
 1266 0220 002B     	 cmp r3,#0
 1267 0222 01D1     	 bne .L66
 349:../CANopen/stack/301/CO_SYNC.c ****         return CO_ERROR_ILLEGAL_ARGUMENT;
 1268              	 .loc 4 349 0
 1269 0224 FF23     	 movs r3,#255
 1270 0226 00E0     	 b .L67
 1271              	.L66:
 350:../CANopen/stack/301/CO_SYNC.c **** #endif
 351:../CANopen/stack/301/CO_SYNC.c **** 
 352:../CANopen/stack/301/CO_SYNC.c ****     return CO_ERROR_NO;
 1272              	 .loc 4 352 0
 1273 0228 0023     	 movs r3,#0
 1274              	.L67:
 1275 022a 5BB2     	 sxtb r3,r3
 353:../CANopen/stack/301/CO_SYNC.c **** }
 1276              	 .loc 4 353 0 discriminator 1
 1277 022c 1846     	 mov r0,r3
 1278 022e 2037     	 adds r7,r7,#32
 1279              	.LCFI57:
 1280              	 .cfi_def_cfa_offset 8
 1281 0230 BD46     	 mov sp,r7
 1282              	.LCFI58:
 1283              	 .cfi_def_cfa_register 13
 1284              	 
 1285 0232 80BD     	 pop {r7,pc}
 1286              	.L69:
 1287              	 .align 2
 1288              	.L68:
 1289 0234 00000000 	 .word OD_readOriginal
 1290 0238 00000000 	 .word OD_write_1005
 1291 023c 00000000 	 .word OD_write_1019
 1292 0240 00000000 	 .word CO_SYNC_receive
 1293              	 .cfi_endproc
 1294              	.LFE39:
 1296              	 .section .text.CO_SYNC_process,"ax",%progbits
 1297              	 .align 2
 1298              	 .global CO_SYNC_process
 1299              	 .thumb
 1300              	 .thumb_func
 1302              	CO_SYNC_process:
 1303              	.LFB40:
 354:../CANopen/stack/301/CO_SYNC.c **** 
 355:../CANopen/stack/301/CO_SYNC.c **** 
 356:../CANopen/stack/301/CO_SYNC.c **** #if (CO_CONFIG_SYNC) & CO_CONFIG_FLAG_CALLBACK_PRE
 357:../CANopen/stack/301/CO_SYNC.c **** /******************************************************************************/
 358:../CANopen/stack/301/CO_SYNC.c **** void CO_SYNC_initCallbackPre(
 359:../CANopen/stack/301/CO_SYNC.c ****         CO_SYNC_t              *SYNC,
 360:../CANopen/stack/301/CO_SYNC.c ****         void                   *object,
 361:../CANopen/stack/301/CO_SYNC.c ****         void                  (*pFunctSignalPre)(void *object))
 362:../CANopen/stack/301/CO_SYNC.c **** {
 363:../CANopen/stack/301/CO_SYNC.c ****     if (SYNC != NULL) {
 364:../CANopen/stack/301/CO_SYNC.c ****         SYNC->functSignalObjectPre = object;
 365:../CANopen/stack/301/CO_SYNC.c ****         SYNC->pFunctSignalPre = pFunctSignalPre;
 366:../CANopen/stack/301/CO_SYNC.c ****     }
 367:../CANopen/stack/301/CO_SYNC.c **** }
 368:../CANopen/stack/301/CO_SYNC.c **** #endif
 369:../CANopen/stack/301/CO_SYNC.c **** 
 370:../CANopen/stack/301/CO_SYNC.c **** 
 371:../CANopen/stack/301/CO_SYNC.c **** /******************************************************************************/
 372:../CANopen/stack/301/CO_SYNC.c **** CO_SYNC_status_t CO_SYNC_process(CO_SYNC_t *SYNC,
 373:../CANopen/stack/301/CO_SYNC.c ****                                  bool_t NMTisPreOrOperational,
 374:../CANopen/stack/301/CO_SYNC.c ****                                  uint32_t timeDifference_us,
 375:../CANopen/stack/301/CO_SYNC.c ****                                  uint32_t *timerNext_us)
 376:../CANopen/stack/301/CO_SYNC.c **** {
 1304              	 .loc 4 376 0
 1305              	 .cfi_startproc
 1306              	 
 1307              	 
 1308 0000 80B5     	 push {r7,lr}
 1309              	.LCFI59:
 1310              	 .cfi_def_cfa_offset 8
 1311              	 .cfi_offset 7,-8
 1312              	 .cfi_offset 14,-4
 1313 0002 8AB0     	 sub sp,sp,#40
 1314              	.LCFI60:
 1315              	 .cfi_def_cfa_offset 48
 1316 0004 02AF     	 add r7,sp,#8
 1317              	.LCFI61:
 1318              	 .cfi_def_cfa 7,40
 1319 0006 F860     	 str r0,[r7,#12]
 1320 0008 B960     	 str r1,[r7,#8]
 1321 000a 7A60     	 str r2,[r7,#4]
 1322 000c 3B60     	 str r3,[r7]
 377:../CANopen/stack/301/CO_SYNC.c ****     (void)timerNext_us; /* may be unused */
 378:../CANopen/stack/301/CO_SYNC.c **** 
 379:../CANopen/stack/301/CO_SYNC.c ****     CO_SYNC_status_t syncStatus = CO_SYNC_NONE;
 1323              	 .loc 4 379 0
 1324 000e 0023     	 movs r3,#0
 1325 0010 FB77     	 strb r3,[r7,#31]
 380:../CANopen/stack/301/CO_SYNC.c **** 
 381:../CANopen/stack/301/CO_SYNC.c ****     if (NMTisPreOrOperational) {
 1326              	 .loc 4 381 0
 1327 0012 BB68     	 ldr r3,[r7,#8]
 1328 0014 002B     	 cmp r3,#0
 1329 0016 00F08B80 	 beq .L71
 1330              	.LBB4:
 382:../CANopen/stack/301/CO_SYNC.c ****         /* update sync timer, no overflow */
 383:../CANopen/stack/301/CO_SYNC.c ****         uint32_t timerNew = SYNC->timer + timeDifference_us;
 1331              	 .loc 4 383 0
 1332 001a FB68     	 ldr r3,[r7,#12]
 1333 001c 9A69     	 ldr r2,[r3,#24]
 1334 001e 7B68     	 ldr r3,[r7,#4]
 1335 0020 1344     	 add r3,r3,r2
 1336 0022 7B61     	 str r3,[r7,#20]
 384:../CANopen/stack/301/CO_SYNC.c ****         if (timerNew > SYNC->timer) SYNC->timer = timerNew;
 1337              	 .loc 4 384 0
 1338 0024 FB68     	 ldr r3,[r7,#12]
 1339 0026 9A69     	 ldr r2,[r3,#24]
 1340 0028 7B69     	 ldr r3,[r7,#20]
 1341 002a 9A42     	 cmp r2,r3
 1342 002c 02D2     	 bcs .L72
 1343              	 .loc 4 384 0 is_stmt 0 discriminator 1
 1344 002e FB68     	 ldr r3,[r7,#12]
 1345 0030 7A69     	 ldr r2,[r7,#20]
 1346 0032 9A61     	 str r2,[r3,#24]
 1347              	.L72:
 385:../CANopen/stack/301/CO_SYNC.c **** 
 386:../CANopen/stack/301/CO_SYNC.c ****         /* was SYNC just received */
 387:../CANopen/stack/301/CO_SYNC.c ****         if (CO_FLAG_READ(SYNC->CANrxNew)) {
 1348              	 .loc 4 387 0 is_stmt 1
 1349 0034 FB68     	 ldr r3,[r7,#12]
 1350 0036 5B68     	 ldr r3,[r3,#4]
 1351 0038 002B     	 cmp r3,#0
 1352 003a 07D0     	 beq .L73
 388:../CANopen/stack/301/CO_SYNC.c ****             SYNC->timer = 0;
 1353              	 .loc 4 388 0
 1354 003c FB68     	 ldr r3,[r7,#12]
 1355 003e 0022     	 movs r2,#0
 1356 0040 9A61     	 str r2,[r3,#24]
 389:../CANopen/stack/301/CO_SYNC.c ****             syncStatus = CO_SYNC_RX_TX;
 1357              	 .loc 4 389 0
 1358 0042 0123     	 movs r3,#1
 1359 0044 FB77     	 strb r3,[r7,#31]
 390:../CANopen/stack/301/CO_SYNC.c ****             CO_FLAG_CLEAR(SYNC->CANrxNew);
 1360              	 .loc 4 390 0
 1361 0046 FB68     	 ldr r3,[r7,#12]
 1362 0048 0022     	 movs r2,#0
 1363 004a 5A60     	 str r2,[r3,#4]
 1364              	.L73:
 391:../CANopen/stack/301/CO_SYNC.c ****         }
 392:../CANopen/stack/301/CO_SYNC.c **** 
 393:../CANopen/stack/301/CO_SYNC.c ****         uint32_t OD_1006_period = SYNC->OD_1006_period != NULL
 1365              	 .loc 4 393 0
 1366 004c FB68     	 ldr r3,[r7,#12]
 1367 004e DB69     	 ldr r3,[r3,#28]
 394:../CANopen/stack/301/CO_SYNC.c ****                                 ? *SYNC->OD_1006_period : 0;
 1368              	 .loc 4 394 0
 1369 0050 002B     	 cmp r3,#0
 1370 0052 03D0     	 beq .L74
 1371              	 .loc 4 394 0 is_stmt 0 discriminator 1
 1372 0054 FB68     	 ldr r3,[r7,#12]
 1373 0056 DB69     	 ldr r3,[r3,#28]
 1374 0058 1B68     	 ldr r3,[r3]
 1375 005a 00E0     	 b .L75
 1376              	.L74:
 1377              	 .loc 4 394 0 discriminator 2
 1378 005c 0023     	 movs r3,#0
 1379              	.L75:
 393:../CANopen/stack/301/CO_SYNC.c ****                                 ? *SYNC->OD_1006_period : 0;
 1380              	 .loc 4 393 0 is_stmt 1
 1381 005e 3B61     	 str r3,[r7,#16]
 395:../CANopen/stack/301/CO_SYNC.c **** 
 396:../CANopen/stack/301/CO_SYNC.c ****         if (OD_1006_period > 0) {
 1382              	 .loc 4 396 0
 1383 0060 3B69     	 ldr r3,[r7,#16]
 1384 0062 002B     	 cmp r3,#0
 1385 0064 32D0     	 beq .L76
 397:../CANopen/stack/301/CO_SYNC.c **** #if (CO_CONFIG_SYNC) & CO_CONFIG_SYNC_PRODUCER
 398:../CANopen/stack/301/CO_SYNC.c ****             if (SYNC->isProducer) {
 1386              	 .loc 4 398 0
 1387 0066 FB68     	 ldr r3,[r7,#12]
 1388 0068 5B6A     	 ldr r3,[r3,#36]
 1389 006a 002B     	 cmp r3,#0
 1390 006c 0AD0     	 beq .L77
 399:../CANopen/stack/301/CO_SYNC.c ****                 if (SYNC->timer >= OD_1006_period) {
 1391              	 .loc 4 399 0
 1392 006e FB68     	 ldr r3,[r7,#12]
 1393 0070 9A69     	 ldr r2,[r3,#24]
 1394 0072 3B69     	 ldr r3,[r7,#16]
 1395 0074 9A42     	 cmp r2,r3
 1396 0076 29D3     	 bcc .L76
 400:../CANopen/stack/301/CO_SYNC.c ****                     syncStatus = CO_SYNC_RX_TX;
 1397              	 .loc 4 400 0
 1398 0078 0123     	 movs r3,#1
 1399 007a FB77     	 strb r3,[r7,#31]
 401:../CANopen/stack/301/CO_SYNC.c ****                     CO_SYNCsend(SYNC);
 1400              	 .loc 4 401 0
 1401 007c F868     	 ldr r0,[r7,#12]
 1402 007e FFF7FEFF 	 bl CO_SYNCsend
 1403 0082 23E0     	 b .L76
 1404              	.L77:
 402:../CANopen/stack/301/CO_SYNC.c ****                 }
 403:../CANopen/stack/301/CO_SYNC.c ****  #if (CO_CONFIG_SYNC) & CO_CONFIG_FLAG_TIMERNEXT
 404:../CANopen/stack/301/CO_SYNC.c ****                 /* Calculate when next SYNC needs to be sent */
 405:../CANopen/stack/301/CO_SYNC.c ****                 if (timerNext_us != NULL) {
 406:../CANopen/stack/301/CO_SYNC.c ****                     uint32_t diff = OD_1006_period - SYNC->timer;
 407:../CANopen/stack/301/CO_SYNC.c ****                     if (*timerNext_us > diff) {
 408:../CANopen/stack/301/CO_SYNC.c ****                         *timerNext_us = diff;
 409:../CANopen/stack/301/CO_SYNC.c ****                     }
 410:../CANopen/stack/301/CO_SYNC.c ****                 }
 411:../CANopen/stack/301/CO_SYNC.c ****  #endif
 412:../CANopen/stack/301/CO_SYNC.c ****             }
 413:../CANopen/stack/301/CO_SYNC.c ****             else
 414:../CANopen/stack/301/CO_SYNC.c **** #endif /* (CO_CONFIG_SYNC) & CO_CONFIG_SYNC_PRODUCER */
 415:../CANopen/stack/301/CO_SYNC.c **** 
 416:../CANopen/stack/301/CO_SYNC.c ****             /* Verify timeout of SYNC */
 417:../CANopen/stack/301/CO_SYNC.c ****             if (SYNC->timeoutError == 1) {
 1405              	 .loc 4 417 0
 1406 0084 FB68     	 ldr r3,[r7,#12]
 1407 0086 1B7C     	 ldrb r3,[r3,#16]
 1408 0088 012B     	 cmp r3,#1
 1409 008a 1FD1     	 bne .L76
 1410              	.LBB5:
 418:../CANopen/stack/301/CO_SYNC.c ****                 /* periodTimeout is 1,5 * OD_1006_period, no overflow */
 419:../CANopen/stack/301/CO_SYNC.c ****                 uint32_t periodTimeout = OD_1006_period + (OD_1006_period >> 1);
 1411              	 .loc 4 419 0
 1412 008c 3B69     	 ldr r3,[r7,#16]
 1413 008e 5A08     	 lsrs r2,r3,#1
 1414 0090 3B69     	 ldr r3,[r7,#16]
 1415 0092 1344     	 add r3,r3,r2
 1416 0094 BB61     	 str r3,[r7,#24]
 420:../CANopen/stack/301/CO_SYNC.c ****                 if (periodTimeout < OD_1006_period) periodTimeout = 0xFFFFFFFF;
 1417              	 .loc 4 420 0
 1418 0096 BA69     	 ldr r2,[r7,#24]
 1419 0098 3B69     	 ldr r3,[r7,#16]
 1420 009a 9A42     	 cmp r2,r3
 1421 009c 02D2     	 bcs .L79
 1422              	 .loc 4 420 0 is_stmt 0 discriminator 1
 1423 009e 4FF0FF33 	 mov r3,#-1
 1424 00a2 BB61     	 str r3,[r7,#24]
 1425              	.L79:
 421:../CANopen/stack/301/CO_SYNC.c **** 
 422:../CANopen/stack/301/CO_SYNC.c ****                 if (SYNC->timer > periodTimeout) {
 1426              	 .loc 4 422 0 is_stmt 1
 1427 00a4 FB68     	 ldr r3,[r7,#12]
 1428 00a6 9A69     	 ldr r2,[r3,#24]
 1429 00a8 BB69     	 ldr r3,[r7,#24]
 1430 00aa 9A42     	 cmp r2,r3
 1431 00ac 0ED9     	 bls .L76
 423:../CANopen/stack/301/CO_SYNC.c ****                     CO_errorReport(SYNC->em, CO_EM_SYNC_TIME_OUT,
 1432              	 .loc 4 423 0
 1433 00ae FB68     	 ldr r3,[r7,#12]
 1434 00b0 1A68     	 ldr r2,[r3]
 1435 00b2 FB68     	 ldr r3,[r7,#12]
 1436 00b4 9B69     	 ldr r3,[r3,#24]
 1437 00b6 0093     	 str r3,[sp]
 1438 00b8 1046     	 mov r0,r2
 1439 00ba 0121     	 movs r1,#1
 1440 00bc 1822     	 movs r2,#24
 1441 00be 4FF40143 	 mov r3,#33024
 1442 00c2 FFF7FEFF 	 bl CO_error
 424:../CANopen/stack/301/CO_SYNC.c ****                                    CO_EMC_COMMUNICATION, SYNC->timer);
 425:../CANopen/stack/301/CO_SYNC.c ****                     SYNC->timeoutError = 2;
 1443              	 .loc 4 425 0
 1444 00c6 FB68     	 ldr r3,[r7,#12]
 1445 00c8 0222     	 movs r2,#2
 1446 00ca 1A74     	 strb r2,[r3,#16]
 1447              	.L76:
 1448              	.LBE5:
 426:../CANopen/stack/301/CO_SYNC.c ****                 }
 427:../CANopen/stack/301/CO_SYNC.c **** #if (CO_CONFIG_SYNC) & CO_CONFIG_FLAG_TIMERNEXT
 428:../CANopen/stack/301/CO_SYNC.c ****                 else if (timerNext_us != NULL) {
 429:../CANopen/stack/301/CO_SYNC.c ****                     uint32_t diff = periodTimeout - SYNC->timer;
 430:../CANopen/stack/301/CO_SYNC.c ****                     if (*timerNext_us > diff) {
 431:../CANopen/stack/301/CO_SYNC.c ****                         *timerNext_us = diff;
 432:../CANopen/stack/301/CO_SYNC.c ****                     }
 433:../CANopen/stack/301/CO_SYNC.c ****                 }
 434:../CANopen/stack/301/CO_SYNC.c **** #endif
 435:../CANopen/stack/301/CO_SYNC.c ****             }
 436:../CANopen/stack/301/CO_SYNC.c ****         } /* if (OD_1006_period > 0) */
 437:../CANopen/stack/301/CO_SYNC.c **** 
 438:../CANopen/stack/301/CO_SYNC.c ****         /* Synchronous PDOs are allowed only inside time window */
 439:../CANopen/stack/301/CO_SYNC.c ****         if (SYNC->OD_1007_window != NULL && *SYNC->OD_1007_window > 0
 1449              	 .loc 4 439 0
 1450 00cc FB68     	 ldr r3,[r7,#12]
 1451 00ce 1B6A     	 ldr r3,[r3,#32]
 1452 00d0 002B     	 cmp r3,#0
 1453 00d2 15D0     	 beq .L80
 1454              	 .loc 4 439 0 is_stmt 0 discriminator 1
 1455 00d4 FB68     	 ldr r3,[r7,#12]
 1456 00d6 1B6A     	 ldr r3,[r3,#32]
 1457 00d8 1B68     	 ldr r3,[r3]
 1458 00da 002B     	 cmp r3,#0
 1459 00dc 10D0     	 beq .L80
 440:../CANopen/stack/301/CO_SYNC.c ****             && SYNC->timer > *SYNC->OD_1007_window
 1460              	 .loc 4 440 0 is_stmt 1
 1461 00de FB68     	 ldr r3,[r7,#12]
 1462 00e0 9A69     	 ldr r2,[r3,#24]
 1463 00e2 FB68     	 ldr r3,[r7,#12]
 1464 00e4 1B6A     	 ldr r3,[r3,#32]
 1465 00e6 1B68     	 ldr r3,[r3]
 1466 00e8 9A42     	 cmp r2,r3
 1467 00ea 09D9     	 bls .L80
 441:../CANopen/stack/301/CO_SYNC.c ****         ) {
 442:../CANopen/stack/301/CO_SYNC.c ****             if (!SYNC->syncIsOutsideWindow) {
 1468              	 .loc 4 442 0
 1469 00ec FB68     	 ldr r3,[r7,#12]
 1470 00ee 5B69     	 ldr r3,[r3,#20]
 1471 00f0 002B     	 cmp r3,#0
 1472 00f2 01D1     	 bne .L81
 443:../CANopen/stack/301/CO_SYNC.c ****                 syncStatus = CO_SYNC_PASSED_WINDOW;
 1473              	 .loc 4 443 0
 1474 00f4 0223     	 movs r3,#2
 1475 00f6 FB77     	 strb r3,[r7,#31]
 1476              	.L81:
 444:../CANopen/stack/301/CO_SYNC.c ****             }
 445:../CANopen/stack/301/CO_SYNC.c ****             SYNC->syncIsOutsideWindow = true;
 1477              	 .loc 4 445 0
 1478 00f8 FB68     	 ldr r3,[r7,#12]
 1479 00fa 0122     	 movs r2,#1
 1480 00fc 5A61     	 str r2,[r3,#20]
 1481 00fe 02E0     	 b .L82
 1482              	.L80:
 446:../CANopen/stack/301/CO_SYNC.c ****         }
 447:../CANopen/stack/301/CO_SYNC.c ****         else {
 448:../CANopen/stack/301/CO_SYNC.c ****             SYNC->syncIsOutsideWindow = false;
 1483              	 .loc 4 448 0
 1484 0100 FB68     	 ldr r3,[r7,#12]
 1485 0102 0022     	 movs r2,#0
 1486 0104 5A61     	 str r2,[r3,#20]
 1487              	.L82:
 449:../CANopen/stack/301/CO_SYNC.c ****         }
 450:../CANopen/stack/301/CO_SYNC.c **** 
 451:../CANopen/stack/301/CO_SYNC.c ****         /* verify error from receive function */
 452:../CANopen/stack/301/CO_SYNC.c ****         if (SYNC->receiveError != 0) {
 1488              	 .loc 4 452 0
 1489 0106 FB68     	 ldr r3,[r7,#12]
 1490 0108 1B7A     	 ldrb r3,[r3,#8]
 1491 010a 002B     	 cmp r3,#0
 1492 010c 0FD0     	 beq .L83
 453:../CANopen/stack/301/CO_SYNC.c ****             CO_errorReport(SYNC->em, CO_EM_SYNC_LENGTH,
 1493              	 .loc 4 453 0
 1494 010e FB68     	 ldr r3,[r7,#12]
 1495 0110 1A68     	 ldr r2,[r3]
 1496 0112 FB68     	 ldr r3,[r7,#12]
 1497 0114 1B7A     	 ldrb r3,[r3,#8]
 1498 0116 0093     	 str r3,[sp]
 1499 0118 1046     	 mov r0,r2
 1500 011a 0121     	 movs r1,#1
 1501 011c 1922     	 movs r2,#25
 1502 011e 48F24023 	 movw r3,#33344
 1503 0122 FFF7FEFF 	 bl CO_error
 454:../CANopen/stack/301/CO_SYNC.c ****                            CO_EMC_SYNC_DATA_LENGTH, SYNC->receiveError);
 455:../CANopen/stack/301/CO_SYNC.c ****             SYNC->receiveError = 0;
 1504              	 .loc 4 455 0
 1505 0126 FB68     	 ldr r3,[r7,#12]
 1506 0128 0022     	 movs r2,#0
 1507 012a 1A72     	 strb r2,[r3,#8]
 1508              	.LBE4:
 1509 012c 0CE0     	 b .L84
 1510              	.L83:
 1511 012e 0BE0     	 b .L84
 1512              	.L71:
 456:../CANopen/stack/301/CO_SYNC.c ****         }
 457:../CANopen/stack/301/CO_SYNC.c ****     } /* if (NMTisPreOrOperational) */
 458:../CANopen/stack/301/CO_SYNC.c ****     else {
 459:../CANopen/stack/301/CO_SYNC.c ****         CO_FLAG_CLEAR(SYNC->CANrxNew);
 1513              	 .loc 4 459 0
 1514 0130 FB68     	 ldr r3,[r7,#12]
 1515 0132 0022     	 movs r2,#0
 1516 0134 5A60     	 str r2,[r3,#4]
 460:../CANopen/stack/301/CO_SYNC.c ****         SYNC->receiveError = 0;
 1517              	 .loc 4 460 0
 1518 0136 FB68     	 ldr r3,[r7,#12]
 1519 0138 0022     	 movs r2,#0
 1520 013a 1A72     	 strb r2,[r3,#8]
 461:../CANopen/stack/301/CO_SYNC.c ****         SYNC->counter = 0;
 1521              	 .loc 4 461 0
 1522 013c FB68     	 ldr r3,[r7,#12]
 1523 013e 0022     	 movs r2,#0
 1524 0140 9A74     	 strb r2,[r3,#18]
 462:../CANopen/stack/301/CO_SYNC.c ****         SYNC->timer = 0;
 1525              	 .loc 4 462 0
 1526 0142 FB68     	 ldr r3,[r7,#12]
 1527 0144 0022     	 movs r2,#0
 1528 0146 9A61     	 str r2,[r3,#24]
 1529              	.L84:
 463:../CANopen/stack/301/CO_SYNC.c ****     }
 464:../CANopen/stack/301/CO_SYNC.c **** 
 465:../CANopen/stack/301/CO_SYNC.c ****     if (syncStatus == CO_SYNC_RX_TX) {
 1530              	 .loc 4 465 0
 1531 0148 FB7F     	 ldrb r3,[r7,#31]
 1532 014a 012B     	 cmp r3,#1
 1533 014c 10D1     	 bne .L85
 466:../CANopen/stack/301/CO_SYNC.c ****         if (SYNC->timeoutError == 2) {
 1534              	 .loc 4 466 0
 1535 014e FB68     	 ldr r3,[r7,#12]
 1536 0150 1B7C     	 ldrb r3,[r3,#16]
 1537 0152 022B     	 cmp r3,#2
 1538 0154 09D1     	 bne .L86
 467:../CANopen/stack/301/CO_SYNC.c ****             CO_errorReset(SYNC->em, CO_EM_SYNC_TIME_OUT, 0);
 1539              	 .loc 4 467 0
 1540 0156 FB68     	 ldr r3,[r7,#12]
 1541 0158 1A68     	 ldr r2,[r3]
 1542 015a 0023     	 movs r3,#0
 1543 015c 0093     	 str r3,[sp]
 1544 015e 1046     	 mov r0,r2
 1545 0160 0021     	 movs r1,#0
 1546 0162 1822     	 movs r2,#24
 1547 0164 0023     	 movs r3,#0
 1548 0166 FFF7FEFF 	 bl CO_error
 1549              	.L86:
 468:../CANopen/stack/301/CO_SYNC.c ****         }
 469:../CANopen/stack/301/CO_SYNC.c ****         SYNC->timeoutError = 1;
 1550              	 .loc 4 469 0
 1551 016a FB68     	 ldr r3,[r7,#12]
 1552 016c 0122     	 movs r2,#1
 1553 016e 1A74     	 strb r2,[r3,#16]
 1554              	.L85:
 470:../CANopen/stack/301/CO_SYNC.c ****     }
 471:../CANopen/stack/301/CO_SYNC.c **** 
 472:../CANopen/stack/301/CO_SYNC.c ****     return syncStatus;
 1555              	 .loc 4 472 0
 1556 0170 FB7F     	 ldrb r3,[r7,#31]
 473:../CANopen/stack/301/CO_SYNC.c **** }
 1557              	 .loc 4 473 0
 1558 0172 1846     	 mov r0,r3
 1559 0174 2037     	 adds r7,r7,#32
 1560              	.LCFI62:
 1561              	 .cfi_def_cfa_offset 8
 1562 0176 BD46     	 mov sp,r7
 1563              	.LCFI63:
 1564              	 .cfi_def_cfa_register 13
 1565              	 
 1566 0178 80BD     	 pop {r7,pc}
 1567              	 .cfi_endproc
 1568              	.LFE40:
 1570 017a 00BF     	 .text
 1571              	.Letext0:
 1572              	 .file 5 "d:\\programs\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1573              	 .file 6 "d:\\programs\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1574              	 .file 7 "D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/driver/CO_driver_target.h"
 1575              	 .file 8 "D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301/CO_Emergency.h"
DEFINED SYMBOLS
                            *ABS*:00000000 CO_SYNC.c
    {standard input}:20     .text.CO_getUint8:00000000 $t
    {standard input}:24     .text.CO_getUint8:00000000 CO_getUint8
    {standard input}:66     .text.CO_getUint32:00000000 $t
    {standard input}:70     .text.CO_getUint32:00000000 CO_getUint32
    {standard input}:109    .text.OD_getIndex:00000000 $t
    {standard input}:113    .text.OD_getIndex:00000000 OD_getIndex
    {standard input}:162    .text.OD_extension_init:00000000 $t
    {standard input}:166    .text.OD_extension_init:00000000 OD_extension_init
    {standard input}:219    .text.OD_get_u8:00000000 $t
    {standard input}:223    .text.OD_get_u8:00000000 OD_get_u8
    {standard input}:269    .text.OD_get_u32:00000000 $t
    {standard input}:273    .text.OD_get_u32:00000000 OD_get_u32
    {standard input}:319    .text.CO_SYNCsend:00000000 $t
    {standard input}:323    .text.CO_SYNCsend:00000000 CO_SYNCsend
    {standard input}:404    .text.CO_SYNC_receive:00000000 $t
    {standard input}:408    .text.CO_SYNC_receive:00000000 CO_SYNC_receive
    {standard input}:524    .text.OD_write_1005:00000000 $t
    {standard input}:528    .text.OD_write_1005:00000000 OD_write_1005
    {standard input}:779    .text.OD_write_1005:00000184 $d
    {standard input}:785    .text.OD_write_1019:00000000 $t
    {standard input}:789    .text.OD_write_1019:00000000 OD_write_1019
    {standard input}:929    .text.CO_SYNC_init:00000000 $t
    {standard input}:934    .text.CO_SYNC_init:00000000 CO_SYNC_init
    {standard input}:1289   .text.CO_SYNC_init:00000234 $d
    {standard input}:1297   .text.CO_SYNC_process:00000000 $t
    {standard input}:1302   .text.CO_SYNC_process:00000000 CO_SYNC_process
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
memmove
OD_get_value
CO_CANsend
CO_CANrxBufferInit
CO_CANtxBufferInit
OD_writeOriginal
memset
OD_getPtr
OD_readOriginal
CO_error
