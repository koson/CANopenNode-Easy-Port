   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "CO_PDO.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.CO_getUint8,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	CO_getUint8:
  25              	.LFB0:
  26              	 .file 1 "D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301/CO_driver.h"
   1:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
   2:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Interface between CAN hardware and CANopenNode.
   3:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
   4:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @file        CO_driver.h
   5:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @ingroup     CO_driver
   6:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @author      Janez Paternoster
   7:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @copyright   2004 - 2020 Janez Paternoster
   8:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
   9:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * This file is part of CANopenNode, an opensource CANopen Stack.
  10:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Project home page is <https://github.com/CANopenNode/CANopenNode>.
  11:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * For more information on CANopen see <http://www.can-cia.org/>.
  12:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
  13:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Licensed under the Apache License, Version 2.0 (the "License");
  14:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * you may not use this file except in compliance with the License.
  15:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * You may obtain a copy of the License at
  16:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
  17:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *     http://www.apache.org/licenses/LICENSE-2.0
  18:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
  19:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Unless required by applicable law or agreed to in writing, software
  20:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * distributed under the License is distributed on an "AS IS" BASIS,
  21:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  22:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * See the License for the specific language governing permissions and
  23:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * limitations under the License.
  24:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
  25:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
  26:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #ifndef CO_DRIVER_H
  27:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #define CO_DRIVER_H
  28:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
  29:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #include <string.h>
  30:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
  31:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #include "CO_config.h"
  32:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #include "CO_driver_target.h"
  33:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
  34:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #ifdef __cplusplus
  35:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** extern "C" {
  36:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #endif
  37:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
  38:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /* Stack configuration default global values.
  39:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * For more information see file CO_config.h. */
  40:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #ifndef CO_CONFIG_GLOBAL_FLAG_CALLBACK_PRE
  41:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  #define CO_CONFIG_GLOBAL_FLAG_CALLBACK_PRE (0)
  42:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #endif
  43:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #ifndef CO_CONFIG_GLOBAL_RT_FLAG_CALLBACK_PRE
  44:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  #define CO_CONFIG_GLOBAL_RT_FLAG_CALLBACK_PRE (0)
  45:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #endif
  46:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #ifndef CO_CONFIG_GLOBAL_FLAG_TIMERNEXT
  47:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  #define CO_CONFIG_GLOBAL_FLAG_TIMERNEXT (0)
  48:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #endif
  49:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #ifndef CO_CONFIG_GLOBAL_FLAG_OD_DYNAMIC
  50:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  #define CO_CONFIG_GLOBAL_FLAG_OD_DYNAMIC CO_CONFIG_FLAG_OD_DYNAMIC
  51:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #endif
  52:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #ifdef CO_DEBUG_COMMON
  53:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  #if (CO_CONFIG_DEBUG) & CO_CONFIG_DEBUG_SDO_CLIENT
  54:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****   #define CO_DEBUG_SDO_CLIENT(msg) CO_DEBUG_COMMON(msg)
  55:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  #endif
  56:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  #if (CO_CONFIG_DEBUG) & CO_CONFIG_DEBUG_SDO_SERVER
  57:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****   #define CO_DEBUG_SDO_SERVER(msg) CO_DEBUG_COMMON(msg)
  58:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  #endif
  59:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #endif
  60:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
  61:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
  62:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @defgroup CO_driver Driver
  63:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Interface between CAN hardware and CANopenNode.
  64:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
  65:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @ingroup CO_CANopen_301
  66:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @{
  67:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * CANopenNode is designed for speed and portability. It runs efficiently on
  68:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * devices from simple 16-bit microcontrollers to PC computers. It can run in
  69:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * multiple threads. Reception of CAN messages is pre-processed with very fast
  70:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * functions. Time critical objects, such as PDO or SYNC are processed in
  71:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * real-time thread and other objects are processed in normal thread. See
  72:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Flowchart in [README.md](index.html) for more information.
  73:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
  74:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @anchor CO_obj
  75:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * #### CANopenNode Object
  76:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * CANopenNode is implemented as a collection of different objects, for example
  77:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * SDO, SYNC, Emergency, PDO, NMT, Heartbeat, etc. Code is written in C language
  78:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * and tries to be object oriented. So each CANopenNode Object is implemented in
  79:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * a pair of .h/.c files. It basically contains a structure with all necessary
  80:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * variables and some functions which operates on it. CANopenNode Object is
  81:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * usually connected with one or more CAN receive or transmit Message Objects.
  82:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * (CAN message Object is a CAN message with specific 11-bit CAN identifier
  83:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * (usually one fixed or a range).)
  84:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
  85:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * #### Hardware interface of CANopenNode
  86:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * It consists of minimum three files:
  87:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * - **CO_driver.h** file declares common functions. This file is part of the
  88:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * CANopenNode. It is included from each .c file from CANopenNode.
  89:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * - **CO_driver_target.h** file declares microcontroller specific type
  90:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * declarations and defines some macros, which are necessary for CANopenNode.
  91:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * This file is included from CO_driver.h.
  92:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * - **CO_driver.c** file defines functions declared in CO_driver.h.
  93:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
  94:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * **CO_driver_target.h** and **CO_driver.c** files are specific for each
  95:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * different microcontroller and are not part of CANopenNode. There are separate
  96:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * projects for different microcontrollers, which usually include CANopenNode as
  97:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * a git submodule. CANopenNode only includes those two files in the `example`
  98:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * directory and they are basically empty. It should be possible to compile the
  99:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * `CANopenNode/example` on any system, however compiled program is not usable.
 100:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * CO_driver.h contains documentation for all necessary macros, types and
 101:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * functions.
 102:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 103:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * See [CANopenNode/Wiki](https://github.com/CANopenNode/CANopenNode/wiki) for a
 104:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * known list of available implementations of CANopenNode on different systems
 105:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * and microcontrollers. Everybody is welcome to extend the list with a link to
 106:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * his own implementation.
 107:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 108:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Implementation of the hardware interface for specific microcontroller is not
 109:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * always an easy task. For reliable and efficient operation it is necessary to
 110:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * know some parts of the target microcontroller in detail (for example threads
 111:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * (or interrupts), CAN module, etc.).
 112:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
 113:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 114:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** Major version number of CANopenNode */
 115:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #define CO_VERSION_MAJOR 4
 116:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** Minor version number of CANopenNode */
 117:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #define CO_VERSION_MINOR 0
 118:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 119:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 120:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /* Macros and declarations in following part are only used for documentation. */
 121:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #ifdef CO_DOXYGEN
 122:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
 123:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @defgroup CO_dataTypes Basic definitions
 124:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @{
 125:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 126:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Target specific basic definitions and data types.
 127:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 128:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Must be defined in the **CO_driver_target.h** file.
 129:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 130:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Depending on processor or compiler architecture, one of the two macros must
 131:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * be defined: CO_LITTLE_ENDIAN or CO_BIG_ENDIAN. CANopen itself is little
 132:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * endian.
 133:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 134:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Basic data types may be specified differently on different architectures.
 135:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Usually `true` and `false` are defined in `<stdbool.h>`, `NULL` is defined in
 136:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * `<stddef.h>`, `int8_t` to `uint64_t` are defined in `<stdint.h>`.
 137:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
 138:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** CO_LITTLE_ENDIAN or CO_BIG_ENDIAN must be defined */
 139:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #define CO_LITTLE_ENDIAN
 140:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** Macro must swap bytes, if CO_BIG_ENDIAN is defined */
 141:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #define CO_SWAP_16(x) x
 142:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** Macro must swap bytes, if CO_BIG_ENDIAN is defined */
 143:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #define CO_SWAP_32(x) x
 144:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** Macro must swap bytes, if CO_BIG_ENDIAN is defined */
 145:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #define CO_SWAP_64(x) x
 146:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** NULL, for general usage */
 147:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #define NULL (0)
 148:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** Logical true, for general use */
 149:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #define true 1
 150:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** Logical false, for general use */
 151:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #define false 0
 152:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** Boolean data type for general use */
 153:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** typedef uint_fast8_t bool_t;
 154:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** INTEGER8 in CANopen (0002h), 8-bit signed integer */
 155:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** typedef signed char int8_t;
 156:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** INTEGER16 in CANopen (0003h), 16-bit signed integer */
 157:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** typedef signed int int16_t;
 158:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** INTEGER32 in CANopen (0004h), 32-bit signed integer */
 159:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** typedef signed long int int32_t;
 160:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** INTEGER64 in CANopen (0015h), 64-bit signed integer */
 161:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** typedef signed long long int int64_t;
 162:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** UNSIGNED8 in CANopen (0005h), 8-bit unsigned integer */
 163:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** typedef unsigned char uint8_t;
 164:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** UNSIGNED16 in CANopen (0006h), 16-bit unsigned integer */
 165:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** typedef unsigned int uint16_t;
 166:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** UNSIGNED32 in CANopen (0007h), 32-bit unsigned integer */
 167:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** typedef unsigned long int uint32_t;
 168:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** UNSIGNED64 in CANopen (001Bh), 64-bit unsigned integer */
 169:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** typedef unsigned long long int uint64_t;
 170:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** REAL32 in CANopen (0008h), single precision floating point value, 32-bit */
 171:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** typedef float float32_t;
 172:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** REAL64 in CANopen (0011h), double precision floating point value, 64-bit */
 173:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** typedef double float64_t;
 174:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** @} */
 175:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 176:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 177:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
 178:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @defgroup CO_CAN_Message_reception Reception of CAN messages
 179:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @{
 180:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 181:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Target specific definitions and description of CAN message reception
 182:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 183:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * CAN messages in CANopenNode are usually received by its own thread or higher
 184:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * priority interrupt. Received CAN messages are first filtered by hardware or
 185:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * by software. Thread then examines its 11-bit CAN-id and mask and determines,
 186:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * to which \ref CO_obj "CANopenNode Object" it belongs to. After that it calls
 187:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * predefined CANrx_callback() function, which quickly pre-processes the message
 188:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * and fetches the relevant data. CANrx_callback() function is defined by each
 189:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * \ref CO_obj "CANopenNode Object" separately. Pre-processed fetched data are
 190:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * later processed in another thread.
 191:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 192:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * If \ref CO_obj "CANopenNode Object" reception of specific CAN message, it
 193:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * must first configure its own CO_CANrx_t object with the CO_CANrxBufferInit()
 194:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * function.
 195:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
 196:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 197:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
 198:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * CAN receive callback function which pre-processes received CAN message
 199:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 200:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * It is called by fast CAN receive thread. Each \ref CO_obj "CANopenNode
 201:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Object" defines its own and registers it with CO_CANrxBufferInit(), by
 202:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * passing function pointer.
 203:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 204:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param object pointer to specific \ref CO_obj "CANopenNode Object",
 205:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * registered with CO_CANrxBufferInit()
 206:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param rxMsg pointer to received CAN message
 207:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
 208:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** void CANrx_callback(void *object, void *rxMsg);
 209:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 210:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
 211:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * CANrx_callback() can read CAN identifier from received CAN message
 212:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 213:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Must be defined in the **CO_driver_target.h** file.
 214:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 215:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * This is target specific function and is specific for specific
 216:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * microcontroller. It is best to implement it by using inline function or
 217:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * macro. `rxMsg` parameter should cast to a pointer to structure. For best
 218:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * efficiency structure may have the same alignment as CAN registers inside CAN
 219:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * module.
 220:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 221:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param rxMsg Pointer to received message
 222:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @return 11-bit CAN standard identifier.
 223:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
 224:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** static inline uint16_t CO_CANrxMsg_readIdent(void *rxMsg) {
 225:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     return 0;
 226:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** }
 227:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 228:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
 229:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * CANrx_callback() can read Data Length Code from received CAN message
 230:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 231:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * See also CO_CANrxMsg_readIdent():
 232:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 233:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param rxMsg Pointer to received message
 234:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @return data length in bytes (0 to 8)
 235:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
 236:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** static inline uint8_t CO_CANrxMsg_readDLC(void *rxMsg) {
 237:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     return 0;
 238:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** }
 239:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 240:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
 241:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * CANrx_callback() can read pointer to data from received CAN message
 242:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 243:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * See also CO_CANrxMsg_readIdent():
 244:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 245:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param rxMsg Pointer to received message
 246:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @return pointer to data buffer
 247:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
 248:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** static inline uint8_t *CO_CANrxMsg_readData(void *rxMsg) {
 249:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     return NULL;
 250:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** }
 251:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 252:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
 253:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Configuration object for CAN received message for specific \ref CO_obj
 254:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * "CANopenNode Object".
 255:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 256:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Must be defined in the **CO_driver_target.h** file.
 257:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 258:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Data fields of this structure are used exclusively by the driver. Usually it
 259:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * has the following data fields, but they may differ for different
 260:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * microcontrollers. Array of multiple CO_CANrx_t objects is included inside
 261:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * CO_CANmodule_t.
 262:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
 263:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** typedef struct {
 264:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     uint16_t ident; /**< Standard CAN Identifier (bits 0..10) + RTR (bit 11) */
 265:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     uint16_t mask;  /**< Standard CAN Identifier mask with the same alignment as
 266:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                        ident */
 267:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     void *object;   /**< \ref CO_obj "CANopenNode Object" initialized in from
 268:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                        CO_CANrxBufferInit() */
 269:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     void (*pCANrx_callback)(
 270:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****         void *object, void *message); /**< Pointer to CANrx_callback()
 271:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                          initialized in CO_CANrxBufferInit() */
 272:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** } CO_CANrx_t;
 273:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** @} */
 274:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 275:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 276:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
 277:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @defgroup CO_CAN_Message_transmission Transmission of CAN messages
 278:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @{
 279:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 280:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Target specific definitions and description of CAN message transmission
 281:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 282:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * If \ref CO_obj "CANopenNode Object" needs transmitting CAN message, it must
 283:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * first configure its own CO_CANtx_t object with the CO_CANtxBufferInit()
 284:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * function. CAN message can then be sent with CO_CANsend() function. If at that
 285:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * moment CAN transmit buffer inside microcontroller's CAN module is free,
 286:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * message is copied directly to the CAN module. Otherwise CO_CANsend() function
 287:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * sets _bufferFull_ flag to true. Message will be then sent by CAN TX interrupt
 288:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * as soon as CAN module is freed. Until message is not copied to CAN module,
 289:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * its contents must not change. If there are multiple CO_CANtx_t objects with
 290:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * _bufferFull_ flag set to true, then CO_CANtx_t with lower index will be sent
 291:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * first.
 292:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
 293:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 294:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
 295:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Configuration object for CAN transmit message for specific \ref CO_obj
 296:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * "CANopenNode Object".
 297:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 298:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Must be defined in the **CO_driver_target.h** file.
 299:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 300:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Data fields of this structure are used exclusively by the driver. Usually it
 301:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * has the following data fields, but they may differ for different
 302:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * microcontrollers. Array of multiple CO_CANtx_t objects is included inside
 303:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * CO_CANmodule_t.
 304:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
 305:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** typedef struct {
 306:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     uint32_t ident;             /**< CAN identifier as aligned in CAN module */
 307:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     uint8_t DLC;                /**< Length of CAN message */
 308:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     uint8_t data[8];            /**< 8 data bytes */
 309:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     volatile bool_t bufferFull; /**< True if previous message is still in the
 310:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                      buffer */
 311:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     volatile bool_t syncFlag;   /**< Synchronous PDO messages has this flag set.
 312:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                   It prevents them to be sent outside the synchronous window */
 313:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** } CO_CANtx_t;
 314:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** @} */
 315:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 316:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 317:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
 318:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Complete CAN module object.
 319:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 320:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Must be defined in the **CO_driver_target.h** file.
 321:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 322:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Usually it has the following data fields, but they may differ for different
 323:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * microcontrollers.
 324:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
 325:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** typedef struct {
 326:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     void *CANptr;                      /**< From CO_CANmodule_init() */
 327:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CANrx_t *rxArray;               /**< From CO_CANmodule_init() */
 328:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     uint16_t rxSize;                   /**< From CO_CANmodule_init() */
 329:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CANtx_t *txArray;               /**< From CO_CANmodule_init() */
 330:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     uint16_t txSize;                   /**< From CO_CANmodule_init() */
 331:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     uint16_t CANerrorStatus;           /**< CAN error status bitfield,
 332:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                             see @ref CO_CAN_ERR_status_t */
 333:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     volatile bool_t CANnormal;         /**< CAN module is in normal mode */
 334:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     volatile bool_t useCANrxFilters;   /**< Value different than zero indicates,
 335:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****             that CAN module hardware filters are used for CAN reception. If
 336:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****             there is not enough hardware filters, they won't be used. In this
 337:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****             case will be *all* received CAN messages processed by software. */
 338:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     volatile bool_t bufferInhibitFlag; /**< If flag is true, then message in
 339:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****             transmit buffer is synchronous PDO message, which will be aborted,
 340:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****             if CO_clearPendingSyncPDOs() function will be called by application.
 341:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****             This may be necessary if Synchronous window time was expired. */
 342:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     volatile bool_t firstCANtxMessage; /**< Equal to 1, when the first
 343:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****             transmitted message (bootup message) is in CAN TX buffers */
 344:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     volatile uint16_t CANtxCount;      /**< Number of messages in transmit
 345:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****             buffer, which are waiting to be copied to the CAN module */
 346:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     uint32_t errOld;                   /**< Previous state of CAN errors */
 347:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** } CO_CANmodule_t;
 348:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 349:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 350:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
 351:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Data storage object for one entry.
 352:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 353:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Must be defined in the **CO_driver_target.h** file.
 354:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 355:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * For more information on Data storage see @ref CO_storage or **CO_storage.h**
 356:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * file. Structure members documented here are always required or required with
 357:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @ref CO_storage_eeprom. Target system may add own additional, hardware
 358:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * specific variables.
 359:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
 360:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** typedef struct {
 361:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     /** Address of data to store, always required. */
 362:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     void *addr;
 363:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     /** Length of data to store, always required. */
 364:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     size_t len;
 365:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     /** Sub index in OD objects 1010 and 1011, from 2 to 127. Writing
 366:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****      * 0x65766173 to 1010,subIndexOD will store data to non-volatile memory.
 367:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****      * Writing 0x64616F6C to 1011,subIndexOD will restore default data, always
 368:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****      * required. */
 369:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     uint8_t subIndexOD;
 370:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     /** Attribute from @ref CO_storage_attributes_t, always required. */
 371:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     uint8_t attr;
 372:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     /** Pointer to storage module, target system specific usage, required with
 373:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****      * @ref CO_storage_eeprom. */
 374:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     void *storageModule;
 375:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     /** CRC checksum of the data stored in eeprom, set on store, required with
 376:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****      * @ref CO_storage_eeprom. */
 377:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     uint16_t crc;
 378:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     /** Address of entry signature inside eeprom, set by init, required with
 379:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****      * @ref CO_storage_eeprom. */
 380:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     size_t eepromAddrSignature;
 381:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     /** Address of data inside eeprom, set by init, required with
 382:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****      * @ref CO_storage_eeprom. */
 383:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     size_t eepromAddr;
 384:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     /** Offset of next byte being updated by automatic storage, required with
 385:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****      * @ref CO_storage_eeprom. */
 386:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     size_t offset;
 387:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     /** Additional target specific parameters, optional. */
 388:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     void *additionalParameters;
 389:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** } CO_storage_entry_t;
 390:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 391:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 392:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
 393:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @defgroup CO_critical_sections Critical sections
 394:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @{
 395:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 396:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Protection of critical sections in multi-threaded operation.
 397:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 398:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * CANopenNode is designed to run in different threads, as described in
 399:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * [README.md](index.html). Threads are implemented differently in different
 400:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * systems. In microcontrollers threads are interrupts with different
 401:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * priorities, for example. It is necessary to protect sections, where different
 402:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * threads access to the same resource. In simple systems interrupts or
 403:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * scheduler may be temporary disabled between access to the shared resource.
 404:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Otherwise mutexes or semaphores can be used.
 405:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 406:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * #### Reentrant functions
 407:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Functions CO_CANsend() from C_driver.h, and CO_error() from CO_Emergency.h
 408:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * may be called from different threads. Critical sections must be protected.
 409:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Either by disabling scheduler or interrupts or by mutexes or semaphores.
 410:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Lock/unlock macro is called with pointer to CAN module, which may be used
 411:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * inside.
 412:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 413:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * #### Object Dictionary variables
 414:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * In general, there are two threads, which accesses OD variables: mainline
 415:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * (initialization, storage, SDO access) and timer (PDO access). CANopenNode
 416:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * uses locking mechanism, where SDO server (or other mainline code) prevents
 417:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * execution of the real-time thread at the moment it reads or writes OD
 418:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * variable. CO_LOCK_OD(CAN_MODULE) and CO_UNLOCK_OD(CAN_MODULE) macros
 419:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * are used to protect:
 420:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * - Whole real-time thread,
 421:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * - SDO server protects read/write access to OD variable, if specific OD
 422:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *   variable has ODA_TRPDO or ODA_TRSRDO from @ref OD_attributes_t set. If
 423:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *   those attributes are not set, OD variable is not locked by SDO server.
 424:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *   Locking of long OD variables, not accessible from real-time thread, may
 425:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *   block RT thread.
 426:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * - Any mainline code, which accesses PDO-mappable OD variable, must protect
 427:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *   read/write with locking macros. Use @ref OD_mappable() for check.
 428:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * - Other cases, where non-PDO-mappable OD variable is used inside real-time
 429:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *   thread by some other part of the user application must be considered with
 430:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *   special care.
 431:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 432:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * #### Synchronization functions for CAN receive
 433:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * After CAN message is received, it is pre-processed in CANrx_callback(), which
 434:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * copies some data into appropriate object and at the end sets **new_message**
 435:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * flag. This flag is then pooled in another thread, which further processes the
 436:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * message. The problem is, that compiler optimization may shuffle memory
 437:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * operations, so it is necessary to ensure, that **new_message** flag is surely
 438:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * set at the end. It is necessary to use [Memory
 439:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * barrier](https://en.wikipedia.org/wiki/Memory_barrier).
 440:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 441:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * If receive function runs inside IRQ, no further synchronization is needed.
 442:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Otherwise, some kind of synchronization has to be included. The following
 443:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * example uses GCC builtin memory barrier `__sync_synchronize()`. More
 444:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * information can be found
 445:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * [here](https://stackoverflow.com/questions/982129/what-does-sync-synchronize-do#982179).
 446:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
 447:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 448:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** Lock critical section in CO_CANsend() */
 449:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #define CO_LOCK_CAN_SEND(CAN_MODULE)
 450:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** Unlock critical section in CO_CANsend() */
 451:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #define CO_UNLOCK_CAN_SEND(CAN_MODULE)
 452:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** Lock critical section in CO_errorReport() or CO_errorReset() */
 453:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #define CO_LOCK_EMCY(CAN_MODULE)
 454:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** Unlock critical section in CO_errorReport() or CO_errorReset() */
 455:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #define CO_UNLOCK_EMCY(CAN_MODULE)
 456:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** Lock critical section when accessing Object Dictionary */
 457:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #define CO_LOCK_OD(CAN_MODULE)
 458:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** Unock critical section when accessing Object Dictionary */
 459:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #define CO_UNLOCK_OD(CAN_MODULE)
 460:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 461:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** Check if new message has arrived */
 462:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #define CO_FLAG_READ(rxNew) ((rxNew) != NULL)
 463:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** Set new message flag */
 464:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #define CO_FLAG_SET(rxNew) { __sync_synchronize(); rxNew = (void *)1L; }
 465:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** Clear new message flag */
 466:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #define CO_FLAG_CLEAR(rxNew) { __sync_synchronize(); rxNew = NULL; }
 467:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 468:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** @} */
 469:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #endif /* CO_DOXYGEN */
 470:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 471:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 472:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
 473:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Default CANopen identifiers.
 474:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 475:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Default CANopen identifiers for CANopen communication objects. Same as
 476:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * 11-bit addresses of CAN messages. These are default identifiers and
 477:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * can be changed in CANopen. Especially PDO identifiers are configured
 478:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * in PDO linking phase of the CANopen network configuration.
 479:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
 480:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** typedef enum {
 481:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ID_NMT_SERVICE = 0x000, /**< 0x000, Network management */
 482:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ID_GFC = 0x001,         /**< 0x001, Global fail-safe command */
 483:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ID_SYNC = 0x080,        /**< 0x080, Synchronous message */
 484:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ID_EMERGENCY = 0x080,   /**< 0x080, Emergency messages (+nodeID) */
 485:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ID_TIME = 0x100,        /**< 0x100, Time message */
 486:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ID_SRDO_1 = 0x0FF,      /**< 0x0FF, Default SRDO1 (+2*nodeID) */
 487:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ID_TPDO_1 = 0x180,      /**< 0x180, Default TPDO1 (+nodeID) */
 488:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ID_RPDO_1 = 0x200,      /**< 0x200, Default RPDO1 (+nodeID) */
 489:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ID_TPDO_2 = 0x280,      /**< 0x280, Default TPDO2 (+nodeID) */
 490:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ID_RPDO_2 = 0x300,      /**< 0x300, Default RPDO2 (+nodeID) */
 491:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ID_TPDO_3 = 0x380,      /**< 0x380, Default TPDO3 (+nodeID) */
 492:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ID_RPDO_3 = 0x400,      /**< 0x400, Default RPDO3 (+nodeID) */
 493:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ID_TPDO_4 = 0x480,      /**< 0x480, Default TPDO4 (+nodeID) */
 494:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ID_RPDO_4 = 0x500,      /**< 0x500, Default RPDO5 (+nodeID) */
 495:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ID_SDO_SRV = 0x580, /**< 0x580, SDO response from server (+nodeID) */
 496:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ID_SDO_CLI = 0x600, /**< 0x600, SDO request from client (+nodeID) */
 497:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ID_HEARTBEAT = 0x700,   /**< 0x700, Heartbeat message */
 498:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ID_LSS_SLV = 0x7E4,     /**< 0x7E4, LSS response from slave */
 499:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ID_LSS_MST = 0x7E5      /**< 0x7E5, LSS request from master */
 500:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** } CO_Default_CAN_ID_t;
 501:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 502:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 503:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
 504:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Restricted CAN-IDs
 505:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 506:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Macro for verifying 'Restricted CAN-IDs', as specified by standard CiA301.
 507:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * They shall not be used for SYNC, TIME, EMCY, PDO and SDO.
 508:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
 509:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #ifndef CO_IS_RESTRICTED_CAN_ID
 510:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #define CO_IS_RESTRICTED_CAN_ID(CAN_ID) ((CAN_ID) <= 0x7F \
 511:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****         || ((CAN_ID) >= 0x101 && (CAN_ID) <= 0x180) \
 512:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****         || ((CAN_ID) >= 0x581 && (CAN_ID) <= 0x5FF) \
 513:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****         || ((CAN_ID) >= 0x601 && (CAN_ID) <= 0x67F) \
 514:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****         || ((CAN_ID) >= 0x6E0 && (CAN_ID) <= 0x6FF) \
 515:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****         || (CAN_ID) >= 0x701)
 516:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #endif
 517:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 518:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 519:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
 520:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * CAN error status bitmasks.
 521:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 522:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * CAN warning level is reached, if CAN transmit or receive error counter is
 523:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * more or equal to 96. CAN passive level is reached, if counters are more or
 524:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * equal to 128. Transmitter goes in error state 'bus off' if transmit error
 525:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * counter is more or equal to 256.
 526:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
 527:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** typedef enum {
 528:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ERRTX_WARNING = 0x0001,  /**< 0x0001, CAN transmitter warning */
 529:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ERRTX_PASSIVE = 0x0002,  /**< 0x0002, CAN transmitter passive */
 530:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ERRTX_BUS_OFF = 0x0004,  /**< 0x0004, CAN transmitter bus off */
 531:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ERRTX_OVERFLOW = 0x0008, /**< 0x0008, CAN transmitter overflow */
 532:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 533:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ERRTX_PDO_LATE = 0x0080, /**< 0x0080, TPDO is outside sync window */
 534:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 535:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ERRRX_WARNING = 0x0100,  /**< 0x0100, CAN receiver warning */
 536:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ERRRX_PASSIVE = 0x0200,  /**< 0x0200, CAN receiver passive */
 537:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ERRRX_OVERFLOW = 0x0800, /**< 0x0800, CAN receiver overflow */
 538:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 539:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_CAN_ERR_WARN_PASSIVE = 0x0303/**< 0x0303, combination */
 540:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** } CO_CAN_ERR_status_t;
 541:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 542:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 543:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
 544:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Return values of some CANopen functions. If function was executed
 545:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * successfully it returns 0 otherwise it returns <0.
 546:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
 547:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** typedef enum {
 548:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_ERROR_NO = 0,                /**< Operation completed successfully */
 549:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_ERROR_ILLEGAL_ARGUMENT = -1, /**< Error in function arguments */
 550:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_ERROR_OUT_OF_MEMORY = -2,    /**< Memory allocation failed */
 551:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_ERROR_TIMEOUT = -3,          /**< Function timeout */
 552:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_ERROR_ILLEGAL_BAUDRATE = -4, /**< Illegal baudrate passed to function
 553:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                          CO_CANmodule_init() */
 554:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_ERROR_RX_OVERFLOW = -5,      /**< Previous message was not processed
 555:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                          yet */
 556:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_ERROR_RX_PDO_OVERFLOW = -6,  /**< previous PDO was not processed yet */
 557:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_ERROR_RX_MSG_LENGTH = -7,    /**< Wrong receive message length */
 558:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_ERROR_RX_PDO_LENGTH = -8,    /**< Wrong receive PDO length */
 559:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_ERROR_TX_OVERFLOW = -9,      /**< Previous message is still waiting,
 560:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                          buffer full */
 561:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_ERROR_TX_PDO_WINDOW = -10,   /**< Synchronous TPDO is outside window */
 562:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_ERROR_TX_UNCONFIGURED = -11, /**< Transmit buffer was not configured
 563:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                          properly */
 564:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_ERROR_OD_PARAMETERS = -12,   /**< Error in Object Dictionary parameters*/
 565:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_ERROR_DATA_CORRUPT = -13,    /**< Stored data are corrupt */
 566:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_ERROR_CRC = -14,             /**< CRC does not match */
 567:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_ERROR_TX_BUSY = -15,         /**< Sending rejected because driver is
 568:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                          busy. Try again */
 569:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_ERROR_WRONG_NMT_STATE = -16, /**< Command can't be processed in current
 570:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                          state */
 571:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_ERROR_SYSCALL = -17,         /**< Syscall failed */
 572:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_ERROR_INVALID_STATE = -18,   /**< Driver not ready */
 573:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     CO_ERROR_NODE_ID_UNCONFIGURED_LSS = -19 /**< Node-id is in LSS unconfigured
 574:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                          state. If objects are handled properly,
 575:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                          this may not be an error. */
 576:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** } CO_ReturnError_t;
 577:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 578:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 579:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
 580:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Request CAN configuration (stopped) mode and *wait* until it is set.
 581:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 582:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param CANptr Pointer to CAN device
 583:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
 584:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** void CO_CANsetConfigurationMode(void *CANptr);
 585:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 586:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 587:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
 588:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Request CAN normal (operational) mode and *wait* until it is set.
 589:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 590:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param CANmodule CO_CANmodule_t object.
 591:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
 592:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** void CO_CANsetNormalMode(CO_CANmodule_t *CANmodule);
 593:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 594:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 595:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
 596:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Initialize CAN module object.
 597:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 598:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Function must be called in the communication reset section. CAN module must
 599:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * be in Configuration Mode before.
 600:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 601:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param CANmodule This object will be initialized.
 602:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param CANptr Pointer to CAN device.
 603:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param rxArray Array for handling received CAN messages
 604:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param rxSize Size of the above array. Must be equal to number of receiving
 605:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * CAN objects.
 606:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param txArray Array for handling transmitting CAN messages
 607:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param txSize Size of the above array. Must be equal to number of
 608:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * transmitting CAN objects.
 609:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param CANbitRate Valid values are (in kbps): 10, 20, 50, 125, 250, 500, 800,
 610:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * 1000. If value is illegal, bitrate defaults to 125.
 611:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 612:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Return #CO_ReturnError_t: CO_ERROR_NO or CO_ERROR_ILLEGAL_ARGUMENT.
 613:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
 614:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** CO_ReturnError_t CO_CANmodule_init(CO_CANmodule_t *CANmodule,
 615:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                    void *CANptr,
 616:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                    CO_CANrx_t rxArray[],
 617:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                    uint16_t rxSize,
 618:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                    CO_CANtx_t txArray[],
 619:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                    uint16_t txSize,
 620:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                    uint16_t CANbitRate);
 621:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 622:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 623:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
 624:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Switch off CANmodule. Call at program exit.
 625:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 626:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param CANmodule CAN module object.
 627:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
 628:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** void CO_CANmodule_disable(CO_CANmodule_t *CANmodule);
 629:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 630:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 631:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
 632:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Configure CAN message receive buffer.
 633:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 634:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Function configures specific CAN receive buffer. It sets CAN identifier
 635:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * and connects buffer with specific object. Function must be called for each
 636:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * member in _rxArray_ from CO_CANmodule_t.
 637:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 638:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param CANmodule This object.
 639:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param index Index of the specific buffer in _rxArray_.
 640:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param ident 11-bit standard CAN Identifier. If two or more CANrx buffers
 641:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * have the same _ident_, then buffer with lowest _index_ has precedence and
 642:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * other CANrx buffers will be ignored.
 643:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param mask 11-bit mask for identifier. Most usually set to 0x7FF.
 644:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Received message (rcvMsg) will be accepted if the following
 645:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * condition is true: (((rcvMsgId ^ ident) & mask) == 0).
 646:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param rtr If true, 'Remote Transmit Request' messages will be accepted.
 647:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param object CANopen object, to which buffer is connected. It will be used
 648:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * as an argument to CANrx_callback. Its type is (void), CANrx_callback will
 649:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * change its type back to the correct object type.
 650:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param CANrx_callback Pointer to function, which will be called, if received
 651:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * CAN message matches the identifier. It must be fast function.
 652:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 653:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Return #CO_ReturnError_t: CO_ERROR_NO CO_ERROR_ILLEGAL_ARGUMENT or
 654:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * CO_ERROR_OUT_OF_MEMORY (not enough masks for configuration).
 655:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
 656:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** CO_ReturnError_t CO_CANrxBufferInit(CO_CANmodule_t *CANmodule,
 657:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                     uint16_t index,
 658:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                     uint16_t ident,
 659:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                     uint16_t mask,
 660:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                     bool_t rtr,
 661:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                     void *object,
 662:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                     void (*CANrx_callback)(void *object,
 663:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                                            void *message));
 664:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 665:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 666:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
 667:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Configure CAN message transmit buffer.
 668:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 669:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Function configures specific CAN transmit buffer. Function must be called for
 670:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * each member in _txArray_ from CO_CANmodule_t.
 671:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 672:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param CANmodule This object.
 673:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param index Index of the specific buffer in _txArray_.
 674:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param ident 11-bit standard CAN Identifier.
 675:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param rtr If true, 'Remote Transmit Request' messages will be transmitted.
 676:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param noOfBytes Length of CAN message in bytes (0 to 8 bytes).
 677:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param syncFlag This flag bit is used for synchronous TPDO messages. If it is
 678:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * set, message will not be sent, if current time is outside synchronous window.
 679:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 680:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @return Pointer to CAN transmit message buffer. 8 bytes data array inside
 681:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * buffer should be written, before CO_CANsend() function is called.
 682:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Zero is returned in case of wrong arguments.
 683:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
 684:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** CO_CANtx_t *CO_CANtxBufferInit(CO_CANmodule_t *CANmodule,
 685:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                uint16_t index,
 686:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                uint16_t ident,
 687:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                bool_t rtr,
 688:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                uint8_t noOfBytes,
 689:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****                                bool_t syncFlag);
 690:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 691:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 692:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
 693:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Send CAN message.
 694:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 695:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param CANmodule This object.
 696:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param buffer Pointer to transmit buffer, returned by CO_CANtxBufferInit().
 697:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Data bytes must be written in buffer before function call.
 698:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 699:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @return #CO_ReturnError_t: CO_ERROR_NO, CO_ERROR_TX_OVERFLOW or
 700:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * CO_ERROR_TX_PDO_WINDOW (Synchronous TPDO is outside window).
 701:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
 702:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** CO_ReturnError_t CO_CANsend(CO_CANmodule_t *CANmodule, CO_CANtx_t *buffer);
 703:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 704:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 705:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
 706:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Clear all synchronous TPDOs from CAN module transmit buffers.
 707:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 708:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * CANopen allows synchronous PDO communication only inside time between SYNC
 709:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * message and SYNC Window. If time is outside this window, new synchronous PDOs
 710:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * must not be sent and all pending sync TPDOs, which may be on CAN TX buffers,
 711:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * may optionally be cleared.
 712:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 713:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * This function checks (and aborts transmission if necessary) CAN TX buffers
 714:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * when it is called. Function should be called by the stack in the moment,
 715:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * when SYNC time was just passed out of synchronous window.
 716:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 717:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param CANmodule This object.
 718:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
 719:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** void CO_CANclearPendingSyncPDOs(CO_CANmodule_t *CANmodule);
 720:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 721:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 722:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
 723:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Process can module - verify CAN errors
 724:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 725:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Function must be called cyclically. It should calculate CANerrorStatus
 726:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * bitfield for CAN errors defined in @ref CO_CAN_ERR_status_t.
 727:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 728:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param CANmodule This object.
 729:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
 730:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** void CO_CANmodule_process(CO_CANmodule_t *CANmodule);
 731:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 732:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 733:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
 734:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Get uint8_t value from memory buffer
 735:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 736:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param buf Memory buffer to get value from.
 737:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 738:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @return Value
 739:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
 740:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** static inline uint8_t CO_getUint8(const void *buf) {
  27              	 .loc 1 740 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 85B0     	 sub sp,sp,#20
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 24
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
 741:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #if (C2000_PORT != 0)
 742:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     uint8_t value = 0;
 743:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     value = (*((uint8_t *)buf) & 0x00FF);
 744:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     return value;
 745:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #else
 746:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     uint8_t value; memmove(&value, buf, sizeof(value)); return value;
  43              	 .loc 1 746 0
  44 0008 7B68     	 ldr r3,[r7,#4]
  45 000a 1B78     	 ldrb r3,[r3]
  46 000c FB73     	 strb r3,[r7,#15]
  47 000e FB7B     	 ldrb r3,[r7,#15]
 747:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #endif
 748:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** }
  48              	 .loc 1 748 0
  49 0010 1846     	 mov r0,r3
  50 0012 1437     	 adds r7,r7,#20
  51              	.LCFI3:
  52              	 .cfi_def_cfa_offset 4
  53 0014 BD46     	 mov sp,r7
  54              	.LCFI4:
  55              	 .cfi_def_cfa_register 13
  56              	 
  57 0016 5DF8047B 	 ldr r7,[sp],#4
  58              	.LCFI5:
  59              	 .cfi_restore 7
  60              	 .cfi_def_cfa_offset 0
  61 001a 7047     	 bx lr
  62              	 .cfi_endproc
  63              	.LFE0:
  65              	 .section .text.CO_getUint16,"ax",%progbits
  66              	 .align 2
  67              	 .thumb
  68              	 .thumb_func
  70              	CO_getUint16:
  71              	.LFB1:
 749:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** Get uint16_t value from memory buffer, see @ref CO_getUint8 */
 750:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** static inline uint16_t CO_getUint16(const void *buf) {
  72              	 .loc 1 750 0
  73              	 .cfi_startproc
  74              	 
  75              	 
  76 0000 80B5     	 push {r7,lr}
  77              	.LCFI6:
  78              	 .cfi_def_cfa_offset 8
  79              	 .cfi_offset 7,-8
  80              	 .cfi_offset 14,-4
  81 0002 84B0     	 sub sp,sp,#16
  82              	.LCFI7:
  83              	 .cfi_def_cfa_offset 24
  84 0004 00AF     	 add r7,sp,#0
  85              	.LCFI8:
  86              	 .cfi_def_cfa_register 7
  87 0006 7860     	 str r0,[r7,#4]
 751:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #if (C2000_PORT != 0)
 752:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     uint16_t value = 0;
 753:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     uint8_t * pBuf8 = (uint8_t *)buf;
 754:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     for (int i = 0; i < 2; i++) {
 755:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****         value += ((uint16_t)(pBuf8[i])) << (8 * i);
 756:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     }
 757:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     return value;
 758:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #else
 759:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     uint16_t value; memmove(&value, buf, sizeof(value)); return value;
  88              	 .loc 1 759 0
  89 0008 07F10E03 	 add r3,r7,#14
  90 000c 1846     	 mov r0,r3
  91 000e 7968     	 ldr r1,[r7,#4]
  92 0010 0222     	 movs r2,#2
  93 0012 FFF7FEFF 	 bl memmove
  94 0016 FB89     	 ldrh r3,[r7,#14]
 760:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #endif
 761:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** }
  95              	 .loc 1 761 0
  96 0018 1846     	 mov r0,r3
  97 001a 1037     	 adds r7,r7,#16
  98              	.LCFI9:
  99              	 .cfi_def_cfa_offset 8
 100 001c BD46     	 mov sp,r7
 101              	.LCFI10:
 102              	 .cfi_def_cfa_register 13
 103              	 
 104 001e 80BD     	 pop {r7,pc}
 105              	 .cfi_endproc
 106              	.LFE1:
 108              	 .section .text.CO_getUint32,"ax",%progbits
 109              	 .align 2
 110              	 .thumb
 111              	 .thumb_func
 113              	CO_getUint32:
 114              	.LFB2:
 762:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** Get uint32_t value from memory buffer, see @ref CO_getUint8 */
 763:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** static inline uint32_t CO_getUint32(const void *buf) {
 115              	 .loc 1 763 0
 116              	 .cfi_startproc
 117              	 
 118              	 
 119 0000 80B5     	 push {r7,lr}
 120              	.LCFI11:
 121              	 .cfi_def_cfa_offset 8
 122              	 .cfi_offset 7,-8
 123              	 .cfi_offset 14,-4
 124 0002 84B0     	 sub sp,sp,#16
 125              	.LCFI12:
 126              	 .cfi_def_cfa_offset 24
 127 0004 00AF     	 add r7,sp,#0
 128              	.LCFI13:
 129              	 .cfi_def_cfa_register 7
 130 0006 7860     	 str r0,[r7,#4]
 764:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #if (C2000_PORT != 0)
 765:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     uint32_t value = 0;
 766:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     uint8_t * pBuf8 = (uint8_t *)buf;
 767:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     for(int i = 0; i < 4; i++) {
 768:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****         value += ((uint32_t)(pBuf8[i])) << (8 * i);
 769:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     }
 770:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     return value;
 771:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #else
 772:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     uint32_t value; memmove(&value, buf, sizeof(value)); return value;
 131              	 .loc 1 772 0
 132 0008 07F10C03 	 add r3,r7,#12
 133 000c 1846     	 mov r0,r3
 134 000e 7968     	 ldr r1,[r7,#4]
 135 0010 0422     	 movs r2,#4
 136 0012 FFF7FEFF 	 bl memmove
 137 0016 FB68     	 ldr r3,[r7,#12]
 773:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #endif
 774:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** }
 138              	 .loc 1 774 0
 139 0018 1846     	 mov r0,r3
 140 001a 1037     	 adds r7,r7,#16
 141              	.LCFI14:
 142              	 .cfi_def_cfa_offset 8
 143 001c BD46     	 mov sp,r7
 144              	.LCFI15:
 145              	 .cfi_def_cfa_register 13
 146              	 
 147 001e 80BD     	 pop {r7,pc}
 148              	 .cfi_endproc
 149              	.LFE2:
 151              	 .section .text.CO_setUint32,"ax",%progbits
 152              	 .align 2
 153              	 .thumb
 154              	 .thumb_func
 156              	CO_setUint32:
 157              	.LFB5:
 775:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** 
 776:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /**
 777:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * Write uint8_t value into memory buffer
 778:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 779:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param buf Memory buffer.
 780:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @param value Value to be written into buf.
 781:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  *
 782:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  * @return number of bytes written.
 783:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****  */
 784:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** static inline uint8_t CO_setUint8(void *buf, uint8_t value) {
 785:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #if (C2000_PORT != 0)
 786:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     uint8_t * pBuf8 = (uint8_t *)buf;
 787:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     pBuf8[0] = value;
 788:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     return 1;
 789:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #else
 790:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     memmove(buf, &value, sizeof(value)); return sizeof(value);
 791:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #endif
 792:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** }
 793:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** Write uint16_t value into memory buffer, see @ref CO_setUint8 */
 794:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** static inline uint8_t CO_setUint16(void *buf, uint16_t value) {
 795:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #if (C2000_PORT != 0)
 796:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     uint8_t * pBuf8 = (uint8_t *)buf;
 797:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     pBuf8[0] = (uint8_t)(value & 0x00FF);
 798:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     pBuf8[1] = (uint8_t)((value >> 8) & 0x00FF);
 799:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     return 2;
 800:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #else
 801:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     memmove(buf, &value, sizeof(value)); return sizeof(value);
 802:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #endif
 803:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** }
 804:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** /** Write uint32_t value into memory buffer, see @ref CO_setUint8 */
 805:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** static inline uint8_t CO_setUint32(void *buf, uint32_t value) {
 158              	 .loc 1 805 0
 159              	 .cfi_startproc
 160              	 
 161              	 
 162 0000 80B5     	 push {r7,lr}
 163              	.LCFI16:
 164              	 .cfi_def_cfa_offset 8
 165              	 .cfi_offset 7,-8
 166              	 .cfi_offset 14,-4
 167 0002 82B0     	 sub sp,sp,#8
 168              	.LCFI17:
 169              	 .cfi_def_cfa_offset 16
 170 0004 00AF     	 add r7,sp,#0
 171              	.LCFI18:
 172              	 .cfi_def_cfa_register 7
 173 0006 7860     	 str r0,[r7,#4]
 174 0008 3960     	 str r1,[r7]
 806:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #if (C2000_PORT != 0)
 807:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     uint8_t * pBuf8 = (uint8_t *)buf;
 808:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     for(int i = 0; i < 4; i++) {
 809:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****         pBuf8[i] = (uint8_t)((value >> (8 * i)) & 0x00FF);
 810:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     }
 811:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     return 4;
 812:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #else
 813:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h ****     memmove(buf, &value, sizeof(value)); return sizeof(value);
 175              	 .loc 1 813 0
 176 000a 3B46     	 mov r3,r7
 177 000c 7868     	 ldr r0,[r7,#4]
 178 000e 1946     	 mov r1,r3
 179 0010 0422     	 movs r2,#4
 180 0012 FFF7FEFF 	 bl memmove
 181 0016 0423     	 movs r3,#4
 814:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** #endif
 815:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_driver.h **** }
 182              	 .loc 1 815 0
 183 0018 1846     	 mov r0,r3
 184 001a 0837     	 adds r7,r7,#8
 185              	.LCFI19:
 186              	 .cfi_def_cfa_offset 8
 187 001c BD46     	 mov sp,r7
 188              	.LCFI20:
 189              	 .cfi_def_cfa_register 13
 190              	 
 191 001e 80BD     	 pop {r7,pc}
 192              	 .cfi_endproc
 193              	.LFE5:
 195              	 .section .text.OD_getIndex,"ax",%progbits
 196              	 .align 2
 197              	 .thumb
 198              	 .thumb_func
 200              	OD_getIndex:
 201              	.LFB6:
 202              	 .file 2 "D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301/CO_ODinterface.h"
   1:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /**
   2:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * CANopen Object Dictionary interface
   3:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
   4:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @file        CO_ODinterface.h
   5:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @ingroup     CO_ODinterface
   6:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @author      Janez Paternoster
   7:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @copyright   2020 Janez Paternoster
   8:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
   9:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * This file is part of CANopenNode, an opensource CANopen Stack.
  10:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Project home page is <https://github.com/CANopenNode/CANopenNode>.
  11:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * For more information on CANopen see <http://www.can-cia.org/>.
  12:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
  13:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Licensed under the Apache License, Version 2.0 (the "License");
  14:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * you may not use this file except in compliance with the License.
  15:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * You may obtain a copy of the License at
  16:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
  17:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *     http://www.apache.org/licenses/LICENSE-2.0
  18:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
  19:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Unless required by applicable law or agreed to in writing, software
  20:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * distributed under the License is distributed on an "AS IS" BASIS,
  21:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  22:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * See the License for the specific language governing permissions and
  23:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * limitations under the License.
  24:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  */
  25:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
  26:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #ifndef CO_OD_INTERFACE_H
  27:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #define CO_OD_INTERFACE_H
  28:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
  29:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #include "301/CO_driver.h"
  30:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
  31:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #ifdef __cplusplus
  32:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** extern "C" {
  33:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #endif
  34:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
  35:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /**
  36:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @defgroup CO_ODinterface OD interface
  37:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * CANopen Object Dictionary interface.
  38:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
  39:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @ingroup CO_CANopen_301
  40:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @{
  41:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * See @ref doc/objectDictionary.md
  42:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  */
  43:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
  44:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #ifndef CO_OD_OWN_TYPES
  45:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /** Variable of type OD_size_t contains data length in bytes of OD variable */
  46:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** typedef uint32_t OD_size_t;
  47:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /** Type (and size) of Object Dictionary attribute */
  48:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** typedef uint8_t OD_attr_t;
  49:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #endif
  50:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
  51:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #ifndef OD_FLAGS_PDO_SIZE
  52:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /** Size of of flagsPDO variable inside @ref OD_extension_t, from 0 to 32. */
  53:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #define OD_FLAGS_PDO_SIZE 4
  54:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #endif
  55:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
  56:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #ifndef CO_PROGMEM
  57:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /** Modifier for OD objects. This is large amount of data and is specified in
  58:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Object Dictionary (OD.c file usually) */
  59:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #define CO_PROGMEM const
  60:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #endif
  61:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
  62:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
  63:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /**
  64:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Common DS301 object dictionary entries.
  65:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  */
  66:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** typedef enum {
  67:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1000_DEV_TYPE           = 0x1000U,/**< Device type */
  68:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1001_ERR_REG            = 0x1001U,/**< Error register */
  69:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1002_MANUF_STATUS_REG   = 0x1002U,/**< Manufacturer status register */
  70:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1003_PREDEF_ERR_FIELD   = 0x1003U,/**< Predefined error field */
  71:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1004_RSV                = 0x1004U,/**< Reserved */
  72:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1005_COBID_SYNC         = 0x1005U,/**< Sync message cob-id */
  73:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1006_COMM_CYCL_PERIOD   = 0x1006U,/**< Communication cycle period */
  74:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1007_SYNC_WINDOW_LEN    = 0x1007U,/**< Sync windows length */
  75:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1008_MANUF_DEV_NAME     = 0x1008U,/**< Manufacturer device name */
  76:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1009_MANUF_HW_VERSION   = 0x1009U,/**< Manufacturer hardware version */
  77:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H100A_MANUF_SW_VERSION   = 0x100AU,/**< Manufacturer software version */
  78:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H100B_RSV                = 0x100BU,/**< Reserved */
  79:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H100C_GUARD_TIME         = 0x100CU,/**< Guard time */
  80:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H100D_LIFETIME_FACTOR    = 0x100DU,/**< Life time factor */
  81:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H100E_RSV                = 0x100EU,/**< Reserved */
  82:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H100F_RSV                = 0x100FU,/**< Reserved */
  83:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1010_STORE_PARAMETERS   = 0x1010U,/**< Store params in persistent mem.*/
  84:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1011_RESTORE_DEFAULT    = 0x1011U,/**< Restore default parameters */
  85:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1012_COBID_TIME         = 0x1012U,/**< Timestamp message cob-id */
  86:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1013_HIGH_RES_TIMESTAMP = 0x1013U,/**< High resolution timestamp */
  87:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1014_COBID_EMERGENCY    = 0x1014U,/**< Emergency message cob-id */
  88:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1015_INHIBIT_TIME_EMCY  = 0x1015U,/**< Inhibit time emergency message */
  89:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1016_CONSUMER_HB_TIME   = 0x1016U,/**< Consumer heartbeat time */
  90:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1017_PRODUCER_HB_TIME   = 0x1017U,/**< Producer heartbeat time */
  91:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1018_IDENTITY_OBJECT    = 0x1018U,/**< Identity object */
  92:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1019_SYNC_CNT_OVERFLOW  = 0x1019U,/**< Sync counter overflow value */
  93:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1020_VERIFY_CONFIG      = 0x1020U,/**< Verify configuration */
  94:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1021_STORE_EDS          = 0x1021U,/**< Store EDS */
  95:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1022_STORE_FORMAT       = 0x1022U,/**< Store format */
  96:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1023_OS_CMD             = 0x1023U,/**< OS command */
  97:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1024_OS_CMD_MODE        = 0x1024U,/**< OS command mode */
  98:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1025_OS_DBG_INTERFACE   = 0x1025U,/**< OS debug interface */
  99:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1026_OS_PROMPT          = 0x1026U,/**< OS prompt */
 100:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1027_MODULE_LIST        = 0x1027U,/**< Module list */
 101:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1028_EMCY_CONSUMER      = 0x1028U,/**< Emergency consumer object */
 102:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1029_ERR_BEHAVIOR       = 0x1029U,/**< Error behaviour */
 103:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1200_SDO_SERVER_1_PARAM = 0x1200U,/**< SDO server parameter */
 104:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1280_SDO_CLIENT_1_PARAM = 0x1280U,/**< SDO client parameter */
 105:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1300_GFC_PARAM          = 0x1300U,/**< Global fail-safe command param */
 106:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1301_SRDO_1_PARAM       = 0x1301U,/**< SRDO communication parameter */
 107:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1381_SRDO_1_MAPPING     = 0x1381U,/**< SRDO mapping parameter */
 108:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H13FE_SRDO_VALID         = 0x13FEU,/**< SRDO Configuration valid */
 109:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H13FF_SRDO_CHECKSUM      = 0x13FFU,/**< SRDO configuration checksum */
 110:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1400_RXPDO_1_PARAM      = 0x1400U,/**< RXPDO communication parameter */
 111:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1600_RXPDO_1_MAPPING    = 0x1600U,/**< RXPDO mapping parameters */
 112:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1800_TXPDO_1_PARAM      = 0x1800U,/**< TXPDO communication parameter */
 113:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_H1A00_TXPDO_1_MAPPING    = 0x1A00U,/**< TXPDO mapping parameters */
 114:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** } OD_ObjDicId_30x_t;
 115:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 116:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 117:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /**
 118:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Attributes (bit masks) for OD sub-object.
 119:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  */
 120:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** typedef enum {
 121:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODA_SDO_R = 0x01, /**< SDO server may read from the variable */
 122:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODA_SDO_W = 0x02, /**< SDO server may write to the variable */
 123:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODA_SDO_RW = 0x03, /**< SDO server may read from or write to the variable */
 124:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODA_TPDO = 0x04, /**< Variable is mappable into TPDO (can be read) */
 125:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODA_RPDO = 0x08, /**< Variable is mappable into RPDO (can be written) */
 126:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODA_TRPDO = 0x0C, /**< Variable is mappable into TPDO or RPDO */
 127:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODA_TSRDO = 0x10, /**< Variable is mappable into transmitting SRDO */
 128:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODA_RSRDO = 0x20, /**< Variable is mappable into receiving SRDO */
 129:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODA_TRSRDO = 0x30, /**< Variable is mappable into tx or rx SRDO */
 130:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODA_MB = 0x40, /**< Variable is multi-byte ((u)int16_t to (u)int64_t) */
 131:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODA_STR = 0x80 /**< Shorter value, than specified variable size, may be
 132:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     written to the variable. SDO write will fill remaining memory with zeroes.
 133:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     Attribute is used for VISIBLE_STRING and UNICODE_STRING. */
 134:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** } OD_attributes_t;
 135:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 136:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 137:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /**
 138:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Return codes from OD access functions.
 139:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 140:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @ref OD_getSDOabCode() can be used to retrieve corresponding SDO abort code.
 141:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  */
 142:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** typedef enum {
 143:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /* !!!! WARNING !!!!
 144:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * If changing these values, change also OD_getSDOabCode() function!
 145:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  */
 146:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** Read/write is only partial, make more calls */
 147:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_PARTIAL = -1,
 148:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** SDO abort 0x00000000 - Read/write successfully finished */
 149:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_OK = 0,
 150:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** SDO abort 0x05040005 - Out of memory */
 151:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_OUT_OF_MEM = 1,
 152:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** SDO abort 0x06010000 - Unsupported access to an object */
 153:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_UNSUPP_ACCESS = 2,
 154:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** SDO abort 0x06010001 - Attempt to read a write only object */
 155:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_WRITEONLY = 3,
 156:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** SDO abort 0x06010002 - Attempt to write a read only object */
 157:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_READONLY = 4,
 158:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** SDO abort 0x06020000 - Object does not exist in the object dict. */
 159:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_IDX_NOT_EXIST = 5,
 160:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** SDO abort 0x06040041 - Object cannot be mapped to the PDO */
 161:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_NO_MAP = 6,
 162:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** SDO abort 0x06040042 - PDO length exceeded */
 163:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_MAP_LEN = 7,
 164:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** SDO abort 0x06040043 - General parameter incompatibility reasons */
 165:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_PAR_INCOMPAT = 8,
 166:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** SDO abort 0x06040047 - General internal incompatibility in device */
 167:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_DEV_INCOMPAT = 9,
 168:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** SDO abort 0x06060000 - Access failed due to hardware error */
 169:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_HW = 10,
 170:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** SDO abort 0x06070010 - Data type does not match */
 171:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_TYPE_MISMATCH = 11,
 172:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** SDO abort 0x06070012 - Data type does not match, length too high */
 173:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_DATA_LONG = 12,
 174:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** SDO abort 0x06070013 - Data type does not match, length too short */
 175:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_DATA_SHORT = 13,
 176:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** SDO abort 0x06090011 - Sub index does not exist */
 177:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_SUB_NOT_EXIST = 14,
 178:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** SDO abort 0x06090030 - Invalid value for parameter (download only) */
 179:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_INVALID_VALUE = 15,
 180:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** SDO abort 0x06090031 - Value range of parameter written too high */
 181:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_VALUE_HIGH = 16,
 182:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** SDO abort 0x06090032 - Value range of parameter written too low */
 183:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_VALUE_LOW = 17,
 184:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** SDO abort 0x06090036 - Maximum value is less than minimum value */
 185:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_MAX_LESS_MIN = 18,
 186:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** SDO abort 0x060A0023 - Resource not available: SDO connection */
 187:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_NO_RESOURCE = 19,
 188:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** SDO abort 0x08000000 - General error */
 189:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_GENERAL = 20,
 190:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** SDO abort 0x08000020 - Data cannot be transferred or stored to app */
 191:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_DATA_TRANSF = 21,
 192:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** SDO abort 0x08000021 - Data can't be transferred (local control) */
 193:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_DATA_LOC_CTRL = 22,
 194:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** SDO abort 0x08000022 - Data can't be transf. (present device state) */
 195:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_DATA_DEV_STATE = 23,
 196:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** SDO abort 0x08000023 - Object dictionary not present */
 197:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_OD_MISSING = 23,
 198:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** SDO abort 0x08000024 - No data available */
 199:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_NO_DATA = 25,
 200:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** Last element, number of responses */
 201:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_COUNT = 26
 202:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** } ODR_t;
 203:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 204:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 205:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /**
 206:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * IO stream structure, used for read/write access to OD variable, part of
 207:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @ref OD_IO_t.
 208:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  */
 209:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** typedef struct {
 210:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** Pointer to original data object, defined by Object Dictionary. Default
 211:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * read/write functions operate on it. If memory for data object is not
 212:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * specified by Object Dictionary, then dataOrig is NULL.
 213:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      */
 214:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     void *dataOrig;
 215:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** Pointer to object, passed by @ref OD_extension_init(). Can be used
 216:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * inside read / write functions from IO extension.
 217:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      */
 218:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     void *object;
 219:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** Data length in bytes or 0, if length is not specified */
 220:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_size_t dataLength;
 221:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** In case of large data, dataOffset indicates position of already
 222:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * transferred data */
 223:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_size_t dataOffset;
 224:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** Attribute bit-field of the OD sub-object, see @ref OD_attributes_t */
 225:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_attr_t attribute;
 226:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** Sub index of the OD sub-object, informative */
 227:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     uint8_t subIndex;
 228:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** } OD_stream_t;
 229:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 230:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 231:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /**
 232:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Structure for input / output on the OD variable. It is initialized with
 233:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @ref OD_getSub() function. Access principle to OD variable is via read/write
 234:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * functions operating on stream, similar as standard read/write.
 235:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  */
 236:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** typedef struct {
 237:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** Object Dictionary stream object, passed to read or write */
 238:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_stream_t stream;
 239:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /**
 240:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * Function pointer for reading value from specified variable from Object
 241:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * Dictionary. If OD variable is larger than buf, then this function must
 242:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * be called several times. After completed successful read function returns
 243:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * 'ODR_OK'. If read is partial, it returns 'ODR_PARTIAL'. In case of errors
 244:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * function returns code similar to SDO abort code.
 245:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      *
 246:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * Read can be restarted with @ref OD_rwRestart() function.
 247:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      *
 248:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * At the moment, when Object Dictionary is initialized, every variable has
 249:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * assigned the same "read" function. This default function simply copies
 250:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * data from Object Dictionary variable. Application can bind its own "read"
 251:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * function for specific object. In that case application is able to
 252:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * calculate data for reading from own internal state at the moment of
 253:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * "read" function call. Own "read" function on OD object can be initialized
 254:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * with @ref OD_extension_init() function.
 255:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      *
 256:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * "read" function must always copy all own data to buf, except if "buf" is
 257:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * not large enough. ("*returnCode" must not return 'ODR_PARTIAL', if there
 258:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * is still space in "buf".)
 259:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      *
 260:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * @warning When accessing OD variables by calling the read() function, it
 261:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * may be necessary to use @ref CO_LOCK_OD() and @ref CO_UNLOCK_OD() macros.
 262:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * See @ref CO_critical_sections for more information.
 263:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      *
 264:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * @param stream Object Dictionary stream object.
 265:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * @param buf Pointer to external buffer, where to data will be copied.
 266:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * @param count Size of the external buffer in bytes.
 267:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * @param [out] countRead If return value is "ODR_OK" or "ODR_PARTIAL",
 268:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * then number of bytes successfully read must be returned here.
 269:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      *
 270:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * @return Value from @ref ODR_t, "ODR_OK" in case of success.
 271:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      */
 272:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_t (*read)(OD_stream_t *stream, void *buf,
 273:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****                   OD_size_t count, OD_size_t *countRead);
 274:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /**
 275:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * Function pointer for writing value into specified variable inside Object
 276:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * Dictionary. If OD variable is larger than buf, then this function must
 277:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * be called several times. After completed successful write function
 278:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * returns 'ODR_OK'. If write is partial, it returns 'ODR_PARTIAL'. In case
 279:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * of errors function returns code similar to SDO abort code.
 280:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      *
 281:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * Write can be restarted with @ref OD_rwRestart() function.
 282:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      *
 283:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * At the moment, when Object Dictionary is initialized, every variable has
 284:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * assigned the same "write" function, which simply copies data to Object
 285:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * Dictionary variable. Application can bind its own "write" function,
 286:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * similar as it can bind "read" function.
 287:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      *
 288:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * "write" function must always copy all available data from buf. If OD
 289:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * variable expect more data, then "*returnCode" must return 'ODR_PARTIAL'.
 290:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      *
 291:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * @warning When accessing OD variables by calling the read() function, it
 292:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * may be necessary to use @ref CO_LOCK_OD() and @ref CO_UNLOCK_OD() macros.
 293:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * See @ref CO_critical_sections for more information.
 294:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      *
 295:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * @param stream Object Dictionary stream object.
 296:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * @param buf Pointer to external buffer, from where data will be copied.
 297:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * @param count Size of the external buffer in bytes.
 298:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * @param [out] countWritten If return value is "ODR_OK" or "ODR_PARTIAL",
 299:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * then number of bytes successfully written must be returned here.
 300:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      *
 301:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * @return Value from @ref ODR_t, "ODR_OK" in case of success.
 302:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      */
 303:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_t (*write)(OD_stream_t *stream, const void *buf,
 304:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****                    OD_size_t count, OD_size_t *countWritten);
 305:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** } OD_IO_t;
 306:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 307:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 308:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /**
 309:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Extension of OD object, which can optionally be specified by application in
 310:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * initialization phase with @ref OD_extension_init() function.
 311:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  */
 312:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** typedef struct {
 313:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** Object on which read and write will operate, part of @ref OD_stream_t */
 314:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     void *object;
 315:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** Application specified read function pointer. If NULL, then read will be
 316:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * disabled. @ref OD_readOriginal can be used here to keep the original read
 317:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * function. For function description see @ref OD_IO_t. */
 318:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_t (*read)(OD_stream_t *stream, void *buf,
 319:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****                   OD_size_t count, OD_size_t *countRead);
 320:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** Application specified write function pointer. If NULL, then write will
 321:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * be disabled. @ref OD_writeOriginal can be used here to keep the original
 322:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * write function. For function description see @ref OD_IO_t. */
 323:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     ODR_t (*write)(OD_stream_t *stream, const void *buf,
 324:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****                    OD_size_t count, OD_size_t *countWritten);
 325:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #if OD_FLAGS_PDO_SIZE > 0
 326:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /**PDO flags bit-field provides one bit for each OD variable, which exist
 327:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * inside OD object at specific sub index. If application clears that bit,
 328:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * and OD variable is mapped to an event driven TPDO, then TPDO will be
 329:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * sent.
 330:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      *
 331:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * @ref OD_FLAGS_PDO_SIZE can have a value from 0 to 32 bytes, which
 332:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * corresponds to 0 to 256 available bits. If, for example,
 333:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * @ref OD_FLAGS_PDO_SIZE has value 4, then OD variables with sub index up
 334:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * to 31 will have the TPDO requesting functionality.
 335:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * See also @ref OD_requestTPDO and @ref OD_TPDOtransmitted. */
 336:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     uint8_t flagsPDO[OD_FLAGS_PDO_SIZE];
 337:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #endif
 338:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** } OD_extension_t;
 339:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 340:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 341:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /**
 342:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Object Dictionary entry for one OD object.
 343:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 344:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * OD entries are collected inside OD_t as array (list). Each OD entry contains
 345:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * basic information about OD object (index and subEntriesCount), pointer to
 346:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * odObject with additional information about var, array or record entry and
 347:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * pointer to extension, configurable by application.
 348:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  */
 349:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** typedef struct {
 350:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** Object Dictionary index */
 351:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     uint16_t index;
 352:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** Number of all sub-entries, including sub-entry at sub-index 0 */
 353:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     uint8_t subEntriesCount;
 354:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** Type of the odObject, indicated by @ref OD_objectTypes_t enumerator. */
 355:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     uint8_t odObjectType;
 356:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** OD object of type indicated by odObjectType, from which @ref OD_getSub()
 357:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****      * fetches the information */
 358:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     CO_PROGMEM void *odObject;
 359:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** Extension to OD, specified by application */
 360:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_extension_t *extension;
 361:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** } OD_entry_t;
 362:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 363:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 364:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /**
 365:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Object Dictionary
 366:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  */
 367:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** typedef struct {
 368:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** Number of elements in the list, without last element, which is blank */
 369:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     uint16_t size;
 370:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     /** List OD entries (table of contents), ordered by index */
 371:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     OD_entry_t *list;
 372:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** } OD_t;
 373:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 374:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 375:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /**
 376:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Read value from original OD location
 377:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 378:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * This function can be used inside read / write functions, specified by
 379:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @ref OD_extension_init(). It reads data directly from memory location
 380:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * specified by Object dictionary. If no IO extension is used on OD entry, then
 381:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * io->read returned by @ref OD_getSub() equals to this function. See
 382:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * also @ref OD_IO_t.
 383:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  */
 384:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** ODR_t OD_readOriginal(OD_stream_t *stream, void *buf,
 385:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****                       OD_size_t count, OD_size_t *countRead);
 386:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 387:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 388:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /**
 389:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Write value to original OD location
 390:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 391:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * This function can be used inside read / write functions, specified by
 392:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @ref OD_extension_init(). It writes data directly to memory location
 393:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * specified by Object dictionary. If no IO extension is used on OD entry, then
 394:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * io->write returned by @ref OD_getSub() equals to this function. See
 395:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * also @ref OD_IO_t.
 396:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  */
 397:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** ODR_t OD_writeOriginal(OD_stream_t *stream, const void *buf,
 398:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****                        OD_size_t count, OD_size_t *countWritten);
 399:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 400:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 401:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /**
 402:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Find OD entry in Object Dictionary
 403:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 404:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @param od Object Dictionary
 405:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @param index CANopen Object Dictionary index of object in Object Dictionary
 406:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 407:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @return Pointer to OD entry or NULL if not found
 408:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  */
 409:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** OD_entry_t *OD_find(OD_t *od, uint16_t index);
 410:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 411:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 412:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /**
 413:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Find sub-object with specified sub-index on OD entry returned by OD_find.
 414:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Function populates io structure with sub-object data.
 415:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 416:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @warning
 417:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Read and write functions may be called from different threads, so critical
 418:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * sections in custom functions must be observed, see @ref CO_critical_sections.
 419:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 420:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @param entry OD entry returned by @ref OD_find().
 421:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @param subIndex Sub-index of the variable from the OD object.
 422:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @param [out] io Structure will be populated on success.
 423:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @param odOrig If true, then potential IO extension on entry will be
 424:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * ignored and access to data entry in the original OD location will be returned
 425:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 426:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @return Value from @ref ODR_t, "ODR_OK" in case of success.
 427:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  */
 428:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** ODR_t OD_getSub(const OD_entry_t *entry, uint8_t subIndex,
 429:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****                 OD_IO_t *io, bool_t odOrig);
 430:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 431:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 432:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /**
 433:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Return index from OD entry
 434:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 435:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @param entry OD entry returned by @ref OD_find().
 436:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 437:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @return OD index
 438:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  */
 439:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** static inline uint16_t OD_getIndex(const OD_entry_t *entry) {
 203              	 .loc 2 439 0
 204              	 .cfi_startproc
 205              	 
 206              	 
 207              	 
 208 0000 80B4     	 push {r7}
 209              	.LCFI21:
 210              	 .cfi_def_cfa_offset 4
 211              	 .cfi_offset 7,-4
 212 0002 83B0     	 sub sp,sp,#12
 213              	.LCFI22:
 214              	 .cfi_def_cfa_offset 16
 215 0004 00AF     	 add r7,sp,#0
 216              	.LCFI23:
 217              	 .cfi_def_cfa_register 7
 218 0006 7860     	 str r0,[r7,#4]
 440:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     return (entry != NULL) ? entry->index : 0;
 219              	 .loc 2 440 0
 220 0008 7B68     	 ldr r3,[r7,#4]
 221 000a 002B     	 cmp r3,#0
 222 000c 02D0     	 beq .L10
 223              	 .loc 2 440 0 is_stmt 0 discriminator 1
 224 000e 7B68     	 ldr r3,[r7,#4]
 225 0010 1B88     	 ldrh r3,[r3]
 226 0012 00E0     	 b .L11
 227              	.L10:
 228              	 .loc 2 440 0 discriminator 2
 229 0014 0023     	 movs r3,#0
 230              	.L11:
 441:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** }
 231              	 .loc 2 441 0 is_stmt 1 discriminator 4
 232 0016 1846     	 mov r0,r3
 233 0018 0C37     	 adds r7,r7,#12
 234              	.LCFI24:
 235              	 .cfi_def_cfa_offset 4
 236 001a BD46     	 mov sp,r7
 237              	.LCFI25:
 238              	 .cfi_def_cfa_register 13
 239              	 
 240 001c 5DF8047B 	 ldr r7,[sp],#4
 241              	.LCFI26:
 242              	 .cfi_restore 7
 243              	 .cfi_def_cfa_offset 0
 244 0020 7047     	 bx lr
 245              	 .cfi_endproc
 246              	.LFE6:
 248 0022 00BF     	 .section .text.OD_extension_init,"ax",%progbits
 249              	 .align 2
 250              	 .thumb
 251              	 .thumb_func
 253              	OD_extension_init:
 254              	.LFB12:
 442:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 443:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 444:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /**
 445:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Check, if OD variable is mappable to PDO or SRDO.
 446:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 447:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * If OD variable is mappable, then it may be necessary to protect read/write
 448:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * access from mainline function. See @ref CO_critical_sections.
 449:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 450:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @param stream Object Dictionary stream object.
 451:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 452:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @return true, if OD variable is mappable.
 453:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  */
 454:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** static inline bool_t OD_mappable(OD_stream_t *stream) {
 455:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     return (stream != NULL)
 456:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****          ? (stream->attribute & (ODA_TRPDO | ODA_TRSRDO)) != 0 : false;
 457:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** }
 458:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 459:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 460:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /**
 461:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Restart read or write operation on OD variable
 462:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 463:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * It is not necessary to call this function, if stream was initialized by
 464:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @ref OD_getSub(). It is also not necessary to call this function, if
 465:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * previous read or write was successfully finished.
 466:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 467:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @param stream Object Dictionary stream object.
 468:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  */
 469:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** static inline void OD_rwRestart(OD_stream_t *stream) {
 470:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     if (stream != NULL) stream->dataOffset = 0;
 471:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** }
 472:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 473:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 474:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /**
 475:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Get TPDO request flags for OD entry.
 476:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 477:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * flagsPDO can be used for @ref OD_requestTPDO() or @ref OD_TPDOtransmitted().
 478:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 479:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @param entry OD entry returned by @ref OD_find().
 480:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 481:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @return pointer to flagsPDO
 482:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  */
 483:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** static inline uint8_t *OD_getFlagsPDO(OD_entry_t *entry) {
 484:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #if OD_FLAGS_PDO_SIZE > 0
 485:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     if (entry != NULL && entry->extension != NULL) {
 486:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****         return &entry->extension->flagsPDO[0];
 487:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     }
 488:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #endif
 489:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     return 0;
 490:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** }
 491:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 492:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 493:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /**
 494:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Request TPDO, to which OD variable is mapped
 495:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 496:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Function clears the flagPDO bit, which corresponds to OD variable at specific
 497:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * OD index and subindex. For this functionality to work, @ref OD_extension_t
 498:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * must be enabled on OD variable. If OD variable is mapped to any TPDO with
 499:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * event driven transmission, then TPDO will be transmitted after this function
 500:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * call. If OD variable is mapped to more than one TPDO with event driven
 501:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * transmission, only the first matched TPDO will be transmitted.
 502:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 503:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * TPDO event driven transmission is enabled, if TPDO communication parameter,
 504:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * transmission type is set to 0, 254 or 255. For other transmission types
 505:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * (synchronous) flagPDO bit is ignored.
 506:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 507:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @param flagsPDO TPDO request flags returned by @ref OD_getFlagsPDO.
 508:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @param subIndex subIndex of the OD variable.
 509:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  */
 510:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** static inline void OD_requestTPDO(uint8_t *flagsPDO, uint8_t subIndex) {
 511:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #if OD_FLAGS_PDO_SIZE > 0
 512:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     if (flagsPDO != NULL && subIndex < (OD_FLAGS_PDO_SIZE * 8)) {
 513:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****         /* clear subIndex-th bit */
 514:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****         uint8_t mask = ~(1 << (subIndex & 0x07));
 515:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****         flagsPDO[subIndex >> 3] &= mask;
 516:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     }
 517:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #endif
 518:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** }
 519:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 520:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 521:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /**
 522:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Check if requested TPDO was transmitted
 523:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 524:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @param flagsPDO TPDO request flags returned by @ref OD_getFlagsPDO.
 525:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @param subIndex subIndex of the OD variable.
 526:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 527:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @return Return true if event driven TPDO with mapping to OD variable,
 528:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * indicated by flagsPDO and subIndex, was transmitted since last
 529:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @ref OD_requestTPDO call. If there was no @ref OD_requestTPDO call yet and
 530:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * TPDO was transmitted by other event, function also returns true.
 531:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  */
 532:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** static inline bool_t OD_TPDOtransmitted(uint8_t *flagsPDO, uint8_t subIndex) {
 533:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #if OD_FLAGS_PDO_SIZE > 0
 534:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     if (flagsPDO != NULL && subIndex < (OD_FLAGS_PDO_SIZE * 8)) {
 535:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****         /* return true, if subIndex-th bit is set */
 536:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****         uint8_t mask = 1 << (subIndex & 0x07);
 537:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****         if ((flagsPDO[subIndex >> 3] & mask) != 0) {
 538:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****             return true;
 539:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****         }
 540:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     }
 541:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #endif
 542:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     return false;
 543:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** }
 544:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 545:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 546:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /**
 547:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Get SDO abort code from returnCode
 548:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 549:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @param returnCode Returned from some OD access functions
 550:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 551:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @return Corresponding @ref CO_SDO_abortCode_t
 552:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  */
 553:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** uint32_t OD_getSDOabCode(ODR_t returnCode);
 554:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 555:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 556:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /**
 557:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Extend OD object with own read/write functions and/or flagsPDO
 558:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 559:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * This function gives application very powerful tool: definition of own IO
 560:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * access on OD object. Structure and attributes are the same as defined in
 561:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * original OD object, but data are read directly from (or written directly to)
 562:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * application specified object via custom function calls.
 563:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 564:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Before this function specifies extension, OD variables are accessed from
 565:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * original OD location. After this function specifies extension OD variables
 566:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * are accessed from read/write functions specified by extension. (Except when
 567:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * "odOrig" argument to @ref OD_getSub() is set to true.)
 568:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 569:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * This function must also be used, when flagsPDO needs to be enabled for
 570:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * specific entry.
 571:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 572:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @warning
 573:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Object dictionary storage works only directly on OD variables. It does not
 574:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * access read function specified here. So, if extended OD objects needs to be
 575:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * preserved, then @ref OD_writeOriginal can be used inside custom write
 576:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * function.
 577:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 578:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @warning
 579:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Read and write functions may be called from different threads, so critical
 580:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * sections in custom functions must be observed, see @ref CO_critical_sections.
 581:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 582:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @param entry OD entry returned by @ref OD_find().
 583:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @param extension Extension object, which must be initialized externally.
 584:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Extension object must exist permanently. If NULL, extension will be removed.
 585:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 586:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @return "ODR_OK" on success, "ODR_IDX_NOT_EXIST" if OD object doesn't exist.
 587:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  */
 588:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** static inline ODR_t OD_extension_init(OD_entry_t *entry,
 589:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****                                       OD_extension_t *extension)
 590:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** {
 255              	 .loc 2 590 0
 256              	 .cfi_startproc
 257              	 
 258              	 
 259              	 
 260 0000 80B4     	 push {r7}
 261              	.LCFI27:
 262              	 .cfi_def_cfa_offset 4
 263              	 .cfi_offset 7,-4
 264 0002 83B0     	 sub sp,sp,#12
 265              	.LCFI28:
 266              	 .cfi_def_cfa_offset 16
 267 0004 00AF     	 add r7,sp,#0
 268              	.LCFI29:
 269              	 .cfi_def_cfa_register 7
 270 0006 7860     	 str r0,[r7,#4]
 271 0008 3960     	 str r1,[r7]
 591:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     if (entry == NULL) return ODR_IDX_NOT_EXIST;
 272              	 .loc 2 591 0
 273 000a 7B68     	 ldr r3,[r7,#4]
 274 000c 002B     	 cmp r3,#0
 275 000e 01D1     	 bne .L14
 276              	 .loc 2 591 0 is_stmt 0 discriminator 1
 277 0010 0523     	 movs r3,#5
 278 0012 03E0     	 b .L15
 279              	.L14:
 592:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     entry->extension = extension;
 280              	 .loc 2 592 0 is_stmt 1
 281 0014 7B68     	 ldr r3,[r7,#4]
 282 0016 3A68     	 ldr r2,[r7]
 283 0018 9A60     	 str r2,[r3,#8]
 593:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     return ODR_OK;
 284              	 .loc 2 593 0
 285 001a 0023     	 movs r3,#0
 286              	.L15:
 287 001c 5BB2     	 sxtb r3,r3
 594:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** }
 288              	 .loc 2 594 0
 289 001e 1846     	 mov r0,r3
 290 0020 0C37     	 adds r7,r7,#12
 291              	.LCFI30:
 292              	 .cfi_def_cfa_offset 4
 293 0022 BD46     	 mov sp,r7
 294              	.LCFI31:
 295              	 .cfi_def_cfa_register 13
 296              	 
 297 0024 5DF8047B 	 ldr r7,[sp],#4
 298              	.LCFI32:
 299              	 .cfi_restore 7
 300              	 .cfi_def_cfa_offset 0
 301 0028 7047     	 bx lr
 302              	 .cfi_endproc
 303              	.LFE12:
 305 002a 00BF     	 .section .text.OD_get_u8,"ax",%progbits
 306              	 .align 2
 307              	 .thumb
 308              	 .thumb_func
 310              	OD_get_u8:
 311              	.LFB17:
 595:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 596:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 597:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /**
 598:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @defgroup CO_ODgetSetters Getters and setters
 599:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @{
 600:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 601:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Getter and setter helper functions for accessing different types of Object
 602:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Dictionary variables.
 603:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  */
 604:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /**
 605:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * Get variable from Object Dictionary
 606:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 607:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @param entry OD entry returned by @ref OD_find().
 608:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @param subIndex Sub-index of the variable from the OD object.
 609:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @param [out] val Value will be written here.
 610:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @param len Size of value to retrieve from OD.
 611:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @param odOrig If true, then potential IO extension on entry will be
 612:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * ignored and data in the original OD location will be returned.
 613:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  *
 614:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * @return Value from @ref ODR_t, "ODR_OK" in case of success. Error, if
 615:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * variable does not exist in object dictionary or it does not have the correct
 616:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  * length or other reason.
 617:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****  */
 618:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** ODR_t OD_get_value(const OD_entry_t *entry, uint8_t subIndex,
 619:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****                    void *val, OD_size_t len, bool_t odOrig);
 620:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 621:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /** Get int8_t variable from Object Dictionary, see @ref OD_get_value */
 622:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** static inline ODR_t OD_get_i8(const OD_entry_t *entry, uint8_t subIndex,
 623:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****                               int8_t *val, bool_t odOrig)
 624:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** {
 625:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #if C2000_PORT != 0
 626:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     return OD_get_value(entry, subIndex, val, 1, odOrig);
 627:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #else
 628:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     return OD_get_value(entry, subIndex, val, sizeof(*val), odOrig);
 629:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #endif
 630:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** }
 631:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 632:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /** Get int16_t variable from Object Dictionary, see @ref OD_get_value */
 633:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** static inline ODR_t OD_get_i16(const OD_entry_t *entry, uint8_t subIndex,
 634:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****                                int16_t *val, bool_t odOrig)
 635:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** {
 636:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #if C2000_PORT != 0
 637:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     return OD_get_value(entry, subIndex, val, 2, odOrig);
 638:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #else
 639:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     return OD_get_value(entry, subIndex, val, sizeof(*val), odOrig);
 640:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #endif
 641:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** }
 642:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 643:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /** Get int32_t variable from Object Dictionary, see @ref OD_get_value */
 644:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** static inline ODR_t OD_get_i32(const OD_entry_t *entry, uint8_t subIndex,
 645:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****                                int32_t *val, bool_t odOrig)
 646:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** {
 647:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #if C2000_PORT != 0
 648:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     return OD_get_value(entry, subIndex, val, 4, odOrig);
 649:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #else
 650:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     return OD_get_value(entry, subIndex, val, sizeof(*val), odOrig);
 651:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #endif
 652:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** }
 653:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 654:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /** Get int64_t variable from Object Dictionary, see @ref OD_get_value */
 655:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** static inline ODR_t OD_get_i64(const OD_entry_t *entry, uint8_t subIndex,
 656:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****                                int64_t *val, bool_t odOrig)
 657:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** {
 658:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #if C2000_PORT != 0
 659:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     return OD_get_value(entry, subIndex, val, 8, odOrig);
 660:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #else
 661:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     return OD_get_value(entry, subIndex, val, sizeof(*val), odOrig);
 662:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #endif
 663:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** }
 664:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 665:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /** Get uint8_t variable from Object Dictionary, see @ref OD_get_value */
 666:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** static inline ODR_t OD_get_u8(const OD_entry_t *entry, uint8_t subIndex,
 667:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****                               uint8_t *val, bool_t odOrig)
 668:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** {
 312              	 .loc 2 668 0
 313              	 .cfi_startproc
 314              	 
 315              	 
 316 0000 80B5     	 push {r7,lr}
 317              	.LCFI33:
 318              	 .cfi_def_cfa_offset 8
 319              	 .cfi_offset 7,-8
 320              	 .cfi_offset 14,-4
 321 0002 86B0     	 sub sp,sp,#24
 322              	.LCFI34:
 323              	 .cfi_def_cfa_offset 32
 324 0004 02AF     	 add r7,sp,#8
 325              	.LCFI35:
 326              	 .cfi_def_cfa 7,24
 327 0006 F860     	 str r0,[r7,#12]
 328 0008 7A60     	 str r2,[r7,#4]
 329 000a 3B60     	 str r3,[r7]
 330 000c 0B46     	 mov r3,r1
 331 000e FB72     	 strb r3,[r7,#11]
 669:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #if C2000_PORT != 0
 670:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     return OD_get_value(entry, subIndex, val, 1, odOrig);
 671:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #else
 672:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     return OD_get_value(entry, subIndex, val, sizeof(*val), odOrig);
 332              	 .loc 2 672 0
 333 0010 FA7A     	 ldrb r2,[r7,#11]
 334 0012 3B68     	 ldr r3,[r7]
 335 0014 0093     	 str r3,[sp]
 336 0016 F868     	 ldr r0,[r7,#12]
 337 0018 1146     	 mov r1,r2
 338 001a 7A68     	 ldr r2,[r7,#4]
 339 001c 0123     	 movs r3,#1
 340 001e FFF7FEFF 	 bl OD_get_value
 341 0022 0346     	 mov r3,r0
 673:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #endif
 674:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** }
 342              	 .loc 2 674 0
 343 0024 1846     	 mov r0,r3
 344 0026 1037     	 adds r7,r7,#16
 345              	.LCFI36:
 346              	 .cfi_def_cfa_offset 8
 347 0028 BD46     	 mov sp,r7
 348              	.LCFI37:
 349              	 .cfi_def_cfa_register 13
 350              	 
 351 002a 80BD     	 pop {r7,pc}
 352              	 .cfi_endproc
 353              	.LFE17:
 355              	 .section .text.OD_get_u16,"ax",%progbits
 356              	 .align 2
 357              	 .thumb
 358              	 .thumb_func
 360              	OD_get_u16:
 361              	.LFB18:
 675:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 676:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /** Get uint16_t variable from Object Dictionary, see @ref OD_get_value */
 677:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** static inline ODR_t OD_get_u16(const OD_entry_t *entry, uint8_t subIndex,
 678:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****                                uint16_t *val, bool_t odOrig)
 679:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** {
 362              	 .loc 2 679 0
 363              	 .cfi_startproc
 364              	 
 365              	 
 366 0000 80B5     	 push {r7,lr}
 367              	.LCFI38:
 368              	 .cfi_def_cfa_offset 8
 369              	 .cfi_offset 7,-8
 370              	 .cfi_offset 14,-4
 371 0002 86B0     	 sub sp,sp,#24
 372              	.LCFI39:
 373              	 .cfi_def_cfa_offset 32
 374 0004 02AF     	 add r7,sp,#8
 375              	.LCFI40:
 376              	 .cfi_def_cfa 7,24
 377 0006 F860     	 str r0,[r7,#12]
 378 0008 7A60     	 str r2,[r7,#4]
 379 000a 3B60     	 str r3,[r7]
 380 000c 0B46     	 mov r3,r1
 381 000e FB72     	 strb r3,[r7,#11]
 680:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #if C2000_PORT != 0
 681:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     return OD_get_value(entry, subIndex, val, 2, odOrig);
 682:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #else
 683:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     return OD_get_value(entry, subIndex, val, sizeof(*val), odOrig);
 382              	 .loc 2 683 0
 383 0010 FA7A     	 ldrb r2,[r7,#11]
 384 0012 3B68     	 ldr r3,[r7]
 385 0014 0093     	 str r3,[sp]
 386 0016 F868     	 ldr r0,[r7,#12]
 387 0018 1146     	 mov r1,r2
 388 001a 7A68     	 ldr r2,[r7,#4]
 389 001c 0223     	 movs r3,#2
 390 001e FFF7FEFF 	 bl OD_get_value
 391 0022 0346     	 mov r3,r0
 684:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #endif
 685:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** }
 392              	 .loc 2 685 0
 393 0024 1846     	 mov r0,r3
 394 0026 1037     	 adds r7,r7,#16
 395              	.LCFI41:
 396              	 .cfi_def_cfa_offset 8
 397 0028 BD46     	 mov sp,r7
 398              	.LCFI42:
 399              	 .cfi_def_cfa_register 13
 400              	 
 401 002a 80BD     	 pop {r7,pc}
 402              	 .cfi_endproc
 403              	.LFE18:
 405              	 .section .text.OD_get_u32,"ax",%progbits
 406              	 .align 2
 407              	 .thumb
 408              	 .thumb_func
 410              	OD_get_u32:
 411              	.LFB19:
 686:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** 
 687:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** /** Get uint32_t variable from Object Dictionary, see @ref OD_get_value */
 688:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** static inline ODR_t OD_get_u32(const OD_entry_t *entry, uint8_t subIndex,
 689:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****                                uint32_t *val, bool_t odOrig)
 690:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** {
 412              	 .loc 2 690 0
 413              	 .cfi_startproc
 414              	 
 415              	 
 416 0000 80B5     	 push {r7,lr}
 417              	.LCFI43:
 418              	 .cfi_def_cfa_offset 8
 419              	 .cfi_offset 7,-8
 420              	 .cfi_offset 14,-4
 421 0002 86B0     	 sub sp,sp,#24
 422              	.LCFI44:
 423              	 .cfi_def_cfa_offset 32
 424 0004 02AF     	 add r7,sp,#8
 425              	.LCFI45:
 426              	 .cfi_def_cfa 7,24
 427 0006 F860     	 str r0,[r7,#12]
 428 0008 7A60     	 str r2,[r7,#4]
 429 000a 3B60     	 str r3,[r7]
 430 000c 0B46     	 mov r3,r1
 431 000e FB72     	 strb r3,[r7,#11]
 691:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #if C2000_PORT != 0
 692:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     return OD_get_value(entry, subIndex, val, 4, odOrig);
 693:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #else
 694:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h ****     return OD_get_value(entry, subIndex, val, sizeof(*val), odOrig);
 432              	 .loc 2 694 0
 433 0010 FA7A     	 ldrb r2,[r7,#11]
 434 0012 3B68     	 ldr r3,[r7]
 435 0014 0093     	 str r3,[sp]
 436 0016 F868     	 ldr r0,[r7,#12]
 437 0018 1146     	 mov r1,r2
 438 001a 7A68     	 ldr r2,[r7,#4]
 439 001c 0423     	 movs r3,#4
 440 001e FFF7FEFF 	 bl OD_get_value
 441 0022 0346     	 mov r3,r0
 695:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** #endif
 696:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_ODinterface.h **** }
 442              	 .loc 2 696 0
 443 0024 1846     	 mov r0,r3
 444 0026 1037     	 adds r7,r7,#16
 445              	.LCFI46:
 446              	 .cfi_def_cfa_offset 8
 447 0028 BD46     	 mov sp,r7
 448              	.LCFI47:
 449              	 .cfi_def_cfa_register 13
 450              	 
 451 002a 80BD     	 pop {r7,pc}
 452              	 .cfi_endproc
 453              	.LFE19:
 455              	 .section .text.OD_write_dummy,"ax",%progbits
 456              	 .align 2
 457              	 .thumb
 458              	 .thumb_func
 460              	OD_write_dummy:
 461              	.LFB37:
 462              	 .file 3 "../CANopen/stack/301/CO_PDO.c"
   1:../CANopen/stack/301/CO_PDO.c **** /*
   2:../CANopen/stack/301/CO_PDO.c ****  * CANopen Receive Process Data Object protocol.
   3:../CANopen/stack/301/CO_PDO.c ****  *
   4:../CANopen/stack/301/CO_PDO.c ****  * @file        CO_PDO.c
   5:../CANopen/stack/301/CO_PDO.c ****  * @ingroup     CO_PDO
   6:../CANopen/stack/301/CO_PDO.c ****  * @author      Janez Paternoster
   7:../CANopen/stack/301/CO_PDO.c ****  * @copyright   2021 Janez Paternoster
   8:../CANopen/stack/301/CO_PDO.c ****  *
   9:../CANopen/stack/301/CO_PDO.c ****  * This file is part of CANopenNode, an opensource CANopen Stack.
  10:../CANopen/stack/301/CO_PDO.c ****  * Project home page is <https://github.com/CANopenNode/CANopenNode>.
  11:../CANopen/stack/301/CO_PDO.c ****  * For more information on CANopen see <http://www.can-cia.org/>.
  12:../CANopen/stack/301/CO_PDO.c ****  *
  13:../CANopen/stack/301/CO_PDO.c ****  * Licensed under the Apache License, Version 2.0 (the "License");
  14:../CANopen/stack/301/CO_PDO.c ****  * you may not use this file except in compliance with the License.
  15:../CANopen/stack/301/CO_PDO.c ****  * You may obtain a copy of the License at
  16:../CANopen/stack/301/CO_PDO.c ****  *
  17:../CANopen/stack/301/CO_PDO.c ****  *     http://www.apache.org/licenses/LICENSE-2.0
  18:../CANopen/stack/301/CO_PDO.c ****  *
  19:../CANopen/stack/301/CO_PDO.c ****  * Unless required by applicable law or agreed to in writing, software
  20:../CANopen/stack/301/CO_PDO.c ****  * distributed under the License is distributed on an "AS IS" BASIS,
  21:../CANopen/stack/301/CO_PDO.c ****  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  22:../CANopen/stack/301/CO_PDO.c ****  * See the License for the specific language governing permissions and
  23:../CANopen/stack/301/CO_PDO.c ****  * limitations under the License.
  24:../CANopen/stack/301/CO_PDO.c ****  */
  25:../CANopen/stack/301/CO_PDO.c **** 
  26:../CANopen/stack/301/CO_PDO.c **** #include <string.h>
  27:../CANopen/stack/301/CO_PDO.c **** 
  28:../CANopen/stack/301/CO_PDO.c **** #include "301/CO_PDO.h"
  29:../CANopen/stack/301/CO_PDO.c **** 
  30:../CANopen/stack/301/CO_PDO.c **** #if (CO_CONFIG_PDO) & (CO_CONFIG_RPDO_ENABLE | CO_CONFIG_TPDO_ENABLE)
  31:../CANopen/stack/301/CO_PDO.c **** 
  32:../CANopen/stack/301/CO_PDO.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_FLAG_OD_DYNAMIC
  33:../CANopen/stack/301/CO_PDO.c ****  #if ((CO_CONFIG_PDO) & CO_CONFIG_PDO_OD_IO_ACCESS) == 0
  34:../CANopen/stack/301/CO_PDO.c ****   #error Dynamic PDO mapping is not possible without CO_CONFIG_PDO_OD_IO_ACCESS
  35:../CANopen/stack/301/CO_PDO.c ****  #endif
  36:../CANopen/stack/301/CO_PDO.c **** #endif
  37:../CANopen/stack/301/CO_PDO.c **** 
  38:../CANopen/stack/301/CO_PDO.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_PDO_OD_IO_ACCESS
  39:../CANopen/stack/301/CO_PDO.c **** /*
  40:../CANopen/stack/301/CO_PDO.c ****  * Custom function for write dummy OD object. Will be used only from RPDO.
  41:../CANopen/stack/301/CO_PDO.c ****  *
  42:../CANopen/stack/301/CO_PDO.c ****  * For more information see file CO_ODinterface.h, OD_IO_t.
  43:../CANopen/stack/301/CO_PDO.c ****  */
  44:../CANopen/stack/301/CO_PDO.c **** static ODR_t OD_write_dummy(OD_stream_t *stream, const void *buf,
  45:../CANopen/stack/301/CO_PDO.c ****                             OD_size_t count, OD_size_t *countWritten)
  46:../CANopen/stack/301/CO_PDO.c **** {
 463              	 .loc 3 46 0
 464              	 .cfi_startproc
 465              	 
 466              	 
 467              	 
 468 0000 80B4     	 push {r7}
 469              	.LCFI48:
 470              	 .cfi_def_cfa_offset 4
 471              	 .cfi_offset 7,-4
 472 0002 85B0     	 sub sp,sp,#20
 473              	.LCFI49:
 474              	 .cfi_def_cfa_offset 24
 475 0004 00AF     	 add r7,sp,#0
 476              	.LCFI50:
 477              	 .cfi_def_cfa_register 7
 478 0006 F860     	 str r0,[r7,#12]
 479 0008 B960     	 str r1,[r7,#8]
 480 000a 7A60     	 str r2,[r7,#4]
 481 000c 3B60     	 str r3,[r7]
  47:../CANopen/stack/301/CO_PDO.c ****     (void) stream; (void) buf;
  48:../CANopen/stack/301/CO_PDO.c ****     if (countWritten != NULL) *countWritten = count;
 482              	 .loc 3 48 0
 483 000e 3B68     	 ldr r3,[r7]
 484 0010 002B     	 cmp r3,#0
 485 0012 02D0     	 beq .L23
 486              	 .loc 3 48 0 is_stmt 0 discriminator 1
 487 0014 3B68     	 ldr r3,[r7]
 488 0016 7A68     	 ldr r2,[r7,#4]
 489 0018 1A60     	 str r2,[r3]
 490              	.L23:
  49:../CANopen/stack/301/CO_PDO.c ****     return ODR_OK;
 491              	 .loc 3 49 0 is_stmt 1
 492 001a 0023     	 movs r3,#0
 493 001c 5BB2     	 sxtb r3,r3
  50:../CANopen/stack/301/CO_PDO.c **** }
 494              	 .loc 3 50 0
 495 001e 1846     	 mov r0,r3
 496 0020 1437     	 adds r7,r7,#20
 497              	.LCFI51:
 498              	 .cfi_def_cfa_offset 4
 499 0022 BD46     	 mov sp,r7
 500              	.LCFI52:
 501              	 .cfi_def_cfa_register 13
 502              	 
 503 0024 5DF8047B 	 ldr r7,[sp],#4
 504              	.LCFI53:
 505              	 .cfi_restore 7
 506              	 .cfi_def_cfa_offset 0
 507 0028 7047     	 bx lr
 508              	 .cfi_endproc
 509              	.LFE37:
 511 002a 00BF     	 .section .text.OD_read_dummy,"ax",%progbits
 512              	 .align 2
 513              	 .thumb
 514              	 .thumb_func
 516              	OD_read_dummy:
 517              	.LFB38:
  51:../CANopen/stack/301/CO_PDO.c **** 
  52:../CANopen/stack/301/CO_PDO.c **** /*
  53:../CANopen/stack/301/CO_PDO.c ****  * Custom function for read dummy OD object. Will be used only from TPDO.
  54:../CANopen/stack/301/CO_PDO.c ****  *
  55:../CANopen/stack/301/CO_PDO.c ****  * For more information see file CO_ODinterface.h, OD_IO_t.
  56:../CANopen/stack/301/CO_PDO.c ****  */
  57:../CANopen/stack/301/CO_PDO.c **** static ODR_t OD_read_dummy(OD_stream_t *stream, void *buf,
  58:../CANopen/stack/301/CO_PDO.c ****                            OD_size_t count, OD_size_t *countRead)
  59:../CANopen/stack/301/CO_PDO.c **** {
 518              	 .loc 3 59 0
 519              	 .cfi_startproc
 520              	 
 521              	 
 522 0000 80B5     	 push {r7,lr}
 523              	.LCFI54:
 524              	 .cfi_def_cfa_offset 8
 525              	 .cfi_offset 7,-8
 526              	 .cfi_offset 14,-4
 527 0002 84B0     	 sub sp,sp,#16
 528              	.LCFI55:
 529              	 .cfi_def_cfa_offset 24
 530 0004 00AF     	 add r7,sp,#0
 531              	.LCFI56:
 532              	 .cfi_def_cfa_register 7
 533 0006 F860     	 str r0,[r7,#12]
 534 0008 B960     	 str r1,[r7,#8]
 535 000a 7A60     	 str r2,[r7,#4]
 536 000c 3B60     	 str r3,[r7]
  60:../CANopen/stack/301/CO_PDO.c ****     if (buf == NULL || stream == NULL || countRead == NULL) {
 537              	 .loc 3 60 0
 538 000e BB68     	 ldr r3,[r7,#8]
 539 0010 002B     	 cmp r3,#0
 540 0012 05D0     	 beq .L26
 541              	 .loc 3 60 0 is_stmt 0 discriminator 1
 542 0014 FB68     	 ldr r3,[r7,#12]
 543 0016 002B     	 cmp r3,#0
 544 0018 02D0     	 beq .L26
 545              	 .loc 3 60 0 discriminator 2
 546 001a 3B68     	 ldr r3,[r7]
 547 001c 002B     	 cmp r3,#0
 548 001e 01D1     	 bne .L27
 549              	.L26:
  61:../CANopen/stack/301/CO_PDO.c ****         return ODR_DEV_INCOMPAT;
 550              	 .loc 3 61 0 is_stmt 1
 551 0020 0923     	 movs r3,#9
 552 0022 10E0     	 b .L28
 553              	.L27:
  62:../CANopen/stack/301/CO_PDO.c ****     }
  63:../CANopen/stack/301/CO_PDO.c **** 
  64:../CANopen/stack/301/CO_PDO.c ****     if (count > stream->dataLength) {
 554              	 .loc 3 64 0
 555 0024 FB68     	 ldr r3,[r7,#12]
 556 0026 9A68     	 ldr r2,[r3,#8]
 557 0028 7B68     	 ldr r3,[r7,#4]
 558 002a 9A42     	 cmp r2,r3
 559 002c 02D2     	 bcs .L29
  65:../CANopen/stack/301/CO_PDO.c ****         count = stream->dataLength;
 560              	 .loc 3 65 0
 561 002e FB68     	 ldr r3,[r7,#12]
 562 0030 9B68     	 ldr r3,[r3,#8]
 563 0032 7B60     	 str r3,[r7,#4]
 564              	.L29:
  66:../CANopen/stack/301/CO_PDO.c ****     }
  67:../CANopen/stack/301/CO_PDO.c **** 
  68:../CANopen/stack/301/CO_PDO.c ****     memset(buf, 0, count);
 565              	 .loc 3 68 0
 566 0034 B868     	 ldr r0,[r7,#8]
 567 0036 0021     	 movs r1,#0
 568 0038 7A68     	 ldr r2,[r7,#4]
 569 003a FFF7FEFF 	 bl memset
  69:../CANopen/stack/301/CO_PDO.c **** 
  70:../CANopen/stack/301/CO_PDO.c ****     *countRead = count;
 570              	 .loc 3 70 0
 571 003e 3B68     	 ldr r3,[r7]
 572 0040 7A68     	 ldr r2,[r7,#4]
 573 0042 1A60     	 str r2,[r3]
  71:../CANopen/stack/301/CO_PDO.c ****     return ODR_OK;
 574              	 .loc 3 71 0
 575 0044 0023     	 movs r3,#0
 576              	.L28:
 577 0046 5BB2     	 sxtb r3,r3
  72:../CANopen/stack/301/CO_PDO.c **** }
 578              	 .loc 3 72 0
 579 0048 1846     	 mov r0,r3
 580 004a 1037     	 adds r7,r7,#16
 581              	.LCFI57:
 582              	 .cfi_def_cfa_offset 8
 583 004c BD46     	 mov sp,r7
 584              	.LCFI58:
 585              	 .cfi_def_cfa_register 13
 586              	 
 587 004e 80BD     	 pop {r7,pc}
 588              	 .cfi_endproc
 589              	.LFE38:
 591              	 .section .text.PDOconfigMap,"ax",%progbits
 592              	 .align 2
 593              	 .thumb
 594              	 .thumb_func
 596              	PDOconfigMap:
 597              	.LFB39:
  73:../CANopen/stack/301/CO_PDO.c **** 
  74:../CANopen/stack/301/CO_PDO.c **** 
  75:../CANopen/stack/301/CO_PDO.c **** /*
  76:../CANopen/stack/301/CO_PDO.c ****  * Find mapped variable in Object Dictionary and configure entry in RPDO or TPDO
  77:../CANopen/stack/301/CO_PDO.c ****  *
  78:../CANopen/stack/301/CO_PDO.c ****  * @param PDO This object will be configured. If map is erroneous, then it will
  79:../CANopen/stack/301/CO_PDO.c ****  * stay unchanged.
  80:../CANopen/stack/301/CO_PDO.c ****  * @param map PDO mapping parameter.
  81:../CANopen/stack/301/CO_PDO.c ****  * @param mapIndex from 0 to CO_PDO_MAX_MAPPED_ENTRIES
  82:../CANopen/stack/301/CO_PDO.c ****  * @param isRPDO True for RPDO and false for TPDO.
  83:../CANopen/stack/301/CO_PDO.c ****  * @param OD Object Dictionary.
  84:../CANopen/stack/301/CO_PDO.c ****  *
  85:../CANopen/stack/301/CO_PDO.c ****  * @return ODR_OK on success, otherwise error reason.
  86:../CANopen/stack/301/CO_PDO.c ****  */
  87:../CANopen/stack/301/CO_PDO.c **** static ODR_t PDOconfigMap(CO_PDO_common_t *PDO,
  88:../CANopen/stack/301/CO_PDO.c ****                           uint32_t map,
  89:../CANopen/stack/301/CO_PDO.c ****                           uint8_t mapIndex,
  90:../CANopen/stack/301/CO_PDO.c ****                           bool_t isRPDO,
  91:../CANopen/stack/301/CO_PDO.c ****                           OD_t *OD)
  92:../CANopen/stack/301/CO_PDO.c **** {
 598              	 .loc 3 92 0
 599              	 .cfi_startproc
 600              	 
 601              	 
 602 0000 B0B5     	 push {r4,r5,r7,lr}
 603              	.LCFI59:
 604              	 .cfi_def_cfa_offset 16
 605              	 .cfi_offset 4,-16
 606              	 .cfi_offset 5,-12
 607              	 .cfi_offset 7,-8
 608              	 .cfi_offset 14,-4
 609 0002 92B0     	 sub sp,sp,#72
 610              	.LCFI60:
 611              	 .cfi_def_cfa_offset 88
 612 0004 00AF     	 add r7,sp,#0
 613              	.LCFI61:
 614              	 .cfi_def_cfa_register 7
 615 0006 F860     	 str r0,[r7,#12]
 616 0008 B960     	 str r1,[r7,#8]
 617 000a 3B60     	 str r3,[r7]
 618 000c 1346     	 mov r3,r2
 619 000e FB71     	 strb r3,[r7,#7]
  93:../CANopen/stack/301/CO_PDO.c ****     uint16_t index = (uint16_t) (map >> 16);
 620              	 .loc 3 93 0
 621 0010 BB68     	 ldr r3,[r7,#8]
 622 0012 1B0C     	 lsrs r3,r3,#16
 623 0014 A7F84630 	 strh r3,[r7,#70]
  94:../CANopen/stack/301/CO_PDO.c **** #if (C2000_PORT != 0)
  95:../CANopen/stack/301/CO_PDO.c ****     /* Note: C2000 uint8_t is 16-bit wide */
  96:../CANopen/stack/301/CO_PDO.c ****     uint8_t subIndex = (uint8_t) ((map >> 8) & 0x00FF);
  97:../CANopen/stack/301/CO_PDO.c ****     uint8_t mappedLengthBits = (uint8_t)(map & 0x00FF);
  98:../CANopen/stack/301/CO_PDO.c **** #else
  99:../CANopen/stack/301/CO_PDO.c ****     uint8_t subIndex = (uint8_t) (map >> 8);
 624              	 .loc 3 99 0
 625 0018 BB68     	 ldr r3,[r7,#8]
 626 001a 1B0A     	 lsrs r3,r3,#8
 627 001c 87F84530 	 strb r3,[r7,#69]
 100:../CANopen/stack/301/CO_PDO.c ****     uint8_t mappedLengthBits = (uint8_t) map;
 628              	 .loc 3 100 0
 629 0020 BB68     	 ldr r3,[r7,#8]
 630 0022 87F84430 	 strb r3,[r7,#68]
 101:../CANopen/stack/301/CO_PDO.c **** #endif
 102:../CANopen/stack/301/CO_PDO.c ****     uint8_t mappedLength = mappedLengthBits >> 3;
 631              	 .loc 3 102 0
 632 0026 97F84430 	 ldrb r3,[r7,#68]
 633 002a DB08     	 lsrs r3,r3,#3
 634 002c 87F84330 	 strb r3,[r7,#67]
 103:../CANopen/stack/301/CO_PDO.c ****     OD_IO_t *OD_IO = &PDO->OD_IO[mapIndex];
 635              	 .loc 3 103 0
 636 0030 FA79     	 ldrb r2,[r7,#7]
 637 0032 1346     	 mov r3,r2
 638 0034 DB00     	 lsls r3,r3,#3
 639 0036 9B1A     	 subs r3,r3,r2
 640 0038 9B00     	 lsls r3,r3,#2
 641 003a 1033     	 adds r3,r3,#16
 642 003c FA68     	 ldr r2,[r7,#12]
 643 003e 1344     	 add r3,r3,r2
 644 0040 FB63     	 str r3,[r7,#60]
 104:../CANopen/stack/301/CO_PDO.c **** 
 105:../CANopen/stack/301/CO_PDO.c ****     /* total PDO length can not be more than CO_PDO_MAX_SIZE bytes */
 106:../CANopen/stack/301/CO_PDO.c ****     if (mappedLength > CO_PDO_MAX_SIZE) {
 645              	 .loc 3 106 0
 646 0042 97F84330 	 ldrb r3,[r7,#67]
 647 0046 082B     	 cmp r3,#8
 648 0048 01D9     	 bls .L31
 107:../CANopen/stack/301/CO_PDO.c ****         return ODR_MAP_LEN; /* PDO length exceeded */
 649              	 .loc 3 107 0
 650 004a 0723     	 movs r3,#7
 651 004c 93E0     	 b .L41
 652              	.L31:
 108:../CANopen/stack/301/CO_PDO.c ****     }
 109:../CANopen/stack/301/CO_PDO.c **** 
 110:../CANopen/stack/301/CO_PDO.c ****     /* is there a reference to the dummy entry */
 111:../CANopen/stack/301/CO_PDO.c ****     if (index < 0x20 && subIndex == 0) {
 653              	 .loc 3 111 0
 654 004e B7F84630 	 ldrh r3,[r7,#70]
 655 0052 1F2B     	 cmp r3,#31
 656 0054 1AD8     	 bhi .L33
 657              	 .loc 3 111 0 is_stmt 0 discriminator 1
 658 0056 97F84530 	 ldrb r3,[r7,#69]
 659 005a 002B     	 cmp r3,#0
 660 005c 16D1     	 bne .L33
 661              	.LBB2:
 112:../CANopen/stack/301/CO_PDO.c ****         OD_stream_t *stream = &OD_IO->stream;
 662              	 .loc 3 112 0 is_stmt 1
 663 005e FB6B     	 ldr r3,[r7,#60]
 664 0060 BB63     	 str r3,[r7,#56]
 113:../CANopen/stack/301/CO_PDO.c ****         memset(stream, 0, sizeof(OD_stream_t));
 665              	 .loc 3 113 0
 666 0062 B86B     	 ldr r0,[r7,#56]
 667 0064 0021     	 movs r1,#0
 668 0066 1422     	 movs r2,#20
 669 0068 FFF7FEFF 	 bl memset
 114:../CANopen/stack/301/CO_PDO.c ****         stream->dataLength = stream->dataOffset = mappedLength;
 670              	 .loc 3 114 0
 671 006c 97F84320 	 ldrb r2,[r7,#67]
 672 0070 BB6B     	 ldr r3,[r7,#56]
 673 0072 DA60     	 str r2,[r3,#12]
 674 0074 BB6B     	 ldr r3,[r7,#56]
 675 0076 DA68     	 ldr r2,[r3,#12]
 676 0078 BB6B     	 ldr r3,[r7,#56]
 677 007a 9A60     	 str r2,[r3,#8]
 115:../CANopen/stack/301/CO_PDO.c ****         OD_IO->read = OD_read_dummy;
 678              	 .loc 3 115 0
 679 007c FB6B     	 ldr r3,[r7,#60]
 680 007e 404A     	 ldr r2,.L42
 681 0080 5A61     	 str r2,[r3,#20]
 116:../CANopen/stack/301/CO_PDO.c ****         OD_IO->write = OD_write_dummy;
 682              	 .loc 3 116 0
 683 0082 FB6B     	 ldr r3,[r7,#60]
 684 0084 3F4A     	 ldr r2,.L42+4
 685 0086 9A61     	 str r2,[r3,#24]
 117:../CANopen/stack/301/CO_PDO.c ****         return ODR_OK;
 686              	 .loc 3 117 0
 687 0088 0023     	 movs r3,#0
 688 008a 74E0     	 b .L41
 689              	.L33:
 690              	.LBE2:
 118:../CANopen/stack/301/CO_PDO.c ****     }
 119:../CANopen/stack/301/CO_PDO.c **** 
 120:../CANopen/stack/301/CO_PDO.c ****     /* find entry in the Object Dictionary */
 121:../CANopen/stack/301/CO_PDO.c ****     OD_IO_t OD_IOcopy;
 122:../CANopen/stack/301/CO_PDO.c ****     OD_entry_t *entry = OD_find(OD, index);
 691              	 .loc 3 122 0
 692 008c B7F84630 	 ldrh r3,[r7,#70]
 693 0090 B86D     	 ldr r0,[r7,#88]
 694 0092 1946     	 mov r1,r3
 695 0094 FFF7FEFF 	 bl OD_find
 696 0098 7863     	 str r0,[r7,#52]
 123:../CANopen/stack/301/CO_PDO.c ****     ODR_t odRet = OD_getSub(entry, subIndex, &OD_IOcopy, false);
 697              	 .loc 3 123 0
 698 009a 97F84520 	 ldrb r2,[r7,#69]
 699 009e 07F11403 	 add r3,r7,#20
 700 00a2 786B     	 ldr r0,[r7,#52]
 701 00a4 1146     	 mov r1,r2
 702 00a6 1A46     	 mov r2,r3
 703 00a8 0023     	 movs r3,#0
 704 00aa FFF7FEFF 	 bl OD_getSub
 705 00ae 0346     	 mov r3,r0
 706 00b0 87F83330 	 strb r3,[r7,#51]
 124:../CANopen/stack/301/CO_PDO.c ****     if (odRet != ODR_OK) {
 707              	 .loc 3 124 0
 708 00b4 97F93330 	 ldrsb r3,[r7,#51]
 709 00b8 002B     	 cmp r3,#0
 710 00ba 02D0     	 beq .L34
 125:../CANopen/stack/301/CO_PDO.c ****         return odRet;
 711              	 .loc 3 125 0
 712 00bc 97F83330 	 ldrb r3,[r7,#51]
 713 00c0 59E0     	 b .L41
 714              	.L34:
 126:../CANopen/stack/301/CO_PDO.c ****     }
 127:../CANopen/stack/301/CO_PDO.c **** 
 128:../CANopen/stack/301/CO_PDO.c ****     /* verify access attributes, byte alignment and length */
 129:../CANopen/stack/301/CO_PDO.c ****     OD_attr_t testAttribute = isRPDO ? ODA_RPDO : ODA_TPDO;
 715              	 .loc 3 129 0
 716 00c2 3B68     	 ldr r3,[r7]
 717 00c4 002B     	 cmp r3,#0
 718 00c6 01D0     	 beq .L35
 719              	 .loc 3 129 0 is_stmt 0 discriminator 1
 720 00c8 0823     	 movs r3,#8
 721 00ca 00E0     	 b .L36
 722              	.L35:
 723              	 .loc 3 129 0 discriminator 2
 724 00cc 0423     	 movs r3,#4
 725              	.L36:
 726              	 .loc 3 129 0 discriminator 4
 727 00ce 87F83230 	 strb r3,[r7,#50]
 130:../CANopen/stack/301/CO_PDO.c ****     if ((OD_IOcopy.stream.attribute & testAttribute) == 0
 728              	 .loc 3 130 0 is_stmt 1 discriminator 4
 729 00d2 97F82420 	 ldrb r2,[r7,#36]
 730 00d6 97F83230 	 ldrb r3,[r7,#50]
 731 00da 1340     	 ands r3,r3,r2
 732 00dc DBB2     	 uxtb r3,r3
 733 00de 002B     	 cmp r3,#0
 734 00e0 0AD0     	 beq .L37
 131:../CANopen/stack/301/CO_PDO.c ****         || (mappedLengthBits & 0x07) != 0
 735              	 .loc 3 131 0
 736 00e2 97F84430 	 ldrb r3,[r7,#68]
 737 00e6 03F00703 	 and r3,r3,#7
 738 00ea 002B     	 cmp r3,#0
 739 00ec 04D1     	 bne .L37
 132:../CANopen/stack/301/CO_PDO.c ****         || OD_IOcopy.stream.dataLength < mappedLength
 740              	 .loc 3 132 0
 741 00ee FA69     	 ldr r2,[r7,#28]
 742 00f0 97F84330 	 ldrb r3,[r7,#67]
 743 00f4 9A42     	 cmp r2,r3
 744 00f6 01D2     	 bcs .L38
 745              	.L37:
 133:../CANopen/stack/301/CO_PDO.c ****     ) {
 134:../CANopen/stack/301/CO_PDO.c ****         return ODR_NO_MAP; /* Object cannot be mapped to the PDO. */
 746              	 .loc 3 134 0
 747 00f8 0623     	 movs r3,#6
 748 00fa 3CE0     	 b .L41
 749              	.L38:
 135:../CANopen/stack/301/CO_PDO.c ****     }
 136:../CANopen/stack/301/CO_PDO.c **** 
 137:../CANopen/stack/301/CO_PDO.c ****     /* Copy values and store mappedLength temporary. */
 138:../CANopen/stack/301/CO_PDO.c ****     *OD_IO = OD_IOcopy;
 750              	 .loc 3 138 0
 751 00fc FB6B     	 ldr r3,[r7,#60]
 752 00fe 1D46     	 mov r5,r3
 753 0100 07F11404 	 add r4,r7,#20
 754 0104 0FCC     	 ldmia r4!,{r0,r1,r2,r3}
 755 0106 0FC5     	 stmia r5!,{r0,r1,r2,r3}
 756 0108 94E80700 	 ldmia r4,{r0,r1,r2}
 757 010c 85E80700 	 stmia r5,{r0,r1,r2}
 139:../CANopen/stack/301/CO_PDO.c ****     OD_IO->stream.dataOffset = mappedLength;
 758              	 .loc 3 139 0
 759 0110 97F84320 	 ldrb r2,[r7,#67]
 760 0114 FB6B     	 ldr r3,[r7,#60]
 761 0116 DA60     	 str r2,[r3,#12]
 140:../CANopen/stack/301/CO_PDO.c **** 
 141:../CANopen/stack/301/CO_PDO.c ****     /* get TPDO request flag byte from extension */
 142:../CANopen/stack/301/CO_PDO.c **** #if OD_FLAGS_PDO_SIZE > 0
 143:../CANopen/stack/301/CO_PDO.c ****     if (!isRPDO) {
 762              	 .loc 3 143 0
 763 0118 3B68     	 ldr r3,[r7]
 764 011a 002B     	 cmp r3,#0
 765 011c 2AD1     	 bne .L39
 144:../CANopen/stack/301/CO_PDO.c ****         if (subIndex < (OD_FLAGS_PDO_SIZE * 8) && entry->extension != NULL) {
 766              	 .loc 3 144 0
 767 011e 97F84530 	 ldrb r3,[r7,#69]
 768 0122 1F2B     	 cmp r3,#31
 769 0124 20D8     	 bhi .L40
 770              	 .loc 3 144 0 is_stmt 0 discriminator 1
 771 0126 7B6B     	 ldr r3,[r7,#52]
 772 0128 9B68     	 ldr r3,[r3,#8]
 773 012a 002B     	 cmp r3,#0
 774 012c 1CD0     	 beq .L40
 145:../CANopen/stack/301/CO_PDO.c ****             PDO->flagPDObyte[mapIndex] =
 775              	 .loc 3 145 0 is_stmt 1
 776 012e FA79     	 ldrb r2,[r7,#7]
 146:../CANopen/stack/301/CO_PDO.c ****                     &entry->extension->flagsPDO[subIndex >> 3];
 777              	 .loc 3 146 0
 778 0130 7B6B     	 ldr r3,[r7,#52]
 779 0132 9968     	 ldr r1,[r3,#8]
 780 0134 97F84530 	 ldrb r3,[r7,#69]
 781 0138 DB08     	 lsrs r3,r3,#3
 782 013a DBB2     	 uxtb r3,r3
 783 013c 0833     	 adds r3,r3,#8
 784 013e 0B44     	 add r3,r3,r1
 785 0140 191D     	 adds r1,r3,#4
 145:../CANopen/stack/301/CO_PDO.c ****             PDO->flagPDObyte[mapIndex] =
 786              	 .loc 3 145 0
 787 0142 FB68     	 ldr r3,[r7,#12]
 788 0144 3C32     	 adds r2,r2,#60
 789 0146 43F82210 	 str r1,[r3,r2,lsl#2]
 147:../CANopen/stack/301/CO_PDO.c ****             PDO->flagPDObitmask[mapIndex] = 1 << (subIndex & 0x07);
 790              	 .loc 3 147 0
 791 014a FB79     	 ldrb r3,[r7,#7]
 792 014c 97F84520 	 ldrb r2,[r7,#69]
 793 0150 02F00702 	 and r2,r2,#7
 794 0154 0121     	 movs r1,#1
 795 0156 01FA02F2 	 lsl r2,r1,r2
 796 015a D1B2     	 uxtb r1,r2
 797 015c FA68     	 ldr r2,[r7,#12]
 798 015e 1344     	 add r3,r3,r2
 799 0160 0A46     	 mov r2,r1
 800 0162 83F81021 	 strb r2,[r3,#272]
 801 0166 05E0     	 b .L39
 802              	.L40:
 148:../CANopen/stack/301/CO_PDO.c ****         }
 149:../CANopen/stack/301/CO_PDO.c ****         else {
 150:../CANopen/stack/301/CO_PDO.c ****             PDO->flagPDObyte[mapIndex] = NULL;
 803              	 .loc 3 150 0
 804 0168 FA79     	 ldrb r2,[r7,#7]
 805 016a FB68     	 ldr r3,[r7,#12]
 806 016c 3C32     	 adds r2,r2,#60
 807 016e 0021     	 movs r1,#0
 808 0170 43F82210 	 str r1,[r3,r2,lsl#2]
 809              	.L39:
 151:../CANopen/stack/301/CO_PDO.c ****         }
 152:../CANopen/stack/301/CO_PDO.c ****     }
 153:../CANopen/stack/301/CO_PDO.c **** #endif
 154:../CANopen/stack/301/CO_PDO.c **** 
 155:../CANopen/stack/301/CO_PDO.c ****     return ODR_OK;
 810              	 .loc 3 155 0
 811 0174 0023     	 movs r3,#0
 812              	.L41:
 813 0176 5BB2     	 sxtb r3,r3
 156:../CANopen/stack/301/CO_PDO.c **** }
 814              	 .loc 3 156 0 discriminator 1
 815 0178 1846     	 mov r0,r3
 816 017a 4837     	 adds r7,r7,#72
 817              	.LCFI62:
 818              	 .cfi_def_cfa_offset 16
 819 017c BD46     	 mov sp,r7
 820              	.LCFI63:
 821              	 .cfi_def_cfa_register 13
 822              	 
 823 017e B0BD     	 pop {r4,r5,r7,pc}
 824              	.L43:
 825              	 .align 2
 826              	.L42:
 827 0180 00000000 	 .word OD_read_dummy
 828 0184 00000000 	 .word OD_write_dummy
 829              	 .cfi_endproc
 830              	.LFE39:
 832              	 .section .text.PDO_initMapping,"ax",%progbits
 833              	 .align 2
 834              	 .thumb
 835              	 .thumb_func
 837              	PDO_initMapping:
 838              	.LFB40:
 157:../CANopen/stack/301/CO_PDO.c **** 
 158:../CANopen/stack/301/CO_PDO.c **** /*
 159:../CANopen/stack/301/CO_PDO.c ****  * Initialize PDO mapping parameters
 160:../CANopen/stack/301/CO_PDO.c ****  *
 161:../CANopen/stack/301/CO_PDO.c ****  * @param PDO This object.
 162:../CANopen/stack/301/CO_PDO.c ****  * @param OD Object Dictionary.
 163:../CANopen/stack/301/CO_PDO.c ****  * @param OD_PDOMapPar OD entry for "PDO mapping parameter".
 164:../CANopen/stack/301/CO_PDO.c ****  * @param isRPDO True for RPDO and false for TPDO.
 165:../CANopen/stack/301/CO_PDO.c ****  * @param [out] errInfo Additional information in case of error, may be NULL.
 166:../CANopen/stack/301/CO_PDO.c ****  * @param [out] erroneousMap Additional information about erroneous map.
 167:../CANopen/stack/301/CO_PDO.c ****  *
 168:../CANopen/stack/301/CO_PDO.c ****  * @return #CO_ReturnError_t CO_ERROR_NO on success.
 169:../CANopen/stack/301/CO_PDO.c ****  */
 170:../CANopen/stack/301/CO_PDO.c **** static CO_ReturnError_t PDO_initMapping(CO_PDO_common_t *PDO,
 171:../CANopen/stack/301/CO_PDO.c ****                                         OD_t *OD,
 172:../CANopen/stack/301/CO_PDO.c ****                                         OD_entry_t *OD_PDOMapPar,
 173:../CANopen/stack/301/CO_PDO.c ****                                         bool_t isRPDO,
 174:../CANopen/stack/301/CO_PDO.c ****                                         uint32_t *errInfo,
 175:../CANopen/stack/301/CO_PDO.c ****                                         uint32_t *erroneousMap)
 176:../CANopen/stack/301/CO_PDO.c **** {
 839              	 .loc 3 176 0
 840              	 .cfi_startproc
 841              	 
 842              	 
 843 0000 80B5     	 push {r7,lr}
 844              	.LCFI64:
 845              	 .cfi_def_cfa_offset 8
 846              	 .cfi_offset 7,-8
 847              	 .cfi_offset 14,-4
 848 0002 8CB0     	 sub sp,sp,#48
 849              	.LCFI65:
 850              	 .cfi_def_cfa_offset 56
 851 0004 02AF     	 add r7,sp,#8
 852              	.LCFI66:
 853              	 .cfi_def_cfa 7,48
 854 0006 F860     	 str r0,[r7,#12]
 855 0008 B960     	 str r1,[r7,#8]
 856 000a 7A60     	 str r2,[r7,#4]
 857 000c 3B60     	 str r3,[r7]
 177:../CANopen/stack/301/CO_PDO.c ****     ODR_t odRet;
 178:../CANopen/stack/301/CO_PDO.c ****     size_t pdoDataLength = 0;
 858              	 .loc 3 178 0
 859 000e 0023     	 movs r3,#0
 860 0010 7B62     	 str r3,[r7,#36]
 179:../CANopen/stack/301/CO_PDO.c ****     uint8_t mappedObjectsCount = 0;
 861              	 .loc 3 179 0
 862 0012 0023     	 movs r3,#0
 863 0014 FB76     	 strb r3,[r7,#27]
 180:../CANopen/stack/301/CO_PDO.c **** 
 181:../CANopen/stack/301/CO_PDO.c ****     /* number of mapped application objects in PDO */
 182:../CANopen/stack/301/CO_PDO.c ****     odRet = OD_get_u8(OD_PDOMapPar, 0, &mappedObjectsCount, true);
 864              	 .loc 3 182 0
 865 0016 07F11B03 	 add r3,r7,#27
 866 001a 7868     	 ldr r0,[r7,#4]
 867 001c 0021     	 movs r1,#0
 868 001e 1A46     	 mov r2,r3
 869 0020 0123     	 movs r3,#1
 870 0022 FFF7FEFF 	 bl OD_get_u8
 871 0026 0346     	 mov r3,r0
 872 0028 87F82230 	 strb r3,[r7,#34]
 183:../CANopen/stack/301/CO_PDO.c ****     if (odRet != ODR_OK) {
 873              	 .loc 3 183 0
 874 002c 97F92230 	 ldrsb r3,[r7,#34]
 875 0030 002B     	 cmp r3,#0
 876 0032 0BD0     	 beq .L45
 184:../CANopen/stack/301/CO_PDO.c ****         if (errInfo != NULL) {
 877              	 .loc 3 184 0
 878 0034 3B6B     	 ldr r3,[r7,#48]
 879 0036 002B     	 cmp r3,#0
 880 0038 06D0     	 beq .L46
 185:../CANopen/stack/301/CO_PDO.c ****             *errInfo = ((uint32_t)OD_getIndex(OD_PDOMapPar)) << 8;
 881              	 .loc 3 185 0
 882 003a 7868     	 ldr r0,[r7,#4]
 883 003c FFF7FEFF 	 bl OD_getIndex
 884 0040 0346     	 mov r3,r0
 885 0042 1A02     	 lsls r2,r3,#8
 886 0044 3B6B     	 ldr r3,[r7,#48]
 887 0046 1A60     	 str r2,[r3]
 888              	.L46:
 186:../CANopen/stack/301/CO_PDO.c ****         }
 187:../CANopen/stack/301/CO_PDO.c ****         return CO_ERROR_OD_PARAMETERS;
 889              	 .loc 3 187 0
 890 0048 F423     	 movs r3,#244
 891 004a 81E0     	 b .L59
 892              	.L45:
 893              	.LBB3:
 188:../CANopen/stack/301/CO_PDO.c ****     }
 189:../CANopen/stack/301/CO_PDO.c **** 
 190:../CANopen/stack/301/CO_PDO.c ****     for (uint8_t i = 0; i < CO_PDO_MAX_MAPPED_ENTRIES; i++) {
 894              	 .loc 3 190 0
 895 004c 0023     	 movs r3,#0
 896 004e 87F82330 	 strb r3,[r7,#35]
 897 0052 5DE0     	 b .L48
 898              	.L55:
 899              	.LBB4:
 191:../CANopen/stack/301/CO_PDO.c ****         OD_IO_t *OD_IO = &PDO->OD_IO[i];
 900              	 .loc 3 191 0
 901 0054 97F82320 	 ldrb r2,[r7,#35]
 902 0058 1346     	 mov r3,r2
 903 005a DB00     	 lsls r3,r3,#3
 904 005c 9B1A     	 subs r3,r3,r2
 905 005e 9B00     	 lsls r3,r3,#2
 906 0060 1033     	 adds r3,r3,#16
 907 0062 FA68     	 ldr r2,[r7,#12]
 908 0064 1344     	 add r3,r3,r2
 909 0066 FB61     	 str r3,[r7,#28]
 192:../CANopen/stack/301/CO_PDO.c ****         uint32_t map = 0;
 910              	 .loc 3 192 0
 911 0068 0023     	 movs r3,#0
 912 006a 7B61     	 str r3,[r7,#20]
 193:../CANopen/stack/301/CO_PDO.c **** 
 194:../CANopen/stack/301/CO_PDO.c ****         odRet = OD_get_u32(OD_PDOMapPar, i + 1, &map, true);
 913              	 .loc 3 194 0
 914 006c 97F82330 	 ldrb r3,[r7,#35]
 915 0070 0133     	 adds r3,r3,#1
 916 0072 DAB2     	 uxtb r2,r3
 917 0074 07F11403 	 add r3,r7,#20
 918 0078 7868     	 ldr r0,[r7,#4]
 919 007a 1146     	 mov r1,r2
 920 007c 1A46     	 mov r2,r3
 921 007e 0123     	 movs r3,#1
 922 0080 FFF7FEFF 	 bl OD_get_u32
 923 0084 0346     	 mov r3,r0
 924 0086 87F82230 	 strb r3,[r7,#34]
 195:../CANopen/stack/301/CO_PDO.c ****         if (odRet == ODR_SUB_NOT_EXIST) {
 925              	 .loc 3 195 0
 926 008a 97F92230 	 ldrsb r3,[r7,#34]
 927 008e 0E2B     	 cmp r3,#14
 928 0090 39D0     	 beq .L50
 196:../CANopen/stack/301/CO_PDO.c ****             continue;
 197:../CANopen/stack/301/CO_PDO.c ****         }
 198:../CANopen/stack/301/CO_PDO.c ****         if (odRet != ODR_OK) {
 929              	 .loc 3 198 0
 930 0092 97F92230 	 ldrsb r3,[r7,#34]
 931 0096 002B     	 cmp r3,#0
 932 0098 0ED0     	 beq .L51
 199:../CANopen/stack/301/CO_PDO.c ****             if (errInfo != NULL) {
 933              	 .loc 3 199 0
 934 009a 3B6B     	 ldr r3,[r7,#48]
 935 009c 002B     	 cmp r3,#0
 936 009e 09D0     	 beq .L52
 200:../CANopen/stack/301/CO_PDO.c ****                 *errInfo = (((uint32_t)OD_getIndex(OD_PDOMapPar))<<8) | i;
 937              	 .loc 3 200 0
 938 00a0 7868     	 ldr r0,[r7,#4]
 939 00a2 FFF7FEFF 	 bl OD_getIndex
 940 00a6 0346     	 mov r3,r0
 941 00a8 1A02     	 lsls r2,r3,#8
 942 00aa 97F82330 	 ldrb r3,[r7,#35]
 943 00ae 1A43     	 orrs r2,r2,r3
 944 00b0 3B6B     	 ldr r3,[r7,#48]
 945 00b2 1A60     	 str r2,[r3]
 946              	.L52:
 201:../CANopen/stack/301/CO_PDO.c ****             }
 202:../CANopen/stack/301/CO_PDO.c ****             return CO_ERROR_OD_PARAMETERS;
 947              	 .loc 3 202 0
 948 00b4 F423     	 movs r3,#244
 949 00b6 4BE0     	 b .L59
 950              	.L51:
 203:../CANopen/stack/301/CO_PDO.c ****         }
 204:../CANopen/stack/301/CO_PDO.c **** 
 205:../CANopen/stack/301/CO_PDO.c ****         odRet = PDOconfigMap(PDO, map, i, isRPDO, OD);
 951              	 .loc 3 205 0
 952 00b8 7969     	 ldr r1,[r7,#20]
 953 00ba 97F82320 	 ldrb r2,[r7,#35]
 954 00be BB68     	 ldr r3,[r7,#8]
 955 00c0 0093     	 str r3,[sp]
 956 00c2 F868     	 ldr r0,[r7,#12]
 957 00c4 3B68     	 ldr r3,[r7]
 958 00c6 FFF7FEFF 	 bl PDOconfigMap
 959 00ca 0346     	 mov r3,r0
 960 00cc 87F82230 	 strb r3,[r7,#34]
 206:../CANopen/stack/301/CO_PDO.c ****         if (odRet != ODR_OK) {
 961              	 .loc 3 206 0
 962 00d0 97F92230 	 ldrsb r3,[r7,#34]
 963 00d4 002B     	 cmp r3,#0
 964 00d6 0CD0     	 beq .L53
 207:../CANopen/stack/301/CO_PDO.c ****             /* indicate erroneous mapping in initialization phase */
 208:../CANopen/stack/301/CO_PDO.c ****             OD_IO->stream.dataLength = 0;
 965              	 .loc 3 208 0
 966 00d8 FB69     	 ldr r3,[r7,#28]
 967 00da 0022     	 movs r2,#0
 968 00dc 9A60     	 str r2,[r3,#8]
 209:../CANopen/stack/301/CO_PDO.c ****             OD_IO->stream.dataOffset = 0xFF;
 969              	 .loc 3 209 0
 970 00de FB69     	 ldr r3,[r7,#28]
 971 00e0 FF22     	 movs r2,#255
 972 00e2 DA60     	 str r2,[r3,#12]
 210:../CANopen/stack/301/CO_PDO.c ****             if (*erroneousMap == 0) *erroneousMap = map;
 973              	 .loc 3 210 0
 974 00e4 7B6B     	 ldr r3,[r7,#52]
 975 00e6 1B68     	 ldr r3,[r3]
 976 00e8 002B     	 cmp r3,#0
 977 00ea 02D1     	 bne .L53
 978              	 .loc 3 210 0 is_stmt 0 discriminator 1
 979 00ec 7A69     	 ldr r2,[r7,#20]
 980 00ee 7B6B     	 ldr r3,[r7,#52]
 981 00f0 1A60     	 str r2,[r3]
 982              	.L53:
 211:../CANopen/stack/301/CO_PDO.c ****         }
 212:../CANopen/stack/301/CO_PDO.c **** 
 213:../CANopen/stack/301/CO_PDO.c ****         if (i < mappedObjectsCount) {
 983              	 .loc 3 213 0 is_stmt 1
 984 00f2 FB7E     	 ldrb r3,[r7,#27]
 985 00f4 97F82320 	 ldrb r2,[r7,#35]
 986 00f8 9A42     	 cmp r2,r3
 987 00fa 04D2     	 bcs .L50
 214:../CANopen/stack/301/CO_PDO.c ****             pdoDataLength += OD_IO->stream.dataOffset;
 988              	 .loc 3 214 0
 989 00fc FB69     	 ldr r3,[r7,#28]
 990 00fe DB68     	 ldr r3,[r3,#12]
 991 0100 7A6A     	 ldr r2,[r7,#36]
 992 0102 1344     	 add r3,r3,r2
 993 0104 7B62     	 str r3,[r7,#36]
 994              	.L50:
 995              	.LBE4:
 190:../CANopen/stack/301/CO_PDO.c ****         OD_IO_t *OD_IO = &PDO->OD_IO[i];
 996              	 .loc 3 190 0 discriminator 2
 997 0106 97F82330 	 ldrb r3,[r7,#35]
 998 010a 0133     	 adds r3,r3,#1
 999 010c 87F82330 	 strb r3,[r7,#35]
 1000              	.L48:
 190:../CANopen/stack/301/CO_PDO.c ****         OD_IO_t *OD_IO = &PDO->OD_IO[i];
 1001              	 .loc 3 190 0 is_stmt 0 discriminator 1
 1002 0110 97F82330 	 ldrb r3,[r7,#35]
 1003 0114 072B     	 cmp r3,#7
 1004 0116 9DD9     	 bls .L55
 1005              	.LBE3:
 215:../CANopen/stack/301/CO_PDO.c ****         }
 216:../CANopen/stack/301/CO_PDO.c ****     }
 217:../CANopen/stack/301/CO_PDO.c ****     if (pdoDataLength > CO_PDO_MAX_SIZE
 1006              	 .loc 3 217 0 is_stmt 1
 1007 0118 7B6A     	 ldr r3,[r7,#36]
 1008 011a 082B     	 cmp r3,#8
 1009 011c 05D8     	 bhi .L56
 218:../CANopen/stack/301/CO_PDO.c ****         || (pdoDataLength == 0 && mappedObjectsCount > 0)
 1010              	 .loc 3 218 0
 1011 011e 7B6A     	 ldr r3,[r7,#36]
 1012 0120 002B     	 cmp r3,#0
 1013 0122 09D1     	 bne .L57
 1014              	 .loc 3 218 0 is_stmt 0 discriminator 1
 1015 0124 FB7E     	 ldrb r3,[r7,#27]
 1016 0126 002B     	 cmp r3,#0
 1017 0128 06D0     	 beq .L57
 1018              	.L56:
 219:../CANopen/stack/301/CO_PDO.c ****     ) {
 220:../CANopen/stack/301/CO_PDO.c ****         if (*erroneousMap == 0) *erroneousMap = 1;
 1019              	 .loc 3 220 0 is_stmt 1
 1020 012a 7B6B     	 ldr r3,[r7,#52]
 1021 012c 1B68     	 ldr r3,[r3]
 1022 012e 002B     	 cmp r3,#0
 1023 0130 02D1     	 bne .L57
 1024              	 .loc 3 220 0 is_stmt 0 discriminator 1
 1025 0132 7B6B     	 ldr r3,[r7,#52]
 1026 0134 0122     	 movs r2,#1
 1027 0136 1A60     	 str r2,[r3]
 1028              	.L57:
 221:../CANopen/stack/301/CO_PDO.c ****     }
 222:../CANopen/stack/301/CO_PDO.c **** 
 223:../CANopen/stack/301/CO_PDO.c ****     if (*erroneousMap == 0) {
 1029              	 .loc 3 223 0 is_stmt 1
 1030 0138 7B6B     	 ldr r3,[r7,#52]
 1031 013a 1B68     	 ldr r3,[r3]
 1032 013c 002B     	 cmp r3,#0
 1033 013e 06D1     	 bne .L58
 224:../CANopen/stack/301/CO_PDO.c ****         PDO->dataLength = (CO_PDO_size_t)pdoDataLength;
 1034              	 .loc 3 224 0
 1035 0140 7B6A     	 ldr r3,[r7,#36]
 1036 0142 DAB2     	 uxtb r2,r3
 1037 0144 FB68     	 ldr r3,[r7,#12]
 1038 0146 1A73     	 strb r2,[r3,#12]
 225:../CANopen/stack/301/CO_PDO.c ****         PDO->mappedObjectsCount = mappedObjectsCount;
 1039              	 .loc 3 225 0
 1040 0148 FA7E     	 ldrb r2,[r7,#27]
 1041 014a FB68     	 ldr r3,[r7,#12]
 1042 014c 5A73     	 strb r2,[r3,#13]
 1043              	.L58:
 226:../CANopen/stack/301/CO_PDO.c ****     }
 227:../CANopen/stack/301/CO_PDO.c **** 
 228:../CANopen/stack/301/CO_PDO.c ****     return CO_ERROR_NO;
 1044              	 .loc 3 228 0
 1045 014e 0023     	 movs r3,#0
 1046              	.L59:
 1047 0150 5BB2     	 sxtb r3,r3
 229:../CANopen/stack/301/CO_PDO.c **** }
 1048              	 .loc 3 229 0 discriminator 1
 1049 0152 1846     	 mov r0,r3
 1050 0154 2837     	 adds r7,r7,#40
 1051              	.LCFI67:
 1052              	 .cfi_def_cfa_offset 8
 1053 0156 BD46     	 mov sp,r7
 1054              	.LCFI68:
 1055              	 .cfi_def_cfa_register 13
 1056              	 
 1057 0158 80BD     	 pop {r7,pc}
 1058              	 .cfi_endproc
 1059              	.LFE40:
 1061 015a 00BF     	 .section .text.OD_write_PDO_mapping,"ax",%progbits
 1062              	 .align 2
 1063              	 .thumb
 1064              	 .thumb_func
 1066              	OD_write_PDO_mapping:
 1067              	.LFB41:
 230:../CANopen/stack/301/CO_PDO.c **** 
 231:../CANopen/stack/301/CO_PDO.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_FLAG_OD_DYNAMIC
 232:../CANopen/stack/301/CO_PDO.c **** /*
 233:../CANopen/stack/301/CO_PDO.c ****  * Custom function for writing OD object "PDO mapping parameter"
 234:../CANopen/stack/301/CO_PDO.c ****  *
 235:../CANopen/stack/301/CO_PDO.c ****  * For more information see file CO_ODinterface.h, OD_IO_t.
 236:../CANopen/stack/301/CO_PDO.c ****  */
 237:../CANopen/stack/301/CO_PDO.c **** static ODR_t OD_write_PDO_mapping(OD_stream_t *stream, const void *buf,
 238:../CANopen/stack/301/CO_PDO.c ****                                   OD_size_t count, OD_size_t *countWritten)
 239:../CANopen/stack/301/CO_PDO.c **** {
 1068              	 .loc 3 239 0
 1069              	 .cfi_startproc
 1070              	 
 1071              	 
 1072 0000 90B5     	 push {r4,r7,lr}
 1073              	.LCFI69:
 1074              	 .cfi_def_cfa_offset 12
 1075              	 .cfi_offset 4,-12
 1076              	 .cfi_offset 7,-8
 1077              	 .cfi_offset 14,-4
 1078 0002 8FB0     	 sub sp,sp,#60
 1079              	.LCFI70:
 1080              	 .cfi_def_cfa_offset 72
 1081 0004 02AF     	 add r7,sp,#8
 1082              	.LCFI71:
 1083              	 .cfi_def_cfa 7,64
 1084 0006 F860     	 str r0,[r7,#12]
 1085 0008 B960     	 str r1,[r7,#8]
 1086 000a 7A60     	 str r2,[r7,#4]
 1087 000c 3B60     	 str r3,[r7]
 240:../CANopen/stack/301/CO_PDO.c **** #if (C2000_PORT != 0)
 241:../CANopen/stack/301/CO_PDO.c ****     void * pBufTemp = NULL;
 242:../CANopen/stack/301/CO_PDO.c ****     uint32_t tempU32 = 0;
 243:../CANopen/stack/301/CO_PDO.c ****     uint8_t tempU8 = 0;
 244:../CANopen/stack/301/CO_PDO.c **** #endif
 245:../CANopen/stack/301/CO_PDO.c ****     /* "count" is already verified in *_init() function */
 246:../CANopen/stack/301/CO_PDO.c ****     if (stream == NULL || buf == NULL || countWritten == NULL
 1088              	 .loc 3 246 0
 1089 000e FB68     	 ldr r3,[r7,#12]
 1090 0010 002B     	 cmp r3,#0
 1091 0012 09D0     	 beq .L61
 1092              	 .loc 3 246 0 is_stmt 0 discriminator 1
 1093 0014 BB68     	 ldr r3,[r7,#8]
 1094 0016 002B     	 cmp r3,#0
 1095 0018 06D0     	 beq .L61
 1096              	 .loc 3 246 0 discriminator 2
 1097 001a 3B68     	 ldr r3,[r7]
 1098 001c 002B     	 cmp r3,#0
 1099 001e 03D0     	 beq .L61
 247:../CANopen/stack/301/CO_PDO.c ****         || stream->subIndex > CO_PDO_MAX_MAPPED_ENTRIES
 1100              	 .loc 3 247 0 is_stmt 1
 1101 0020 FB68     	 ldr r3,[r7,#12]
 1102 0022 5B7C     	 ldrb r3,[r3,#17]
 1103 0024 082B     	 cmp r3,#8
 1104 0026 01D9     	 bls .L62
 1105              	.L61:
 248:../CANopen/stack/301/CO_PDO.c ****     ) {
 249:../CANopen/stack/301/CO_PDO.c ****         return ODR_DEV_INCOMPAT;
 1106              	 .loc 3 249 0
 1107 0028 0923     	 movs r3,#9
 1108 002a 84E0     	 b .L63
 1109              	.L62:
 250:../CANopen/stack/301/CO_PDO.c ****     }
 251:../CANopen/stack/301/CO_PDO.c **** 
 252:../CANopen/stack/301/CO_PDO.c ****     /* Only common part of the CO_RPDO_t or CO_TPDO_t will be used */
 253:../CANopen/stack/301/CO_PDO.c ****     CO_PDO_common_t *PDO = stream->object;
 1110              	 .loc 3 253 0
 1111 002c FB68     	 ldr r3,[r7,#12]
 1112 002e 5B68     	 ldr r3,[r3,#4]
 1113 0030 7B62     	 str r3,[r7,#36]
 254:../CANopen/stack/301/CO_PDO.c **** 
 255:../CANopen/stack/301/CO_PDO.c ****     /* PDO must be disabled before mapping configuration */
 256:../CANopen/stack/301/CO_PDO.c ****     if (PDO->valid || (PDO->mappedObjectsCount != 0 && stream->subIndex > 0)) {
 1114              	 .loc 3 256 0
 1115 0032 7B6A     	 ldr r3,[r7,#36]
 1116 0034 9B68     	 ldr r3,[r3,#8]
 1117 0036 002B     	 cmp r3,#0
 1118 0038 07D1     	 bne .L64
 1119              	 .loc 3 256 0 is_stmt 0 discriminator 1
 1120 003a 7B6A     	 ldr r3,[r7,#36]
 1121 003c 5B7B     	 ldrb r3,[r3,#13]
 1122 003e 002B     	 cmp r3,#0
 1123 0040 05D0     	 beq .L65
 1124              	 .loc 3 256 0 discriminator 2
 1125 0042 FB68     	 ldr r3,[r7,#12]
 1126 0044 5B7C     	 ldrb r3,[r3,#17]
 1127 0046 002B     	 cmp r3,#0
 1128 0048 01D0     	 beq .L65
 1129              	.L64:
 257:../CANopen/stack/301/CO_PDO.c ****         return ODR_UNSUPP_ACCESS;
 1130              	 .loc 3 257 0 is_stmt 1
 1131 004a 0223     	 movs r3,#2
 1132 004c 73E0     	 b .L63
 1133              	.L65:
 258:../CANopen/stack/301/CO_PDO.c ****     }
 259:../CANopen/stack/301/CO_PDO.c **** 
 260:../CANopen/stack/301/CO_PDO.c ****     if (stream->subIndex == 0) {
 1134              	 .loc 3 260 0
 1135 004e FB68     	 ldr r3,[r7,#12]
 1136 0050 5B7C     	 ldrb r3,[r3,#17]
 1137 0052 002B     	 cmp r3,#0
 1138 0054 4DD1     	 bne .L66
 1139              	.LBB5:
 261:../CANopen/stack/301/CO_PDO.c ****         uint8_t mappedObjectsCount = CO_getUint8(buf);
 1140              	 .loc 3 261 0
 1141 0056 B868     	 ldr r0,[r7,#8]
 1142 0058 FFF7FEFF 	 bl CO_getUint8
 1143 005c 0346     	 mov r3,r0
 1144 005e 87F82330 	 strb r3,[r7,#35]
 262:../CANopen/stack/301/CO_PDO.c ****         size_t pdoDataLength = 0;
 1145              	 .loc 3 262 0
 1146 0062 0023     	 movs r3,#0
 1147 0064 FB62     	 str r3,[r7,#44]
 263:../CANopen/stack/301/CO_PDO.c **** 
 264:../CANopen/stack/301/CO_PDO.c ****         if (mappedObjectsCount > CO_PDO_MAX_MAPPED_ENTRIES) {
 1148              	 .loc 3 264 0
 1149 0066 97F82330 	 ldrb r3,[r7,#35]
 1150 006a 082B     	 cmp r3,#8
 1151 006c 01D9     	 bls .L67
 265:../CANopen/stack/301/CO_PDO.c ****             return ODR_MAP_LEN;
 1152              	 .loc 3 265 0
 1153 006e 0723     	 movs r3,#7
 1154 0070 61E0     	 b .L63
 1155              	.L67:
 1156              	.LBB6:
 266:../CANopen/stack/301/CO_PDO.c ****         }
 267:../CANopen/stack/301/CO_PDO.c **** 
 268:../CANopen/stack/301/CO_PDO.c ****         /* validate enabled mapping parameters */
 269:../CANopen/stack/301/CO_PDO.c ****         for (uint8_t i = 0; i < mappedObjectsCount; i++) {
 1157              	 .loc 3 269 0
 1158 0072 0023     	 movs r3,#0
 1159 0074 87F82B30 	 strb r3,[r7,#43]
 1160 0078 1EE0     	 b .L68
 1161              	.L70:
 1162              	.LBB7:
 270:../CANopen/stack/301/CO_PDO.c ****             OD_IO_t *OD_IO = &PDO->OD_IO[i];
 1163              	 .loc 3 270 0
 1164 007a 97F82B20 	 ldrb r2,[r7,#43]
 1165 007e 1346     	 mov r3,r2
 1166 0080 DB00     	 lsls r3,r3,#3
 1167 0082 9B1A     	 subs r3,r3,r2
 1168 0084 9B00     	 lsls r3,r3,#2
 1169 0086 1033     	 adds r3,r3,#16
 1170 0088 7A6A     	 ldr r2,[r7,#36]
 1171 008a 1344     	 add r3,r3,r2
 1172 008c FB61     	 str r3,[r7,#28]
 271:../CANopen/stack/301/CO_PDO.c ****             size_t dataLength = (size_t) OD_IO->stream.dataLength;
 1173              	 .loc 3 271 0
 1174 008e FB69     	 ldr r3,[r7,#28]
 1175 0090 9B68     	 ldr r3,[r3,#8]
 1176 0092 BB61     	 str r3,[r7,#24]
 272:../CANopen/stack/301/CO_PDO.c ****             size_t mappedLength = (size_t) OD_IO->stream.dataOffset;
 1177              	 .loc 3 272 0
 1178 0094 FB69     	 ldr r3,[r7,#28]
 1179 0096 DB68     	 ldr r3,[r3,#12]
 1180 0098 7B61     	 str r3,[r7,#20]
 273:../CANopen/stack/301/CO_PDO.c **** 
 274:../CANopen/stack/301/CO_PDO.c ****             if (mappedLength > dataLength) {
 1181              	 .loc 3 274 0
 1182 009a 7A69     	 ldr r2,[r7,#20]
 1183 009c BB69     	 ldr r3,[r7,#24]
 1184 009e 9A42     	 cmp r2,r3
 1185 00a0 01D9     	 bls .L69
 275:../CANopen/stack/301/CO_PDO.c ****                 /* erroneous map since device initial values */
 276:../CANopen/stack/301/CO_PDO.c ****                 return ODR_NO_MAP;
 1186              	 .loc 3 276 0
 1187 00a2 0623     	 movs r3,#6
 1188 00a4 47E0     	 b .L63
 1189              	.L69:
 277:../CANopen/stack/301/CO_PDO.c ****             }
 278:../CANopen/stack/301/CO_PDO.c ****             pdoDataLength += mappedLength;
 1190              	 .loc 3 278 0 discriminator 2
 1191 00a6 FA6A     	 ldr r2,[r7,#44]
 1192 00a8 7B69     	 ldr r3,[r7,#20]
 1193 00aa 1344     	 add r3,r3,r2
 1194 00ac FB62     	 str r3,[r7,#44]
 1195              	.LBE7:
 269:../CANopen/stack/301/CO_PDO.c ****             OD_IO_t *OD_IO = &PDO->OD_IO[i];
 1196              	 .loc 3 269 0 discriminator 2
 1197 00ae 97F82B30 	 ldrb r3,[r7,#43]
 1198 00b2 0133     	 adds r3,r3,#1
 1199 00b4 87F82B30 	 strb r3,[r7,#43]
 1200              	.L68:
 269:../CANopen/stack/301/CO_PDO.c ****             OD_IO_t *OD_IO = &PDO->OD_IO[i];
 1201              	 .loc 3 269 0 is_stmt 0 discriminator 1
 1202 00b8 97F82B20 	 ldrb r2,[r7,#43]
 1203 00bc 97F82330 	 ldrb r3,[r7,#35]
 1204 00c0 9A42     	 cmp r2,r3
 1205 00c2 DAD3     	 bcc .L70
 1206              	.LBE6:
 279:../CANopen/stack/301/CO_PDO.c ****         }
 280:../CANopen/stack/301/CO_PDO.c **** 
 281:../CANopen/stack/301/CO_PDO.c ****         if (pdoDataLength > CO_PDO_MAX_SIZE) {
 1207              	 .loc 3 281 0 is_stmt 1
 1208 00c4 FB6A     	 ldr r3,[r7,#44]
 1209 00c6 082B     	 cmp r3,#8
 1210 00c8 01D9     	 bls .L71
 282:../CANopen/stack/301/CO_PDO.c ****             return ODR_MAP_LEN;
 1211              	 .loc 3 282 0
 1212 00ca 0723     	 movs r3,#7
 1213 00cc 33E0     	 b .L63
 1214              	.L71:
 283:../CANopen/stack/301/CO_PDO.c ****         }
 284:../CANopen/stack/301/CO_PDO.c ****         if (pdoDataLength == 0 && mappedObjectsCount > 0) {
 1215              	 .loc 3 284 0
 1216 00ce FB6A     	 ldr r3,[r7,#44]
 1217 00d0 002B     	 cmp r3,#0
 1218 00d2 05D1     	 bne .L72
 1219              	 .loc 3 284 0 is_stmt 0 discriminator 1
 1220 00d4 97F82330 	 ldrb r3,[r7,#35]
 1221 00d8 002B     	 cmp r3,#0
 1222 00da 01D0     	 beq .L72
 285:../CANopen/stack/301/CO_PDO.c ****             return ODR_INVALID_VALUE;
 1223              	 .loc 3 285 0 is_stmt 1
 1224 00dc 0F23     	 movs r3,#15
 1225 00de 2AE0     	 b .L63
 1226              	.L72:
 286:../CANopen/stack/301/CO_PDO.c ****         }
 287:../CANopen/stack/301/CO_PDO.c **** 
 288:../CANopen/stack/301/CO_PDO.c ****         /* success, update PDO */
 289:../CANopen/stack/301/CO_PDO.c ****         PDO->dataLength = (CO_PDO_size_t)pdoDataLength;
 1227              	 .loc 3 289 0
 1228 00e0 FB6A     	 ldr r3,[r7,#44]
 1229 00e2 DAB2     	 uxtb r2,r3
 1230 00e4 7B6A     	 ldr r3,[r7,#36]
 1231 00e6 1A73     	 strb r2,[r3,#12]
 290:../CANopen/stack/301/CO_PDO.c ****         PDO->mappedObjectsCount = mappedObjectsCount;
 1232              	 .loc 3 290 0
 1233 00e8 7B6A     	 ldr r3,[r7,#36]
 1234 00ea 97F82320 	 ldrb r2,[r7,#35]
 1235 00ee 5A73     	 strb r2,[r3,#13]
 1236              	.LBE5:
 1237 00f0 1AE0     	 b .L73
 1238              	.L66:
 1239              	.LBB8:
 291:../CANopen/stack/301/CO_PDO.c **** #if (C2000_PORT != 0)
 292:../CANopen/stack/301/CO_PDO.c ****         tempU8 = CO_getUint8(buf);
 293:../CANopen/stack/301/CO_PDO.c ****         pBufTemp = (void *)&tempU8;
 294:../CANopen/stack/301/CO_PDO.c **** #endif
 295:../CANopen/stack/301/CO_PDO.c ****     }
 296:../CANopen/stack/301/CO_PDO.c ****     else {
 297:../CANopen/stack/301/CO_PDO.c ****         ODR_t odRet = PDOconfigMap(PDO, CO_getUint32(buf), stream->subIndex-1,
 1240              	 .loc 3 297 0
 1241 00f2 B868     	 ldr r0,[r7,#8]
 1242 00f4 FFF7FEFF 	 bl CO_getUint32
 1243 00f8 0146     	 mov r1,r0
 1244 00fa FB68     	 ldr r3,[r7,#12]
 1245 00fc 5B7C     	 ldrb r3,[r3,#17]
 1246 00fe 013B     	 subs r3,r3,#1
 1247 0100 DAB2     	 uxtb r2,r3
 1248 0102 7B6A     	 ldr r3,[r7,#36]
 1249 0104 D3F81841 	 ldr r4,[r3,#280]
 1250 0108 7B6A     	 ldr r3,[r7,#36]
 1251 010a D3F81C31 	 ldr r3,[r3,#284]
 1252 010e 0093     	 str r3,[sp]
 1253 0110 786A     	 ldr r0,[r7,#36]
 1254 0112 2346     	 mov r3,r4
 1255 0114 FFF7FEFF 	 bl PDOconfigMap
 1256 0118 0346     	 mov r3,r0
 1257 011a FB74     	 strb r3,[r7,#19]
 298:../CANopen/stack/301/CO_PDO.c ****                                    PDO->isRPDO, PDO->OD);
 299:../CANopen/stack/301/CO_PDO.c ****         if (odRet != ODR_OK) {
 1258              	 .loc 3 299 0
 1259 011c 97F91330 	 ldrsb r3,[r7,#19]
 1260 0120 002B     	 cmp r3,#0
 1261 0122 01D0     	 beq .L73
 300:../CANopen/stack/301/CO_PDO.c ****             return odRet;
 1262              	 .loc 3 300 0
 1263 0124 FB7C     	 ldrb r3,[r7,#19]
 1264 0126 06E0     	 b .L63
 1265              	.L73:
 1266              	.LBE8:
 301:../CANopen/stack/301/CO_PDO.c ****         }
 302:../CANopen/stack/301/CO_PDO.c **** #if (C2000_PORT != 0)
 303:../CANopen/stack/301/CO_PDO.c ****         tempU32 = CO_getUint32(buf);
 304:../CANopen/stack/301/CO_PDO.c ****         pBufTemp = (void *)&tempU32;
 305:../CANopen/stack/301/CO_PDO.c **** #endif
 306:../CANopen/stack/301/CO_PDO.c ****     }
 307:../CANopen/stack/301/CO_PDO.c **** 
 308:../CANopen/stack/301/CO_PDO.c ****     /* write value to the original location in the Object Dictionary */
 309:../CANopen/stack/301/CO_PDO.c **** #if (C2000_PORT != 0)
 310:../CANopen/stack/301/CO_PDO.c ****     return OD_writeOriginal(stream, pBufTemp, count, countWritten);
 311:../CANopen/stack/301/CO_PDO.c **** #else
 312:../CANopen/stack/301/CO_PDO.c ****     return OD_writeOriginal(stream, buf, count, countWritten);
 1267              	 .loc 3 312 0
 1268 0128 F868     	 ldr r0,[r7,#12]
 1269 012a B968     	 ldr r1,[r7,#8]
 1270 012c 7A68     	 ldr r2,[r7,#4]
 1271 012e 3B68     	 ldr r3,[r7]
 1272 0130 FFF7FEFF 	 bl OD_writeOriginal
 1273 0134 0346     	 mov r3,r0
 1274              	.L63:
 1275 0136 5BB2     	 sxtb r3,r3
 313:../CANopen/stack/301/CO_PDO.c **** #endif
 314:../CANopen/stack/301/CO_PDO.c **** }
 1276              	 .loc 3 314 0
 1277 0138 1846     	 mov r0,r3
 1278 013a 3437     	 adds r7,r7,#52
 1279              	.LCFI72:
 1280              	 .cfi_def_cfa_offset 12
 1281 013c BD46     	 mov sp,r7
 1282              	.LCFI73:
 1283              	 .cfi_def_cfa_register 13
 1284              	 
 1285 013e 90BD     	 pop {r4,r7,pc}
 1286              	 .cfi_endproc
 1287              	.LFE41:
 1289              	 .section .text.OD_read_PDO_commParam,"ax",%progbits
 1290              	 .align 2
 1291              	 .thumb
 1292              	 .thumb_func
 1294              	OD_read_PDO_commParam:
 1295              	.LFB42:
 315:../CANopen/stack/301/CO_PDO.c **** #endif /* (CO_CONFIG_PDO) & CO_CONFIG_FLAG_OD_DYNAMIC */
 316:../CANopen/stack/301/CO_PDO.c **** #endif /* (CO_CONFIG_PDO) & CO_CONFIG_PDO_OD_IO_ACCESS */
 317:../CANopen/stack/301/CO_PDO.c **** 
 318:../CANopen/stack/301/CO_PDO.c **** 
 319:../CANopen/stack/301/CO_PDO.c **** #if ((CO_CONFIG_PDO) & CO_CONFIG_PDO_OD_IO_ACCESS) == 0
 320:../CANopen/stack/301/CO_PDO.c **** static CO_ReturnError_t PDO_initMapping(CO_PDO_common_t *PDO,
 321:../CANopen/stack/301/CO_PDO.c ****                                         OD_t *OD,
 322:../CANopen/stack/301/CO_PDO.c ****                                         OD_entry_t *OD_PDOMapPar,
 323:../CANopen/stack/301/CO_PDO.c ****                                         bool_t isRPDO,
 324:../CANopen/stack/301/CO_PDO.c ****                                         uint32_t *errInfo,
 325:../CANopen/stack/301/CO_PDO.c ****                                         uint32_t *erroneousMap)
 326:../CANopen/stack/301/CO_PDO.c **** {
 327:../CANopen/stack/301/CO_PDO.c ****     ODR_t odRet;
 328:../CANopen/stack/301/CO_PDO.c ****     size_t pdoDataLength = 0;
 329:../CANopen/stack/301/CO_PDO.c **** 
 330:../CANopen/stack/301/CO_PDO.c ****     /* number of mapped application objects in PDO */
 331:../CANopen/stack/301/CO_PDO.c ****     uint8_t mappedObjectsCount = 0;
 332:../CANopen/stack/301/CO_PDO.c ****     odRet = OD_get_u8(OD_PDOMapPar, 0, &mappedObjectsCount, true);
 333:../CANopen/stack/301/CO_PDO.c ****     if (odRet != ODR_OK) {
 334:../CANopen/stack/301/CO_PDO.c ****         if (errInfo != NULL) {
 335:../CANopen/stack/301/CO_PDO.c ****             *errInfo = ((uint32_t)OD_getIndex(OD_PDOMapPar)) << 8;
 336:../CANopen/stack/301/CO_PDO.c ****         }
 337:../CANopen/stack/301/CO_PDO.c ****         return CO_ERROR_OD_PARAMETERS;
 338:../CANopen/stack/301/CO_PDO.c ****     }
 339:../CANopen/stack/301/CO_PDO.c ****     if (mappedObjectsCount > CO_PDO_MAX_SIZE) {
 340:../CANopen/stack/301/CO_PDO.c ****         *erroneousMap = 1;
 341:../CANopen/stack/301/CO_PDO.c ****         return CO_ERROR_NO;
 342:../CANopen/stack/301/CO_PDO.c ****     }
 343:../CANopen/stack/301/CO_PDO.c **** 
 344:../CANopen/stack/301/CO_PDO.c ****     /* iterate mapped OD variables */
 345:../CANopen/stack/301/CO_PDO.c ****     for (uint8_t i = 0; i < mappedObjectsCount; i++) {
 346:../CANopen/stack/301/CO_PDO.c ****         uint32_t map = 0;
 347:../CANopen/stack/301/CO_PDO.c **** 
 348:../CANopen/stack/301/CO_PDO.c ****         odRet = OD_get_u32(OD_PDOMapPar, i + 1, &map, true);
 349:../CANopen/stack/301/CO_PDO.c ****         if (odRet != ODR_OK) {
 350:../CANopen/stack/301/CO_PDO.c ****             if (errInfo != NULL) {
 351:../CANopen/stack/301/CO_PDO.c ****                 *errInfo = (((uint32_t)OD_getIndex(OD_PDOMapPar)) << 8) | i;
 352:../CANopen/stack/301/CO_PDO.c ****             }
 353:../CANopen/stack/301/CO_PDO.c ****             return CO_ERROR_OD_PARAMETERS;
 354:../CANopen/stack/301/CO_PDO.c ****         }
 355:../CANopen/stack/301/CO_PDO.c ****         uint16_t index = (uint16_t) (map >> 16);
 356:../CANopen/stack/301/CO_PDO.c ****         uint8_t subIndex = (uint8_t) (map >> 8);
 357:../CANopen/stack/301/CO_PDO.c ****         uint8_t mappedLengthBits = (uint8_t) map;
 358:../CANopen/stack/301/CO_PDO.c ****         uint8_t mappedLength = mappedLengthBits >> 3;
 359:../CANopen/stack/301/CO_PDO.c ****         uint8_t pdoDataStart = pdoDataLength;
 360:../CANopen/stack/301/CO_PDO.c ****         pdoDataLength += mappedLength;
 361:../CANopen/stack/301/CO_PDO.c **** 
 362:../CANopen/stack/301/CO_PDO.c ****         if ((mappedLengthBits & 0x07) != 0 || pdoDataLength > CO_PDO_MAX_SIZE) {
 363:../CANopen/stack/301/CO_PDO.c ****             *erroneousMap = map;
 364:../CANopen/stack/301/CO_PDO.c ****             return CO_ERROR_NO;
 365:../CANopen/stack/301/CO_PDO.c ****         }
 366:../CANopen/stack/301/CO_PDO.c **** 
 367:../CANopen/stack/301/CO_PDO.c ****         /* is there a reference to the dummy entry */
 368:../CANopen/stack/301/CO_PDO.c ****         if (index < 0x20 && subIndex == 0) {
 369:../CANopen/stack/301/CO_PDO.c ****             for (uint8_t j = pdoDataStart; j < pdoDataLength; j++) {
 370:../CANopen/stack/301/CO_PDO.c ****                 static uint8_t dummyTX = 0;
 371:../CANopen/stack/301/CO_PDO.c ****                 static uint8_t dummyRX;
 372:../CANopen/stack/301/CO_PDO.c ****                 PDO->mapPointer[j] = isRPDO ? &dummyRX : &dummyTX;
 373:../CANopen/stack/301/CO_PDO.c ****             }
 374:../CANopen/stack/301/CO_PDO.c ****             continue;
 375:../CANopen/stack/301/CO_PDO.c ****         }
 376:../CANopen/stack/301/CO_PDO.c **** 
 377:../CANopen/stack/301/CO_PDO.c ****         /* find entry in the Object Dictionary, original location */
 378:../CANopen/stack/301/CO_PDO.c ****         OD_IO_t OD_IO;
 379:../CANopen/stack/301/CO_PDO.c ****         OD_entry_t *entry = OD_find(OD, index);
 380:../CANopen/stack/301/CO_PDO.c ****         OD_attr_t testAttribute = isRPDO ? ODA_RPDO : ODA_TPDO;
 381:../CANopen/stack/301/CO_PDO.c **** 
 382:../CANopen/stack/301/CO_PDO.c ****         ODR_t odRet = OD_getSub(entry, subIndex, &OD_IO, true);
 383:../CANopen/stack/301/CO_PDO.c ****         if (odRet != ODR_OK
 384:../CANopen/stack/301/CO_PDO.c ****             || (OD_IO.stream.attribute & testAttribute) == 0
 385:../CANopen/stack/301/CO_PDO.c ****             || OD_IO.stream.dataLength < mappedLength
 386:../CANopen/stack/301/CO_PDO.c ****             || OD_IO.stream.dataOrig == NULL
 387:../CANopen/stack/301/CO_PDO.c ****         ) {
 388:../CANopen/stack/301/CO_PDO.c ****             *erroneousMap = map;
 389:../CANopen/stack/301/CO_PDO.c ****             return CO_ERROR_NO;
 390:../CANopen/stack/301/CO_PDO.c ****         }
 391:../CANopen/stack/301/CO_PDO.c **** 
 392:../CANopen/stack/301/CO_PDO.c ****         /* write locations to OD variable data bytes into PDO map pointers */
 393:../CANopen/stack/301/CO_PDO.c **** #ifdef CO_BIG_ENDIAN
 394:../CANopen/stack/301/CO_PDO.c ****         if((OD_IO.stream.attribute & ODA_MB) != 0) {
 395:../CANopen/stack/301/CO_PDO.c ****             uint8_t *odDataPointer = OD_IO.stream.dataOrig
 396:../CANopen/stack/301/CO_PDO.c ****                                    + OD_IO.stream.dataLength - 1;
 397:../CANopen/stack/301/CO_PDO.c ****             for (uint8_t j = pdoDataStart; j < pdoDataLength; j++) {
 398:../CANopen/stack/301/CO_PDO.c ****                 PDO->mapPointer[j] = odDataPointer--;
 399:../CANopen/stack/301/CO_PDO.c ****             }
 400:../CANopen/stack/301/CO_PDO.c ****         }
 401:../CANopen/stack/301/CO_PDO.c ****         else
 402:../CANopen/stack/301/CO_PDO.c **** #endif
 403:../CANopen/stack/301/CO_PDO.c ****         {
 404:../CANopen/stack/301/CO_PDO.c ****             uint8_t *odDataPointer = OD_IO.stream.dataOrig;
 405:../CANopen/stack/301/CO_PDO.c ****             for (uint8_t j = pdoDataStart; j < pdoDataLength; j++) {
 406:../CANopen/stack/301/CO_PDO.c ****                 PDO->mapPointer[j] = odDataPointer++;
 407:../CANopen/stack/301/CO_PDO.c ****             }
 408:../CANopen/stack/301/CO_PDO.c ****         }
 409:../CANopen/stack/301/CO_PDO.c **** 
 410:../CANopen/stack/301/CO_PDO.c ****         /* get TPDO request flag byte from extension */
 411:../CANopen/stack/301/CO_PDO.c **** #if OD_FLAGS_PDO_SIZE > 0
 412:../CANopen/stack/301/CO_PDO.c ****         if (!isRPDO && subIndex < (OD_FLAGS_PDO_SIZE * 8)
 413:../CANopen/stack/301/CO_PDO.c ****             && entry->extension != NULL
 414:../CANopen/stack/301/CO_PDO.c ****         ) {
 415:../CANopen/stack/301/CO_PDO.c ****             PDO->flagPDObyte[pdoDataStart] =
 416:../CANopen/stack/301/CO_PDO.c ****                     &entry->extension->flagsPDO[subIndex >> 3];
 417:../CANopen/stack/301/CO_PDO.c ****             PDO->flagPDObitmask[pdoDataStart] = 1 << (subIndex & 0x07);
 418:../CANopen/stack/301/CO_PDO.c ****         }
 419:../CANopen/stack/301/CO_PDO.c **** #endif
 420:../CANopen/stack/301/CO_PDO.c ****     }
 421:../CANopen/stack/301/CO_PDO.c **** 
 422:../CANopen/stack/301/CO_PDO.c ****     PDO->dataLength = PDO->mappedObjectsCount = pdoDataLength;
 423:../CANopen/stack/301/CO_PDO.c ****     return CO_ERROR_NO;
 424:../CANopen/stack/301/CO_PDO.c **** }
 425:../CANopen/stack/301/CO_PDO.c **** 
 426:../CANopen/stack/301/CO_PDO.c **** #endif /* ((CO_CONFIG_PDO) & CO_CONFIG_PDO_OD_IO_ACCESS) == 0 */
 427:../CANopen/stack/301/CO_PDO.c **** 
 428:../CANopen/stack/301/CO_PDO.c **** 
 429:../CANopen/stack/301/CO_PDO.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_FLAG_OD_DYNAMIC
 430:../CANopen/stack/301/CO_PDO.c **** /*
 431:../CANopen/stack/301/CO_PDO.c ****  * Custom function for reading OD object "PDO communication parameter"
 432:../CANopen/stack/301/CO_PDO.c ****  *
 433:../CANopen/stack/301/CO_PDO.c ****  * For more information see file CO_ODinterface.h, OD_IO_t.
 434:../CANopen/stack/301/CO_PDO.c ****  */
 435:../CANopen/stack/301/CO_PDO.c **** static ODR_t OD_read_PDO_commParam(OD_stream_t *stream, void *buf,
 436:../CANopen/stack/301/CO_PDO.c ****                                    OD_size_t count, OD_size_t *countRead)
 437:../CANopen/stack/301/CO_PDO.c **** {
 1296              	 .loc 3 437 0
 1297              	 .cfi_startproc
 1298              	 
 1299              	 
 1300 0000 80B5     	 push {r7,lr}
 1301              	.LCFI74:
 1302              	 .cfi_def_cfa_offset 8
 1303              	 .cfi_offset 7,-8
 1304              	 .cfi_offset 14,-4
 1305 0002 88B0     	 sub sp,sp,#32
 1306              	.LCFI75:
 1307              	 .cfi_def_cfa_offset 40
 1308 0004 00AF     	 add r7,sp,#0
 1309              	.LCFI76:
 1310              	 .cfi_def_cfa_register 7
 1311 0006 F860     	 str r0,[r7,#12]
 1312 0008 B960     	 str r1,[r7,#8]
 1313 000a 7A60     	 str r2,[r7,#4]
 1314 000c 3B60     	 str r3,[r7]
 438:../CANopen/stack/301/CO_PDO.c ****     ODR_t returnCode = OD_readOriginal(stream, buf, count, countRead);
 1315              	 .loc 3 438 0
 1316 000e F868     	 ldr r0,[r7,#12]
 1317 0010 B968     	 ldr r1,[r7,#8]
 1318 0012 7A68     	 ldr r2,[r7,#4]
 1319 0014 3B68     	 ldr r3,[r7]
 1320 0016 FFF7FEFF 	 bl OD_readOriginal
 1321 001a 0346     	 mov r3,r0
 1322 001c FB76     	 strb r3,[r7,#27]
 439:../CANopen/stack/301/CO_PDO.c **** 
 440:../CANopen/stack/301/CO_PDO.c ****     /* When reading COB_ID, add Node-Id to the read value, if necessary */
 441:../CANopen/stack/301/CO_PDO.c ****     if (returnCode == ODR_OK && stream->subIndex == 1 && *countRead == 4) {
 1323              	 .loc 3 441 0
 1324 001e 97F91B30 	 ldrsb r3,[r7,#27]
 1325 0022 002B     	 cmp r3,#0
 1326 0024 34D1     	 bne .L75
 1327              	 .loc 3 441 0 is_stmt 0 discriminator 1
 1328 0026 FB68     	 ldr r3,[r7,#12]
 1329 0028 5B7C     	 ldrb r3,[r3,#17]
 1330 002a 012B     	 cmp r3,#1
 1331 002c 30D1     	 bne .L75
 1332              	 .loc 3 441 0 discriminator 2
 1333 002e 3B68     	 ldr r3,[r7]
 1334 0030 1B68     	 ldr r3,[r3]
 1335 0032 042B     	 cmp r3,#4
 1336 0034 2CD1     	 bne .L75
 1337              	.LBB9:
 442:../CANopen/stack/301/CO_PDO.c ****         /* Only common part of the CO_RPDO_t or CO_TPDO_t will be used */
 443:../CANopen/stack/301/CO_PDO.c ****         CO_PDO_common_t *PDO = stream->object;
 1338              	 .loc 3 443 0 is_stmt 1
 1339 0036 FB68     	 ldr r3,[r7,#12]
 1340 0038 5B68     	 ldr r3,[r3,#4]
 1341 003a 7B61     	 str r3,[r7,#20]
 444:../CANopen/stack/301/CO_PDO.c **** #if (C2000_PORT != 0)
 445:../CANopen/stack/301/CO_PDO.c ****         uint32_t COB_ID = *((uint32_t *)buf);
 446:../CANopen/stack/301/CO_PDO.c **** #else
 447:../CANopen/stack/301/CO_PDO.c ****         uint32_t COB_ID = CO_getUint32(buf);
 1342              	 .loc 3 447 0
 1343 003c B868     	 ldr r0,[r7,#8]
 1344 003e FFF7FEFF 	 bl CO_getUint32
 1345 0042 F861     	 str r0,[r7,#28]
 448:../CANopen/stack/301/CO_PDO.c **** #endif
 449:../CANopen/stack/301/CO_PDO.c ****         uint16_t CAN_ID = (uint16_t)(COB_ID & 0x7FF);
 1346              	 .loc 3 449 0
 1347 0044 FB69     	 ldr r3,[r7,#28]
 1348 0046 9BB2     	 uxth r3,r3
 1349 0048 C3F30A03 	 ubfx r3,r3,#0,#11
 1350 004c 7B82     	 strh r3,[r7,#18]
 450:../CANopen/stack/301/CO_PDO.c **** 
 451:../CANopen/stack/301/CO_PDO.c ****         /* If default CAN-ID is stored in OD (without Node-ID), add Node-ID */
 452:../CANopen/stack/301/CO_PDO.c ****         if (CAN_ID != 0 && CAN_ID == (PDO->preDefinedCanId & 0xFF80)) {
 1351              	 .loc 3 452 0
 1352 004e 7B8A     	 ldrh r3,[r7,#18]
 1353 0050 002B     	 cmp r3,#0
 1354 0052 11D0     	 beq .L76
 1355              	 .loc 3 452 0 is_stmt 0 discriminator 1
 1356 0054 7A8A     	 ldrh r2,[r7,#18]
 1357 0056 7B69     	 ldr r3,[r7,#20]
 1358 0058 B3F82231 	 ldrh r3,[r3,#290]
 1359 005c 1946     	 mov r1,r3
 1360 005e 4FF68073 	 movw r3,#65408
 1361 0062 0B40     	 ands r3,r3,r1
 1362 0064 9A42     	 cmp r2,r3
 1363 0066 07D1     	 bne .L76
 453:../CANopen/stack/301/CO_PDO.c ****             COB_ID = (COB_ID & 0xFFFF0000) | PDO->preDefinedCanId;
 1364              	 .loc 3 453 0 is_stmt 1
 1365 0068 FB69     	 ldr r3,[r7,#28]
 1366 006a 1B0C     	 lsrs r3,r3,#16
 1367 006c 1B04     	 lsls r3,r3,#16
 1368 006e 7A69     	 ldr r2,[r7,#20]
 1369 0070 B2F82221 	 ldrh r2,[r2,#290]
 1370 0074 1343     	 orrs r3,r3,r2
 1371 0076 FB61     	 str r3,[r7,#28]
 1372              	.L76:
 454:../CANopen/stack/301/CO_PDO.c ****         }
 455:../CANopen/stack/301/CO_PDO.c **** 
 456:../CANopen/stack/301/CO_PDO.c ****         /* If PDO is not valid, set bit 31 */
 457:../CANopen/stack/301/CO_PDO.c ****         if (!PDO->valid) COB_ID |= 0x80000000;
 1373              	 .loc 3 457 0
 1374 0078 7B69     	 ldr r3,[r7,#20]
 1375 007a 9B68     	 ldr r3,[r3,#8]
 1376 007c 002B     	 cmp r3,#0
 1377 007e 03D1     	 bne .L77
 1378              	 .loc 3 457 0 is_stmt 0 discriminator 1
 1379 0080 FB69     	 ldr r3,[r7,#28]
 1380 0082 43F00043 	 orr r3,r3,#-2147483648
 1381 0086 FB61     	 str r3,[r7,#28]
 1382              	.L77:
 458:../CANopen/stack/301/CO_PDO.c **** #if (C2000_PORT != 0)
 459:../CANopen/stack/301/CO_PDO.c ****         *((uint32_t *)buf) = COB_ID;
 460:../CANopen/stack/301/CO_PDO.c **** #else
 461:../CANopen/stack/301/CO_PDO.c ****         CO_setUint32(buf, COB_ID);
 1383              	 .loc 3 461 0 is_stmt 1
 1384 0088 B868     	 ldr r0,[r7,#8]
 1385 008a F969     	 ldr r1,[r7,#28]
 1386 008c FFF7FEFF 	 bl CO_setUint32
 1387              	.L75:
 1388              	.LBE9:
 462:../CANopen/stack/301/CO_PDO.c **** #endif
 463:../CANopen/stack/301/CO_PDO.c ****     }
 464:../CANopen/stack/301/CO_PDO.c **** 
 465:../CANopen/stack/301/CO_PDO.c ****     return returnCode;
 1389              	 .loc 3 465 0
 1390 0090 FB7E     	 ldrb r3,[r7,#27]
 1391 0092 5BB2     	 sxtb r3,r3
 466:../CANopen/stack/301/CO_PDO.c **** }
 1392              	 .loc 3 466 0
 1393 0094 1846     	 mov r0,r3
 1394 0096 2037     	 adds r7,r7,#32
 1395              	.LCFI77:
 1396              	 .cfi_def_cfa_offset 8
 1397 0098 BD46     	 mov sp,r7
 1398              	.LCFI78:
 1399              	 .cfi_def_cfa_register 13
 1400              	 
 1401 009a 80BD     	 pop {r7,pc}
 1402              	 .cfi_endproc
 1403              	.LFE42:
 1405              	 .section .text.CO_PDO_receive,"ax",%progbits
 1406              	 .align 2
 1407              	 .thumb
 1408              	 .thumb_func
 1410              	CO_PDO_receive:
 1411              	.LFB43:
 467:../CANopen/stack/301/CO_PDO.c **** #endif /* (CO_CONFIG_PDO) & CO_CONFIG_FLAG_OD_DYNAMIC */
 468:../CANopen/stack/301/CO_PDO.c **** 
 469:../CANopen/stack/301/CO_PDO.c **** 
 470:../CANopen/stack/301/CO_PDO.c **** /*******************************************************************************
 471:../CANopen/stack/301/CO_PDO.c ****  *      R P D O
 472:../CANopen/stack/301/CO_PDO.c ****  ******************************************************************************/
 473:../CANopen/stack/301/CO_PDO.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_RPDO_ENABLE
 474:../CANopen/stack/301/CO_PDO.c **** /*
 475:../CANopen/stack/301/CO_PDO.c ****  * States for RPDO->receiveError indicates received RPDOs with wrong length.
 476:../CANopen/stack/301/CO_PDO.c ****  */
 477:../CANopen/stack/301/CO_PDO.c **** typedef enum {
 478:../CANopen/stack/301/CO_PDO.c ****     CO_RPDO_RX_ACK_NO_ERROR = 0, /* No error */
 479:../CANopen/stack/301/CO_PDO.c ****     CO_RPDO_RX_ACK_ERROR = 1, /* Error is acknowledged */
 480:../CANopen/stack/301/CO_PDO.c ****     CO_RPDO_RX_ACK = 10, /* Auxiliary value */
 481:../CANopen/stack/301/CO_PDO.c ****     CO_RPDO_RX_OK = 11, /* Correct RPDO received, not acknowledged */
 482:../CANopen/stack/301/CO_PDO.c ****     CO_RPDO_RX_SHORT = 12, /* Too short RPDO received, not acknowledged */
 483:../CANopen/stack/301/CO_PDO.c ****     CO_RPDO_RX_LONG = 13 /* Too long RPDO received, not acknowledged */
 484:../CANopen/stack/301/CO_PDO.c **** } CO_PDO_receiveErrors_t;
 485:../CANopen/stack/301/CO_PDO.c **** 
 486:../CANopen/stack/301/CO_PDO.c **** /*
 487:../CANopen/stack/301/CO_PDO.c ****  * Read received message from CAN module.
 488:../CANopen/stack/301/CO_PDO.c ****  *
 489:../CANopen/stack/301/CO_PDO.c ****  * Function will be called (by CAN receive interrupt) every time, when CAN
 490:../CANopen/stack/301/CO_PDO.c ****  * message with correct identifier will be received. For more information and
 491:../CANopen/stack/301/CO_PDO.c ****  * description of parameters see file CO_driver.h.
 492:../CANopen/stack/301/CO_PDO.c ****  * If new message arrives and previous message wasn't processed yet, then
 493:../CANopen/stack/301/CO_PDO.c ****  * previous message will be lost and overwritten by the new message.
 494:../CANopen/stack/301/CO_PDO.c ****  */
 495:../CANopen/stack/301/CO_PDO.c **** static void CO_PDO_receive(void *object, void *msg) {
 1412              	 .loc 3 495 0
 1413              	 .cfi_startproc
 1414              	 
 1415              	 
 1416 0000 80B5     	 push {r7,lr}
 1417              	.LCFI79:
 1418              	 .cfi_def_cfa_offset 8
 1419              	 .cfi_offset 7,-8
 1420              	 .cfi_offset 14,-4
 1421 0002 88B0     	 sub sp,sp,#32
 1422              	.LCFI80:
 1423              	 .cfi_def_cfa_offset 40
 1424 0004 00AF     	 add r7,sp,#0
 1425              	.LCFI81:
 1426              	 .cfi_def_cfa_register 7
 1427 0006 7860     	 str r0,[r7,#4]
 1428 0008 3960     	 str r1,[r7]
 496:../CANopen/stack/301/CO_PDO.c ****     CO_RPDO_t *RPDO = object;
 1429              	 .loc 3 496 0
 1430 000a 7B68     	 ldr r3,[r7,#4]
 1431 000c BB61     	 str r3,[r7,#24]
 497:../CANopen/stack/301/CO_PDO.c ****     CO_PDO_common_t *PDO = &RPDO->PDO_common;
 1432              	 .loc 3 497 0
 1433 000e BB69     	 ldr r3,[r7,#24]
 1434 0010 7B61     	 str r3,[r7,#20]
 498:../CANopen/stack/301/CO_PDO.c ****     uint8_t DLC = CO_CANrxMsg_readDLC(msg);
 1435              	 .loc 3 498 0
 1436 0012 3B68     	 ldr r3,[r7]
 1437 0014 1B79     	 ldrb r3,[r3,#4]
 1438 0016 FB74     	 strb r3,[r7,#19]
 499:../CANopen/stack/301/CO_PDO.c ****     uint8_t *data = CO_CANrxMsg_readData(msg);
 1439              	 .loc 3 499 0
 1440 0018 3B68     	 ldr r3,[r7]
 1441 001a 0533     	 adds r3,r3,#5
 1442 001c FB60     	 str r3,[r7,#12]
 500:../CANopen/stack/301/CO_PDO.c ****     uint8_t err = RPDO->receiveError;
 1443              	 .loc 3 500 0
 1444 001e BB69     	 ldr r3,[r7,#24]
 1445 0020 93F86031 	 ldrb r3,[r3,#352]
 1446 0024 FB77     	 strb r3,[r7,#31]
 501:../CANopen/stack/301/CO_PDO.c **** 
 502:../CANopen/stack/301/CO_PDO.c ****     if (PDO->valid) {
 1447              	 .loc 3 502 0
 1448 0026 7B69     	 ldr r3,[r7,#20]
 1449 0028 9B68     	 ldr r3,[r3,#8]
 1450 002a 002B     	 cmp r3,#0
 1451 002c 3ED0     	 beq .L80
 503:../CANopen/stack/301/CO_PDO.c ****         if (DLC >= PDO->dataLength) {
 1452              	 .loc 3 503 0
 1453 002e 7B69     	 ldr r3,[r7,#20]
 1454 0030 1B7B     	 ldrb r3,[r3,#12]
 1455 0032 FA7C     	 ldrb r2,[r7,#19]
 1456 0034 9A42     	 cmp r2,r3
 1457 0036 34D3     	 bcc .L81
 1458              	.LBB10:
 504:../CANopen/stack/301/CO_PDO.c ****             /* indicate errors in PDO length */
 505:../CANopen/stack/301/CO_PDO.c ****             if (DLC == PDO->dataLength) {
 1459              	 .loc 3 505 0
 1460 0038 7B69     	 ldr r3,[r7,#20]
 1461 003a 1B7B     	 ldrb r3,[r3,#12]
 1462 003c FA7C     	 ldrb r2,[r7,#19]
 1463 003e 9A42     	 cmp r2,r3
 1464 0040 05D1     	 bne .L82
 506:../CANopen/stack/301/CO_PDO.c ****                 if (err == CO_RPDO_RX_ACK_ERROR) err = CO_RPDO_RX_OK;
 1465              	 .loc 3 506 0
 1466 0042 FB7F     	 ldrb r3,[r7,#31]
 1467 0044 012B     	 cmp r3,#1
 1468 0046 07D1     	 bne .L84
 1469              	 .loc 3 506 0 is_stmt 0 discriminator 1
 1470 0048 0B23     	 movs r3,#11
 1471 004a FB77     	 strb r3,[r7,#31]
 1472 004c 04E0     	 b .L84
 1473              	.L82:
 507:../CANopen/stack/301/CO_PDO.c ****             }
 508:../CANopen/stack/301/CO_PDO.c ****             else {
 509:../CANopen/stack/301/CO_PDO.c ****                 if (err == CO_RPDO_RX_ACK_NO_ERROR) err = CO_RPDO_RX_LONG;
 1474              	 .loc 3 509 0 is_stmt 1
 1475 004e FB7F     	 ldrb r3,[r7,#31]
 1476 0050 002B     	 cmp r3,#0
 1477 0052 01D1     	 bne .L84
 1478              	 .loc 3 509 0 is_stmt 0 discriminator 1
 1479 0054 0D23     	 movs r3,#13
 1480 0056 FB77     	 strb r3,[r7,#31]
 1481              	.L84:
 510:../CANopen/stack/301/CO_PDO.c ****             }
 511:../CANopen/stack/301/CO_PDO.c **** 
 512:../CANopen/stack/301/CO_PDO.c ****             /* Determine, to which of the two rx buffers copy the message. */
 513:../CANopen/stack/301/CO_PDO.c ****             uint8_t bufNo = 0;
 1482              	 .loc 3 513 0 is_stmt 1
 1483 0058 0023     	 movs r3,#0
 1484 005a BB77     	 strb r3,[r7,#30]
 514:../CANopen/stack/301/CO_PDO.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_PDO_SYNC_ENABLE
 515:../CANopen/stack/301/CO_PDO.c ****             if (RPDO->synchronous && RPDO->SYNC != NULL
 1485              	 .loc 3 515 0
 1486 005c BB69     	 ldr r3,[r7,#24]
 1487 005e D3F86831 	 ldr r3,[r3,#360]
 1488 0062 002B     	 cmp r3,#0
 1489 0064 0CD0     	 beq .L85
 1490              	 .loc 3 515 0 is_stmt 0 discriminator 1
 1491 0066 BB69     	 ldr r3,[r7,#24]
 1492 0068 D3F86431 	 ldr r3,[r3,#356]
 1493 006c 002B     	 cmp r3,#0
 1494 006e 07D0     	 beq .L85
 516:../CANopen/stack/301/CO_PDO.c ****                 && RPDO->SYNC->CANrxToggle
 1495              	 .loc 3 516 0 is_stmt 1
 1496 0070 BB69     	 ldr r3,[r7,#24]
 1497 0072 D3F86431 	 ldr r3,[r3,#356]
 1498 0076 DB68     	 ldr r3,[r3,#12]
 1499 0078 002B     	 cmp r3,#0
 1500 007a 01D0     	 beq .L85
 517:../CANopen/stack/301/CO_PDO.c ****             ) {
 518:../CANopen/stack/301/CO_PDO.c ****                 bufNo = 1;
 1501              	 .loc 3 518 0
 1502 007c 0123     	 movs r3,#1
 1503 007e BB77     	 strb r3,[r7,#30]
 1504              	.L85:
 519:../CANopen/stack/301/CO_PDO.c ****             }
 520:../CANopen/stack/301/CO_PDO.c **** #endif
 521:../CANopen/stack/301/CO_PDO.c **** 
 522:../CANopen/stack/301/CO_PDO.c ****             /* copy data into appropriate buffer and set 'new message' flag */
 523:../CANopen/stack/301/CO_PDO.c ****             memcpy(RPDO->CANrxData[bufNo], data,sizeof(RPDO->CANrxData[bufNo]));
 1505              	 .loc 3 523 0
 1506 0080 BB7F     	 ldrb r3,[r7,#30]
 1507 0082 2A33     	 adds r3,r3,#42
 1508 0084 DB00     	 lsls r3,r3,#3
 1509 0086 BA69     	 ldr r2,[r7,#24]
 1510 0088 1344     	 add r3,r3,r2
 1511 008a 1846     	 mov r0,r3
 1512 008c F968     	 ldr r1,[r7,#12]
 1513 008e 0822     	 movs r2,#8
 1514 0090 FFF7FEFF 	 bl memcpy
 524:../CANopen/stack/301/CO_PDO.c ****             CO_FLAG_SET(RPDO->CANrxNew[bufNo]);
 1515              	 .loc 3 524 0
 1516 0094 BA7F     	 ldrb r2,[r7,#30]
 1517 0096 BB69     	 ldr r3,[r7,#24]
 1518 0098 5232     	 adds r2,r2,#82
 1519 009a 0121     	 movs r1,#1
 1520 009c 43F82210 	 str r1,[r3,r2,lsl#2]
 1521              	.LBE10:
 1522 00a0 04E0     	 b .L80
 1523              	.L81:
 525:../CANopen/stack/301/CO_PDO.c **** 
 526:../CANopen/stack/301/CO_PDO.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_FLAG_CALLBACK_PRE
 527:../CANopen/stack/301/CO_PDO.c ****             /* Optional signal to RTOS, which can resume task, which handles
 528:../CANopen/stack/301/CO_PDO.c ****              * the RPDO. */
 529:../CANopen/stack/301/CO_PDO.c ****             if (RPDO->pFunctSignalPre != NULL) {
 530:../CANopen/stack/301/CO_PDO.c ****                 RPDO->pFunctSignalPre(RPDO->functSignalObjectPre);
 531:../CANopen/stack/301/CO_PDO.c ****             }
 532:../CANopen/stack/301/CO_PDO.c **** #endif
 533:../CANopen/stack/301/CO_PDO.c ****         }
 534:../CANopen/stack/301/CO_PDO.c ****         else if (err == CO_RPDO_RX_ACK_NO_ERROR) {
 1524              	 .loc 3 534 0
 1525 00a2 FB7F     	 ldrb r3,[r7,#31]
 1526 00a4 002B     	 cmp r3,#0
 1527 00a6 01D1     	 bne .L80
 535:../CANopen/stack/301/CO_PDO.c ****             err = CO_RPDO_RX_SHORT;
 1528              	 .loc 3 535 0
 1529 00a8 0C23     	 movs r3,#12
 1530 00aa FB77     	 strb r3,[r7,#31]
 1531              	.L80:
 536:../CANopen/stack/301/CO_PDO.c ****         }
 537:../CANopen/stack/301/CO_PDO.c ****     }
 538:../CANopen/stack/301/CO_PDO.c **** 
 539:../CANopen/stack/301/CO_PDO.c ****     RPDO->receiveError = err;
 1532              	 .loc 3 539 0
 1533 00ac BB69     	 ldr r3,[r7,#24]
 1534 00ae FA7F     	 ldrb r2,[r7,#31]
 1535 00b0 83F86021 	 strb r2,[r3,#352]
 540:../CANopen/stack/301/CO_PDO.c **** }
 1536              	 .loc 3 540 0
 1537 00b4 2037     	 adds r7,r7,#32
 1538              	.LCFI82:
 1539              	 .cfi_def_cfa_offset 8
 1540 00b6 BD46     	 mov sp,r7
 1541              	.LCFI83:
 1542              	 .cfi_def_cfa_register 13
 1543              	 
 1544 00b8 80BD     	 pop {r7,pc}
 1545              	 .cfi_endproc
 1546              	.LFE43:
 1548 00ba 00BF     	 .section .text.OD_write_14xx,"ax",%progbits
 1549              	 .align 2
 1550              	 .thumb
 1551              	 .thumb_func
 1553              	OD_write_14xx:
 1554              	.LFB44:
 541:../CANopen/stack/301/CO_PDO.c **** 
 542:../CANopen/stack/301/CO_PDO.c **** 
 543:../CANopen/stack/301/CO_PDO.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_FLAG_OD_DYNAMIC
 544:../CANopen/stack/301/CO_PDO.c **** /*
 545:../CANopen/stack/301/CO_PDO.c ****  * Custom function for writing OD object "RPDO communication parameter"
 546:../CANopen/stack/301/CO_PDO.c ****  *
 547:../CANopen/stack/301/CO_PDO.c ****  * For more information see file CO_ODinterface.h, OD_IO_t.
 548:../CANopen/stack/301/CO_PDO.c ****  */
 549:../CANopen/stack/301/CO_PDO.c **** static ODR_t OD_write_14xx(OD_stream_t *stream, const void *buf,
 550:../CANopen/stack/301/CO_PDO.c ****                            OD_size_t count, OD_size_t *countWritten)
 551:../CANopen/stack/301/CO_PDO.c **** {
 1555              	 .loc 3 551 0
 1556              	 .cfi_startproc
 1557              	 
 1558              	 
 1559 0000 80B5     	 push {r7,lr}
 1560              	.LCFI84:
 1561              	 .cfi_def_cfa_offset 8
 1562              	 .cfi_offset 7,-8
 1563              	 .cfi_offset 14,-4
 1564 0002 92B0     	 sub sp,sp,#72
 1565              	.LCFI85:
 1566              	 .cfi_def_cfa_offset 80
 1567 0004 04AF     	 add r7,sp,#16
 1568              	.LCFI86:
 1569              	 .cfi_def_cfa 7,64
 1570 0006 F860     	 str r0,[r7,#12]
 1571 0008 B960     	 str r1,[r7,#8]
 1572 000a 7A60     	 str r2,[r7,#4]
 1573 000c 3B60     	 str r3,[r7]
 552:../CANopen/stack/301/CO_PDO.c ****     /* "count" is also verified in *_init() function */
 553:../CANopen/stack/301/CO_PDO.c ****     if (stream == NULL || buf == NULL || countWritten == NULL || count > 4) {
 1574              	 .loc 3 553 0
 1575 000e FB68     	 ldr r3,[r7,#12]
 1576 0010 002B     	 cmp r3,#0
 1577 0012 08D0     	 beq .L87
 1578              	 .loc 3 553 0 is_stmt 0 discriminator 1
 1579 0014 BB68     	 ldr r3,[r7,#8]
 1580 0016 002B     	 cmp r3,#0
 1581 0018 05D0     	 beq .L87
 1582              	 .loc 3 553 0 discriminator 2
 1583 001a 3B68     	 ldr r3,[r7]
 1584 001c 002B     	 cmp r3,#0
 1585 001e 02D0     	 beq .L87
 1586              	 .loc 3 553 0 discriminator 3
 1587 0020 7B68     	 ldr r3,[r7,#4]
 1588 0022 042B     	 cmp r3,#4
 1589 0024 01D9     	 bls .L88
 1590              	.L87:
 554:../CANopen/stack/301/CO_PDO.c ****         return ODR_DEV_INCOMPAT;
 1591              	 .loc 3 554 0 is_stmt 1
 1592 0026 0923     	 movs r3,#9
 1593 0028 FEE0     	 b .L109
 1594              	.L88:
 555:../CANopen/stack/301/CO_PDO.c ****     }
 556:../CANopen/stack/301/CO_PDO.c **** 
 557:../CANopen/stack/301/CO_PDO.c ****     CO_RPDO_t *RPDO = stream->object;
 1595              	 .loc 3 557 0
 1596 002a FB68     	 ldr r3,[r7,#12]
 1597 002c 5B68     	 ldr r3,[r3,#4]
 1598 002e 3B63     	 str r3,[r7,#48]
 558:../CANopen/stack/301/CO_PDO.c ****     CO_PDO_common_t *PDO = &RPDO->PDO_common;
 1599              	 .loc 3 558 0
 1600 0030 3B6B     	 ldr r3,[r7,#48]
 1601 0032 FB62     	 str r3,[r7,#44]
 559:../CANopen/stack/301/CO_PDO.c ****     uint8_t bufCopy[4];
 560:../CANopen/stack/301/CO_PDO.c ****     memcpy(bufCopy, buf, count);
 1602              	 .loc 3 560 0
 1603 0034 07F11403 	 add r3,r7,#20
 1604 0038 1846     	 mov r0,r3
 1605 003a B968     	 ldr r1,[r7,#8]
 1606 003c 7A68     	 ldr r2,[r7,#4]
 1607 003e FFF7FEFF 	 bl memcpy
 561:../CANopen/stack/301/CO_PDO.c **** 
 562:../CANopen/stack/301/CO_PDO.c ****     switch (stream->subIndex) {
 1608              	 .loc 3 562 0
 1609 0042 FB68     	 ldr r3,[r7,#12]
 1610 0044 5B7C     	 ldrb r3,[r3,#17]
 1611 0046 022B     	 cmp r3,#2
 1612 0048 00F0AC80 	 beq .L91
 1613 004c 052B     	 cmp r3,#5
 1614 004e 00F0D080 	 beq .L92
 1615 0052 012B     	 cmp r3,#1
 1616 0054 40F0DF80 	 bne .L90
 1617              	.LBB11:
 563:../CANopen/stack/301/CO_PDO.c ****     case 1: { /* COB-ID used by PDO */
 564:../CANopen/stack/301/CO_PDO.c ****         uint32_t COB_ID = CO_getUint32(buf);
 1618              	 .loc 3 564 0
 1619 0058 B868     	 ldr r0,[r7,#8]
 1620 005a FFF7FEFF 	 bl CO_getUint32
 1621 005e B862     	 str r0,[r7,#40]
 565:../CANopen/stack/301/CO_PDO.c ****         uint16_t CAN_ID = (uint16_t)(COB_ID & 0x7FF);
 1622              	 .loc 3 565 0
 1623 0060 BB6A     	 ldr r3,[r7,#40]
 1624 0062 9BB2     	 uxth r3,r3
 1625 0064 C3F30A03 	 ubfx r3,r3,#0,#11
 1626 0068 FB86     	 strh r3,[r7,#54]
 566:../CANopen/stack/301/CO_PDO.c ****         bool_t valid = (COB_ID & 0x80000000) == 0;
 1627              	 .loc 3 566 0
 1628 006a BB6A     	 ldr r3,[r7,#40]
 1629 006c DB43     	 mvns r3,r3
 1630 006e DB0F     	 lsrs r3,r3,#31
 1631 0070 DBB2     	 uxtb r3,r3
 1632 0072 7B62     	 str r3,[r7,#36]
 567:../CANopen/stack/301/CO_PDO.c **** 
 568:../CANopen/stack/301/CO_PDO.c ****         /* bits 11...29 must be zero, PDO must be disabled on change,
 569:../CANopen/stack/301/CO_PDO.c ****          * CAN_ID == 0 is not allowed, mapping must be configured before
 570:../CANopen/stack/301/CO_PDO.c ****          * enabling the PDO */
 571:../CANopen/stack/301/CO_PDO.c ****         if ((COB_ID & 0x3FFFF800) != 0
 1633              	 .loc 3 571 0
 1634 0074 BA6A     	 ldr r2,[r7,#40]
 1635 0076 6F4B     	 ldr r3,.L110
 1636 0078 1340     	 ands r3,r3,r2
 1637 007a 002B     	 cmp r3,#0
 1638 007c 3DD1     	 bne .L94
 572:../CANopen/stack/301/CO_PDO.c ****             || (valid && PDO->valid && CAN_ID != PDO->configuredCanId)
 1639              	 .loc 3 572 0
 1640 007e 7B6A     	 ldr r3,[r7,#36]
 1641 0080 002B     	 cmp r3,#0
 1642 0082 09D0     	 beq .L95
 1643              	 .loc 3 572 0 is_stmt 0 discriminator 1
 1644 0084 FB6A     	 ldr r3,[r7,#44]
 1645 0086 9B68     	 ldr r3,[r3,#8]
 1646 0088 002B     	 cmp r3,#0
 1647 008a 05D0     	 beq .L95
 1648              	 .loc 3 572 0 discriminator 2
 1649 008c FB6A     	 ldr r3,[r7,#44]
 1650 008e B3F82431 	 ldrh r3,[r3,#292]
 1651 0092 FA8E     	 ldrh r2,[r7,#54]
 1652 0094 9A42     	 cmp r2,r3
 1653 0096 30D1     	 bne .L94
 1654              	.L95:
 573:../CANopen/stack/301/CO_PDO.c ****             || (valid && CO_IS_RESTRICTED_CAN_ID(CAN_ID))
 1655              	 .loc 3 573 0 is_stmt 1
 1656 0098 7B6A     	 ldr r3,[r7,#36]
 1657 009a 002B     	 cmp r3,#0
 1658 009c 26D0     	 beq .L96
 1659              	 .loc 3 573 0 is_stmt 0 discriminator 1
 1660 009e FB8E     	 ldrh r3,[r7,#54]
 1661 00a0 7F2B     	 cmp r3,#127
 1662 00a2 2AD9     	 bls .L94
 1663              	 .loc 3 573 0 discriminator 2
 1664 00a4 FB8E     	 ldrh r3,[r7,#54]
 1665 00a6 B3F5807F 	 cmp r3,#256
 1666 00aa 03D9     	 bls .L97
 1667              	 .loc 3 573 0 discriminator 3
 1668 00ac FB8E     	 ldrh r3,[r7,#54]
 1669 00ae B3F5C07F 	 cmp r3,#384
 1670 00b2 22D9     	 bls .L94
 1671              	.L97:
 1672              	 .loc 3 573 0 discriminator 5
 1673 00b4 FB8E     	 ldrh r3,[r7,#54]
 1674 00b6 B3F5B06F 	 cmp r3,#1408
 1675 00ba 03D9     	 bls .L98
 1676              	 .loc 3 573 0 discriminator 6
 1677 00bc FB8E     	 ldrh r3,[r7,#54]
 1678 00be B3F5C06F 	 cmp r3,#1536
 1679 00c2 1AD3     	 bcc .L94
 1680              	.L98:
 1681              	 .loc 3 573 0 discriminator 8
 1682 00c4 FB8E     	 ldrh r3,[r7,#54]
 1683 00c6 B3F5C06F 	 cmp r3,#1536
 1684 00ca 03D9     	 bls .L99
 1685              	 .loc 3 573 0 discriminator 9
 1686 00cc FB8E     	 ldrh r3,[r7,#54]
 1687 00ce B3F5D06F 	 cmp r3,#1664
 1688 00d2 12D3     	 bcc .L94
 1689              	.L99:
 1690              	 .loc 3 573 0 discriminator 11
 1691 00d4 FB8E     	 ldrh r3,[r7,#54]
 1692 00d6 B3F5DC6F 	 cmp r3,#1760
 1693 00da 03D3     	 bcc .L100
 1694              	 .loc 3 573 0 discriminator 12
 1695 00dc FB8E     	 ldrh r3,[r7,#54]
 1696 00de B3F5E06F 	 cmp r3,#1792
 1697 00e2 0AD3     	 bcc .L94
 1698              	.L100:
 1699              	 .loc 3 573 0 discriminator 14
 1700 00e4 FB8E     	 ldrh r3,[r7,#54]
 1701 00e6 B3F5E06F 	 cmp r3,#1792
 1702 00ea 06D8     	 bhi .L94
 1703              	.L96:
 574:../CANopen/stack/301/CO_PDO.c ****             || (valid && PDO->mappedObjectsCount == 0)
 1704              	 .loc 3 574 0 is_stmt 1
 1705 00ec 7B6A     	 ldr r3,[r7,#36]
 1706 00ee 002B     	 cmp r3,#0
 1707 00f0 05D0     	 beq .L101
 1708              	 .loc 3 574 0 is_stmt 0 discriminator 1
 1709 00f2 FB6A     	 ldr r3,[r7,#44]
 1710 00f4 5B7B     	 ldrb r3,[r3,#13]
 1711 00f6 002B     	 cmp r3,#0
 1712 00f8 01D1     	 bne .L101
 1713              	.L94:
 575:../CANopen/stack/301/CO_PDO.c ****         ) {
 576:../CANopen/stack/301/CO_PDO.c ****             return ODR_INVALID_VALUE;
 1714              	 .loc 3 576 0 is_stmt 1
 1715 00fa 0F23     	 movs r3,#15
 1716 00fc 94E0     	 b .L109
 1717              	.L101:
 577:../CANopen/stack/301/CO_PDO.c ****         }
 578:../CANopen/stack/301/CO_PDO.c **** 
 579:../CANopen/stack/301/CO_PDO.c ****         /* parameter changed? */
 580:../CANopen/stack/301/CO_PDO.c ****         if (valid != PDO->valid || CAN_ID != PDO->configuredCanId) {
 1718              	 .loc 3 580 0
 1719 00fe FB6A     	 ldr r3,[r7,#44]
 1720 0100 9A68     	 ldr r2,[r3,#8]
 1721 0102 7B6A     	 ldr r3,[r7,#36]
 1722 0104 9A42     	 cmp r2,r3
 1723 0106 05D1     	 bne .L102
 1724              	 .loc 3 580 0 is_stmt 0 discriminator 1
 1725 0108 FB6A     	 ldr r3,[r7,#44]
 1726 010a B3F82431 	 ldrh r3,[r3,#292]
 1727 010e FA8E     	 ldrh r2,[r7,#54]
 1728 0110 9A42     	 cmp r2,r3
 1729 0112 46D0     	 beq .L103
 1730              	.L102:
 1731              	.LBB12:
 581:../CANopen/stack/301/CO_PDO.c ****             /* if default CAN-ID is written, store to OD without Node-ID */
 582:../CANopen/stack/301/CO_PDO.c ****             if (CAN_ID == PDO->preDefinedCanId) {
 1732              	 .loc 3 582 0 is_stmt 1
 1733 0114 FB6A     	 ldr r3,[r7,#44]
 1734 0116 B3F82231 	 ldrh r3,[r3,#290]
 1735 011a FA8E     	 ldrh r2,[r7,#54]
 1736 011c 9A42     	 cmp r2,r3
 1737 011e 08D1     	 bne .L104
 583:../CANopen/stack/301/CO_PDO.c ****                 CO_setUint32(bufCopy, COB_ID & 0xFFFFFF80);
 1738              	 .loc 3 583 0
 1739 0120 BB6A     	 ldr r3,[r7,#40]
 1740 0122 23F07F03 	 bic r3,r3,#127
 1741 0126 07F11402 	 add r2,r7,#20
 1742 012a 1046     	 mov r0,r2
 1743 012c 1946     	 mov r1,r3
 1744 012e FFF7FEFF 	 bl CO_setUint32
 1745              	.L104:
 584:../CANopen/stack/301/CO_PDO.c ****             }
 585:../CANopen/stack/301/CO_PDO.c ****             if (!valid) {
 1746              	 .loc 3 585 0
 1747 0132 7B6A     	 ldr r3,[r7,#36]
 1748 0134 002B     	 cmp r3,#0
 1749 0136 01D1     	 bne .L105
 586:../CANopen/stack/301/CO_PDO.c ****                 CAN_ID = 0;
 1750              	 .loc 3 586 0
 1751 0138 0023     	 movs r3,#0
 1752 013a FB86     	 strh r3,[r7,#54]
 1753              	.L105:
 587:../CANopen/stack/301/CO_PDO.c ****             }
 588:../CANopen/stack/301/CO_PDO.c **** 
 589:../CANopen/stack/301/CO_PDO.c ****             CO_ReturnError_t ret = CO_CANrxBufferInit(
 1754              	 .loc 3 589 0
 1755 013c FB6A     	 ldr r3,[r7,#44]
 1756 013e 5868     	 ldr r0,[r3,#4]
 1757 0140 FB6A     	 ldr r3,[r7,#44]
 1758 0142 B3F82011 	 ldrh r1,[r3,#288]
 1759 0146 FA8E     	 ldrh r2,[r7,#54]
 1760 0148 0023     	 movs r3,#0
 1761 014a 0093     	 str r3,[sp]
 1762 014c 3B6B     	 ldr r3,[r7,#48]
 1763 014e 0193     	 str r3,[sp,#4]
 1764 0150 394B     	 ldr r3,.L110+4
 1765 0152 0293     	 str r3,[sp,#8]
 1766 0154 40F2FF73 	 movw r3,#2047
 1767 0158 FFF7FEFF 	 bl CO_CANrxBufferInit
 1768 015c 0346     	 mov r3,r0
 1769 015e 87F82330 	 strb r3,[r7,#35]
 590:../CANopen/stack/301/CO_PDO.c ****                     PDO->CANdev,        /* CAN device */
 591:../CANopen/stack/301/CO_PDO.c ****                     PDO->CANdevIdx,     /* rx buffer index */
 592:../CANopen/stack/301/CO_PDO.c ****                     CAN_ID,             /* CAN identifier */
 593:../CANopen/stack/301/CO_PDO.c ****                     0x7FF,              /* mask */
 594:../CANopen/stack/301/CO_PDO.c ****                     0,                  /* rtr */
 595:../CANopen/stack/301/CO_PDO.c ****                     (void*)RPDO,        /* object passed to receive function */
 596:../CANopen/stack/301/CO_PDO.c ****                     CO_PDO_receive);    /* this function will process rx msg */
 597:../CANopen/stack/301/CO_PDO.c **** 
 598:../CANopen/stack/301/CO_PDO.c ****             if (valid && ret == CO_ERROR_NO) {
 1770              	 .loc 3 598 0
 1771 0162 7B6A     	 ldr r3,[r7,#36]
 1772 0164 002B     	 cmp r3,#0
 1773 0166 0BD0     	 beq .L106
 1774              	 .loc 3 598 0 is_stmt 0 discriminator 1
 1775 0168 97F92330 	 ldrsb r3,[r7,#35]
 1776 016c 002B     	 cmp r3,#0
 1777 016e 07D1     	 bne .L106
 599:../CANopen/stack/301/CO_PDO.c ****                 PDO->valid = true;
 1778              	 .loc 3 599 0 is_stmt 1
 1779 0170 FB6A     	 ldr r3,[r7,#44]
 1780 0172 0122     	 movs r2,#1
 1781 0174 9A60     	 str r2,[r3,#8]
 600:../CANopen/stack/301/CO_PDO.c ****                 PDO->configuredCanId = CAN_ID;
 1782              	 .loc 3 600 0
 1783 0176 FB6A     	 ldr r3,[r7,#44]
 1784 0178 FA8E     	 ldrh r2,[r7,#54]
 1785 017a A3F82421 	 strh r2,[r3,#292]
 1786 017e 10E0     	 b .L103
 1787              	.L106:
 601:../CANopen/stack/301/CO_PDO.c ****             }
 602:../CANopen/stack/301/CO_PDO.c ****             else {
 603:../CANopen/stack/301/CO_PDO.c ****                 PDO->valid = false;
 1788              	 .loc 3 603 0
 1789 0180 FB6A     	 ldr r3,[r7,#44]
 1790 0182 0022     	 movs r2,#0
 1791 0184 9A60     	 str r2,[r3,#8]
 604:../CANopen/stack/301/CO_PDO.c ****                 CO_FLAG_CLEAR(RPDO->CANrxNew[0]);
 1792              	 .loc 3 604 0
 1793 0186 3B6B     	 ldr r3,[r7,#48]
 1794 0188 0022     	 movs r2,#0
 1795 018a C3F84821 	 str r2,[r3,#328]
 605:../CANopen/stack/301/CO_PDO.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_PDO_SYNC_ENABLE
 606:../CANopen/stack/301/CO_PDO.c ****                 CO_FLAG_CLEAR(RPDO->CANrxNew[1]);
 1796              	 .loc 3 606 0
 1797 018e 3B6B     	 ldr r3,[r7,#48]
 1798 0190 0022     	 movs r2,#0
 1799 0192 C3F84C21 	 str r2,[r3,#332]
 607:../CANopen/stack/301/CO_PDO.c **** #endif
 608:../CANopen/stack/301/CO_PDO.c ****                 if (ret != CO_ERROR_NO) {
 1800              	 .loc 3 608 0
 1801 0196 97F92330 	 ldrsb r3,[r7,#35]
 1802 019a 002B     	 cmp r3,#0
 1803 019c 01D0     	 beq .L103
 609:../CANopen/stack/301/CO_PDO.c ****                     return ODR_DEV_INCOMPAT;
 1804              	 .loc 3 609 0
 1805 019e 0923     	 movs r3,#9
 1806 01a0 42E0     	 b .L109
 1807              	.L103:
 1808              	.LBE12:
 610:../CANopen/stack/301/CO_PDO.c ****                 }
 611:../CANopen/stack/301/CO_PDO.c ****             }
 612:../CANopen/stack/301/CO_PDO.c ****         }
 613:../CANopen/stack/301/CO_PDO.c ****         break;
 1809              	 .loc 3 613 0
 1810 01a2 38E0     	 b .L90
 1811              	.L91:
 1812              	.LBE11:
 1813              	.LBB13:
 614:../CANopen/stack/301/CO_PDO.c ****     }
 615:../CANopen/stack/301/CO_PDO.c **** 
 616:../CANopen/stack/301/CO_PDO.c ****     case 2: { /* transmission type */
 617:../CANopen/stack/301/CO_PDO.c ****         uint8_t transmissionType = CO_getUint8(buf);
 1814              	 .loc 3 617 0
 1815 01a4 B868     	 ldr r0,[r7,#8]
 1816 01a6 FFF7FEFF 	 bl CO_getUint8
 1817 01aa 0346     	 mov r3,r0
 1818 01ac 87F82230 	 strb r3,[r7,#34]
 618:../CANopen/stack/301/CO_PDO.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_PDO_SYNC_ENABLE
 619:../CANopen/stack/301/CO_PDO.c ****         if (transmissionType > CO_PDO_TRANSM_TYPE_SYNC_240
 1819              	 .loc 3 619 0
 1820 01b0 97F82230 	 ldrb r3,[r7,#34]
 1821 01b4 F02B     	 cmp r3,#240
 1822 01b6 05D9     	 bls .L107
 620:../CANopen/stack/301/CO_PDO.c ****             && transmissionType < CO_PDO_TRANSM_TYPE_SYNC_EVENT_LO
 1823              	 .loc 3 620 0
 1824 01b8 97F82230 	 ldrb r3,[r7,#34]
 1825 01bc FD2B     	 cmp r3,#253
 1826 01be 01D8     	 bhi .L107
 621:../CANopen/stack/301/CO_PDO.c ****         ) {
 622:../CANopen/stack/301/CO_PDO.c ****             return ODR_INVALID_VALUE;
 1827              	 .loc 3 622 0
 1828 01c0 0F23     	 movs r3,#15
 1829 01c2 31E0     	 b .L109
 1830              	.L107:
 623:../CANopen/stack/301/CO_PDO.c ****         }
 624:../CANopen/stack/301/CO_PDO.c **** 
 625:../CANopen/stack/301/CO_PDO.c ****         bool_t synchronous = transmissionType <= CO_PDO_TRANSM_TYPE_SYNC_240;
 1831              	 .loc 3 625 0
 1832 01c4 97F82230 	 ldrb r3,[r7,#34]
 1833 01c8 F02B     	 cmp r3,#240
 1834 01ca 94BF     	 ite ls
 1835 01cc 0123     	 movls r3,#1
 1836 01ce 0023     	 movhi r3,#0
 1837 01d0 DBB2     	 uxtb r3,r3
 1838 01d2 FB61     	 str r3,[r7,#28]
 626:../CANopen/stack/301/CO_PDO.c ****         /* Remove old message from the second buffer. */
 627:../CANopen/stack/301/CO_PDO.c ****         if (RPDO->synchronous != synchronous) {
 1839              	 .loc 3 627 0
 1840 01d4 3B6B     	 ldr r3,[r7,#48]
 1841 01d6 D3F86821 	 ldr r2,[r3,#360]
 1842 01da FB69     	 ldr r3,[r7,#28]
 1843 01dc 9A42     	 cmp r2,r3
 1844 01de 03D0     	 beq .L108
 628:../CANopen/stack/301/CO_PDO.c ****             CO_FLAG_CLEAR(RPDO->CANrxNew[1]);
 1845              	 .loc 3 628 0
 1846 01e0 3B6B     	 ldr r3,[r7,#48]
 1847 01e2 0022     	 movs r2,#0
 1848 01e4 C3F84C21 	 str r2,[r3,#332]
 1849              	.L108:
 629:../CANopen/stack/301/CO_PDO.c ****         }
 630:../CANopen/stack/301/CO_PDO.c **** 
 631:../CANopen/stack/301/CO_PDO.c ****         RPDO->synchronous = synchronous;
 1850              	 .loc 3 631 0
 1851 01e8 3B6B     	 ldr r3,[r7,#48]
 1852 01ea FA69     	 ldr r2,[r7,#28]
 1853 01ec C3F86821 	 str r2,[r3,#360]
 632:../CANopen/stack/301/CO_PDO.c **** #else
 633:../CANopen/stack/301/CO_PDO.c ****         if (transmissionType < CO_PDO_TRANSM_TYPE_SYNC_EVENT_LO) {
 634:../CANopen/stack/301/CO_PDO.c ****             return ODR_INVALID_VALUE;
 635:../CANopen/stack/301/CO_PDO.c ****         }
 636:../CANopen/stack/301/CO_PDO.c **** #endif
 637:../CANopen/stack/301/CO_PDO.c ****         break;
 1854              	 .loc 3 637 0
 1855 01f0 11E0     	 b .L90
 1856              	.L92:
 1857              	.LBE13:
 1858              	.LBB14:
 638:../CANopen/stack/301/CO_PDO.c ****     }
 639:../CANopen/stack/301/CO_PDO.c **** 
 640:../CANopen/stack/301/CO_PDO.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_RPDO_TIMERS_ENABLE
 641:../CANopen/stack/301/CO_PDO.c ****     case 5: { /* event-timer */
 642:../CANopen/stack/301/CO_PDO.c ****         uint32_t eventTime = CO_getUint16(buf);
 1859              	 .loc 3 642 0
 1860 01f2 B868     	 ldr r0,[r7,#8]
 1861 01f4 FFF7FEFF 	 bl CO_getUint16
 1862 01f8 0346     	 mov r3,r0
 1863 01fa BB61     	 str r3,[r7,#24]
 643:../CANopen/stack/301/CO_PDO.c ****         RPDO->timeoutTime_us = eventTime * 1000;
 1864              	 .loc 3 643 0
 1865 01fc BB69     	 ldr r3,[r7,#24]
 1866 01fe 4FF47A72 	 mov r2,#1000
 1867 0202 02FB03F2 	 mul r2,r2,r3
 1868 0206 3B6B     	 ldr r3,[r7,#48]
 1869 0208 C3F86C21 	 str r2,[r3,#364]
 644:../CANopen/stack/301/CO_PDO.c ****         RPDO->timeoutTimer = 0;
 1870              	 .loc 3 644 0
 1871 020c 3B6B     	 ldr r3,[r7,#48]
 1872 020e 0022     	 movs r2,#0
 1873 0210 C3F87021 	 str r2,[r3,#368]
 645:../CANopen/stack/301/CO_PDO.c ****         break;
 1874              	 .loc 3 645 0
 1875 0214 00BF     	 nop
 1876              	.L90:
 1877              	.LBE14:
 646:../CANopen/stack/301/CO_PDO.c ****     }
 647:../CANopen/stack/301/CO_PDO.c **** #endif
 648:../CANopen/stack/301/CO_PDO.c ****     }
 649:../CANopen/stack/301/CO_PDO.c **** 
 650:../CANopen/stack/301/CO_PDO.c ****     /* write value to the original location in the Object Dictionary */
 651:../CANopen/stack/301/CO_PDO.c ****     return OD_writeOriginal(stream, bufCopy, count, countWritten);
 1878              	 .loc 3 651 0
 1879 0216 07F11403 	 add r3,r7,#20
 1880 021a F868     	 ldr r0,[r7,#12]
 1881 021c 1946     	 mov r1,r3
 1882 021e 7A68     	 ldr r2,[r7,#4]
 1883 0220 3B68     	 ldr r3,[r7]
 1884 0222 FFF7FEFF 	 bl OD_writeOriginal
 1885 0226 0346     	 mov r3,r0
 1886              	.L109:
 1887 0228 5BB2     	 sxtb r3,r3
 652:../CANopen/stack/301/CO_PDO.c **** }
 1888              	 .loc 3 652 0 discriminator 1
 1889 022a 1846     	 mov r0,r3
 1890 022c 3837     	 adds r7,r7,#56
 1891              	.LCFI87:
 1892              	 .cfi_def_cfa_offset 8
 1893 022e BD46     	 mov sp,r7
 1894              	.LCFI88:
 1895              	 .cfi_def_cfa_register 13
 1896              	 
 1897 0230 80BD     	 pop {r7,pc}
 1898              	.L111:
 1899 0232 00BF     	 .align 2
 1900              	.L110:
 1901 0234 00F8FF3F 	 .word 1073739776
 1902 0238 00000000 	 .word CO_PDO_receive
 1903              	 .cfi_endproc
 1904              	.LFE44:
 1906              	 .section .text.CO_RPDO_init,"ax",%progbits
 1907              	 .align 2
 1908              	 .global CO_RPDO_init
 1909              	 .thumb
 1910              	 .thumb_func
 1912              	CO_RPDO_init:
 1913              	.LFB45:
 653:../CANopen/stack/301/CO_PDO.c **** #endif /* (CO_CONFIG_PDO) & CO_CONFIG_FLAG_OD_DYNAMIC */
 654:../CANopen/stack/301/CO_PDO.c **** 
 655:../CANopen/stack/301/CO_PDO.c **** 
 656:../CANopen/stack/301/CO_PDO.c **** /******************************************************************************/
 657:../CANopen/stack/301/CO_PDO.c **** CO_ReturnError_t CO_RPDO_init(CO_RPDO_t *RPDO,
 658:../CANopen/stack/301/CO_PDO.c ****                               OD_t *OD,
 659:../CANopen/stack/301/CO_PDO.c ****                               CO_EM_t *em,
 660:../CANopen/stack/301/CO_PDO.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_PDO_SYNC_ENABLE
 661:../CANopen/stack/301/CO_PDO.c ****                               CO_SYNC_t *SYNC,
 662:../CANopen/stack/301/CO_PDO.c **** #endif
 663:../CANopen/stack/301/CO_PDO.c ****                               uint16_t preDefinedCanId,
 664:../CANopen/stack/301/CO_PDO.c ****                               OD_entry_t *OD_14xx_RPDOCommPar,
 665:../CANopen/stack/301/CO_PDO.c ****                               OD_entry_t *OD_16xx_RPDOMapPar,
 666:../CANopen/stack/301/CO_PDO.c ****                               CO_CANmodule_t *CANdevRx,
 667:../CANopen/stack/301/CO_PDO.c ****                               uint16_t CANdevRxIdx,
 668:../CANopen/stack/301/CO_PDO.c ****                               uint32_t *errInfo)
 669:../CANopen/stack/301/CO_PDO.c **** {
 1914              	 .loc 3 669 0
 1915              	 .cfi_startproc
 1916              	 
 1917              	 
 1918 0000 80B5     	 push {r7,lr}
 1919              	.LCFI89:
 1920              	 .cfi_def_cfa_offset 8
 1921              	 .cfi_offset 7,-8
 1922              	 .cfi_offset 14,-4
 1923 0002 90B0     	 sub sp,sp,#64
 1924              	.LCFI90:
 1925              	 .cfi_def_cfa_offset 72
 1926 0004 04AF     	 add r7,sp,#16
 1927              	.LCFI91:
 1928              	 .cfi_def_cfa 7,56
 1929 0006 F860     	 str r0,[r7,#12]
 1930 0008 B960     	 str r1,[r7,#8]
 1931 000a 7A60     	 str r2,[r7,#4]
 1932 000c 3B60     	 str r3,[r7]
 670:../CANopen/stack/301/CO_PDO.c ****     CO_PDO_common_t *PDO = &RPDO->PDO_common;
 1933              	 .loc 3 670 0
 1934 000e FB68     	 ldr r3,[r7,#12]
 1935 0010 7B62     	 str r3,[r7,#36]
 671:../CANopen/stack/301/CO_PDO.c ****     CO_ReturnError_t ret;
 672:../CANopen/stack/301/CO_PDO.c ****     ODR_t odRet;
 673:../CANopen/stack/301/CO_PDO.c **** 
 674:../CANopen/stack/301/CO_PDO.c ****     /* verify arguments */
 675:../CANopen/stack/301/CO_PDO.c ****     if (RPDO == NULL || OD == NULL || em == NULL || OD_14xx_RPDOCommPar == NULL
 1936              	 .loc 3 675 0
 1937 0012 FB68     	 ldr r3,[r7,#12]
 1938 0014 002B     	 cmp r3,#0
 1939 0016 0ED0     	 beq .L113
 1940              	 .loc 3 675 0 is_stmt 0 discriminator 1
 1941 0018 BB68     	 ldr r3,[r7,#8]
 1942 001a 002B     	 cmp r3,#0
 1943 001c 0BD0     	 beq .L113
 1944              	 .loc 3 675 0 discriminator 2
 1945 001e 7B68     	 ldr r3,[r7,#4]
 1946 0020 002B     	 cmp r3,#0
 1947 0022 08D0     	 beq .L113
 1948              	 .loc 3 675 0 discriminator 3
 1949 0024 FB6B     	 ldr r3,[r7,#60]
 1950 0026 002B     	 cmp r3,#0
 1951 0028 05D0     	 beq .L113
 676:../CANopen/stack/301/CO_PDO.c ****         || OD_16xx_RPDOMapPar == NULL || CANdevRx == NULL
 1952              	 .loc 3 676 0 is_stmt 1
 1953 002a 3B6C     	 ldr r3,[r7,#64]
 1954 002c 002B     	 cmp r3,#0
 1955 002e 02D0     	 beq .L113
 1956              	 .loc 3 676 0 is_stmt 0 discriminator 1
 1957 0030 7B6C     	 ldr r3,[r7,#68]
 1958 0032 002B     	 cmp r3,#0
 1959 0034 01D1     	 bne .L114
 1960              	.L113:
 677:../CANopen/stack/301/CO_PDO.c ****     ) {
 678:../CANopen/stack/301/CO_PDO.c ****         return CO_ERROR_ILLEGAL_ARGUMENT;
 1961              	 .loc 3 678 0 is_stmt 1
 1962 0036 FF23     	 movs r3,#255
 1963 0038 1AE1     	 b .L129
 1964              	.L114:
 679:../CANopen/stack/301/CO_PDO.c ****     }
 680:../CANopen/stack/301/CO_PDO.c **** 
 681:../CANopen/stack/301/CO_PDO.c ****     /* clear object */
 682:../CANopen/stack/301/CO_PDO.c ****     memset(RPDO, 0, sizeof(CO_RPDO_t));
 1965              	 .loc 3 682 0
 1966 003a F868     	 ldr r0,[r7,#12]
 1967 003c 0021     	 movs r1,#0
 1968 003e 4FF4BA72 	 mov r2,#372
 1969 0042 FFF7FEFF 	 bl memset
 683:../CANopen/stack/301/CO_PDO.c **** 
 684:../CANopen/stack/301/CO_PDO.c ****     /* Configure object variables */
 685:../CANopen/stack/301/CO_PDO.c ****     PDO->em = em;
 1970              	 .loc 3 685 0
 1971 0046 7B6A     	 ldr r3,[r7,#36]
 1972 0048 7A68     	 ldr r2,[r7,#4]
 1973 004a 1A60     	 str r2,[r3]
 686:../CANopen/stack/301/CO_PDO.c ****     PDO->CANdev = CANdevRx;
 1974              	 .loc 3 686 0
 1975 004c 7B6A     	 ldr r3,[r7,#36]
 1976 004e 7A6C     	 ldr r2,[r7,#68]
 1977 0050 5A60     	 str r2,[r3,#4]
 687:../CANopen/stack/301/CO_PDO.c **** 
 688:../CANopen/stack/301/CO_PDO.c ****     /* Configure mapping parameters */
 689:../CANopen/stack/301/CO_PDO.c ****     uint32_t erroneousMap = 0;
 1978              	 .loc 3 689 0
 1979 0052 0023     	 movs r3,#0
 1980 0054 FB61     	 str r3,[r7,#28]
 690:../CANopen/stack/301/CO_PDO.c ****     ret = PDO_initMapping(PDO,
 1981              	 .loc 3 690 0
 1982 0056 FB6C     	 ldr r3,[r7,#76]
 1983 0058 0093     	 str r3,[sp]
 1984 005a 07F11C03 	 add r3,r7,#28
 1985 005e 0193     	 str r3,[sp,#4]
 1986 0060 786A     	 ldr r0,[r7,#36]
 1987 0062 B968     	 ldr r1,[r7,#8]
 1988 0064 3A6C     	 ldr r2,[r7,#64]
 1989 0066 0123     	 movs r3,#1
 1990 0068 FFF7FEFF 	 bl PDO_initMapping
 1991 006c 0346     	 mov r3,r0
 1992 006e 87F82330 	 strb r3,[r7,#35]
 691:../CANopen/stack/301/CO_PDO.c ****                           OD,
 692:../CANopen/stack/301/CO_PDO.c ****                           OD_16xx_RPDOMapPar,
 693:../CANopen/stack/301/CO_PDO.c ****                           true,
 694:../CANopen/stack/301/CO_PDO.c ****                           errInfo,
 695:../CANopen/stack/301/CO_PDO.c ****                           &erroneousMap);
 696:../CANopen/stack/301/CO_PDO.c ****     if (ret != CO_ERROR_NO) {
 1993              	 .loc 3 696 0
 1994 0072 97F92330 	 ldrsb r3,[r7,#35]
 1995 0076 002B     	 cmp r3,#0
 1996 0078 02D0     	 beq .L116
 697:../CANopen/stack/301/CO_PDO.c ****         return ret;
 1997              	 .loc 3 697 0
 1998 007a 97F82330 	 ldrb r3,[r7,#35]
 1999 007e F7E0     	 b .L129
 2000              	.L116:
 698:../CANopen/stack/301/CO_PDO.c ****     }
 699:../CANopen/stack/301/CO_PDO.c **** 
 700:../CANopen/stack/301/CO_PDO.c **** 
 701:../CANopen/stack/301/CO_PDO.c ****     /* Configure communication parameter - COB-ID */
 702:../CANopen/stack/301/CO_PDO.c ****     uint32_t COB_ID = 0;
 2001              	 .loc 3 702 0
 2002 0080 0023     	 movs r3,#0
 2003 0082 BB61     	 str r3,[r7,#24]
 703:../CANopen/stack/301/CO_PDO.c ****     odRet = OD_get_u32(OD_14xx_RPDOCommPar, 1, &COB_ID, true);
 2004              	 .loc 3 703 0
 2005 0084 07F11803 	 add r3,r7,#24
 2006 0088 F86B     	 ldr r0,[r7,#60]
 2007 008a 0121     	 movs r1,#1
 2008 008c 1A46     	 mov r2,r3
 2009 008e 0123     	 movs r3,#1
 2010 0090 FFF7FEFF 	 bl OD_get_u32
 2011 0094 0346     	 mov r3,r0
 2012 0096 87F82230 	 strb r3,[r7,#34]
 704:../CANopen/stack/301/CO_PDO.c ****     if (odRet != ODR_OK) {
 2013              	 .loc 3 704 0
 2014 009a 97F92230 	 ldrsb r3,[r7,#34]
 2015 009e 002B     	 cmp r3,#0
 2016 00a0 0DD0     	 beq .L117
 705:../CANopen/stack/301/CO_PDO.c ****         if (errInfo != NULL) {
 2017              	 .loc 3 705 0
 2018 00a2 FB6C     	 ldr r3,[r7,#76]
 2019 00a4 002B     	 cmp r3,#0
 2020 00a6 08D0     	 beq .L118
 706:../CANopen/stack/301/CO_PDO.c ****             *errInfo = (((uint32_t)OD_getIndex(OD_14xx_RPDOCommPar)) << 8) | 1;
 2021              	 .loc 3 706 0
 2022 00a8 F86B     	 ldr r0,[r7,#60]
 2023 00aa FFF7FEFF 	 bl OD_getIndex
 2024 00ae 0346     	 mov r3,r0
 2025 00b0 1B02     	 lsls r3,r3,#8
 2026 00b2 43F00102 	 orr r2,r3,#1
 2027 00b6 FB6C     	 ldr r3,[r7,#76]
 2028 00b8 1A60     	 str r2,[r3]
 2029              	.L118:
 707:../CANopen/stack/301/CO_PDO.c ****         }
 708:../CANopen/stack/301/CO_PDO.c ****         return CO_ERROR_OD_PARAMETERS;
 2030              	 .loc 3 708 0
 2031 00ba F423     	 movs r3,#244
 2032 00bc D8E0     	 b .L129
 2033              	.L117:
 709:../CANopen/stack/301/CO_PDO.c ****     }
 710:../CANopen/stack/301/CO_PDO.c **** 
 711:../CANopen/stack/301/CO_PDO.c ****     bool_t valid = (COB_ID & 0x80000000) == 0;
 2034              	 .loc 3 711 0
 2035 00be BB69     	 ldr r3,[r7,#24]
 2036 00c0 DB43     	 mvns r3,r3
 2037 00c2 DB0F     	 lsrs r3,r3,#31
 2038 00c4 DBB2     	 uxtb r3,r3
 2039 00c6 FB62     	 str r3,[r7,#44]
 712:../CANopen/stack/301/CO_PDO.c ****     uint16_t CAN_ID = (uint16_t)(COB_ID & 0x7FF);
 2040              	 .loc 3 712 0
 2041 00c8 BB69     	 ldr r3,[r7,#24]
 2042 00ca 9BB2     	 uxth r3,r3
 2043 00cc C3F30A03 	 ubfx r3,r3,#0,#11
 2044 00d0 7B85     	 strh r3,[r7,#42]
 713:../CANopen/stack/301/CO_PDO.c ****     if (valid && (PDO->mappedObjectsCount == 0 || CAN_ID == 0)) {
 2045              	 .loc 3 713 0
 2046 00d2 FB6A     	 ldr r3,[r7,#44]
 2047 00d4 002B     	 cmp r3,#0
 2048 00d6 0DD0     	 beq .L119
 2049              	 .loc 3 713 0 is_stmt 0 discriminator 1
 2050 00d8 7B6A     	 ldr r3,[r7,#36]
 2051 00da 5B7B     	 ldrb r3,[r3,#13]
 2052 00dc 002B     	 cmp r3,#0
 2053 00de 02D0     	 beq .L120
 2054              	 .loc 3 713 0 discriminator 2
 2055 00e0 7B8D     	 ldrh r3,[r7,#42]
 2056 00e2 002B     	 cmp r3,#0
 2057 00e4 06D1     	 bne .L119
 2058              	.L120:
 714:../CANopen/stack/301/CO_PDO.c ****         valid = false;
 2059              	 .loc 3 714 0 is_stmt 1
 2060 00e6 0023     	 movs r3,#0
 2061 00e8 FB62     	 str r3,[r7,#44]
 715:../CANopen/stack/301/CO_PDO.c ****         if (erroneousMap == 0) erroneousMap = 1;
 2062              	 .loc 3 715 0
 2063 00ea FB69     	 ldr r3,[r7,#28]
 2064 00ec 002B     	 cmp r3,#0
 2065 00ee 01D1     	 bne .L119
 2066              	 .loc 3 715 0 is_stmt 0 discriminator 1
 2067 00f0 0123     	 movs r3,#1
 2068 00f2 FB61     	 str r3,[r7,#28]
 2069              	.L119:
 716:../CANopen/stack/301/CO_PDO.c ****     }
 717:../CANopen/stack/301/CO_PDO.c **** 
 718:../CANopen/stack/301/CO_PDO.c ****     if (erroneousMap != 0) {
 2070              	 .loc 3 718 0 is_stmt 1
 2071 00f4 FB69     	 ldr r3,[r7,#28]
 2072 00f6 002B     	 cmp r3,#0
 2073 00f8 0FD0     	 beq .L121
 719:../CANopen/stack/301/CO_PDO.c ****         CO_errorReport(PDO->em,
 2074              	 .loc 3 719 0
 2075 00fa 7B6A     	 ldr r3,[r7,#36]
 2076 00fc 1A68     	 ldr r2,[r3]
 2077 00fe FB69     	 ldr r3,[r7,#28]
 2078 0100 012B     	 cmp r3,#1
 2079 0102 01D0     	 beq .L122
 2080              	 .loc 3 719 0 is_stmt 0 discriminator 1
 2081 0104 FB69     	 ldr r3,[r7,#28]
 2082 0106 00E0     	 b .L123
 2083              	.L122:
 2084              	 .loc 3 719 0 discriminator 2
 2085 0108 BB69     	 ldr r3,[r7,#24]
 2086              	.L123:
 2087              	 .loc 3 719 0 discriminator 4
 2088 010a 0093     	 str r3,[sp]
 2089 010c 1046     	 mov r0,r2
 2090 010e 0121     	 movs r1,#1
 2091 0110 1A22     	 movs r2,#26
 2092 0112 4FF40243 	 mov r3,#33280
 2093 0116 FFF7FEFF 	 bl CO_error
 2094              	.L121:
 720:../CANopen/stack/301/CO_PDO.c ****                        CO_EM_PDO_WRONG_MAPPING, CO_EMC_PROTOCOL_ERROR,
 721:../CANopen/stack/301/CO_PDO.c ****                        erroneousMap != 1 ? erroneousMap : COB_ID);
 722:../CANopen/stack/301/CO_PDO.c ****     }
 723:../CANopen/stack/301/CO_PDO.c ****     if (!valid) {
 2095              	 .loc 3 723 0 is_stmt 1
 2096 011a FB6A     	 ldr r3,[r7,#44]
 2097 011c 002B     	 cmp r3,#0
 2098 011e 01D1     	 bne .L124
 724:../CANopen/stack/301/CO_PDO.c ****         CAN_ID = 0;
 2099              	 .loc 3 724 0
 2100 0120 0023     	 movs r3,#0
 2101 0122 7B85     	 strh r3,[r7,#42]
 2102              	.L124:
 725:../CANopen/stack/301/CO_PDO.c ****     }
 726:../CANopen/stack/301/CO_PDO.c **** 
 727:../CANopen/stack/301/CO_PDO.c ****     /* If default CAN-ID is stored in OD (without Node-ID), add Node-ID */
 728:../CANopen/stack/301/CO_PDO.c ****     if (CAN_ID != 0 && CAN_ID == (preDefinedCanId & 0xFF80)) {
 2103              	 .loc 3 728 0
 2104 0124 7B8D     	 ldrh r3,[r7,#42]
 2105 0126 002B     	 cmp r3,#0
 2106 0128 08D0     	 beq .L125
 2107              	 .loc 3 728 0 is_stmt 0 discriminator 1
 2108 012a 7A8D     	 ldrh r2,[r7,#42]
 2109 012c 398F     	 ldrh r1,[r7,#56]
 2110 012e 4FF68073 	 movw r3,#65408
 2111 0132 0B40     	 ands r3,r3,r1
 2112 0134 9A42     	 cmp r2,r3
 2113 0136 01D1     	 bne .L125
 729:../CANopen/stack/301/CO_PDO.c ****         CAN_ID = preDefinedCanId;
 2114              	 .loc 3 729 0 is_stmt 1
 2115 0138 3B8F     	 ldrh r3,[r7,#56]
 2116 013a 7B85     	 strh r3,[r7,#42]
 2117              	.L125:
 730:../CANopen/stack/301/CO_PDO.c ****     }
 731:../CANopen/stack/301/CO_PDO.c **** 
 732:../CANopen/stack/301/CO_PDO.c ****     ret = CO_CANrxBufferInit(
 2118              	 .loc 3 732 0
 2119 013c B7F84810 	 ldrh r1,[r7,#72]
 2120 0140 7A8D     	 ldrh r2,[r7,#42]
 2121 0142 0023     	 movs r3,#0
 2122 0144 0093     	 str r3,[sp]
 2123 0146 FB68     	 ldr r3,[r7,#12]
 2124 0148 0193     	 str r3,[sp,#4]
 2125 014a 4C4B     	 ldr r3,.L130
 2126 014c 0293     	 str r3,[sp,#8]
 2127 014e 786C     	 ldr r0,[r7,#68]
 2128 0150 40F2FF73 	 movw r3,#2047
 2129 0154 FFF7FEFF 	 bl CO_CANrxBufferInit
 2130 0158 0346     	 mov r3,r0
 2131 015a 87F82330 	 strb r3,[r7,#35]
 733:../CANopen/stack/301/CO_PDO.c ****             CANdevRx,           /* CAN device */
 734:../CANopen/stack/301/CO_PDO.c ****             CANdevRxIdx,        /* rx buffer index */
 735:../CANopen/stack/301/CO_PDO.c ****             CAN_ID,             /* CAN identifier */
 736:../CANopen/stack/301/CO_PDO.c ****             0x7FF,              /* mask */
 737:../CANopen/stack/301/CO_PDO.c ****             0,                  /* rtr */
 738:../CANopen/stack/301/CO_PDO.c ****             (void*)RPDO,        /* object passed to receive function */
 739:../CANopen/stack/301/CO_PDO.c ****             CO_PDO_receive);    /* this function will process received message*/
 740:../CANopen/stack/301/CO_PDO.c ****     if (ret != CO_ERROR_NO) {
 2132              	 .loc 3 740 0
 2133 015e 97F92330 	 ldrsb r3,[r7,#35]
 2134 0162 002B     	 cmp r3,#0
 2135 0164 02D0     	 beq .L126
 741:../CANopen/stack/301/CO_PDO.c ****         return ret;
 2136              	 .loc 3 741 0
 2137 0166 97F82330 	 ldrb r3,[r7,#35]
 2138 016a 81E0     	 b .L129
 2139              	.L126:
 742:../CANopen/stack/301/CO_PDO.c ****     }
 743:../CANopen/stack/301/CO_PDO.c **** 
 744:../CANopen/stack/301/CO_PDO.c ****     PDO->valid = valid;
 2140              	 .loc 3 744 0
 2141 016c 7B6A     	 ldr r3,[r7,#36]
 2142 016e FA6A     	 ldr r2,[r7,#44]
 2143 0170 9A60     	 str r2,[r3,#8]
 745:../CANopen/stack/301/CO_PDO.c **** 
 746:../CANopen/stack/301/CO_PDO.c **** 
 747:../CANopen/stack/301/CO_PDO.c ****     /* Configure communication parameter - transmission type */
 748:../CANopen/stack/301/CO_PDO.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_PDO_SYNC_ENABLE
 749:../CANopen/stack/301/CO_PDO.c ****     uint8_t transmissionType = CO_PDO_TRANSM_TYPE_SYNC_EVENT_LO;
 2144              	 .loc 3 749 0
 2145 0172 FE23     	 movs r3,#254
 2146 0174 FB75     	 strb r3,[r7,#23]
 750:../CANopen/stack/301/CO_PDO.c ****     odRet = OD_get_u8(OD_14xx_RPDOCommPar, 2, &transmissionType, true);
 2147              	 .loc 3 750 0
 2148 0176 07F11703 	 add r3,r7,#23
 2149 017a F86B     	 ldr r0,[r7,#60]
 2150 017c 0221     	 movs r1,#2
 2151 017e 1A46     	 mov r2,r3
 2152 0180 0123     	 movs r3,#1
 2153 0182 FFF7FEFF 	 bl OD_get_u8
 2154 0186 0346     	 mov r3,r0
 2155 0188 87F82230 	 strb r3,[r7,#34]
 751:../CANopen/stack/301/CO_PDO.c ****     if (odRet != ODR_OK) {
 2156              	 .loc 3 751 0
 2157 018c 97F92230 	 ldrsb r3,[r7,#34]
 2158 0190 002B     	 cmp r3,#0
 2159 0192 0DD0     	 beq .L127
 752:../CANopen/stack/301/CO_PDO.c ****         if (errInfo != NULL) {
 2160              	 .loc 3 752 0
 2161 0194 FB6C     	 ldr r3,[r7,#76]
 2162 0196 002B     	 cmp r3,#0
 2163 0198 08D0     	 beq .L128
 753:../CANopen/stack/301/CO_PDO.c ****             *errInfo = (((uint32_t)OD_getIndex(OD_14xx_RPDOCommPar)) << 8) | 2;
 2164              	 .loc 3 753 0
 2165 019a F86B     	 ldr r0,[r7,#60]
 2166 019c FFF7FEFF 	 bl OD_getIndex
 2167 01a0 0346     	 mov r3,r0
 2168 01a2 1B02     	 lsls r3,r3,#8
 2169 01a4 43F00202 	 orr r2,r3,#2
 2170 01a8 FB6C     	 ldr r3,[r7,#76]
 2171 01aa 1A60     	 str r2,[r3]
 2172              	.L128:
 754:../CANopen/stack/301/CO_PDO.c ****         }
 755:../CANopen/stack/301/CO_PDO.c ****         return CO_ERROR_OD_PARAMETERS;
 2173              	 .loc 3 755 0
 2174 01ac F423     	 movs r3,#244
 2175 01ae 5FE0     	 b .L129
 2176              	.L127:
 756:../CANopen/stack/301/CO_PDO.c ****     }
 757:../CANopen/stack/301/CO_PDO.c **** 
 758:../CANopen/stack/301/CO_PDO.c ****     RPDO->SYNC = SYNC;
 2177              	 .loc 3 758 0
 2178 01b0 FB68     	 ldr r3,[r7,#12]
 2179 01b2 3A68     	 ldr r2,[r7]
 2180 01b4 C3F86421 	 str r2,[r3,#356]
 759:../CANopen/stack/301/CO_PDO.c ****     RPDO->synchronous = transmissionType <= CO_PDO_TRANSM_TYPE_SYNC_240;
 2181              	 .loc 3 759 0
 2182 01b8 FB7D     	 ldrb r3,[r7,#23]
 2183 01ba F02B     	 cmp r3,#240
 2184 01bc 94BF     	 ite ls
 2185 01be 0123     	 movls r3,#1
 2186 01c0 0023     	 movhi r3,#0
 2187 01c2 DBB2     	 uxtb r3,r3
 2188 01c4 1A46     	 mov r2,r3
 2189 01c6 FB68     	 ldr r3,[r7,#12]
 2190 01c8 C3F86821 	 str r2,[r3,#360]
 760:../CANopen/stack/301/CO_PDO.c **** #endif
 761:../CANopen/stack/301/CO_PDO.c **** 
 762:../CANopen/stack/301/CO_PDO.c **** 
 763:../CANopen/stack/301/CO_PDO.c ****     /* Configure communication parameter - event-timer (optional) */
 764:../CANopen/stack/301/CO_PDO.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_RPDO_TIMERS_ENABLE
 765:../CANopen/stack/301/CO_PDO.c ****     uint16_t eventTime = 0;
 2191              	 .loc 3 765 0
 2192 01cc 0023     	 movs r3,#0
 2193 01ce BB82     	 strh r3,[r7,#20]
 766:../CANopen/stack/301/CO_PDO.c ****     odRet = OD_get_u16(OD_14xx_RPDOCommPar, 5, &eventTime, true);
 2194              	 .loc 3 766 0
 2195 01d0 07F11403 	 add r3,r7,#20
 2196 01d4 F86B     	 ldr r0,[r7,#60]
 2197 01d6 0521     	 movs r1,#5
 2198 01d8 1A46     	 mov r2,r3
 2199 01da 0123     	 movs r3,#1
 2200 01dc FFF7FEFF 	 bl OD_get_u16
 2201 01e0 0346     	 mov r3,r0
 2202 01e2 87F82230 	 strb r3,[r7,#34]
 767:../CANopen/stack/301/CO_PDO.c ****     RPDO->timeoutTime_us = (uint32_t)eventTime * 1000;
 2203              	 .loc 3 767 0
 2204 01e6 BB8A     	 ldrh r3,[r7,#20]
 2205 01e8 1A46     	 mov r2,r3
 2206 01ea 4FF47A73 	 mov r3,#1000
 2207 01ee 03FB02F2 	 mul r2,r3,r2
 2208 01f2 FB68     	 ldr r3,[r7,#12]
 2209 01f4 C3F86C21 	 str r2,[r3,#364]
 768:../CANopen/stack/301/CO_PDO.c **** #endif
 769:../CANopen/stack/301/CO_PDO.c **** 
 770:../CANopen/stack/301/CO_PDO.c **** 
 771:../CANopen/stack/301/CO_PDO.c ****     /* Configure OD extensions */
 772:../CANopen/stack/301/CO_PDO.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_FLAG_OD_DYNAMIC
 773:../CANopen/stack/301/CO_PDO.c ****     PDO->isRPDO = true;
 2210              	 .loc 3 773 0
 2211 01f8 7B6A     	 ldr r3,[r7,#36]
 2212 01fa 0122     	 movs r2,#1
 2213 01fc C3F81821 	 str r2,[r3,#280]
 774:../CANopen/stack/301/CO_PDO.c ****     PDO->OD = OD;
 2214              	 .loc 3 774 0
 2215 0200 7B6A     	 ldr r3,[r7,#36]
 2216 0202 BA68     	 ldr r2,[r7,#8]
 2217 0204 C3F81C21 	 str r2,[r3,#284]
 775:../CANopen/stack/301/CO_PDO.c ****     PDO->CANdevIdx = CANdevRxIdx;
 2218              	 .loc 3 775 0
 2219 0208 7B6A     	 ldr r3,[r7,#36]
 2220 020a B7F84820 	 ldrh r2,[r7,#72]
 2221 020e A3F82021 	 strh r2,[r3,#288]
 776:../CANopen/stack/301/CO_PDO.c ****     PDO->preDefinedCanId = preDefinedCanId;
 2222              	 .loc 3 776 0
 2223 0212 7B6A     	 ldr r3,[r7,#36]
 2224 0214 3A8F     	 ldrh r2,[r7,#56]
 2225 0216 A3F82221 	 strh r2,[r3,#290]
 777:../CANopen/stack/301/CO_PDO.c ****     PDO->configuredCanId = CAN_ID;
 2226              	 .loc 3 777 0
 2227 021a 7B6A     	 ldr r3,[r7,#36]
 2228 021c 7A8D     	 ldrh r2,[r7,#42]
 2229 021e A3F82421 	 strh r2,[r3,#292]
 778:../CANopen/stack/301/CO_PDO.c ****     PDO->OD_communicationParam_ext.object = RPDO;
 2230              	 .loc 3 778 0
 2231 0222 7B6A     	 ldr r3,[r7,#36]
 2232 0224 FA68     	 ldr r2,[r7,#12]
 2233 0226 C3F82821 	 str r2,[r3,#296]
 779:../CANopen/stack/301/CO_PDO.c ****     PDO->OD_communicationParam_ext.read = OD_read_PDO_commParam;
 2234              	 .loc 3 779 0
 2235 022a 7B6A     	 ldr r3,[r7,#36]
 2236 022c 144A     	 ldr r2,.L130+4
 2237 022e C3F82C21 	 str r2,[r3,#300]
 780:../CANopen/stack/301/CO_PDO.c ****     PDO->OD_communicationParam_ext.write = OD_write_14xx;
 2238              	 .loc 3 780 0
 2239 0232 7B6A     	 ldr r3,[r7,#36]
 2240 0234 134A     	 ldr r2,.L130+8
 2241 0236 C3F83021 	 str r2,[r3,#304]
 781:../CANopen/stack/301/CO_PDO.c ****     PDO->OD_mappingParam_extension.object = RPDO;
 2242              	 .loc 3 781 0
 2243 023a 7B6A     	 ldr r3,[r7,#36]
 2244 023c FA68     	 ldr r2,[r7,#12]
 2245 023e C3F83821 	 str r2,[r3,#312]
 782:../CANopen/stack/301/CO_PDO.c ****     PDO->OD_mappingParam_extension.read = OD_readOriginal;
 2246              	 .loc 3 782 0
 2247 0242 7B6A     	 ldr r3,[r7,#36]
 2248 0244 104A     	 ldr r2,.L130+12
 2249 0246 C3F83C21 	 str r2,[r3,#316]
 783:../CANopen/stack/301/CO_PDO.c ****     PDO->OD_mappingParam_extension.write = OD_write_PDO_mapping;
 2250              	 .loc 3 783 0
 2251 024a 7B6A     	 ldr r3,[r7,#36]
 2252 024c 0F4A     	 ldr r2,.L130+16
 2253 024e C3F84021 	 str r2,[r3,#320]
 784:../CANopen/stack/301/CO_PDO.c ****     OD_extension_init(OD_14xx_RPDOCommPar, &PDO->OD_communicationParam_ext);
 2254              	 .loc 3 784 0
 2255 0252 7B6A     	 ldr r3,[r7,#36]
 2256 0254 03F59473 	 add r3,r3,#296
 2257 0258 F86B     	 ldr r0,[r7,#60]
 2258 025a 1946     	 mov r1,r3
 2259 025c FFF7FEFF 	 bl OD_extension_init
 785:../CANopen/stack/301/CO_PDO.c ****     OD_extension_init(OD_16xx_RPDOMapPar, &PDO->OD_mappingParam_extension);
 2260              	 .loc 3 785 0
 2261 0260 7B6A     	 ldr r3,[r7,#36]
 2262 0262 03F59C73 	 add r3,r3,#312
 2263 0266 386C     	 ldr r0,[r7,#64]
 2264 0268 1946     	 mov r1,r3
 2265 026a FFF7FEFF 	 bl OD_extension_init
 786:../CANopen/stack/301/CO_PDO.c **** #endif
 787:../CANopen/stack/301/CO_PDO.c **** 
 788:../CANopen/stack/301/CO_PDO.c ****     return CO_ERROR_NO;
 2266              	 .loc 3 788 0
 2267 026e 0023     	 movs r3,#0
 2268              	.L129:
 2269 0270 5BB2     	 sxtb r3,r3
 789:../CANopen/stack/301/CO_PDO.c **** }
 2270              	 .loc 3 789 0 discriminator 1
 2271 0272 1846     	 mov r0,r3
 2272 0274 3037     	 adds r7,r7,#48
 2273              	.LCFI92:
 2274              	 .cfi_def_cfa_offset 8
 2275 0276 BD46     	 mov sp,r7
 2276              	.LCFI93:
 2277              	 .cfi_def_cfa_register 13
 2278              	 
 2279 0278 80BD     	 pop {r7,pc}
 2280              	.L131:
 2281 027a 00BF     	 .align 2
 2282              	.L130:
 2283 027c 00000000 	 .word CO_PDO_receive
 2284 0280 00000000 	 .word OD_read_PDO_commParam
 2285 0284 00000000 	 .word OD_write_14xx
 2286 0288 00000000 	 .word OD_readOriginal
 2287 028c 00000000 	 .word OD_write_PDO_mapping
 2288              	 .cfi_endproc
 2289              	.LFE45:
 2291              	 .section .text.CO_RPDO_process,"ax",%progbits
 2292              	 .align 2
 2293              	 .global CO_RPDO_process
 2294              	 .thumb
 2295              	 .thumb_func
 2297              	CO_RPDO_process:
 2298              	.LFB46:
 790:../CANopen/stack/301/CO_PDO.c **** 
 791:../CANopen/stack/301/CO_PDO.c **** 
 792:../CANopen/stack/301/CO_PDO.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_FLAG_CALLBACK_PRE
 793:../CANopen/stack/301/CO_PDO.c **** void CO_RPDO_initCallbackPre(CO_RPDO_t *RPDO,
 794:../CANopen/stack/301/CO_PDO.c ****                              void *object,
 795:../CANopen/stack/301/CO_PDO.c ****                              void (*pFunctSignalPre)(void *object))
 796:../CANopen/stack/301/CO_PDO.c **** {
 797:../CANopen/stack/301/CO_PDO.c ****     if (RPDO != NULL) {
 798:../CANopen/stack/301/CO_PDO.c ****         RPDO->functSignalObjectPre = object;
 799:../CANopen/stack/301/CO_PDO.c ****         RPDO->pFunctSignalPre = pFunctSignalPre;
 800:../CANopen/stack/301/CO_PDO.c ****     }
 801:../CANopen/stack/301/CO_PDO.c **** }
 802:../CANopen/stack/301/CO_PDO.c **** #endif
 803:../CANopen/stack/301/CO_PDO.c **** 
 804:../CANopen/stack/301/CO_PDO.c **** 
 805:../CANopen/stack/301/CO_PDO.c **** /******************************************************************************/
 806:../CANopen/stack/301/CO_PDO.c **** void CO_RPDO_process(CO_RPDO_t *RPDO,
 807:../CANopen/stack/301/CO_PDO.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_RPDO_TIMERS_ENABLE
 808:../CANopen/stack/301/CO_PDO.c ****                      uint32_t timeDifference_us,
 809:../CANopen/stack/301/CO_PDO.c ****                      uint32_t *timerNext_us,
 810:../CANopen/stack/301/CO_PDO.c **** #endif
 811:../CANopen/stack/301/CO_PDO.c ****                      bool_t NMTisOperational,
 812:../CANopen/stack/301/CO_PDO.c ****                      bool_t syncWas)
 813:../CANopen/stack/301/CO_PDO.c **** {
 2299              	 .loc 3 813 0
 2300              	 .cfi_startproc
 2301              	 
 2302              	 
 2303 0000 90B5     	 push {r4,r7,lr}
 2304              	.LCFI94:
 2305              	 .cfi_def_cfa_offset 12
 2306              	 .cfi_offset 4,-12
 2307              	 .cfi_offset 7,-8
 2308              	 .cfi_offset 14,-4
 2309 0002 97B0     	 sub sp,sp,#92
 2310              	.LCFI95:
 2311              	 .cfi_def_cfa_offset 104
 2312 0004 02AF     	 add r7,sp,#8
 2313              	.LCFI96:
 2314              	 .cfi_def_cfa 7,96
 2315 0006 F860     	 str r0,[r7,#12]
 2316 0008 B960     	 str r1,[r7,#8]
 2317 000a 7A60     	 str r2,[r7,#4]
 2318 000c 3B60     	 str r3,[r7]
 814:../CANopen/stack/301/CO_PDO.c ****     (void) syncWas;
 815:../CANopen/stack/301/CO_PDO.c ****     CO_PDO_common_t *PDO = &RPDO->PDO_common;
 2319              	 .loc 3 815 0
 2320 000e FB68     	 ldr r3,[r7,#12]
 2321 0010 7B63     	 str r3,[r7,#52]
 816:../CANopen/stack/301/CO_PDO.c **** 
 817:../CANopen/stack/301/CO_PDO.c ****     if (PDO->valid && NMTisOperational
 2322              	 .loc 3 817 0
 2323 0012 7B6B     	 ldr r3,[r7,#52]
 2324 0014 9B68     	 ldr r3,[r3,#8]
 2325 0016 002B     	 cmp r3,#0
 2326 0018 00F01281 	 beq .L133
 2327              	 .loc 3 817 0 is_stmt 0 discriminator 1
 2328 001c 3B68     	 ldr r3,[r7]
 2329 001e 002B     	 cmp r3,#0
 2330 0020 00F00E81 	 beq .L133
 818:../CANopen/stack/301/CO_PDO.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_PDO_SYNC_ENABLE
 819:../CANopen/stack/301/CO_PDO.c ****         && (syncWas || !RPDO->synchronous)
 2331              	 .loc 3 819 0 is_stmt 1
 2332 0024 3B6E     	 ldr r3,[r7,#96]
 2333 0026 002B     	 cmp r3,#0
 2334 0028 05D1     	 bne .L134
 2335              	 .loc 3 819 0 is_stmt 0 discriminator 1
 2336 002a FB68     	 ldr r3,[r7,#12]
 2337 002c D3F86831 	 ldr r3,[r3,#360]
 2338 0030 002B     	 cmp r3,#0
 2339 0032 40F00581 	 bne .L133
 2340              	.L134:
 2341              	.LBB15:
 820:../CANopen/stack/301/CO_PDO.c **** #endif
 821:../CANopen/stack/301/CO_PDO.c ****     ) {
 822:../CANopen/stack/301/CO_PDO.c ****         /* Verify errors in length of received RPDO CAN message */
 823:../CANopen/stack/301/CO_PDO.c ****         if (RPDO->receiveError > CO_RPDO_RX_ACK) {
 2342              	 .loc 3 823 0 is_stmt 1
 2343 0036 FB68     	 ldr r3,[r7,#12]
 2344 0038 93F86031 	 ldrb r3,[r3,#352]
 2345 003c 0A2B     	 cmp r3,#10
 2346 003e 29D9     	 bls .L135
 2347              	.LBB16:
 824:../CANopen/stack/301/CO_PDO.c ****             bool_t setError = RPDO->receiveError != CO_RPDO_RX_OK;
 2348              	 .loc 3 824 0
 2349 0040 FB68     	 ldr r3,[r7,#12]
 2350 0042 93F86031 	 ldrb r3,[r3,#352]
 2351 0046 0B2B     	 cmp r3,#11
 2352 0048 14BF     	 ite ne
 2353 004a 0123     	 movne r3,#1
 2354 004c 0023     	 moveq r3,#0
 2355 004e DBB2     	 uxtb r3,r3
 2356 0050 3B63     	 str r3,[r7,#48]
 825:../CANopen/stack/301/CO_PDO.c ****             uint16_t code = RPDO->receiveError == CO_RPDO_RX_SHORT
 2357              	 .loc 3 825 0
 2358 0052 FB68     	 ldr r3,[r7,#12]
 2359 0054 93F86031 	 ldrb r3,[r3,#352]
 2360 0058 0C2B     	 cmp r3,#12
 2361 005a 02D1     	 bne .L136
 2362              	 .loc 3 825 0 is_stmt 0 discriminator 1
 2363 005c 48F21023 	 movw r3,#33296
 2364 0060 01E0     	 b .L137
 2365              	.L136:
 2366              	 .loc 3 825 0 discriminator 2
 2367 0062 48F22023 	 movw r3,#33312
 2368              	.L137:
 2369              	 .loc 3 825 0 discriminator 4
 2370 0066 FB85     	 strh r3,[r7,#46]
 826:../CANopen/stack/301/CO_PDO.c ****                           ? CO_EMC_PDO_LENGTH : CO_EMC_PDO_LENGTH_EXC;
 827:../CANopen/stack/301/CO_PDO.c ****             CO_error(PDO->em, setError, CO_EM_RPDO_WRONG_LENGTH,
 2371              	 .loc 3 827 0 is_stmt 1 discriminator 4
 2372 0068 7B6B     	 ldr r3,[r7,#52]
 2373 006a 1A68     	 ldr r2,[r3]
 828:../CANopen/stack/301/CO_PDO.c ****                      code, PDO->dataLength);
 2374              	 .loc 3 828 0 discriminator 4
 2375 006c 7B6B     	 ldr r3,[r7,#52]
 2376 006e 1B7B     	 ldrb r3,[r3,#12]
 827:../CANopen/stack/301/CO_PDO.c ****                      code, PDO->dataLength);
 2377              	 .loc 3 827 0 discriminator 4
 2378 0070 1946     	 mov r1,r3
 2379 0072 FB8D     	 ldrh r3,[r7,#46]
 2380 0074 0091     	 str r1,[sp]
 2381 0076 1046     	 mov r0,r2
 2382 0078 396B     	 ldr r1,[r7,#48]
 2383 007a 0422     	 movs r2,#4
 2384 007c FFF7FEFF 	 bl CO_error
 829:../CANopen/stack/301/CO_PDO.c ****             RPDO->receiveError = setError
 830:../CANopen/stack/301/CO_PDO.c ****                               ? CO_RPDO_RX_ACK_ERROR : CO_RPDO_RX_ACK_NO_ERROR;
 2385              	 .loc 3 830 0 discriminator 4
 2386 0080 3B6B     	 ldr r3,[r7,#48]
 2387 0082 002B     	 cmp r3,#0
 2388 0084 14BF     	 ite ne
 2389 0086 0123     	 movne r3,#1
 2390 0088 0023     	 moveq r3,#0
 2391 008a DBB2     	 uxtb r3,r3
 2392 008c 1A46     	 mov r2,r3
 829:../CANopen/stack/301/CO_PDO.c ****             RPDO->receiveError = setError
 2393              	 .loc 3 829 0 discriminator 4
 2394 008e FB68     	 ldr r3,[r7,#12]
 2395 0090 83F86021 	 strb r2,[r3,#352]
 2396              	.L135:
 2397              	.LBE16:
 831:../CANopen/stack/301/CO_PDO.c ****         }
 832:../CANopen/stack/301/CO_PDO.c **** 
 833:../CANopen/stack/301/CO_PDO.c ****         /* Determine, which of the two rx buffers contains relevant message. */
 834:../CANopen/stack/301/CO_PDO.c ****         uint8_t bufNo = 0;
 2398              	 .loc 3 834 0
 2399 0094 0023     	 movs r3,#0
 2400 0096 87F84F30 	 strb r3,[r7,#79]
 835:../CANopen/stack/301/CO_PDO.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_PDO_SYNC_ENABLE
 836:../CANopen/stack/301/CO_PDO.c ****         if (RPDO->synchronous && RPDO->SYNC != NULL && !RPDO->SYNC->CANrxToggle)
 2401              	 .loc 3 836 0
 2402 009a FB68     	 ldr r3,[r7,#12]
 2403 009c D3F86831 	 ldr r3,[r3,#360]
 2404 00a0 002B     	 cmp r3,#0
 2405 00a2 0DD0     	 beq .L138
 2406              	 .loc 3 836 0 is_stmt 0 discriminator 1
 2407 00a4 FB68     	 ldr r3,[r7,#12]
 2408 00a6 D3F86431 	 ldr r3,[r3,#356]
 2409 00aa 002B     	 cmp r3,#0
 2410 00ac 08D0     	 beq .L138
 2411              	 .loc 3 836 0 discriminator 2
 2412 00ae FB68     	 ldr r3,[r7,#12]
 2413 00b0 D3F86431 	 ldr r3,[r3,#356]
 2414 00b4 DB68     	 ldr r3,[r3,#12]
 2415 00b6 002B     	 cmp r3,#0
 2416 00b8 02D1     	 bne .L138
 837:../CANopen/stack/301/CO_PDO.c ****             bufNo = 1;
 2417              	 .loc 3 837 0 is_stmt 1
 2418 00ba 0123     	 movs r3,#1
 2419 00bc 87F84F30 	 strb r3,[r7,#79]
 2420              	.L138:
 838:../CANopen/stack/301/CO_PDO.c **** #endif
 839:../CANopen/stack/301/CO_PDO.c **** 
 840:../CANopen/stack/301/CO_PDO.c ****         /* copy RPDO into OD variables according to mappings */
 841:../CANopen/stack/301/CO_PDO.c ****         bool_t rpdoReceived = false;
 2421              	 .loc 3 841 0
 2422 00c0 0023     	 movs r3,#0
 2423 00c2 BB64     	 str r3,[r7,#72]
 842:../CANopen/stack/301/CO_PDO.c ****         while (CO_FLAG_READ(RPDO->CANrxNew[bufNo])) {
 2424              	 .loc 3 842 0
 2425 00c4 67E0     	 b .L139
 2426              	.L145:
 2427              	.LBB17:
 843:../CANopen/stack/301/CO_PDO.c ****             rpdoReceived = true;
 2428              	 .loc 3 843 0
 2429 00c6 0123     	 movs r3,#1
 2430 00c8 BB64     	 str r3,[r7,#72]
 844:../CANopen/stack/301/CO_PDO.c ****             uint8_t *dataRPDO = RPDO->CANrxData[bufNo];
 2431              	 .loc 3 844 0
 2432 00ca 97F84F30 	 ldrb r3,[r7,#79]
 2433 00ce 2A33     	 adds r3,r3,#42
 2434 00d0 DB00     	 lsls r3,r3,#3
 2435 00d2 FA68     	 ldr r2,[r7,#12]
 2436 00d4 1344     	 add r3,r3,r2
 2437 00d6 7B64     	 str r3,[r7,#68]
 845:../CANopen/stack/301/CO_PDO.c **** 
 846:../CANopen/stack/301/CO_PDO.c ****             /* Clear the flag. If between the copy operation CANrxNew is set
 847:../CANopen/stack/301/CO_PDO.c ****              * by receive thread, then copy the latest data again. */
 848:../CANopen/stack/301/CO_PDO.c ****             CO_FLAG_CLEAR(RPDO->CANrxNew[bufNo]);
 2438              	 .loc 3 848 0
 2439 00d8 97F84F20 	 ldrb r2,[r7,#79]
 2440 00dc FB68     	 ldr r3,[r7,#12]
 2441 00de 5232     	 adds r2,r2,#82
 2442 00e0 0021     	 movs r1,#0
 2443 00e2 43F82210 	 str r1,[r3,r2,lsl#2]
 2444              	.LBB18:
 849:../CANopen/stack/301/CO_PDO.c **** 
 850:../CANopen/stack/301/CO_PDO.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_PDO_OD_IO_ACCESS
 851:../CANopen/stack/301/CO_PDO.c ****             for (uint8_t i = 0; i < PDO->mappedObjectsCount; i++) {
 2445              	 .loc 3 851 0
 2446 00e6 0023     	 movs r3,#0
 2447 00e8 87F84330 	 strb r3,[r7,#67]
 2448 00ec 4DE0     	 b .L140
 2449              	.L144:
 2450              	.LBB19:
 852:../CANopen/stack/301/CO_PDO.c ****                 OD_IO_t *OD_IO = &PDO->OD_IO[i];
 2451              	 .loc 3 852 0
 2452 00ee 97F84320 	 ldrb r2,[r7,#67]
 2453 00f2 1346     	 mov r3,r2
 2454 00f4 DB00     	 lsls r3,r3,#3
 2455 00f6 9B1A     	 subs r3,r3,r2
 2456 00f8 9B00     	 lsls r3,r3,#2
 2457 00fa 1033     	 adds r3,r3,#16
 2458 00fc 7A6B     	 ldr r2,[r7,#52]
 2459 00fe 1344     	 add r3,r3,r2
 2460 0100 BB62     	 str r3,[r7,#40]
 853:../CANopen/stack/301/CO_PDO.c **** 
 854:../CANopen/stack/301/CO_PDO.c ****                 /* get mappedLength from temporary storage */
 855:../CANopen/stack/301/CO_PDO.c ****                 OD_size_t *dataOffset = &OD_IO->stream.dataOffset;
 2461              	 .loc 3 855 0
 2462 0102 BB6A     	 ldr r3,[r7,#40]
 2463 0104 0C33     	 adds r3,r3,#12
 2464 0106 7B62     	 str r3,[r7,#36]
 856:../CANopen/stack/301/CO_PDO.c ****                 uint8_t mappedLength = (uint8_t) (*dataOffset);
 2465              	 .loc 3 856 0
 2466 0108 7B6A     	 ldr r3,[r7,#36]
 2467 010a 1B68     	 ldr r3,[r3]
 2468 010c 87F82330 	 strb r3,[r7,#35]
 857:../CANopen/stack/301/CO_PDO.c **** 
 858:../CANopen/stack/301/CO_PDO.c ****                 /* length of OD variable may be larger than mappedLength */
 859:../CANopen/stack/301/CO_PDO.c ****                 OD_size_t ODdataLength = OD_IO->stream.dataLength;
 2469              	 .loc 3 859 0
 2470 0110 BB6A     	 ldr r3,[r7,#40]
 2471 0112 9B68     	 ldr r3,[r3,#8]
 2472 0114 FB63     	 str r3,[r7,#60]
 860:../CANopen/stack/301/CO_PDO.c ****                 if (ODdataLength > CO_PDO_MAX_SIZE)
 2473              	 .loc 3 860 0
 2474 0116 FB6B     	 ldr r3,[r7,#60]
 2475 0118 082B     	 cmp r3,#8
 2476 011a 01D9     	 bls .L141
 861:../CANopen/stack/301/CO_PDO.c ****                     ODdataLength = CO_PDO_MAX_SIZE;
 2477              	 .loc 3 861 0
 2478 011c 0823     	 movs r3,#8
 2479 011e FB63     	 str r3,[r7,#60]
 2480              	.L141:
 862:../CANopen/stack/301/CO_PDO.c **** 
 863:../CANopen/stack/301/CO_PDO.c ****                 /* Prepare data for writing into OD variable. If mappedLength
 864:../CANopen/stack/301/CO_PDO.c ****                  * is smaller than ODdataLength, then use auxiliary buffer */
 865:../CANopen/stack/301/CO_PDO.c ****                 uint8_t buf[CO_PDO_MAX_SIZE];
 866:../CANopen/stack/301/CO_PDO.c ****                 uint8_t *dataOD;
 867:../CANopen/stack/301/CO_PDO.c ****                 if (ODdataLength > mappedLength) {
 2481              	 .loc 3 867 0
 2482 0120 97F82320 	 ldrb r2,[r7,#35]
 2483 0124 FB6B     	 ldr r3,[r7,#60]
 2484 0126 9A42     	 cmp r2,r3
 2485 0128 13D2     	 bcs .L142
 868:../CANopen/stack/301/CO_PDO.c ****                     memset(buf, 0, sizeof(buf));
 2486              	 .loc 3 868 0
 2487 012a 07F11803 	 add r3,r7,#24
 2488 012e 1846     	 mov r0,r3
 2489 0130 0021     	 movs r1,#0
 2490 0132 0822     	 movs r2,#8
 2491 0134 FFF7FEFF 	 bl memset
 869:../CANopen/stack/301/CO_PDO.c ****                     memcpy(buf, dataRPDO, mappedLength);
 2492              	 .loc 3 869 0
 2493 0138 97F82330 	 ldrb r3,[r7,#35]
 2494 013c 07F11802 	 add r2,r7,#24
 2495 0140 1046     	 mov r0,r2
 2496 0142 796C     	 ldr r1,[r7,#68]
 2497 0144 1A46     	 mov r2,r3
 2498 0146 FFF7FEFF 	 bl memcpy
 870:../CANopen/stack/301/CO_PDO.c ****                     dataOD = buf;
 2499              	 .loc 3 870 0
 2500 014a 07F11803 	 add r3,r7,#24
 2501 014e BB63     	 str r3,[r7,#56]
 2502 0150 01E0     	 b .L143
 2503              	.L142:
 871:../CANopen/stack/301/CO_PDO.c ****                 }
 872:../CANopen/stack/301/CO_PDO.c ****                 else {
 873:../CANopen/stack/301/CO_PDO.c ****                     dataOD = dataRPDO;
 2504              	 .loc 3 873 0
 2505 0152 7B6C     	 ldr r3,[r7,#68]
 2506 0154 BB63     	 str r3,[r7,#56]
 2507              	.L143:
 874:../CANopen/stack/301/CO_PDO.c ****                 }
 875:../CANopen/stack/301/CO_PDO.c **** 
 876:../CANopen/stack/301/CO_PDO.c ****                 /* swap multibyte data if big-endian */
 877:../CANopen/stack/301/CO_PDO.c ****  #ifdef CO_BIG_ENDIAN
 878:../CANopen/stack/301/CO_PDO.c ****                 if ((OD_IO->stream.attribute & ODA_MB) != 0) {
 879:../CANopen/stack/301/CO_PDO.c ****                     uint8_t *lo = dataOD;
 880:../CANopen/stack/301/CO_PDO.c ****                     uint8_t *hi = dataOD + ODdataLength - 1;
 881:../CANopen/stack/301/CO_PDO.c ****                     while (lo < hi) {
 882:../CANopen/stack/301/CO_PDO.c ****                         uint8_t swap = *lo;
 883:../CANopen/stack/301/CO_PDO.c ****                         *lo++ = *hi;
 884:../CANopen/stack/301/CO_PDO.c ****                         *hi-- = swap;
 885:../CANopen/stack/301/CO_PDO.c ****                     }
 886:../CANopen/stack/301/CO_PDO.c ****                 }
 887:../CANopen/stack/301/CO_PDO.c ****  #endif
 888:../CANopen/stack/301/CO_PDO.c **** 
 889:../CANopen/stack/301/CO_PDO.c ****                 /* Set stream.dataOffset to zero, perform OD_IO.write()
 890:../CANopen/stack/301/CO_PDO.c ****                  * and store mappedLength back to stream.dataOffset */
 891:../CANopen/stack/301/CO_PDO.c ****                 *dataOffset = 0;
 2508              	 .loc 3 891 0 discriminator 2
 2509 0156 7B6A     	 ldr r3,[r7,#36]
 2510 0158 0022     	 movs r2,#0
 2511 015a 1A60     	 str r2,[r3]
 892:../CANopen/stack/301/CO_PDO.c ****                 OD_size_t countWritten;
 893:../CANopen/stack/301/CO_PDO.c **** #if (C2000_PORT != 0)
 894:../CANopen/stack/301/CO_PDO.c ****                 uint8_t bufTemp[CO_PDO_MAX_SIZE];
 895:../CANopen/stack/301/CO_PDO.c ****                 void * pBufTemp = (void *)bufTemp;
 896:../CANopen/stack/301/CO_PDO.c ****                 if((OD_IO->stream.attribute & ODA_STR) == 0) {
 897:../CANopen/stack/301/CO_PDO.c ****                     if(ODdataLength == 1) {
 898:../CANopen/stack/301/CO_PDO.c ****                         *((uint8_t *)pBufTemp) = CO_getUint8(dataOD);
 899:../CANopen/stack/301/CO_PDO.c ****                     } else if(ODdataLength == 2) {
 900:../CANopen/stack/301/CO_PDO.c ****                         *((uint16_t *)pBufTemp) = CO_getUint16(dataOD);
 901:../CANopen/stack/301/CO_PDO.c ****                     } else if(ODdataLength == 4) {
 902:../CANopen/stack/301/CO_PDO.c ****                         *((uint32_t *)pBufTemp) = CO_getUint32(dataOD);
 903:../CANopen/stack/301/CO_PDO.c ****                     } else {
 904:../CANopen/stack/301/CO_PDO.c ****                         /// TODO
 905:../CANopen/stack/301/CO_PDO.c ****                     }
 906:../CANopen/stack/301/CO_PDO.c ****                 } else {
 907:../CANopen/stack/301/CO_PDO.c ****                     /// TODO: handle string
 908:../CANopen/stack/301/CO_PDO.c ****                 }
 909:../CANopen/stack/301/CO_PDO.c ****                 OD_IO->write(&OD_IO->stream, pBufTemp,
 910:../CANopen/stack/301/CO_PDO.c ****                              ODdataLength, &countWritten);
 911:../CANopen/stack/301/CO_PDO.c **** #else
 912:../CANopen/stack/301/CO_PDO.c ****                 OD_IO->write(&OD_IO->stream, dataOD,
 2512              	 .loc 3 912 0 discriminator 2
 2513 015c BB6A     	 ldr r3,[r7,#40]
 2514 015e 9C69     	 ldr r4,[r3,#24]
 2515 0160 BA6A     	 ldr r2,[r7,#40]
 2516 0162 07F11403 	 add r3,r7,#20
 2517 0166 1046     	 mov r0,r2
 2518 0168 B96B     	 ldr r1,[r7,#56]
 2519 016a FA6B     	 ldr r2,[r7,#60]
 2520 016c A047     	 blx r4
 913:../CANopen/stack/301/CO_PDO.c ****                              ODdataLength, &countWritten);
 914:../CANopen/stack/301/CO_PDO.c **** #endif
 915:../CANopen/stack/301/CO_PDO.c ****                 *dataOffset = mappedLength;
 2521              	 .loc 3 915 0 discriminator 2
 2522 016e 97F82320 	 ldrb r2,[r7,#35]
 2523 0172 7B6A     	 ldr r3,[r7,#36]
 2524 0174 1A60     	 str r2,[r3]
 916:../CANopen/stack/301/CO_PDO.c **** 
 917:../CANopen/stack/301/CO_PDO.c ****                 dataRPDO += mappedLength;
 2525              	 .loc 3 917 0 discriminator 2
 2526 0176 97F82330 	 ldrb r3,[r7,#35]
 2527 017a 7A6C     	 ldr r2,[r7,#68]
 2528 017c 1344     	 add r3,r3,r2
 2529 017e 7B64     	 str r3,[r7,#68]
 2530              	.LBE19:
 851:../CANopen/stack/301/CO_PDO.c ****                 OD_IO_t *OD_IO = &PDO->OD_IO[i];
 2531              	 .loc 3 851 0 discriminator 2
 2532 0180 97F84330 	 ldrb r3,[r7,#67]
 2533 0184 0133     	 adds r3,r3,#1
 2534 0186 87F84330 	 strb r3,[r7,#67]
 2535              	.L140:
 851:../CANopen/stack/301/CO_PDO.c ****                 OD_IO_t *OD_IO = &PDO->OD_IO[i];
 2536              	 .loc 3 851 0 is_stmt 0 discriminator 1
 2537 018a 7B6B     	 ldr r3,[r7,#52]
 2538 018c 5B7B     	 ldrb r3,[r3,#13]
 2539 018e 97F84320 	 ldrb r2,[r7,#67]
 2540 0192 9A42     	 cmp r2,r3
 2541 0194 ABD3     	 bcc .L144
 2542              	.L139:
 2543              	.LBE18:
 2544              	.LBE17:
 842:../CANopen/stack/301/CO_PDO.c ****             rpdoReceived = true;
 2545              	 .loc 3 842 0 is_stmt 1
 2546 0196 97F84F20 	 ldrb r2,[r7,#79]
 2547 019a FB68     	 ldr r3,[r7,#12]
 2548 019c 5232     	 adds r2,r2,#82
 2549 019e 53F82230 	 ldr r3,[r3,r2,lsl#2]
 2550 01a2 002B     	 cmp r3,#0
 2551 01a4 8FD1     	 bne .L145
 918:../CANopen/stack/301/CO_PDO.c ****             }
 919:../CANopen/stack/301/CO_PDO.c **** 
 920:../CANopen/stack/301/CO_PDO.c **** #else
 921:../CANopen/stack/301/CO_PDO.c ****             for (uint8_t i = 0; i < PDO->dataLength; i++) {
 922:../CANopen/stack/301/CO_PDO.c ****                 *PDO->mapPointer[i] = dataRPDO[i];
 923:../CANopen/stack/301/CO_PDO.c ****             }
 924:../CANopen/stack/301/CO_PDO.c **** #endif /* (CO_CONFIG_PDO) & CO_CONFIG_PDO_OD_IO_ACCESS */
 925:../CANopen/stack/301/CO_PDO.c **** 
 926:../CANopen/stack/301/CO_PDO.c ****         } /* while (CO_FLAG_READ(RPDO->CANrxNew[bufNo])) */
 927:../CANopen/stack/301/CO_PDO.c **** 
 928:../CANopen/stack/301/CO_PDO.c ****         /* verify RPDO timeout */
 929:../CANopen/stack/301/CO_PDO.c ****         (void) rpdoReceived;
 930:../CANopen/stack/301/CO_PDO.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_RPDO_TIMERS_ENABLE
 931:../CANopen/stack/301/CO_PDO.c ****         if (RPDO->timeoutTime_us > 0) {
 2552              	 .loc 3 931 0
 2553 01a6 FB68     	 ldr r3,[r7,#12]
 2554 01a8 D3F86C31 	 ldr r3,[r3,#364]
 2555 01ac 002B     	 cmp r3,#0
 2556 01ae 46D0     	 beq .L146
 932:../CANopen/stack/301/CO_PDO.c ****             if (rpdoReceived) {
 2557              	 .loc 3 932 0
 2558 01b0 BB6C     	 ldr r3,[r7,#72]
 2559 01b2 002B     	 cmp r3,#0
 2560 01b4 18D0     	 beq .L147
 933:../CANopen/stack/301/CO_PDO.c ****                 if (RPDO->timeoutTimer > RPDO->timeoutTime_us) {
 2561              	 .loc 3 933 0
 2562 01b6 FB68     	 ldr r3,[r7,#12]
 2563 01b8 D3F87021 	 ldr r2,[r3,#368]
 2564 01bc FB68     	 ldr r3,[r7,#12]
 2565 01be D3F86C31 	 ldr r3,[r3,#364]
 2566 01c2 9A42     	 cmp r2,r3
 2567 01c4 0BD9     	 bls .L148
 934:../CANopen/stack/301/CO_PDO.c ****                     CO_errorReset(PDO->em, CO_EM_RPDO_TIME_OUT,
 2568              	 .loc 3 934 0
 2569 01c6 7B6B     	 ldr r3,[r7,#52]
 2570 01c8 1A68     	 ldr r2,[r3]
 2571 01ca FB68     	 ldr r3,[r7,#12]
 2572 01cc D3F87031 	 ldr r3,[r3,#368]
 2573 01d0 0093     	 str r3,[sp]
 2574 01d2 1046     	 mov r0,r2
 2575 01d4 0021     	 movs r1,#0
 2576 01d6 1722     	 movs r2,#23
 2577 01d8 0023     	 movs r3,#0
 2578 01da FFF7FEFF 	 bl CO_error
 2579              	.L148:
 935:../CANopen/stack/301/CO_PDO.c ****                                 RPDO->timeoutTimer);
 936:../CANopen/stack/301/CO_PDO.c ****                 }
 937:../CANopen/stack/301/CO_PDO.c ****                 /* enable monitoring */
 938:../CANopen/stack/301/CO_PDO.c ****                 RPDO->timeoutTimer = 1;
 2580              	 .loc 3 938 0
 2581 01de FB68     	 ldr r3,[r7,#12]
 2582 01e0 0122     	 movs r2,#1
 2583 01e2 C3F87021 	 str r2,[r3,#368]
 2584 01e6 2AE0     	 b .L146
 2585              	.L147:
 939:../CANopen/stack/301/CO_PDO.c ****             }
 940:../CANopen/stack/301/CO_PDO.c ****             else if (RPDO->timeoutTimer > 0
 2586              	 .loc 3 940 0
 2587 01e8 FB68     	 ldr r3,[r7,#12]
 2588 01ea D3F87031 	 ldr r3,[r3,#368]
 2589 01ee 002B     	 cmp r3,#0
 2590 01f0 25D0     	 beq .L146
 941:../CANopen/stack/301/CO_PDO.c ****                     && RPDO->timeoutTimer < RPDO->timeoutTime_us
 2591              	 .loc 3 941 0
 2592 01f2 FB68     	 ldr r3,[r7,#12]
 2593 01f4 D3F87021 	 ldr r2,[r3,#368]
 2594 01f8 FB68     	 ldr r3,[r7,#12]
 2595 01fa D3F86C31 	 ldr r3,[r3,#364]
 2596 01fe 9A42     	 cmp r2,r3
 2597 0200 1DD2     	 bcs .L146
 942:../CANopen/stack/301/CO_PDO.c ****             ) {
 943:../CANopen/stack/301/CO_PDO.c ****                 RPDO->timeoutTimer += timeDifference_us;
 2598              	 .loc 3 943 0
 2599 0202 FB68     	 ldr r3,[r7,#12]
 2600 0204 D3F87021 	 ldr r2,[r3,#368]
 2601 0208 BB68     	 ldr r3,[r7,#8]
 2602 020a 1A44     	 add r2,r2,r3
 2603 020c FB68     	 ldr r3,[r7,#12]
 2604 020e C3F87021 	 str r2,[r3,#368]
 944:../CANopen/stack/301/CO_PDO.c **** 
 945:../CANopen/stack/301/CO_PDO.c ****                 if (RPDO->timeoutTimer > RPDO->timeoutTime_us) {
 2605              	 .loc 3 945 0
 2606 0212 FB68     	 ldr r3,[r7,#12]
 2607 0214 D3F87021 	 ldr r2,[r3,#368]
 2608 0218 FB68     	 ldr r3,[r7,#12]
 2609 021a D3F86C31 	 ldr r3,[r3,#364]
 2610 021e 9A42     	 cmp r2,r3
 2611 0220 0DD9     	 bls .L146
 946:../CANopen/stack/301/CO_PDO.c ****                     CO_errorReport(PDO->em, CO_EM_RPDO_TIME_OUT,
 2612              	 .loc 3 946 0
 2613 0222 7B6B     	 ldr r3,[r7,#52]
 2614 0224 1A68     	 ldr r2,[r3]
 2615 0226 FB68     	 ldr r3,[r7,#12]
 2616 0228 D3F87031 	 ldr r3,[r3,#368]
 2617 022c 0093     	 str r3,[sp]
 2618 022e 1046     	 mov r0,r2
 2619 0230 0121     	 movs r1,#1
 2620 0232 1722     	 movs r2,#23
 2621 0234 48F25023 	 movw r3,#33360
 2622 0238 FFF7FEFF 	 bl CO_error
 2623              	.LBE15:
 821:../CANopen/stack/301/CO_PDO.c ****         /* Verify errors in length of received RPDO CAN message */
 2624              	 .loc 3 821 0
 2625 023c 13E0     	 b .L132
 2626              	.L146:
 2627 023e 12E0     	 b .L132
 2628              	.L133:
 947:../CANopen/stack/301/CO_PDO.c ****                                 CO_EMC_RPDO_TIMEOUT, RPDO->timeoutTimer);
 948:../CANopen/stack/301/CO_PDO.c ****                 }
 949:../CANopen/stack/301/CO_PDO.c ****             }
 950:../CANopen/stack/301/CO_PDO.c ****  #if (CO_CONFIG_SYNC) & CO_CONFIG_FLAG_TIMERNEXT
 951:../CANopen/stack/301/CO_PDO.c ****             if (timerNext_us != NULL
 952:../CANopen/stack/301/CO_PDO.c ****                 && RPDO->timeoutTimer < RPDO->timeoutTime_us
 953:../CANopen/stack/301/CO_PDO.c ****             ) {
 954:../CANopen/stack/301/CO_PDO.c ****                 uint32_t diff = RPDO->timeoutTime_us - RPDO->timeoutTimer;
 955:../CANopen/stack/301/CO_PDO.c ****                 if (*timerNext_us > diff) {
 956:../CANopen/stack/301/CO_PDO.c ****                     *timerNext_us = diff;
 957:../CANopen/stack/301/CO_PDO.c ****                 }
 958:../CANopen/stack/301/CO_PDO.c ****             }
 959:../CANopen/stack/301/CO_PDO.c ****  #endif
 960:../CANopen/stack/301/CO_PDO.c ****         }
 961:../CANopen/stack/301/CO_PDO.c **** #endif /* (CO_CONFIG_PDO) & CO_CONFIG_RPDO_TIMERS_ENABLE */
 962:../CANopen/stack/301/CO_PDO.c ****     } /* if (PDO->valid && NMTisOperational) */
 963:../CANopen/stack/301/CO_PDO.c ****     else {
 964:../CANopen/stack/301/CO_PDO.c ****         /* not valid and operational, clear CAN receive flags and timeoutTimer*/
 965:../CANopen/stack/301/CO_PDO.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_PDO_SYNC_ENABLE
 966:../CANopen/stack/301/CO_PDO.c ****         if (!PDO->valid || !NMTisOperational) {
 2629              	 .loc 3 966 0
 2630 0240 7B6B     	 ldr r3,[r7,#52]
 2631 0242 9B68     	 ldr r3,[r3,#8]
 2632 0244 002B     	 cmp r3,#0
 2633 0246 02D0     	 beq .L150
 2634              	 .loc 3 966 0 is_stmt 0 discriminator 1
 2635 0248 3B68     	 ldr r3,[r7]
 2636 024a 002B     	 cmp r3,#0
 2637 024c 0BD1     	 bne .L132
 2638              	.L150:
 967:../CANopen/stack/301/CO_PDO.c ****             CO_FLAG_CLEAR(RPDO->CANrxNew[0]);
 2639              	 .loc 3 967 0 is_stmt 1
 2640 024e FB68     	 ldr r3,[r7,#12]
 2641 0250 0022     	 movs r2,#0
 2642 0252 C3F84821 	 str r2,[r3,#328]
 968:../CANopen/stack/301/CO_PDO.c ****             CO_FLAG_CLEAR(RPDO->CANrxNew[1]);
 2643              	 .loc 3 968 0
 2644 0256 FB68     	 ldr r3,[r7,#12]
 2645 0258 0022     	 movs r2,#0
 2646 025a C3F84C21 	 str r2,[r3,#332]
 969:../CANopen/stack/301/CO_PDO.c ****  #if (CO_CONFIG_PDO) & CO_CONFIG_RPDO_TIMERS_ENABLE
 970:../CANopen/stack/301/CO_PDO.c ****             RPDO->timeoutTimer = 0;
 2647              	 .loc 3 970 0
 2648 025e FB68     	 ldr r3,[r7,#12]
 2649 0260 0022     	 movs r2,#0
 2650 0262 C3F87021 	 str r2,[r3,#368]
 2651              	.L132:
 971:../CANopen/stack/301/CO_PDO.c ****  #endif
 972:../CANopen/stack/301/CO_PDO.c ****         }
 973:../CANopen/stack/301/CO_PDO.c **** #else
 974:../CANopen/stack/301/CO_PDO.c ****         CO_FLAG_CLEAR(RPDO->CANrxNew[0]);
 975:../CANopen/stack/301/CO_PDO.c ****  #if (CO_CONFIG_PDO) & CO_CONFIG_RPDO_TIMERS_ENABLE
 976:../CANopen/stack/301/CO_PDO.c ****         RPDO->timeoutTimer = 0;
 977:../CANopen/stack/301/CO_PDO.c ****  #endif
 978:../CANopen/stack/301/CO_PDO.c **** #endif
 979:../CANopen/stack/301/CO_PDO.c ****     }
 980:../CANopen/stack/301/CO_PDO.c **** }
 2652              	 .loc 3 980 0
 2653 0266 5437     	 adds r7,r7,#84
 2654              	.LCFI97:
 2655              	 .cfi_def_cfa_offset 12
 2656 0268 BD46     	 mov sp,r7
 2657              	.LCFI98:
 2658              	 .cfi_def_cfa_register 13
 2659              	 
 2660 026a 90BD     	 pop {r4,r7,pc}
 2661              	 .cfi_endproc
 2662              	.LFE46:
 2664              	 .section .text.OD_write_18xx,"ax",%progbits
 2665              	 .align 2
 2666              	 .thumb
 2667              	 .thumb_func
 2669              	OD_write_18xx:
 2670              	.LFB47:
 981:../CANopen/stack/301/CO_PDO.c **** #endif /* (CO_CONFIG_PDO) & CO_CONFIG_RPDO_ENABLE */
 982:../CANopen/stack/301/CO_PDO.c **** 
 983:../CANopen/stack/301/CO_PDO.c **** 
 984:../CANopen/stack/301/CO_PDO.c **** /*******************************************************************************
 985:../CANopen/stack/301/CO_PDO.c ****  *      T P D O
 986:../CANopen/stack/301/CO_PDO.c ****  ******************************************************************************/
 987:../CANopen/stack/301/CO_PDO.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_TPDO_ENABLE
 988:../CANopen/stack/301/CO_PDO.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_FLAG_OD_DYNAMIC
 989:../CANopen/stack/301/CO_PDO.c **** /*
 990:../CANopen/stack/301/CO_PDO.c ****  * Custom function for writing OD object "TPDO communication parameter"
 991:../CANopen/stack/301/CO_PDO.c ****  *
 992:../CANopen/stack/301/CO_PDO.c ****  * For more information see file CO_ODinterface.h, OD_IO_t.
 993:../CANopen/stack/301/CO_PDO.c ****  */
 994:../CANopen/stack/301/CO_PDO.c **** static ODR_t OD_write_18xx(OD_stream_t *stream, const void *buf,
 995:../CANopen/stack/301/CO_PDO.c ****                            OD_size_t count, OD_size_t *countWritten)
 996:../CANopen/stack/301/CO_PDO.c **** {
 2671              	 .loc 3 996 0
 2672              	 .cfi_startproc
 2673              	 
 2674              	 
 2675 0000 90B5     	 push {r4,r7,lr}
 2676              	.LCFI99:
 2677              	 .cfi_def_cfa_offset 12
 2678              	 .cfi_offset 4,-12
 2679              	 .cfi_offset 7,-8
 2680              	 .cfi_offset 14,-4
 2681 0002 93B0     	 sub sp,sp,#76
 2682              	.LCFI100:
 2683              	 .cfi_def_cfa_offset 88
 2684 0004 02AF     	 add r7,sp,#8
 2685              	.LCFI101:
 2686              	 .cfi_def_cfa 7,80
 2687 0006 F860     	 str r0,[r7,#12]
 2688 0008 B960     	 str r1,[r7,#8]
 2689 000a 7A60     	 str r2,[r7,#4]
 2690 000c 3B60     	 str r3,[r7]
 997:../CANopen/stack/301/CO_PDO.c ****     /* "count" is also verified in *_init() function */
 998:../CANopen/stack/301/CO_PDO.c ****     if (stream == NULL || buf == NULL || countWritten == NULL || count > 4) {
 2691              	 .loc 3 998 0
 2692 000e FB68     	 ldr r3,[r7,#12]
 2693 0010 002B     	 cmp r3,#0
 2694 0012 08D0     	 beq .L152
 2695              	 .loc 3 998 0 is_stmt 0 discriminator 1
 2696 0014 BB68     	 ldr r3,[r7,#8]
 2697 0016 002B     	 cmp r3,#0
 2698 0018 05D0     	 beq .L152
 2699              	 .loc 3 998 0 discriminator 2
 2700 001a 3B68     	 ldr r3,[r7]
 2701 001c 002B     	 cmp r3,#0
 2702 001e 02D0     	 beq .L152
 2703              	 .loc 3 998 0 discriminator 3
 2704 0020 7B68     	 ldr r3,[r7,#4]
 2705 0022 042B     	 cmp r3,#4
 2706 0024 01D9     	 bls .L153
 2707              	.L152:
 999:../CANopen/stack/301/CO_PDO.c ****         return ODR_DEV_INCOMPAT;
 2708              	 .loc 3 999 0 is_stmt 1
 2709 0026 0923     	 movs r3,#9
 2710 0028 33E1     	 b .L179
 2711              	.L153:
1000:../CANopen/stack/301/CO_PDO.c ****     }
1001:../CANopen/stack/301/CO_PDO.c **** 
1002:../CANopen/stack/301/CO_PDO.c ****     CO_TPDO_t *TPDO = stream->object;
 2712              	 .loc 3 1002 0
 2713 002a FB68     	 ldr r3,[r7,#12]
 2714 002c 5B68     	 ldr r3,[r3,#4]
 2715 002e BB63     	 str r3,[r7,#56]
1003:../CANopen/stack/301/CO_PDO.c ****     CO_PDO_common_t *PDO = &TPDO->PDO_common;
 2716              	 .loc 3 1003 0
 2717 0030 BB6B     	 ldr r3,[r7,#56]
 2718 0032 7B63     	 str r3,[r7,#52]
1004:../CANopen/stack/301/CO_PDO.c ****     uint8_t bufCopy[4];
1005:../CANopen/stack/301/CO_PDO.c ****     memcpy(bufCopy, buf, count);
 2719              	 .loc 3 1005 0
 2720 0034 07F11403 	 add r3,r7,#20
 2721 0038 1846     	 mov r0,r3
 2722 003a B968     	 ldr r1,[r7,#8]
 2723 003c 7A68     	 ldr r2,[r7,#4]
 2724 003e FFF7FEFF 	 bl memcpy
1006:../CANopen/stack/301/CO_PDO.c **** 
1007:../CANopen/stack/301/CO_PDO.c ****     switch (stream->subIndex) {
 2725              	 .loc 3 1007 0
 2726 0042 FB68     	 ldr r3,[r7,#12]
 2727 0044 5B7C     	 ldrb r3,[r3,#17]
 2728 0046 013B     	 subs r3,r3,#1
 2729 0048 052B     	 cmp r3,#5
 2730 004a 00F21981 	 bhi .L155
 2731 004e 01A2     	 adr r2,.L157
 2732 0050 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 2733              	 .p2align 2
 2734              	.L157:
 2735 0054 6D000000 	 .word .L156+1
 2736 0058 A3010000 	 .word .L158+1
 2737 005c 09020000 	 .word .L159+1
 2738 0060 81020000 	 .word .L155+1
 2739 0064 37020000 	 .word .L160+1
 2740 0068 5B020000 	 .word .L161+1
 2741              	 .p2align 1
 2742              	.L156:
 2743              	.LBB20:
1008:../CANopen/stack/301/CO_PDO.c ****     case 1: { /* COB-ID used by PDO */
1009:../CANopen/stack/301/CO_PDO.c ****         uint32_t COB_ID = CO_getUint32(buf);
 2744              	 .loc 3 1009 0
 2745 006c B868     	 ldr r0,[r7,#8]
 2746 006e FFF7FEFF 	 bl CO_getUint32
 2747 0072 3863     	 str r0,[r7,#48]
1010:../CANopen/stack/301/CO_PDO.c ****         uint16_t CAN_ID = (uint16_t)(COB_ID & 0x7FF);
 2748              	 .loc 3 1010 0
 2749 0074 3B6B     	 ldr r3,[r7,#48]
 2750 0076 9BB2     	 uxth r3,r3
 2751 0078 C3F30A03 	 ubfx r3,r3,#0,#11
 2752 007c FB87     	 strh r3,[r7,#62]
1011:../CANopen/stack/301/CO_PDO.c ****         bool_t valid = (COB_ID & 0x80000000) == 0;
 2753              	 .loc 3 1011 0
 2754 007e 3B6B     	 ldr r3,[r7,#48]
 2755 0080 DB43     	 mvns r3,r3
 2756 0082 DB0F     	 lsrs r3,r3,#31
 2757 0084 DBB2     	 uxtb r3,r3
 2758 0086 FB62     	 str r3,[r7,#44]
1012:../CANopen/stack/301/CO_PDO.c **** 
1013:../CANopen/stack/301/CO_PDO.c ****         /* bits 11...29 must be zero, PDO must be disabled on change,
1014:../CANopen/stack/301/CO_PDO.c ****          * CAN_ID == 0 is not allowed, mapping must be configured before
1015:../CANopen/stack/301/CO_PDO.c ****          * enabling the PDO */
1016:../CANopen/stack/301/CO_PDO.c ****         if ((COB_ID & 0x3FFFF800) != 0
 2759              	 .loc 3 1016 0
 2760 0088 3A6B     	 ldr r2,[r7,#48]
 2761 008a 844B     	 ldr r3,.L180
 2762 008c 1340     	 ands r3,r3,r2
 2763 008e 002B     	 cmp r3,#0
 2764 0090 3DD1     	 bne .L162
1017:../CANopen/stack/301/CO_PDO.c ****             || (valid && PDO->valid && CAN_ID != PDO->configuredCanId)
 2765              	 .loc 3 1017 0
 2766 0092 FB6A     	 ldr r3,[r7,#44]
 2767 0094 002B     	 cmp r3,#0
 2768 0096 09D0     	 beq .L163
 2769              	 .loc 3 1017 0 is_stmt 0 discriminator 1
 2770 0098 7B6B     	 ldr r3,[r7,#52]
 2771 009a 9B68     	 ldr r3,[r3,#8]
 2772 009c 002B     	 cmp r3,#0
 2773 009e 05D0     	 beq .L163
 2774              	 .loc 3 1017 0 discriminator 2
 2775 00a0 7B6B     	 ldr r3,[r7,#52]
 2776 00a2 B3F82431 	 ldrh r3,[r3,#292]
 2777 00a6 FA8F     	 ldrh r2,[r7,#62]
 2778 00a8 9A42     	 cmp r2,r3
 2779 00aa 30D1     	 bne .L162
 2780              	.L163:
1018:../CANopen/stack/301/CO_PDO.c ****             || (valid && CO_IS_RESTRICTED_CAN_ID(CAN_ID))
 2781              	 .loc 3 1018 0 is_stmt 1
 2782 00ac FB6A     	 ldr r3,[r7,#44]
 2783 00ae 002B     	 cmp r3,#0
 2784 00b0 26D0     	 beq .L164
 2785              	 .loc 3 1018 0 is_stmt 0 discriminator 1
 2786 00b2 FB8F     	 ldrh r3,[r7,#62]
 2787 00b4 7F2B     	 cmp r3,#127
 2788 00b6 2AD9     	 bls .L162
 2789              	 .loc 3 1018 0 discriminator 2
 2790 00b8 FB8F     	 ldrh r3,[r7,#62]
 2791 00ba B3F5807F 	 cmp r3,#256
 2792 00be 03D9     	 bls .L165
 2793              	 .loc 3 1018 0 discriminator 3
 2794 00c0 FB8F     	 ldrh r3,[r7,#62]
 2795 00c2 B3F5C07F 	 cmp r3,#384
 2796 00c6 22D9     	 bls .L162
 2797              	.L165:
 2798              	 .loc 3 1018 0 discriminator 5
 2799 00c8 FB8F     	 ldrh r3,[r7,#62]
 2800 00ca B3F5B06F 	 cmp r3,#1408
 2801 00ce 03D9     	 bls .L166
 2802              	 .loc 3 1018 0 discriminator 6
 2803 00d0 FB8F     	 ldrh r3,[r7,#62]
 2804 00d2 B3F5C06F 	 cmp r3,#1536
 2805 00d6 1AD3     	 bcc .L162
 2806              	.L166:
 2807              	 .loc 3 1018 0 discriminator 8
 2808 00d8 FB8F     	 ldrh r3,[r7,#62]
 2809 00da B3F5C06F 	 cmp r3,#1536
 2810 00de 03D9     	 bls .L167
 2811              	 .loc 3 1018 0 discriminator 9
 2812 00e0 FB8F     	 ldrh r3,[r7,#62]
 2813 00e2 B3F5D06F 	 cmp r3,#1664
 2814 00e6 12D3     	 bcc .L162
 2815              	.L167:
 2816              	 .loc 3 1018 0 discriminator 11
 2817 00e8 FB8F     	 ldrh r3,[r7,#62]
 2818 00ea B3F5DC6F 	 cmp r3,#1760
 2819 00ee 03D3     	 bcc .L168
 2820              	 .loc 3 1018 0 discriminator 12
 2821 00f0 FB8F     	 ldrh r3,[r7,#62]
 2822 00f2 B3F5E06F 	 cmp r3,#1792
 2823 00f6 0AD3     	 bcc .L162
 2824              	.L168:
 2825              	 .loc 3 1018 0 discriminator 14
 2826 00f8 FB8F     	 ldrh r3,[r7,#62]
 2827 00fa B3F5E06F 	 cmp r3,#1792
 2828 00fe 06D8     	 bhi .L162
 2829              	.L164:
1019:../CANopen/stack/301/CO_PDO.c ****             || (valid && PDO->mappedObjectsCount == 0)
 2830              	 .loc 3 1019 0 is_stmt 1
 2831 0100 FB6A     	 ldr r3,[r7,#44]
 2832 0102 002B     	 cmp r3,#0
 2833 0104 05D0     	 beq .L169
 2834              	 .loc 3 1019 0 is_stmt 0 discriminator 1
 2835 0106 7B6B     	 ldr r3,[r7,#52]
 2836 0108 5B7B     	 ldrb r3,[r3,#13]
 2837 010a 002B     	 cmp r3,#0
 2838 010c 01D1     	 bne .L169
 2839              	.L162:
1020:../CANopen/stack/301/CO_PDO.c ****         ) {
1021:../CANopen/stack/301/CO_PDO.c ****             return ODR_INVALID_VALUE;
 2840              	 .loc 3 1021 0 is_stmt 1
 2841 010e 0F23     	 movs r3,#15
 2842 0110 BFE0     	 b .L179
 2843              	.L169:
1022:../CANopen/stack/301/CO_PDO.c ****         }
1023:../CANopen/stack/301/CO_PDO.c **** 
1024:../CANopen/stack/301/CO_PDO.c ****         /* parameter changed? */
1025:../CANopen/stack/301/CO_PDO.c ****         if (valid != PDO->valid || CAN_ID != PDO->configuredCanId) {
 2844              	 .loc 3 1025 0
 2845 0112 7B6B     	 ldr r3,[r7,#52]
 2846 0114 9A68     	 ldr r2,[r3,#8]
 2847 0116 FB6A     	 ldr r3,[r7,#44]
 2848 0118 9A42     	 cmp r2,r3
 2849 011a 05D1     	 bne .L170
 2850              	 .loc 3 1025 0 is_stmt 0 discriminator 1
 2851 011c 7B6B     	 ldr r3,[r7,#52]
 2852 011e B3F82431 	 ldrh r3,[r3,#292]
 2853 0122 FA8F     	 ldrh r2,[r7,#62]
 2854 0124 9A42     	 cmp r2,r3
 2855 0126 3BD0     	 beq .L171
 2856              	.L170:
 2857              	.LBB21:
1026:../CANopen/stack/301/CO_PDO.c ****             /* if default CAN-ID is written, store to OD without Node-ID */
1027:../CANopen/stack/301/CO_PDO.c ****             if (CAN_ID == PDO->preDefinedCanId) {
 2858              	 .loc 3 1027 0 is_stmt 1
 2859 0128 7B6B     	 ldr r3,[r7,#52]
 2860 012a B3F82231 	 ldrh r3,[r3,#290]
 2861 012e FA8F     	 ldrh r2,[r7,#62]
 2862 0130 9A42     	 cmp r2,r3
 2863 0132 08D1     	 bne .L172
1028:../CANopen/stack/301/CO_PDO.c ****                 CO_setUint32(bufCopy, COB_ID & 0xFFFFFF80);
 2864              	 .loc 3 1028 0
 2865 0134 3B6B     	 ldr r3,[r7,#48]
 2866 0136 23F07F03 	 bic r3,r3,#127
 2867 013a 07F11402 	 add r2,r7,#20
 2868 013e 1046     	 mov r0,r2
 2869 0140 1946     	 mov r1,r3
 2870 0142 FFF7FEFF 	 bl CO_setUint32
 2871              	.L172:
1029:../CANopen/stack/301/CO_PDO.c ****             }
1030:../CANopen/stack/301/CO_PDO.c ****             if (!valid) {
 2872              	 .loc 3 1030 0
 2873 0146 FB6A     	 ldr r3,[r7,#44]
 2874 0148 002B     	 cmp r3,#0
 2875 014a 01D1     	 bne .L173
1031:../CANopen/stack/301/CO_PDO.c ****                 CAN_ID = 0;
 2876              	 .loc 3 1031 0
 2877 014c 0023     	 movs r3,#0
 2878 014e FB87     	 strh r3,[r7,#62]
 2879              	.L173:
1032:../CANopen/stack/301/CO_PDO.c ****             }
1033:../CANopen/stack/301/CO_PDO.c **** 
1034:../CANopen/stack/301/CO_PDO.c ****             CO_CANtx_t *CANtxBuff = CO_CANtxBufferInit(
 2880              	 .loc 3 1034 0
 2881 0150 7B6B     	 ldr r3,[r7,#52]
 2882 0152 5868     	 ldr r0,[r3,#4]
 2883 0154 7B6B     	 ldr r3,[r7,#52]
 2884 0156 B3F82011 	 ldrh r1,[r3,#288]
 2885 015a 7B6B     	 ldr r3,[r7,#52]
 2886 015c 1B7B     	 ldrb r3,[r3,#12]
1035:../CANopen/stack/301/CO_PDO.c ****                 PDO->CANdev,      /* CAN device */
1036:../CANopen/stack/301/CO_PDO.c ****                 PDO->CANdevIdx,   /* index of specific buffer inside CAN mod. */
1037:../CANopen/stack/301/CO_PDO.c ****                 CAN_ID,           /* CAN identifier */
1038:../CANopen/stack/301/CO_PDO.c ****                 0,                /* rtr */
1039:../CANopen/stack/301/CO_PDO.c ****                 PDO->dataLength,  /* number of data bytes */
1040:../CANopen/stack/301/CO_PDO.c ****                 TPDO->transmissionType <= CO_PDO_TRANSM_TYPE_SYNC_240);
 2887              	 .loc 3 1040 0
 2888 015e BA6B     	 ldr r2,[r7,#56]
 2889 0160 92F84C21 	 ldrb r2,[r2,#332]
1034:../CANopen/stack/301/CO_PDO.c ****                 PDO->CANdev,      /* CAN device */
 2890              	 .loc 3 1034 0
 2891 0164 F02A     	 cmp r2,#240
 2892 0166 94BF     	 ite ls
 2893 0168 0122     	 movls r2,#1
 2894 016a 0022     	 movhi r2,#0
 2895 016c D2B2     	 uxtb r2,r2
 2896 016e 1446     	 mov r4,r2
 2897 0170 FA8F     	 ldrh r2,[r7,#62]
 2898 0172 0093     	 str r3,[sp]
 2899 0174 0194     	 str r4,[sp,#4]
 2900 0176 0023     	 movs r3,#0
 2901 0178 FFF7FEFF 	 bl CO_CANtxBufferInit
 2902 017c B862     	 str r0,[r7,#40]
1041:../CANopen/stack/301/CO_PDO.c ****                                   /* synchronous message flag */
1042:../CANopen/stack/301/CO_PDO.c **** 
1043:../CANopen/stack/301/CO_PDO.c ****             if (CANtxBuff == NULL) {
 2903              	 .loc 3 1043 0
 2904 017e BB6A     	 ldr r3,[r7,#40]
 2905 0180 002B     	 cmp r3,#0
 2906 0182 01D1     	 bne .L174
1044:../CANopen/stack/301/CO_PDO.c ****                 return ODR_DEV_INCOMPAT;
 2907              	 .loc 3 1044 0
 2908 0184 0923     	 movs r3,#9
 2909 0186 84E0     	 b .L179
 2910              	.L174:
1045:../CANopen/stack/301/CO_PDO.c ****             }
1046:../CANopen/stack/301/CO_PDO.c **** 
1047:../CANopen/stack/301/CO_PDO.c ****             TPDO->CANtxBuff = CANtxBuff;
 2911              	 .loc 3 1047 0
 2912 0188 BB6B     	 ldr r3,[r7,#56]
 2913 018a BA6A     	 ldr r2,[r7,#40]
 2914 018c C3F84821 	 str r2,[r3,#328]
1048:../CANopen/stack/301/CO_PDO.c ****             PDO->valid = valid;
 2915              	 .loc 3 1048 0
 2916 0190 7B6B     	 ldr r3,[r7,#52]
 2917 0192 FA6A     	 ldr r2,[r7,#44]
 2918 0194 9A60     	 str r2,[r3,#8]
1049:../CANopen/stack/301/CO_PDO.c ****             PDO->configuredCanId = CAN_ID;
 2919              	 .loc 3 1049 0
 2920 0196 7B6B     	 ldr r3,[r7,#52]
 2921 0198 FA8F     	 ldrh r2,[r7,#62]
 2922 019a A3F82421 	 strh r2,[r3,#292]
 2923              	.LBE21:
1050:../CANopen/stack/301/CO_PDO.c ****         }
1051:../CANopen/stack/301/CO_PDO.c ****         break;
 2924              	 .loc 3 1051 0
 2925 019e 6FE0     	 b .L155
 2926              	.L171:
 2927 01a0 6EE0     	 b .L155
 2928              	.L158:
 2929              	.LBE20:
 2930              	.LBB22:
1052:../CANopen/stack/301/CO_PDO.c ****     }
1053:../CANopen/stack/301/CO_PDO.c **** 
1054:../CANopen/stack/301/CO_PDO.c ****     case 2: { /* transmission type */
1055:../CANopen/stack/301/CO_PDO.c ****         uint8_t transmissionType = CO_getUint8(buf);
 2931              	 .loc 3 1055 0
 2932 01a2 B868     	 ldr r0,[r7,#8]
 2933 01a4 FFF7FEFF 	 bl CO_getUint8
 2934 01a8 0346     	 mov r3,r0
 2935 01aa 87F82730 	 strb r3,[r7,#39]
1056:../CANopen/stack/301/CO_PDO.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_PDO_SYNC_ENABLE
1057:../CANopen/stack/301/CO_PDO.c ****         if (transmissionType > CO_PDO_TRANSM_TYPE_SYNC_240
 2936              	 .loc 3 1057 0
 2937 01ae 97F82730 	 ldrb r3,[r7,#39]
 2938 01b2 F02B     	 cmp r3,#240
 2939 01b4 05D9     	 bls .L175
1058:../CANopen/stack/301/CO_PDO.c ****             && transmissionType < CO_PDO_TRANSM_TYPE_SYNC_EVENT_LO
 2940              	 .loc 3 1058 0
 2941 01b6 97F82730 	 ldrb r3,[r7,#39]
 2942 01ba FD2B     	 cmp r3,#253
 2943 01bc 01D8     	 bhi .L175
1059:../CANopen/stack/301/CO_PDO.c ****         ) {
1060:../CANopen/stack/301/CO_PDO.c ****             return ODR_INVALID_VALUE;
 2944              	 .loc 3 1060 0
 2945 01be 0F23     	 movs r3,#15
 2946 01c0 67E0     	 b .L179
 2947              	.L175:
1061:../CANopen/stack/301/CO_PDO.c ****         }
1062:../CANopen/stack/301/CO_PDO.c ****         TPDO->CANtxBuff->syncFlag =
 2948              	 .loc 3 1062 0
 2949 01c2 BB6B     	 ldr r3,[r7,#56]
 2950 01c4 D3F84831 	 ldr r3,[r3,#328]
1063:../CANopen/stack/301/CO_PDO.c ****             transmissionType <= CO_PDO_TRANSM_TYPE_SYNC_240;
 2951              	 .loc 3 1063 0
 2952 01c8 97F82720 	 ldrb r2,[r7,#39]
 2953 01cc F02A     	 cmp r2,#240
 2954 01ce 94BF     	 ite ls
 2955 01d0 0122     	 movls r2,#1
 2956 01d2 0022     	 movhi r2,#0
 2957 01d4 D2B2     	 uxtb r2,r2
1062:../CANopen/stack/301/CO_PDO.c ****             transmissionType <= CO_PDO_TRANSM_TYPE_SYNC_240;
 2958              	 .loc 3 1062 0
 2959 01d6 5A61     	 str r2,[r3,#20]
1064:../CANopen/stack/301/CO_PDO.c ****         TPDO->syncCounter = 255;
 2960              	 .loc 3 1064 0
 2961 01d8 BB6B     	 ldr r3,[r7,#56]
 2962 01da FF22     	 movs r2,#255
 2963 01dc 83F85921 	 strb r2,[r3,#345]
1065:../CANopen/stack/301/CO_PDO.c **** #else
1066:../CANopen/stack/301/CO_PDO.c ****         if (transmissionType < CO_PDO_TRANSM_TYPE_SYNC_EVENT_LO) {
1067:../CANopen/stack/301/CO_PDO.c ****             return ODR_INVALID_VALUE;
1068:../CANopen/stack/301/CO_PDO.c ****         }
1069:../CANopen/stack/301/CO_PDO.c **** #endif
1070:../CANopen/stack/301/CO_PDO.c ****         TPDO->transmissionType = transmissionType;
 2964              	 .loc 3 1070 0
 2965 01e0 BB6B     	 ldr r3,[r7,#56]
 2966 01e2 97F82720 	 ldrb r2,[r7,#39]
 2967 01e6 83F84C21 	 strb r2,[r3,#332]
1071:../CANopen/stack/301/CO_PDO.c ****         TPDO->sendRequest = true;
 2968              	 .loc 3 1071 0
 2969 01ea BB6B     	 ldr r3,[r7,#56]
 2970 01ec 0122     	 movs r2,#1
 2971 01ee C3F85021 	 str r2,[r3,#336]
1072:../CANopen/stack/301/CO_PDO.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_TPDO_TIMERS_ENABLE
1073:../CANopen/stack/301/CO_PDO.c ****         TPDO->inhibitTimer = TPDO->eventTimer = 0;
 2972              	 .loc 3 1073 0
 2973 01f2 BB6B     	 ldr r3,[r7,#56]
 2974 01f4 0022     	 movs r2,#0
 2975 01f6 C3F86821 	 str r2,[r3,#360]
 2976 01fa BB6B     	 ldr r3,[r7,#56]
 2977 01fc D3F86821 	 ldr r2,[r3,#360]
 2978 0200 BB6B     	 ldr r3,[r7,#56]
 2979 0202 C3F86421 	 str r2,[r3,#356]
1074:../CANopen/stack/301/CO_PDO.c **** #endif
1075:../CANopen/stack/301/CO_PDO.c ****         break;
 2980              	 .loc 3 1075 0
 2981 0206 3BE0     	 b .L155
 2982              	.L159:
 2983              	.LBE22:
 2984              	.LBB23:
1076:../CANopen/stack/301/CO_PDO.c ****     }
1077:../CANopen/stack/301/CO_PDO.c **** 
1078:../CANopen/stack/301/CO_PDO.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_TPDO_TIMERS_ENABLE
1079:../CANopen/stack/301/CO_PDO.c ****     case 3: { /* inhibit time */
1080:../CANopen/stack/301/CO_PDO.c ****         if (PDO->valid) {
 2985              	 .loc 3 1080 0
 2986 0208 7B6B     	 ldr r3,[r7,#52]
 2987 020a 9B68     	 ldr r3,[r3,#8]
 2988 020c 002B     	 cmp r3,#0
 2989 020e 01D0     	 beq .L176
1081:../CANopen/stack/301/CO_PDO.c ****             return ODR_INVALID_VALUE;
 2990              	 .loc 3 1081 0
 2991 0210 0F23     	 movs r3,#15
 2992 0212 3EE0     	 b .L179
 2993              	.L176:
1082:../CANopen/stack/301/CO_PDO.c ****         }
1083:../CANopen/stack/301/CO_PDO.c ****         uint32_t inhibitTime = CO_getUint16(buf);
 2994              	 .loc 3 1083 0
 2995 0214 B868     	 ldr r0,[r7,#8]
 2996 0216 FFF7FEFF 	 bl CO_getUint16
 2997 021a 0346     	 mov r3,r0
 2998 021c 3B62     	 str r3,[r7,#32]
1084:../CANopen/stack/301/CO_PDO.c ****         TPDO->inhibitTime_us = inhibitTime * 100;
 2999              	 .loc 3 1084 0
 3000 021e 3B6A     	 ldr r3,[r7,#32]
 3001 0220 6422     	 movs r2,#100
 3002 0222 02FB03F2 	 mul r2,r2,r3
 3003 0226 BB6B     	 ldr r3,[r7,#56]
 3004 0228 C3F85C21 	 str r2,[r3,#348]
1085:../CANopen/stack/301/CO_PDO.c ****         TPDO->inhibitTimer = 0;
 3005              	 .loc 3 1085 0
 3006 022c BB6B     	 ldr r3,[r7,#56]
 3007 022e 0022     	 movs r2,#0
 3008 0230 C3F86421 	 str r2,[r3,#356]
1086:../CANopen/stack/301/CO_PDO.c ****         break;
 3009              	 .loc 3 1086 0
 3010 0234 24E0     	 b .L155
 3011              	.L160:
 3012              	.LBE23:
 3013              	.LBB24:
1087:../CANopen/stack/301/CO_PDO.c ****     }
1088:../CANopen/stack/301/CO_PDO.c **** 
1089:../CANopen/stack/301/CO_PDO.c ****     case 5: { /* event-timer */
1090:../CANopen/stack/301/CO_PDO.c ****         uint32_t eventTime = CO_getUint16(buf);
 3014              	 .loc 3 1090 0
 3015 0236 B868     	 ldr r0,[r7,#8]
 3016 0238 FFF7FEFF 	 bl CO_getUint16
 3017 023c 0346     	 mov r3,r0
 3018 023e BB61     	 str r3,[r7,#24]
1091:../CANopen/stack/301/CO_PDO.c ****         TPDO->eventTime_us = eventTime * 1000;
 3019              	 .loc 3 1091 0
 3020 0240 BB69     	 ldr r3,[r7,#24]
 3021 0242 4FF47A72 	 mov r2,#1000
 3022 0246 02FB03F2 	 mul r2,r2,r3
 3023 024a BB6B     	 ldr r3,[r7,#56]
 3024 024c C3F86021 	 str r2,[r3,#352]
1092:../CANopen/stack/301/CO_PDO.c ****         TPDO->eventTimer = 0;
 3025              	 .loc 3 1092 0
 3026 0250 BB6B     	 ldr r3,[r7,#56]
 3027 0252 0022     	 movs r2,#0
 3028 0254 C3F86821 	 str r2,[r3,#360]
1093:../CANopen/stack/301/CO_PDO.c ****         break;
 3029              	 .loc 3 1093 0
 3030 0258 12E0     	 b .L155
 3031              	.L161:
 3032              	.LBE24:
 3033              	.LBB25:
1094:../CANopen/stack/301/CO_PDO.c ****     }
1095:../CANopen/stack/301/CO_PDO.c **** #endif
1096:../CANopen/stack/301/CO_PDO.c **** 
1097:../CANopen/stack/301/CO_PDO.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_PDO_SYNC_ENABLE
1098:../CANopen/stack/301/CO_PDO.c ****     case 6: { /* SYNC start value */
1099:../CANopen/stack/301/CO_PDO.c ****         uint8_t syncStartValue = CO_getUint8(buf);
 3034              	 .loc 3 1099 0
 3035 025a B868     	 ldr r0,[r7,#8]
 3036 025c FFF7FEFF 	 bl CO_getUint8
 3037 0260 0346     	 mov r3,r0
 3038 0262 FB77     	 strb r3,[r7,#31]
1100:../CANopen/stack/301/CO_PDO.c **** 
1101:../CANopen/stack/301/CO_PDO.c ****         if (PDO->valid || syncStartValue > 240) {
 3039              	 .loc 3 1101 0
 3040 0264 7B6B     	 ldr r3,[r7,#52]
 3041 0266 9B68     	 ldr r3,[r3,#8]
 3042 0268 002B     	 cmp r3,#0
 3043 026a 02D1     	 bne .L177
 3044              	 .loc 3 1101 0 is_stmt 0 discriminator 1
 3045 026c FB7F     	 ldrb r3,[r7,#31]
 3046 026e F02B     	 cmp r3,#240
 3047 0270 01D9     	 bls .L178
 3048              	.L177:
1102:../CANopen/stack/301/CO_PDO.c ****             return ODR_INVALID_VALUE;
 3049              	 .loc 3 1102 0 is_stmt 1
 3050 0272 0F23     	 movs r3,#15
 3051 0274 0DE0     	 b .L179
 3052              	.L178:
1103:../CANopen/stack/301/CO_PDO.c ****         }
1104:../CANopen/stack/301/CO_PDO.c ****         TPDO->syncStartValue = syncStartValue;
 3053              	 .loc 3 1104 0
 3054 0276 BB6B     	 ldr r3,[r7,#56]
 3055 0278 FA7F     	 ldrb r2,[r7,#31]
 3056 027a 83F85821 	 strb r2,[r3,#344]
1105:../CANopen/stack/301/CO_PDO.c ****         break;
 3057              	 .loc 3 1105 0
 3058 027e 00BF     	 nop
 3059              	.L155:
 3060              	.LBE25:
1106:../CANopen/stack/301/CO_PDO.c ****     }
1107:../CANopen/stack/301/CO_PDO.c **** #endif
1108:../CANopen/stack/301/CO_PDO.c ****     }
1109:../CANopen/stack/301/CO_PDO.c **** 
1110:../CANopen/stack/301/CO_PDO.c **** #if (C2000_PORT != 0)
1111:../CANopen/stack/301/CO_PDO.c ****     void * pBufTemp = bufCopy;
1112:../CANopen/stack/301/CO_PDO.c ****     if((stream->attribute & ODA_STR) == 0) {
1113:../CANopen/stack/301/CO_PDO.c ****         if(count == 1) {
1114:../CANopen/stack/301/CO_PDO.c ****             *((uint8_t *)pBufTemp) = CO_getUint8(bufCopy);
1115:../CANopen/stack/301/CO_PDO.c ****         } else if (count == 2) {
1116:../CANopen/stack/301/CO_PDO.c ****             *((uint16_t *)pBufTemp) = CO_getUint16(bufCopy);
1117:../CANopen/stack/301/CO_PDO.c ****         } else if (count == 4) {
1118:../CANopen/stack/301/CO_PDO.c ****             *((uint32_t *)pBufTemp) = CO_getUint32(bufCopy);
1119:../CANopen/stack/301/CO_PDO.c ****         } else {
1120:../CANopen/stack/301/CO_PDO.c ****             /// TODO
1121:../CANopen/stack/301/CO_PDO.c ****         }
1122:../CANopen/stack/301/CO_PDO.c ****     }
1123:../CANopen/stack/301/CO_PDO.c ****     /* write value to the original location in the Object Dictionary */
1124:../CANopen/stack/301/CO_PDO.c ****     return OD_writeOriginal(stream, pBufTemp, count, countWritten);
1125:../CANopen/stack/301/CO_PDO.c **** #else
1126:../CANopen/stack/301/CO_PDO.c ****     /* write value to the original location in the Object Dictionary */
1127:../CANopen/stack/301/CO_PDO.c ****     return OD_writeOriginal(stream, bufCopy, count, countWritten);
 3061              	 .loc 3 1127 0
 3062 0280 07F11403 	 add r3,r7,#20
 3063 0284 F868     	 ldr r0,[r7,#12]
 3064 0286 1946     	 mov r1,r3
 3065 0288 7A68     	 ldr r2,[r7,#4]
 3066 028a 3B68     	 ldr r3,[r7]
 3067 028c FFF7FEFF 	 bl OD_writeOriginal
 3068 0290 0346     	 mov r3,r0
 3069              	.L179:
 3070 0292 5BB2     	 sxtb r3,r3
1128:../CANopen/stack/301/CO_PDO.c **** #endif
1129:../CANopen/stack/301/CO_PDO.c **** }
 3071              	 .loc 3 1129 0 discriminator 1
 3072 0294 1846     	 mov r0,r3
 3073 0296 4437     	 adds r7,r7,#68
 3074              	.LCFI102:
 3075              	 .cfi_def_cfa_offset 12
 3076 0298 BD46     	 mov sp,r7
 3077              	.LCFI103:
 3078              	 .cfi_def_cfa_register 13
 3079              	 
 3080 029a 90BD     	 pop {r4,r7,pc}
 3081              	.L181:
 3082              	 .align 2
 3083              	.L180:
 3084 029c 00F8FF3F 	 .word 1073739776
 3085              	 .cfi_endproc
 3086              	.LFE47:
 3088              	 .section .text.CO_TPDO_init,"ax",%progbits
 3089              	 .align 2
 3090              	 .global CO_TPDO_init
 3091              	 .thumb
 3092              	 .thumb_func
 3094              	CO_TPDO_init:
 3095              	.LFB48:
1130:../CANopen/stack/301/CO_PDO.c **** #endif /* (CO_CONFIG_PDO) & CO_CONFIG_FLAG_OD_DYNAMIC */
1131:../CANopen/stack/301/CO_PDO.c **** 
1132:../CANopen/stack/301/CO_PDO.c **** 
1133:../CANopen/stack/301/CO_PDO.c **** /******************************************************************************/
1134:../CANopen/stack/301/CO_PDO.c **** CO_ReturnError_t CO_TPDO_init(CO_TPDO_t *TPDO,
1135:../CANopen/stack/301/CO_PDO.c ****                               OD_t *OD,
1136:../CANopen/stack/301/CO_PDO.c ****                               CO_EM_t *em,
1137:../CANopen/stack/301/CO_PDO.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_PDO_SYNC_ENABLE
1138:../CANopen/stack/301/CO_PDO.c ****                               CO_SYNC_t *SYNC,
1139:../CANopen/stack/301/CO_PDO.c **** #endif
1140:../CANopen/stack/301/CO_PDO.c ****                               uint16_t preDefinedCanId,
1141:../CANopen/stack/301/CO_PDO.c ****                               OD_entry_t *OD_18xx_TPDOCommPar,
1142:../CANopen/stack/301/CO_PDO.c ****                               OD_entry_t *OD_1Axx_TPDOMapPar,
1143:../CANopen/stack/301/CO_PDO.c ****                               CO_CANmodule_t *CANdevTx,
1144:../CANopen/stack/301/CO_PDO.c ****                               uint16_t CANdevTxIdx,
1145:../CANopen/stack/301/CO_PDO.c ****                               uint32_t *errInfo)
1146:../CANopen/stack/301/CO_PDO.c **** {
 3096              	 .loc 3 1146 0
 3097              	 .cfi_startproc
 3098              	 
 3099              	 
 3100 0000 80B5     	 push {r7,lr}
 3101              	.LCFI104:
 3102              	 .cfi_def_cfa_offset 8
 3103              	 .cfi_offset 7,-8
 3104              	 .cfi_offset 14,-4
 3105 0002 8EB0     	 sub sp,sp,#56
 3106              	.LCFI105:
 3107              	 .cfi_def_cfa_offset 64
 3108 0004 02AF     	 add r7,sp,#8
 3109              	.LCFI106:
 3110              	 .cfi_def_cfa 7,56
 3111 0006 F860     	 str r0,[r7,#12]
 3112 0008 B960     	 str r1,[r7,#8]
 3113 000a 7A60     	 str r2,[r7,#4]
 3114 000c 3B60     	 str r3,[r7]
1147:../CANopen/stack/301/CO_PDO.c ****     CO_PDO_common_t *PDO = &TPDO->PDO_common;
 3115              	 .loc 3 1147 0
 3116 000e FB68     	 ldr r3,[r7,#12]
 3117 0010 7B62     	 str r3,[r7,#36]
1148:../CANopen/stack/301/CO_PDO.c ****     ODR_t odRet;
1149:../CANopen/stack/301/CO_PDO.c **** 
1150:../CANopen/stack/301/CO_PDO.c ****     /* verify arguments */
1151:../CANopen/stack/301/CO_PDO.c ****     if (TPDO == NULL || OD == NULL || em == NULL || OD_18xx_TPDOCommPar == NULL
 3118              	 .loc 3 1151 0
 3119 0012 FB68     	 ldr r3,[r7,#12]
 3120 0014 002B     	 cmp r3,#0
 3121 0016 0ED0     	 beq .L183
 3122              	 .loc 3 1151 0 is_stmt 0 discriminator 1
 3123 0018 BB68     	 ldr r3,[r7,#8]
 3124 001a 002B     	 cmp r3,#0
 3125 001c 0BD0     	 beq .L183
 3126              	 .loc 3 1151 0 discriminator 2
 3127 001e 7B68     	 ldr r3,[r7,#4]
 3128 0020 002B     	 cmp r3,#0
 3129 0022 08D0     	 beq .L183
 3130              	 .loc 3 1151 0 discriminator 3
 3131 0024 FB6B     	 ldr r3,[r7,#60]
 3132 0026 002B     	 cmp r3,#0
 3133 0028 05D0     	 beq .L183
1152:../CANopen/stack/301/CO_PDO.c ****         || OD_1Axx_TPDOMapPar == NULL || CANdevTx == NULL
 3134              	 .loc 3 1152 0 is_stmt 1
 3135 002a 3B6C     	 ldr r3,[r7,#64]
 3136 002c 002B     	 cmp r3,#0
 3137 002e 02D0     	 beq .L183
 3138              	 .loc 3 1152 0 is_stmt 0 discriminator 1
 3139 0030 7B6C     	 ldr r3,[r7,#68]
 3140 0032 002B     	 cmp r3,#0
 3141 0034 01D1     	 bne .L184
 3142              	.L183:
1153:../CANopen/stack/301/CO_PDO.c ****     ) {
1154:../CANopen/stack/301/CO_PDO.c ****         return CO_ERROR_ILLEGAL_ARGUMENT;
 3143              	 .loc 3 1154 0 is_stmt 1
 3144 0036 FF23     	 movs r3,#255
 3145 0038 52E1     	 b .L200
 3146              	.L184:
1155:../CANopen/stack/301/CO_PDO.c ****     }
1156:../CANopen/stack/301/CO_PDO.c **** 
1157:../CANopen/stack/301/CO_PDO.c ****     /* clear object */
1158:../CANopen/stack/301/CO_PDO.c ****     memset(TPDO, 0, sizeof(CO_TPDO_t));
 3147              	 .loc 3 1158 0
 3148 003a F868     	 ldr r0,[r7,#12]
 3149 003c 0021     	 movs r1,#0
 3150 003e 4FF4B672 	 mov r2,#364
 3151 0042 FFF7FEFF 	 bl memset
1159:../CANopen/stack/301/CO_PDO.c **** 
1160:../CANopen/stack/301/CO_PDO.c ****     /* Configure object variables */
1161:../CANopen/stack/301/CO_PDO.c ****     PDO->em = em;
 3152              	 .loc 3 1161 0
 3153 0046 7B6A     	 ldr r3,[r7,#36]
 3154 0048 7A68     	 ldr r2,[r7,#4]
 3155 004a 1A60     	 str r2,[r3]
1162:../CANopen/stack/301/CO_PDO.c ****     PDO->CANdev = CANdevTx;
 3156              	 .loc 3 1162 0
 3157 004c 7B6A     	 ldr r3,[r7,#36]
 3158 004e 7A6C     	 ldr r2,[r7,#68]
 3159 0050 5A60     	 str r2,[r3,#4]
1163:../CANopen/stack/301/CO_PDO.c **** 
1164:../CANopen/stack/301/CO_PDO.c ****     /* Configure mapping parameters */
1165:../CANopen/stack/301/CO_PDO.c ****     uint32_t erroneousMap = 0;
 3160              	 .loc 3 1165 0
 3161 0052 0023     	 movs r3,#0
 3162 0054 FB61     	 str r3,[r7,#28]
1166:../CANopen/stack/301/CO_PDO.c ****     CO_ReturnError_t ret = PDO_initMapping(PDO,
 3163              	 .loc 3 1166 0
 3164 0056 FB6C     	 ldr r3,[r7,#76]
 3165 0058 0093     	 str r3,[sp]
 3166 005a 07F11C03 	 add r3,r7,#28
 3167 005e 0193     	 str r3,[sp,#4]
 3168 0060 786A     	 ldr r0,[r7,#36]
 3169 0062 B968     	 ldr r1,[r7,#8]
 3170 0064 3A6C     	 ldr r2,[r7,#64]
 3171 0066 0023     	 movs r3,#0
 3172 0068 FFF7FEFF 	 bl PDO_initMapping
 3173 006c 0346     	 mov r3,r0
 3174 006e 87F82330 	 strb r3,[r7,#35]
1167:../CANopen/stack/301/CO_PDO.c ****                                            OD,
1168:../CANopen/stack/301/CO_PDO.c ****                                            OD_1Axx_TPDOMapPar,
1169:../CANopen/stack/301/CO_PDO.c ****                                            false,
1170:../CANopen/stack/301/CO_PDO.c ****                                            errInfo,
1171:../CANopen/stack/301/CO_PDO.c ****                                            &erroneousMap);
1172:../CANopen/stack/301/CO_PDO.c ****     if (ret != CO_ERROR_NO) {
 3175              	 .loc 3 1172 0
 3176 0072 97F92330 	 ldrsb r3,[r7,#35]
 3177 0076 002B     	 cmp r3,#0
 3178 0078 02D0     	 beq .L186
1173:../CANopen/stack/301/CO_PDO.c ****         return ret;
 3179              	 .loc 3 1173 0
 3180 007a 97F82330 	 ldrb r3,[r7,#35]
 3181 007e 2FE1     	 b .L200
 3182              	.L186:
1174:../CANopen/stack/301/CO_PDO.c ****     }
1175:../CANopen/stack/301/CO_PDO.c **** 
1176:../CANopen/stack/301/CO_PDO.c **** 
1177:../CANopen/stack/301/CO_PDO.c ****     /* Configure communication parameter - transmission type */
1178:../CANopen/stack/301/CO_PDO.c ****     uint8_t transmissionType = CO_PDO_TRANSM_TYPE_SYNC_EVENT_LO;
 3183              	 .loc 3 1178 0
 3184 0080 FE23     	 movs r3,#254
 3185 0082 FB76     	 strb r3,[r7,#27]
1179:../CANopen/stack/301/CO_PDO.c ****     odRet = OD_get_u8(OD_18xx_TPDOCommPar, 2, &transmissionType, true);
 3186              	 .loc 3 1179 0
 3187 0084 07F11B03 	 add r3,r7,#27
 3188 0088 F86B     	 ldr r0,[r7,#60]
 3189 008a 0221     	 movs r1,#2
 3190 008c 1A46     	 mov r2,r3
 3191 008e 0123     	 movs r3,#1
 3192 0090 FFF7FEFF 	 bl OD_get_u8
 3193 0094 0346     	 mov r3,r0
 3194 0096 87F82230 	 strb r3,[r7,#34]
1180:../CANopen/stack/301/CO_PDO.c ****     if (odRet != ODR_OK) {
 3195              	 .loc 3 1180 0
 3196 009a 97F92230 	 ldrsb r3,[r7,#34]
 3197 009e 002B     	 cmp r3,#0
 3198 00a0 0DD0     	 beq .L187
1181:../CANopen/stack/301/CO_PDO.c ****         if (errInfo != NULL) {
 3199              	 .loc 3 1181 0
 3200 00a2 FB6C     	 ldr r3,[r7,#76]
 3201 00a4 002B     	 cmp r3,#0
 3202 00a6 08D0     	 beq .L188
1182:../CANopen/stack/301/CO_PDO.c ****             *errInfo = (((uint32_t)OD_getIndex(OD_18xx_TPDOCommPar)) << 8) | 2;
 3203              	 .loc 3 1182 0
 3204 00a8 F86B     	 ldr r0,[r7,#60]
 3205 00aa FFF7FEFF 	 bl OD_getIndex
 3206 00ae 0346     	 mov r3,r0
 3207 00b0 1B02     	 lsls r3,r3,#8
 3208 00b2 43F00202 	 orr r2,r3,#2
 3209 00b6 FB6C     	 ldr r3,[r7,#76]
 3210 00b8 1A60     	 str r2,[r3]
 3211              	.L188:
1183:../CANopen/stack/301/CO_PDO.c ****         }
1184:../CANopen/stack/301/CO_PDO.c ****         return CO_ERROR_OD_PARAMETERS;
 3212              	 .loc 3 1184 0
 3213 00ba F423     	 movs r3,#244
 3214 00bc 10E1     	 b .L200
 3215              	.L187:
1185:../CANopen/stack/301/CO_PDO.c ****     }
1186:../CANopen/stack/301/CO_PDO.c ****     if (transmissionType < CO_PDO_TRANSM_TYPE_SYNC_EVENT_LO
 3216              	 .loc 3 1186 0
 3217 00be FB7E     	 ldrb r3,[r7,#27]
 3218 00c0 FD2B     	 cmp r3,#253
 3219 00c2 04D8     	 bhi .L189
1187:../CANopen/stack/301/CO_PDO.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_PDO_SYNC_ENABLE
1188:../CANopen/stack/301/CO_PDO.c ****         && transmissionType > CO_PDO_TRANSM_TYPE_SYNC_240
 3220              	 .loc 3 1188 0
 3221 00c4 FB7E     	 ldrb r3,[r7,#27]
 3222 00c6 F02B     	 cmp r3,#240
 3223 00c8 01D9     	 bls .L189
1189:../CANopen/stack/301/CO_PDO.c **** #endif
1190:../CANopen/stack/301/CO_PDO.c ****     ) {
1191:../CANopen/stack/301/CO_PDO.c ****         transmissionType = CO_PDO_TRANSM_TYPE_SYNC_EVENT_LO;
 3224              	 .loc 3 1191 0
 3225 00ca FE23     	 movs r3,#254
 3226 00cc FB76     	 strb r3,[r7,#27]
 3227              	.L189:
1192:../CANopen/stack/301/CO_PDO.c ****     }
1193:../CANopen/stack/301/CO_PDO.c ****     TPDO->transmissionType = transmissionType;
 3228              	 .loc 3 1193 0
 3229 00ce FA7E     	 ldrb r2,[r7,#27]
 3230 00d0 FB68     	 ldr r3,[r7,#12]
 3231 00d2 83F84C21 	 strb r2,[r3,#332]
1194:../CANopen/stack/301/CO_PDO.c ****     TPDO->sendRequest = true;
 3232              	 .loc 3 1194 0
 3233 00d6 FB68     	 ldr r3,[r7,#12]
 3234 00d8 0122     	 movs r2,#1
 3235 00da C3F85021 	 str r2,[r3,#336]
1195:../CANopen/stack/301/CO_PDO.c **** 
1196:../CANopen/stack/301/CO_PDO.c ****     /* Configure communication parameter - COB-ID */
1197:../CANopen/stack/301/CO_PDO.c ****     uint32_t COB_ID = 0;
 3236              	 .loc 3 1197 0
 3237 00de 0023     	 movs r3,#0
 3238 00e0 7B61     	 str r3,[r7,#20]
1198:../CANopen/stack/301/CO_PDO.c ****     odRet = OD_get_u32(OD_18xx_TPDOCommPar, 1, &COB_ID, true);
 3239              	 .loc 3 1198 0
 3240 00e2 07F11403 	 add r3,r7,#20
 3241 00e6 F86B     	 ldr r0,[r7,#60]
 3242 00e8 0121     	 movs r1,#1
 3243 00ea 1A46     	 mov r2,r3
 3244 00ec 0123     	 movs r3,#1
 3245 00ee FFF7FEFF 	 bl OD_get_u32
 3246 00f2 0346     	 mov r3,r0
 3247 00f4 87F82230 	 strb r3,[r7,#34]
1199:../CANopen/stack/301/CO_PDO.c ****     if (odRet != ODR_OK) {
 3248              	 .loc 3 1199 0
 3249 00f8 97F92230 	 ldrsb r3,[r7,#34]
 3250 00fc 002B     	 cmp r3,#0
 3251 00fe 0DD0     	 beq .L190
1200:../CANopen/stack/301/CO_PDO.c ****         if (errInfo != NULL) {
 3252              	 .loc 3 1200 0
 3253 0100 FB6C     	 ldr r3,[r7,#76]
 3254 0102 002B     	 cmp r3,#0
 3255 0104 08D0     	 beq .L191
1201:../CANopen/stack/301/CO_PDO.c ****             *errInfo = (((uint32_t)OD_getIndex(OD_18xx_TPDOCommPar)) << 8) | 1;
 3256              	 .loc 3 1201 0
 3257 0106 F86B     	 ldr r0,[r7,#60]
 3258 0108 FFF7FEFF 	 bl OD_getIndex
 3259 010c 0346     	 mov r3,r0
 3260 010e 1B02     	 lsls r3,r3,#8
 3261 0110 43F00102 	 orr r2,r3,#1
 3262 0114 FB6C     	 ldr r3,[r7,#76]
 3263 0116 1A60     	 str r2,[r3]
 3264              	.L191:
1202:../CANopen/stack/301/CO_PDO.c ****         }
1203:../CANopen/stack/301/CO_PDO.c ****         return CO_ERROR_OD_PARAMETERS;
 3265              	 .loc 3 1203 0
 3266 0118 F423     	 movs r3,#244
 3267 011a E1E0     	 b .L200
 3268              	.L190:
1204:../CANopen/stack/301/CO_PDO.c ****     }
1205:../CANopen/stack/301/CO_PDO.c **** 
1206:../CANopen/stack/301/CO_PDO.c ****     bool_t valid = (COB_ID & 0x80000000) == 0;
 3269              	 .loc 3 1206 0
 3270 011c 7B69     	 ldr r3,[r7,#20]
 3271 011e DB43     	 mvns r3,r3
 3272 0120 DB0F     	 lsrs r3,r3,#31
 3273 0122 DBB2     	 uxtb r3,r3
 3274 0124 FB62     	 str r3,[r7,#44]
1207:../CANopen/stack/301/CO_PDO.c ****     uint16_t CAN_ID = (uint16_t)(COB_ID & 0x7FF);
 3275              	 .loc 3 1207 0
 3276 0126 7B69     	 ldr r3,[r7,#20]
 3277 0128 9BB2     	 uxth r3,r3
 3278 012a C3F30A03 	 ubfx r3,r3,#0,#11
 3279 012e 7B85     	 strh r3,[r7,#42]
1208:../CANopen/stack/301/CO_PDO.c ****     if (valid && (PDO->mappedObjectsCount == 0 || CAN_ID == 0)) {
 3280              	 .loc 3 1208 0
 3281 0130 FB6A     	 ldr r3,[r7,#44]
 3282 0132 002B     	 cmp r3,#0
 3283 0134 0DD0     	 beq .L192
 3284              	 .loc 3 1208 0 is_stmt 0 discriminator 1
 3285 0136 7B6A     	 ldr r3,[r7,#36]
 3286 0138 5B7B     	 ldrb r3,[r3,#13]
 3287 013a 002B     	 cmp r3,#0
 3288 013c 02D0     	 beq .L193
 3289              	 .loc 3 1208 0 discriminator 2
 3290 013e 7B8D     	 ldrh r3,[r7,#42]
 3291 0140 002B     	 cmp r3,#0
 3292 0142 06D1     	 bne .L192
 3293              	.L193:
1209:../CANopen/stack/301/CO_PDO.c ****         valid = false;
 3294              	 .loc 3 1209 0 is_stmt 1
 3295 0144 0023     	 movs r3,#0
 3296 0146 FB62     	 str r3,[r7,#44]
1210:../CANopen/stack/301/CO_PDO.c ****         if (erroneousMap == 0) erroneousMap = 1;
 3297              	 .loc 3 1210 0
 3298 0148 FB69     	 ldr r3,[r7,#28]
 3299 014a 002B     	 cmp r3,#0
 3300 014c 01D1     	 bne .L192
 3301              	 .loc 3 1210 0 is_stmt 0 discriminator 1
 3302 014e 0123     	 movs r3,#1
 3303 0150 FB61     	 str r3,[r7,#28]
 3304              	.L192:
1211:../CANopen/stack/301/CO_PDO.c ****     }
1212:../CANopen/stack/301/CO_PDO.c **** 
1213:../CANopen/stack/301/CO_PDO.c ****     if (erroneousMap != 0) {
 3305              	 .loc 3 1213 0 is_stmt 1
 3306 0152 FB69     	 ldr r3,[r7,#28]
 3307 0154 002B     	 cmp r3,#0
 3308 0156 0FD0     	 beq .L194
1214:../CANopen/stack/301/CO_PDO.c ****         CO_errorReport(PDO->em,
 3309              	 .loc 3 1214 0
 3310 0158 7B6A     	 ldr r3,[r7,#36]
 3311 015a 1A68     	 ldr r2,[r3]
 3312 015c FB69     	 ldr r3,[r7,#28]
 3313 015e 012B     	 cmp r3,#1
 3314 0160 01D0     	 beq .L195
 3315              	 .loc 3 1214 0 is_stmt 0 discriminator 1
 3316 0162 FB69     	 ldr r3,[r7,#28]
 3317 0164 00E0     	 b .L196
 3318              	.L195:
 3319              	 .loc 3 1214 0 discriminator 2
 3320 0166 7B69     	 ldr r3,[r7,#20]
 3321              	.L196:
 3322              	 .loc 3 1214 0 discriminator 4
 3323 0168 0093     	 str r3,[sp]
 3324 016a 1046     	 mov r0,r2
 3325 016c 0121     	 movs r1,#1
 3326 016e 1A22     	 movs r2,#26
 3327 0170 4FF40243 	 mov r3,#33280
 3328 0174 FFF7FEFF 	 bl CO_error
 3329              	.L194:
1215:../CANopen/stack/301/CO_PDO.c ****                        CO_EM_PDO_WRONG_MAPPING, CO_EMC_PROTOCOL_ERROR,
1216:../CANopen/stack/301/CO_PDO.c ****                        erroneousMap != 1 ? erroneousMap : COB_ID);
1217:../CANopen/stack/301/CO_PDO.c ****     }
1218:../CANopen/stack/301/CO_PDO.c ****     if (!valid) {
 3330              	 .loc 3 1218 0 is_stmt 1
 3331 0178 FB6A     	 ldr r3,[r7,#44]
 3332 017a 002B     	 cmp r3,#0
 3333 017c 01D1     	 bne .L197
1219:../CANopen/stack/301/CO_PDO.c ****         CAN_ID = 0;
 3334              	 .loc 3 1219 0
 3335 017e 0023     	 movs r3,#0
 3336 0180 7B85     	 strh r3,[r7,#42]
 3337              	.L197:
1220:../CANopen/stack/301/CO_PDO.c ****     }
1221:../CANopen/stack/301/CO_PDO.c **** 
1222:../CANopen/stack/301/CO_PDO.c ****     /* If default CAN-ID is stored in OD (without Node-ID), add Node-ID */
1223:../CANopen/stack/301/CO_PDO.c ****     if (CAN_ID != 0 && CAN_ID == (preDefinedCanId & 0xFF80)) {
 3338              	 .loc 3 1223 0
 3339 0182 7B8D     	 ldrh r3,[r7,#42]
 3340 0184 002B     	 cmp r3,#0
 3341 0186 08D0     	 beq .L198
 3342              	 .loc 3 1223 0 is_stmt 0 discriminator 1
 3343 0188 7A8D     	 ldrh r2,[r7,#42]
 3344 018a 398F     	 ldrh r1,[r7,#56]
 3345 018c 4FF68073 	 movw r3,#65408
 3346 0190 0B40     	 ands r3,r3,r1
 3347 0192 9A42     	 cmp r2,r3
 3348 0194 01D1     	 bne .L198
1224:../CANopen/stack/301/CO_PDO.c ****         CAN_ID = preDefinedCanId;
 3349              	 .loc 3 1224 0 is_stmt 1
 3350 0196 3B8F     	 ldrh r3,[r7,#56]
 3351 0198 7B85     	 strh r3,[r7,#42]
 3352              	.L198:
1225:../CANopen/stack/301/CO_PDO.c ****     }
1226:../CANopen/stack/301/CO_PDO.c **** 
1227:../CANopen/stack/301/CO_PDO.c ****     TPDO->CANtxBuff = CO_CANtxBufferInit(
 3353              	 .loc 3 1227 0
 3354 019a 7B6A     	 ldr r3,[r7,#36]
 3355 019c 1B7B     	 ldrb r3,[r3,#12]
1228:../CANopen/stack/301/CO_PDO.c ****             CANdevTx,           /* CAN device */
1229:../CANopen/stack/301/CO_PDO.c ****             CANdevTxIdx,        /* index of specific buffer inside CAN module */
1230:../CANopen/stack/301/CO_PDO.c ****             CAN_ID,             /* CAN identifier */
1231:../CANopen/stack/301/CO_PDO.c ****             0,                  /* rtr */
1232:../CANopen/stack/301/CO_PDO.c ****             PDO->dataLength,    /* number of data bytes */
1233:../CANopen/stack/301/CO_PDO.c ****             TPDO->transmissionType <= CO_PDO_TRANSM_TYPE_SYNC_240);
 3356              	 .loc 3 1233 0
 3357 019e FA68     	 ldr r2,[r7,#12]
 3358 01a0 92F84C21 	 ldrb r2,[r2,#332]
1227:../CANopen/stack/301/CO_PDO.c ****             CANdevTx,           /* CAN device */
 3359              	 .loc 3 1227 0
 3360 01a4 F02A     	 cmp r2,#240
 3361 01a6 94BF     	 ite ls
 3362 01a8 0122     	 movls r2,#1
 3363 01aa 0022     	 movhi r2,#0
 3364 01ac D2B2     	 uxtb r2,r2
 3365 01ae 1046     	 mov r0,r2
 3366 01b0 B7F84810 	 ldrh r1,[r7,#72]
 3367 01b4 7A8D     	 ldrh r2,[r7,#42]
 3368 01b6 0093     	 str r3,[sp]
 3369 01b8 0190     	 str r0,[sp,#4]
 3370 01ba 786C     	 ldr r0,[r7,#68]
 3371 01bc 0023     	 movs r3,#0
 3372 01be FFF7FEFF 	 bl CO_CANtxBufferInit
 3373 01c2 0246     	 mov r2,r0
 3374 01c4 FB68     	 ldr r3,[r7,#12]
 3375 01c6 C3F84821 	 str r2,[r3,#328]
1234:../CANopen/stack/301/CO_PDO.c ****                                 /* synchronous message flag bit */
1235:../CANopen/stack/301/CO_PDO.c ****     if (TPDO->CANtxBuff == NULL) {
 3376              	 .loc 3 1235 0
 3377 01ca FB68     	 ldr r3,[r7,#12]
 3378 01cc D3F84831 	 ldr r3,[r3,#328]
 3379 01d0 002B     	 cmp r3,#0
 3380 01d2 01D1     	 bne .L199
1236:../CANopen/stack/301/CO_PDO.c ****         return CO_ERROR_ILLEGAL_ARGUMENT;
 3381              	 .loc 3 1236 0
 3382 01d4 FF23     	 movs r3,#255
 3383 01d6 83E0     	 b .L200
 3384              	.L199:
1237:../CANopen/stack/301/CO_PDO.c ****     }
1238:../CANopen/stack/301/CO_PDO.c **** 
1239:../CANopen/stack/301/CO_PDO.c ****     PDO->valid = valid;
 3385              	 .loc 3 1239 0
 3386 01d8 7B6A     	 ldr r3,[r7,#36]
 3387 01da FA6A     	 ldr r2,[r7,#44]
 3388 01dc 9A60     	 str r2,[r3,#8]
1240:../CANopen/stack/301/CO_PDO.c **** 
1241:../CANopen/stack/301/CO_PDO.c **** 
1242:../CANopen/stack/301/CO_PDO.c ****     /* Configure communication parameter - inhibit time and event-timer (opt) */
1243:../CANopen/stack/301/CO_PDO.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_TPDO_TIMERS_ENABLE
1244:../CANopen/stack/301/CO_PDO.c ****     uint16_t inhibitTime = 0;
 3389              	 .loc 3 1244 0
 3390 01de 0023     	 movs r3,#0
 3391 01e0 7B82     	 strh r3,[r7,#18]
1245:../CANopen/stack/301/CO_PDO.c ****     uint16_t eventTime = 0;
 3392              	 .loc 3 1245 0
 3393 01e2 0023     	 movs r3,#0
 3394 01e4 3B82     	 strh r3,[r7,#16]
1246:../CANopen/stack/301/CO_PDO.c ****     odRet = OD_get_u16(OD_18xx_TPDOCommPar, 3, &inhibitTime, true);
 3395              	 .loc 3 1246 0
 3396 01e6 07F11203 	 add r3,r7,#18
 3397 01ea F86B     	 ldr r0,[r7,#60]
 3398 01ec 0321     	 movs r1,#3
 3399 01ee 1A46     	 mov r2,r3
 3400 01f0 0123     	 movs r3,#1
 3401 01f2 FFF7FEFF 	 bl OD_get_u16
 3402 01f6 0346     	 mov r3,r0
 3403 01f8 87F82230 	 strb r3,[r7,#34]
1247:../CANopen/stack/301/CO_PDO.c ****     odRet = OD_get_u16(OD_18xx_TPDOCommPar, 5, &eventTime, true);
 3404              	 .loc 3 1247 0
 3405 01fc 07F11003 	 add r3,r7,#16
 3406 0200 F86B     	 ldr r0,[r7,#60]
 3407 0202 0521     	 movs r1,#5
 3408 0204 1A46     	 mov r2,r3
 3409 0206 0123     	 movs r3,#1
 3410 0208 FFF7FEFF 	 bl OD_get_u16
 3411 020c 0346     	 mov r3,r0
 3412 020e 87F82230 	 strb r3,[r7,#34]
1248:../CANopen/stack/301/CO_PDO.c ****     TPDO->inhibitTime_us = inhibitTime * 100;
 3413              	 .loc 3 1248 0
 3414 0212 7B8A     	 ldrh r3,[r7,#18]
 3415 0214 1A46     	 mov r2,r3
 3416 0216 6423     	 movs r3,#100
 3417 0218 03FB02F3 	 mul r3,r3,r2
 3418 021c 1A46     	 mov r2,r3
 3419 021e FB68     	 ldr r3,[r7,#12]
 3420 0220 C3F85C21 	 str r2,[r3,#348]
1249:../CANopen/stack/301/CO_PDO.c ****     TPDO->eventTime_us = eventTime * 1000;
 3421              	 .loc 3 1249 0
 3422 0224 3B8A     	 ldrh r3,[r7,#16]
 3423 0226 1A46     	 mov r2,r3
 3424 0228 4FF47A73 	 mov r3,#1000
 3425 022c 03FB02F3 	 mul r3,r3,r2
 3426 0230 1A46     	 mov r2,r3
 3427 0232 FB68     	 ldr r3,[r7,#12]
 3428 0234 C3F86021 	 str r2,[r3,#352]
1250:../CANopen/stack/301/CO_PDO.c **** #endif
1251:../CANopen/stack/301/CO_PDO.c **** 
1252:../CANopen/stack/301/CO_PDO.c **** 
1253:../CANopen/stack/301/CO_PDO.c ****     /* Configure communication parameter - SYNC start value (optional) */
1254:../CANopen/stack/301/CO_PDO.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_PDO_SYNC_ENABLE
1255:../CANopen/stack/301/CO_PDO.c ****     TPDO->syncStartValue = 0;
 3429              	 .loc 3 1255 0
 3430 0238 FB68     	 ldr r3,[r7,#12]
 3431 023a 0022     	 movs r2,#0
 3432 023c 83F85821 	 strb r2,[r3,#344]
1256:../CANopen/stack/301/CO_PDO.c ****     odRet = OD_get_u8(OD_18xx_TPDOCommPar, 6, &TPDO->syncStartValue, true);
 3433              	 .loc 3 1256 0
 3434 0240 FB68     	 ldr r3,[r7,#12]
 3435 0242 03F5AC73 	 add r3,r3,#344
 3436 0246 F86B     	 ldr r0,[r7,#60]
 3437 0248 0621     	 movs r1,#6
 3438 024a 1A46     	 mov r2,r3
 3439 024c 0123     	 movs r3,#1
 3440 024e FFF7FEFF 	 bl OD_get_u8
 3441 0252 0346     	 mov r3,r0
 3442 0254 87F82230 	 strb r3,[r7,#34]
1257:../CANopen/stack/301/CO_PDO.c ****     TPDO->SYNC = SYNC;
 3443              	 .loc 3 1257 0
 3444 0258 FB68     	 ldr r3,[r7,#12]
 3445 025a 3A68     	 ldr r2,[r7]
 3446 025c C3F85421 	 str r2,[r3,#340]
1258:../CANopen/stack/301/CO_PDO.c ****     TPDO->syncCounter = 255;
 3447              	 .loc 3 1258 0
 3448 0260 FB68     	 ldr r3,[r7,#12]
 3449 0262 FF22     	 movs r2,#255
 3450 0264 83F85921 	 strb r2,[r3,#345]
1259:../CANopen/stack/301/CO_PDO.c **** #endif
1260:../CANopen/stack/301/CO_PDO.c **** 
1261:../CANopen/stack/301/CO_PDO.c **** 
1262:../CANopen/stack/301/CO_PDO.c ****     /* Configure OD extensions */
1263:../CANopen/stack/301/CO_PDO.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_FLAG_OD_DYNAMIC
1264:../CANopen/stack/301/CO_PDO.c ****     PDO->isRPDO = false;
 3451              	 .loc 3 1264 0
 3452 0268 7B6A     	 ldr r3,[r7,#36]
 3453 026a 0022     	 movs r2,#0
 3454 026c C3F81821 	 str r2,[r3,#280]
1265:../CANopen/stack/301/CO_PDO.c ****     PDO->OD = OD;
 3455              	 .loc 3 1265 0
 3456 0270 7B6A     	 ldr r3,[r7,#36]
 3457 0272 BA68     	 ldr r2,[r7,#8]
 3458 0274 C3F81C21 	 str r2,[r3,#284]
1266:../CANopen/stack/301/CO_PDO.c ****     PDO->CANdevIdx = CANdevTxIdx;
 3459              	 .loc 3 1266 0
 3460 0278 7B6A     	 ldr r3,[r7,#36]
 3461 027a B7F84820 	 ldrh r2,[r7,#72]
 3462 027e A3F82021 	 strh r2,[r3,#288]
1267:../CANopen/stack/301/CO_PDO.c ****     PDO->preDefinedCanId = preDefinedCanId;
 3463              	 .loc 3 1267 0
 3464 0282 7B6A     	 ldr r3,[r7,#36]
 3465 0284 3A8F     	 ldrh r2,[r7,#56]
 3466 0286 A3F82221 	 strh r2,[r3,#290]
1268:../CANopen/stack/301/CO_PDO.c ****     PDO->configuredCanId = CAN_ID;
 3467              	 .loc 3 1268 0
 3468 028a 7B6A     	 ldr r3,[r7,#36]
 3469 028c 7A8D     	 ldrh r2,[r7,#42]
 3470 028e A3F82421 	 strh r2,[r3,#292]
1269:../CANopen/stack/301/CO_PDO.c ****     PDO->OD_communicationParam_ext.object = TPDO;
 3471              	 .loc 3 1269 0
 3472 0292 7B6A     	 ldr r3,[r7,#36]
 3473 0294 FA68     	 ldr r2,[r7,#12]
 3474 0296 C3F82821 	 str r2,[r3,#296]
1270:../CANopen/stack/301/CO_PDO.c ****     PDO->OD_communicationParam_ext.read = OD_read_PDO_commParam;
 3475              	 .loc 3 1270 0
 3476 029a 7B6A     	 ldr r3,[r7,#36]
 3477 029c 134A     	 ldr r2,.L201
 3478 029e C3F82C21 	 str r2,[r3,#300]
1271:../CANopen/stack/301/CO_PDO.c ****     PDO->OD_communicationParam_ext.write = OD_write_18xx;
 3479              	 .loc 3 1271 0
 3480 02a2 7B6A     	 ldr r3,[r7,#36]
 3481 02a4 124A     	 ldr r2,.L201+4
 3482 02a6 C3F83021 	 str r2,[r3,#304]
1272:../CANopen/stack/301/CO_PDO.c ****     PDO->OD_mappingParam_extension.object = TPDO;
 3483              	 .loc 3 1272 0
 3484 02aa 7B6A     	 ldr r3,[r7,#36]
 3485 02ac FA68     	 ldr r2,[r7,#12]
 3486 02ae C3F83821 	 str r2,[r3,#312]
1273:../CANopen/stack/301/CO_PDO.c ****     PDO->OD_mappingParam_extension.read = OD_readOriginal;
 3487              	 .loc 3 1273 0
 3488 02b2 7B6A     	 ldr r3,[r7,#36]
 3489 02b4 0F4A     	 ldr r2,.L201+8
 3490 02b6 C3F83C21 	 str r2,[r3,#316]
1274:../CANopen/stack/301/CO_PDO.c ****     PDO->OD_mappingParam_extension.write = OD_write_PDO_mapping;
 3491              	 .loc 3 1274 0
 3492 02ba 7B6A     	 ldr r3,[r7,#36]
 3493 02bc 0E4A     	 ldr r2,.L201+12
 3494 02be C3F84021 	 str r2,[r3,#320]
1275:../CANopen/stack/301/CO_PDO.c ****     OD_extension_init(OD_18xx_TPDOCommPar, &PDO->OD_communicationParam_ext);
 3495              	 .loc 3 1275 0
 3496 02c2 7B6A     	 ldr r3,[r7,#36]
 3497 02c4 03F59473 	 add r3,r3,#296
 3498 02c8 F86B     	 ldr r0,[r7,#60]
 3499 02ca 1946     	 mov r1,r3
 3500 02cc FFF7FEFF 	 bl OD_extension_init
1276:../CANopen/stack/301/CO_PDO.c ****     OD_extension_init(OD_1Axx_TPDOMapPar, &PDO->OD_mappingParam_extension);
 3501              	 .loc 3 1276 0
 3502 02d0 7B6A     	 ldr r3,[r7,#36]
 3503 02d2 03F59C73 	 add r3,r3,#312
 3504 02d6 386C     	 ldr r0,[r7,#64]
 3505 02d8 1946     	 mov r1,r3
 3506 02da FFF7FEFF 	 bl OD_extension_init
1277:../CANopen/stack/301/CO_PDO.c **** #endif
1278:../CANopen/stack/301/CO_PDO.c **** 
1279:../CANopen/stack/301/CO_PDO.c ****     return CO_ERROR_NO;
 3507              	 .loc 3 1279 0
 3508 02de 0023     	 movs r3,#0
 3509              	.L200:
 3510 02e0 5BB2     	 sxtb r3,r3
1280:../CANopen/stack/301/CO_PDO.c **** }
 3511              	 .loc 3 1280 0 discriminator 1
 3512 02e2 1846     	 mov r0,r3
 3513 02e4 3037     	 adds r7,r7,#48
 3514              	.LCFI107:
 3515              	 .cfi_def_cfa_offset 8
 3516 02e6 BD46     	 mov sp,r7
 3517              	.LCFI108:
 3518              	 .cfi_def_cfa_register 13
 3519              	 
 3520 02e8 80BD     	 pop {r7,pc}
 3521              	.L202:
 3522 02ea 00BF     	 .align 2
 3523              	.L201:
 3524 02ec 00000000 	 .word OD_read_PDO_commParam
 3525 02f0 00000000 	 .word OD_write_18xx
 3526 02f4 00000000 	 .word OD_readOriginal
 3527 02f8 00000000 	 .word OD_write_PDO_mapping
 3528              	 .cfi_endproc
 3529              	.LFE48:
 3531              	 .section .text.CO_TPDOsend,"ax",%progbits
 3532              	 .align 2
 3533              	 .thumb
 3534              	 .thumb_func
 3536              	CO_TPDOsend:
 3537              	.LFB49:
1281:../CANopen/stack/301/CO_PDO.c **** 
1282:../CANopen/stack/301/CO_PDO.c **** 
1283:../CANopen/stack/301/CO_PDO.c **** /*
1284:../CANopen/stack/301/CO_PDO.c ****  * Send TPDO message.
1285:../CANopen/stack/301/CO_PDO.c ****  *
1286:../CANopen/stack/301/CO_PDO.c ****  * Function prepares TPDO data from Object Dictionary variables. It is called
1287:../CANopen/stack/301/CO_PDO.c ****  * from CO_TPDO_process() according to TPDO communication parameters.
1288:../CANopen/stack/301/CO_PDO.c ****  *
1289:../CANopen/stack/301/CO_PDO.c ****  * @param TPDO TPDO object.
1290:../CANopen/stack/301/CO_PDO.c ****  *
1291:../CANopen/stack/301/CO_PDO.c ****  * @return Same as CO_CANsend().
1292:../CANopen/stack/301/CO_PDO.c ****  */
1293:../CANopen/stack/301/CO_PDO.c **** static CO_ReturnError_t CO_TPDOsend(CO_TPDO_t *TPDO) {
 3538              	 .loc 3 1293 0
 3539              	 .cfi_startproc
 3540              	 
 3541              	 
 3542 0000 90B5     	 push {r4,r7,lr}
 3543              	.LCFI109:
 3544              	 .cfi_def_cfa_offset 12
 3545              	 .cfi_offset 4,-12
 3546              	 .cfi_offset 7,-8
 3547              	 .cfi_offset 14,-4
 3548 0002 91B0     	 sub sp,sp,#68
 3549              	.LCFI110:
 3550              	 .cfi_def_cfa_offset 80
 3551 0004 00AF     	 add r7,sp,#0
 3552              	.LCFI111:
 3553              	 .cfi_def_cfa_register 7
 3554 0006 7860     	 str r0,[r7,#4]
1294:../CANopen/stack/301/CO_PDO.c ****     CO_PDO_common_t *PDO = &TPDO->PDO_common;
 3555              	 .loc 3 1294 0
 3556 0008 7B68     	 ldr r3,[r7,#4]
 3557 000a FB62     	 str r3,[r7,#44]
1295:../CANopen/stack/301/CO_PDO.c ****     uint8_t *dataTPDO = &TPDO->CANtxBuff->data[0];
 3558              	 .loc 3 1295 0
 3559 000c 7B68     	 ldr r3,[r7,#4]
 3560 000e D3F84831 	 ldr r3,[r3,#328]
 3561 0012 0533     	 adds r3,r3,#5
 3562 0014 FB63     	 str r3,[r7,#60]
1296:../CANopen/stack/301/CO_PDO.c **** #if OD_FLAGS_PDO_SIZE > 0
1297:../CANopen/stack/301/CO_PDO.c ****     bool_t eventDriven =
1298:../CANopen/stack/301/CO_PDO.c ****             (TPDO->transmissionType == CO_PDO_TRANSM_TYPE_SYNC_ACYCLIC
 3563              	 .loc 3 1298 0
 3564 0016 7B68     	 ldr r3,[r7,#4]
 3565 0018 93F84C31 	 ldrb r3,[r3,#332]
1299:../CANopen/stack/301/CO_PDO.c ****             || TPDO->transmissionType >= CO_PDO_TRANSM_TYPE_SYNC_EVENT_LO);
 3566              	 .loc 3 1299 0
 3567 001c 002B     	 cmp r3,#0
 3568 001e 04D0     	 beq .L204
 3569              	 .loc 3 1299 0 is_stmt 0 discriminator 2
 3570 0020 7B68     	 ldr r3,[r7,#4]
 3571 0022 93F84C31 	 ldrb r3,[r3,#332]
 3572 0026 FD2B     	 cmp r3,#253
 3573 0028 01D9     	 bls .L205
 3574              	.L204:
 3575              	 .loc 3 1299 0 discriminator 3
 3576 002a 0123     	 movs r3,#1
 3577 002c 00E0     	 b .L206
 3578              	.L205:
 3579              	 .loc 3 1299 0 discriminator 4
 3580 002e 0023     	 movs r3,#0
 3581              	.L206:
1297:../CANopen/stack/301/CO_PDO.c ****             (TPDO->transmissionType == CO_PDO_TRANSM_TYPE_SYNC_ACYCLIC
 3582              	 .loc 3 1297 0 is_stmt 1
 3583 0030 BB62     	 str r3,[r7,#40]
 3584              	.LBB26:
1300:../CANopen/stack/301/CO_PDO.c **** #endif
1301:../CANopen/stack/301/CO_PDO.c **** 
1302:../CANopen/stack/301/CO_PDO.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_PDO_OD_IO_ACCESS
1303:../CANopen/stack/301/CO_PDO.c ****     for (uint8_t i = 0; i < PDO->mappedObjectsCount; i++) {
 3585              	 .loc 3 1303 0
 3586 0032 0023     	 movs r3,#0
 3587 0034 87F83B30 	 strb r3,[r7,#59]
 3588 0038 63E0     	 b .L207
 3589              	.L213:
 3590              	.LBB27:
1304:../CANopen/stack/301/CO_PDO.c ****         OD_IO_t *OD_IO = &PDO->OD_IO[i];
 3591              	 .loc 3 1304 0
 3592 003a 97F83B20 	 ldrb r2,[r7,#59]
 3593 003e 1346     	 mov r3,r2
 3594 0040 DB00     	 lsls r3,r3,#3
 3595 0042 9B1A     	 subs r3,r3,r2
 3596 0044 9B00     	 lsls r3,r3,#2
 3597 0046 1033     	 adds r3,r3,#16
 3598 0048 FA6A     	 ldr r2,[r7,#44]
 3599 004a 1344     	 add r3,r3,r2
 3600 004c 7B62     	 str r3,[r7,#36]
1305:../CANopen/stack/301/CO_PDO.c ****         OD_stream_t *stream = &OD_IO->stream;
 3601              	 .loc 3 1305 0
 3602 004e 7B6A     	 ldr r3,[r7,#36]
 3603 0050 3B62     	 str r3,[r7,#32]
1306:../CANopen/stack/301/CO_PDO.c **** 
1307:../CANopen/stack/301/CO_PDO.c ****         /* get mappedLength from temporary storage */
1308:../CANopen/stack/301/CO_PDO.c ****         uint8_t mappedLength = (uint8_t) stream->dataOffset;
 3604              	 .loc 3 1308 0
 3605 0052 3B6A     	 ldr r3,[r7,#32]
 3606 0054 DB68     	 ldr r3,[r3,#12]
 3607 0056 FB77     	 strb r3,[r7,#31]
1309:../CANopen/stack/301/CO_PDO.c **** 
1310:../CANopen/stack/301/CO_PDO.c ****         /* length of OD variable may be larger than mappedLength */
1311:../CANopen/stack/301/CO_PDO.c ****         OD_size_t ODdataLength = stream->dataLength;
 3608              	 .loc 3 1311 0
 3609 0058 3B6A     	 ldr r3,[r7,#32]
 3610 005a 9B68     	 ldr r3,[r3,#8]
 3611 005c 7B63     	 str r3,[r7,#52]
1312:../CANopen/stack/301/CO_PDO.c ****         if (ODdataLength > CO_PDO_MAX_SIZE)
 3612              	 .loc 3 1312 0
 3613 005e 7B6B     	 ldr r3,[r7,#52]
 3614 0060 082B     	 cmp r3,#8
 3615 0062 01D9     	 bls .L208
1313:../CANopen/stack/301/CO_PDO.c ****             ODdataLength = CO_PDO_MAX_SIZE;
 3616              	 .loc 3 1313 0
 3617 0064 0823     	 movs r3,#8
 3618 0066 7B63     	 str r3,[r7,#52]
 3619              	.L208:
1314:../CANopen/stack/301/CO_PDO.c **** 
1315:../CANopen/stack/301/CO_PDO.c ****         /* If mappedLength is smaller than ODdataLength, use auxiliary buffer */
1316:../CANopen/stack/301/CO_PDO.c ****         uint8_t buf[CO_PDO_MAX_SIZE];
1317:../CANopen/stack/301/CO_PDO.c ****         uint8_t *dataTPDOCopy;
1318:../CANopen/stack/301/CO_PDO.c ****         if (ODdataLength > mappedLength) {
 3620              	 .loc 3 1318 0
 3621 0068 FA7F     	 ldrb r2,[r7,#31]
 3622 006a 7B6B     	 ldr r3,[r7,#52]
 3623 006c 9A42     	 cmp r2,r3
 3624 006e 0AD2     	 bcs .L209
1319:../CANopen/stack/301/CO_PDO.c ****             memset(buf, 0, sizeof(buf));
 3625              	 .loc 3 1319 0
 3626 0070 07F11003 	 add r3,r7,#16
 3627 0074 1846     	 mov r0,r3
 3628 0076 0021     	 movs r1,#0
 3629 0078 0822     	 movs r2,#8
 3630 007a FFF7FEFF 	 bl memset
1320:../CANopen/stack/301/CO_PDO.c ****             dataTPDOCopy = buf;
 3631              	 .loc 3 1320 0
 3632 007e 07F11003 	 add r3,r7,#16
 3633 0082 3B63     	 str r3,[r7,#48]
 3634 0084 01E0     	 b .L210
 3635              	.L209:
1321:../CANopen/stack/301/CO_PDO.c ****         }
1322:../CANopen/stack/301/CO_PDO.c ****         else {
1323:../CANopen/stack/301/CO_PDO.c ****             dataTPDOCopy = dataTPDO;
 3636              	 .loc 3 1323 0
 3637 0086 FB6B     	 ldr r3,[r7,#60]
 3638 0088 3B63     	 str r3,[r7,#48]
 3639              	.L210:
1324:../CANopen/stack/301/CO_PDO.c ****         }
1325:../CANopen/stack/301/CO_PDO.c **** 
1326:../CANopen/stack/301/CO_PDO.c ****         /* Set stream.dataOffset to zero, perform OD_IO.read()
1327:../CANopen/stack/301/CO_PDO.c ****          * and store mappedLength back to stream.dataOffset */
1328:../CANopen/stack/301/CO_PDO.c ****         stream->dataOffset= 0;
 3640              	 .loc 3 1328 0
 3641 008a 3B6A     	 ldr r3,[r7,#32]
 3642 008c 0022     	 movs r2,#0
 3643 008e DA60     	 str r2,[r3,#12]
1329:../CANopen/stack/301/CO_PDO.c ****         OD_size_t countRd;
1330:../CANopen/stack/301/CO_PDO.c ****         OD_IO->read(stream, dataTPDOCopy, ODdataLength, &countRd);
 3644              	 .loc 3 1330 0
 3645 0090 7B6A     	 ldr r3,[r7,#36]
 3646 0092 5C69     	 ldr r4,[r3,#20]
 3647 0094 07F10C03 	 add r3,r7,#12
 3648 0098 386A     	 ldr r0,[r7,#32]
 3649 009a 396B     	 ldr r1,[r7,#48]
 3650 009c 7A6B     	 ldr r2,[r7,#52]
 3651 009e A047     	 blx r4
1331:../CANopen/stack/301/CO_PDO.c **** #if (C2000_PORT != 0)
1332:../CANopen/stack/301/CO_PDO.c ****         if((stream->attribute & ODA_STR) == 0) {
1333:../CANopen/stack/301/CO_PDO.c ****             uint8_t tempBuff[8] = {0};
1334:../CANopen/stack/301/CO_PDO.c ****             for (int i = 0; i < countRd; i++) {
1335:../CANopen/stack/301/CO_PDO.c ****                 if((i % 2) == 0) {
1336:../CANopen/stack/301/CO_PDO.c ****                     tempBuff[i] = (((uint16_t *)dataTPDOCopy)[i/2]) & 0x00FF;
1337:../CANopen/stack/301/CO_PDO.c ****                 } else {
1338:../CANopen/stack/301/CO_PDO.c ****                     tempBuff[i] = ((((uint16_t *)dataTPDOCopy)[i/2]) >> 8) & 0x00FF;
1339:../CANopen/stack/301/CO_PDO.c ****                 }
1340:../CANopen/stack/301/CO_PDO.c ****             }
1341:../CANopen/stack/301/CO_PDO.c **** 
1342:../CANopen/stack/301/CO_PDO.c ****             for (int i = 0; i < countRd; i++) {
1343:../CANopen/stack/301/CO_PDO.c ****                 dataTPDOCopy[i] = tempBuff[i];
1344:../CANopen/stack/301/CO_PDO.c ****             }
1345:../CANopen/stack/301/CO_PDO.c ****         }
1346:../CANopen/stack/301/CO_PDO.c **** #endif
1347:../CANopen/stack/301/CO_PDO.c ****         stream->dataOffset = mappedLength;
 3652              	 .loc 3 1347 0
 3653 00a0 FA7F     	 ldrb r2,[r7,#31]
 3654 00a2 3B6A     	 ldr r3,[r7,#32]
 3655 00a4 DA60     	 str r2,[r3,#12]
1348:../CANopen/stack/301/CO_PDO.c **** 
1349:../CANopen/stack/301/CO_PDO.c ****         /* swap multibyte data if big-endian */
1350:../CANopen/stack/301/CO_PDO.c ****  #ifdef CO_BIG_ENDIAN
1351:../CANopen/stack/301/CO_PDO.c ****         if ((stream->attribute & ODA_MB) != 0) {
1352:../CANopen/stack/301/CO_PDO.c ****             uint8_t *lo = dataOD;
1353:../CANopen/stack/301/CO_PDO.c ****             uint8_t *hi = dataOD + ODdataLength - 1;
1354:../CANopen/stack/301/CO_PDO.c ****             while (lo < hi) {
1355:../CANopen/stack/301/CO_PDO.c ****                 uint8_t swap = *lo;
1356:../CANopen/stack/301/CO_PDO.c ****                 *lo++ = *hi;
1357:../CANopen/stack/301/CO_PDO.c ****                 *hi-- = swap;
1358:../CANopen/stack/301/CO_PDO.c ****             }
1359:../CANopen/stack/301/CO_PDO.c ****         }
1360:../CANopen/stack/301/CO_PDO.c ****  #endif
1361:../CANopen/stack/301/CO_PDO.c **** 
1362:../CANopen/stack/301/CO_PDO.c ****         /* If auxiliary buffer, copy it to the TPDO */
1363:../CANopen/stack/301/CO_PDO.c ****         if (ODdataLength > mappedLength) {
 3656              	 .loc 3 1363 0
 3657 00a6 FA7F     	 ldrb r2,[r7,#31]
 3658 00a8 7B6B     	 ldr r3,[r7,#52]
 3659 00aa 9A42     	 cmp r2,r3
 3660 00ac 07D2     	 bcs .L211
1364:../CANopen/stack/301/CO_PDO.c ****             memcpy(dataTPDO, buf, mappedLength);
 3661              	 .loc 3 1364 0
 3662 00ae FB7F     	 ldrb r3,[r7,#31]
 3663 00b0 07F11002 	 add r2,r7,#16
 3664 00b4 F86B     	 ldr r0,[r7,#60]
 3665 00b6 1146     	 mov r1,r2
 3666 00b8 1A46     	 mov r2,r3
 3667 00ba FFF7FEFF 	 bl memcpy
 3668              	.L211:
1365:../CANopen/stack/301/CO_PDO.c ****         }
1366:../CANopen/stack/301/CO_PDO.c **** 
1367:../CANopen/stack/301/CO_PDO.c ****         /* In event driven TPDO indicate transmission of OD variable */
1368:../CANopen/stack/301/CO_PDO.c ****  #if OD_FLAGS_PDO_SIZE > 0
1369:../CANopen/stack/301/CO_PDO.c ****         uint8_t *flagPDObyte = PDO->flagPDObyte[i];
 3669              	 .loc 3 1369 0
 3670 00be 97F83B20 	 ldrb r2,[r7,#59]
 3671 00c2 FB6A     	 ldr r3,[r7,#44]
 3672 00c4 3C32     	 adds r2,r2,#60
 3673 00c6 53F82230 	 ldr r3,[r3,r2,lsl#2]
 3674 00ca BB61     	 str r3,[r7,#24]
1370:../CANopen/stack/301/CO_PDO.c ****         if (flagPDObyte != NULL && eventDriven) {
 3675              	 .loc 3 1370 0
 3676 00cc BB69     	 ldr r3,[r7,#24]
 3677 00ce 002B     	 cmp r3,#0
 3678 00d0 0ED0     	 beq .L212
 3679              	 .loc 3 1370 0 is_stmt 0 discriminator 1
 3680 00d2 BB6A     	 ldr r3,[r7,#40]
 3681 00d4 002B     	 cmp r3,#0
 3682 00d6 0BD0     	 beq .L212
1371:../CANopen/stack/301/CO_PDO.c ****            *flagPDObyte |= PDO->flagPDObitmask[i];
 3683              	 .loc 3 1371 0 is_stmt 1
 3684 00d8 BB69     	 ldr r3,[r7,#24]
 3685 00da 1A78     	 ldrb r2,[r3]
 3686 00dc 97F83B30 	 ldrb r3,[r7,#59]
 3687 00e0 F96A     	 ldr r1,[r7,#44]
 3688 00e2 0B44     	 add r3,r3,r1
 3689 00e4 93F81031 	 ldrb r3,[r3,#272]
 3690 00e8 1343     	 orrs r3,r3,r2
 3691 00ea DAB2     	 uxtb r2,r3
 3692 00ec BB69     	 ldr r3,[r7,#24]
 3693 00ee 1A70     	 strb r2,[r3]
 3694              	.L212:
1372:../CANopen/stack/301/CO_PDO.c ****         }
1373:../CANopen/stack/301/CO_PDO.c ****  #endif
1374:../CANopen/stack/301/CO_PDO.c **** 
1375:../CANopen/stack/301/CO_PDO.c ****         dataTPDO += mappedLength;
 3695              	 .loc 3 1375 0 discriminator 2
 3696 00f0 FB7F     	 ldrb r3,[r7,#31]
 3697 00f2 FA6B     	 ldr r2,[r7,#60]
 3698 00f4 1344     	 add r3,r3,r2
 3699 00f6 FB63     	 str r3,[r7,#60]
 3700              	.LBE27:
1303:../CANopen/stack/301/CO_PDO.c ****         OD_IO_t *OD_IO = &PDO->OD_IO[i];
 3701              	 .loc 3 1303 0 discriminator 2
 3702 00f8 97F83B30 	 ldrb r3,[r7,#59]
 3703 00fc 0133     	 adds r3,r3,#1
 3704 00fe 87F83B30 	 strb r3,[r7,#59]
 3705              	.L207:
1303:../CANopen/stack/301/CO_PDO.c ****         OD_IO_t *OD_IO = &PDO->OD_IO[i];
 3706              	 .loc 3 1303 0 is_stmt 0 discriminator 1
 3707 0102 FB6A     	 ldr r3,[r7,#44]
 3708 0104 5B7B     	 ldrb r3,[r3,#13]
 3709 0106 97F83B20 	 ldrb r2,[r7,#59]
 3710 010a 9A42     	 cmp r2,r3
 3711 010c 95D3     	 bcc .L213
 3712              	.LBE26:
1376:../CANopen/stack/301/CO_PDO.c ****     }
1377:../CANopen/stack/301/CO_PDO.c **** #else
1378:../CANopen/stack/301/CO_PDO.c ****     for (uint8_t i = 0; i < PDO->dataLength; i++) {
1379:../CANopen/stack/301/CO_PDO.c ****         dataTPDO[i] = *PDO->mapPointer[i];
1380:../CANopen/stack/301/CO_PDO.c **** 
1381:../CANopen/stack/301/CO_PDO.c ****         /* In event driven TPDO indicate transmission of OD variable */
1382:../CANopen/stack/301/CO_PDO.c ****  #if OD_FLAGS_PDO_SIZE > 0
1383:../CANopen/stack/301/CO_PDO.c ****         uint8_t *flagPDObyte = PDO->flagPDObyte[i];
1384:../CANopen/stack/301/CO_PDO.c ****         if (flagPDObyte != NULL && eventDriven) {
1385:../CANopen/stack/301/CO_PDO.c ****            *flagPDObyte |= PDO->flagPDObitmask[i];
1386:../CANopen/stack/301/CO_PDO.c ****         }
1387:../CANopen/stack/301/CO_PDO.c ****  #endif
1388:../CANopen/stack/301/CO_PDO.c ****     }
1389:../CANopen/stack/301/CO_PDO.c **** #endif /* (CO_CONFIG_PDO) & CO_CONFIG_PDO_OD_IO_ACCESS */
1390:../CANopen/stack/301/CO_PDO.c **** 
1391:../CANopen/stack/301/CO_PDO.c ****     TPDO->sendRequest = false;
 3713              	 .loc 3 1391 0 is_stmt 1
 3714 010e 7B68     	 ldr r3,[r7,#4]
 3715 0110 0022     	 movs r2,#0
 3716 0112 C3F85021 	 str r2,[r3,#336]
1392:../CANopen/stack/301/CO_PDO.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_TPDO_TIMERS_ENABLE
1393:../CANopen/stack/301/CO_PDO.c ****     TPDO->eventTimer = TPDO->eventTime_us;
 3717              	 .loc 3 1393 0
 3718 0116 7B68     	 ldr r3,[r7,#4]
 3719 0118 D3F86021 	 ldr r2,[r3,#352]
 3720 011c 7B68     	 ldr r3,[r7,#4]
 3721 011e C3F86821 	 str r2,[r3,#360]
1394:../CANopen/stack/301/CO_PDO.c ****     TPDO->inhibitTimer = TPDO->inhibitTime_us;
 3722              	 .loc 3 1394 0
 3723 0122 7B68     	 ldr r3,[r7,#4]
 3724 0124 D3F85C21 	 ldr r2,[r3,#348]
 3725 0128 7B68     	 ldr r3,[r7,#4]
 3726 012a C3F86421 	 str r2,[r3,#356]
1395:../CANopen/stack/301/CO_PDO.c **** #endif
1396:../CANopen/stack/301/CO_PDO.c ****     return CO_CANsend(PDO->CANdev, TPDO->CANtxBuff);
 3727              	 .loc 3 1396 0
 3728 012e FB6A     	 ldr r3,[r7,#44]
 3729 0130 5A68     	 ldr r2,[r3,#4]
 3730 0132 7B68     	 ldr r3,[r7,#4]
 3731 0134 D3F84831 	 ldr r3,[r3,#328]
 3732 0138 1046     	 mov r0,r2
 3733 013a 1946     	 mov r1,r3
 3734 013c FFF7FEFF 	 bl CO_CANsend
 3735 0140 0346     	 mov r3,r0
1397:../CANopen/stack/301/CO_PDO.c **** }
 3736              	 .loc 3 1397 0
 3737 0142 1846     	 mov r0,r3
 3738 0144 4437     	 adds r7,r7,#68
 3739              	.LCFI112:
 3740              	 .cfi_def_cfa_offset 12
 3741 0146 BD46     	 mov sp,r7
 3742              	.LCFI113:
 3743              	 .cfi_def_cfa_register 13
 3744              	 
 3745 0148 90BD     	 pop {r4,r7,pc}
 3746              	 .cfi_endproc
 3747              	.LFE49:
 3749 014a 00BF     	 .section .text.CO_TPDO_process,"ax",%progbits
 3750              	 .align 2
 3751              	 .global CO_TPDO_process
 3752              	 .thumb
 3753              	 .thumb_func
 3755              	CO_TPDO_process:
 3756              	.LFB50:
1398:../CANopen/stack/301/CO_PDO.c **** 
1399:../CANopen/stack/301/CO_PDO.c **** 
1400:../CANopen/stack/301/CO_PDO.c **** /******************************************************************************/
1401:../CANopen/stack/301/CO_PDO.c **** void CO_TPDO_process(CO_TPDO_t *TPDO,
1402:../CANopen/stack/301/CO_PDO.c **** #if ((CO_CONFIG_PDO) & CO_CONFIG_TPDO_TIMERS_ENABLE) || defined CO_DOXYGEN
1403:../CANopen/stack/301/CO_PDO.c ****                      uint32_t timeDifference_us,
1404:../CANopen/stack/301/CO_PDO.c ****                      uint32_t *timerNext_us,
1405:../CANopen/stack/301/CO_PDO.c **** #endif
1406:../CANopen/stack/301/CO_PDO.c ****                      bool_t NMTisOperational,
1407:../CANopen/stack/301/CO_PDO.c ****                      bool_t syncWas)
1408:../CANopen/stack/301/CO_PDO.c **** {
 3757              	 .loc 3 1408 0
 3758              	 .cfi_startproc
 3759              	 
 3760              	 
 3761 0000 80B5     	 push {r7,lr}
 3762              	.LCFI114:
 3763              	 .cfi_def_cfa_offset 8
 3764              	 .cfi_offset 7,-8
 3765              	 .cfi_offset 14,-4
 3766 0002 88B0     	 sub sp,sp,#32
 3767              	.LCFI115:
 3768              	 .cfi_def_cfa_offset 40
 3769 0004 00AF     	 add r7,sp,#0
 3770              	.LCFI116:
 3771              	 .cfi_def_cfa_register 7
 3772 0006 F860     	 str r0,[r7,#12]
 3773 0008 B960     	 str r1,[r7,#8]
 3774 000a 7A60     	 str r2,[r7,#4]
 3775 000c 3B60     	 str r3,[r7]
1409:../CANopen/stack/301/CO_PDO.c ****     CO_PDO_common_t *PDO = &TPDO->PDO_common;
 3776              	 .loc 3 1409 0
 3777 000e FB68     	 ldr r3,[r7,#12]
 3778 0010 BB61     	 str r3,[r7,#24]
1410:../CANopen/stack/301/CO_PDO.c **** #if ((CO_CONFIG_PDO) & CO_CONFIG_TPDO_TIMERS_ENABLE)
1411:../CANopen/stack/301/CO_PDO.c ****     (void) timerNext_us;
1412:../CANopen/stack/301/CO_PDO.c **** #endif
1413:../CANopen/stack/301/CO_PDO.c ****     (void) syncWas;
1414:../CANopen/stack/301/CO_PDO.c **** 
1415:../CANopen/stack/301/CO_PDO.c ****     if (PDO->valid && NMTisOperational) {
 3779              	 .loc 3 1415 0
 3780 0012 BB69     	 ldr r3,[r7,#24]
 3781 0014 9B68     	 ldr r3,[r3,#8]
 3782 0016 002B     	 cmp r3,#0
 3783 0018 00F0DD80 	 beq .L216
 3784              	 .loc 3 1415 0 is_stmt 0 discriminator 1
 3785 001c 3B68     	 ldr r3,[r7]
 3786 001e 002B     	 cmp r3,#0
 3787 0020 00F0D980 	 beq .L216
1416:../CANopen/stack/301/CO_PDO.c **** 
1417:../CANopen/stack/301/CO_PDO.c ****         /* check for event timer or application event */
1418:../CANopen/stack/301/CO_PDO.c **** #if ((CO_CONFIG_PDO) & CO_CONFIG_TPDO_TIMERS_ENABLE) || (OD_FLAGS_PDO_SIZE > 0)
1419:../CANopen/stack/301/CO_PDO.c ****         if (TPDO->transmissionType == CO_PDO_TRANSM_TYPE_SYNC_ACYCLIC
 3788              	 .loc 3 1419 0 is_stmt 1
 3789 0024 FB68     	 ldr r3,[r7,#12]
 3790 0026 93F84C31 	 ldrb r3,[r3,#332]
 3791 002a 002B     	 cmp r3,#0
 3792 002c 04D0     	 beq .L217
1420:../CANopen/stack/301/CO_PDO.c ****             || TPDO->transmissionType >= CO_PDO_TRANSM_TYPE_SYNC_EVENT_LO
 3793              	 .loc 3 1420 0
 3794 002e FB68     	 ldr r3,[r7,#12]
 3795 0030 93F84C31 	 ldrb r3,[r3,#332]
 3796 0034 FD2B     	 cmp r3,#253
 3797 0036 46D9     	 bls .L218
 3798              	.L217:
1421:../CANopen/stack/301/CO_PDO.c ****         ) {
1422:../CANopen/stack/301/CO_PDO.c ****             /* event timer */
1423:../CANopen/stack/301/CO_PDO.c ****  #if (CO_CONFIG_PDO) & CO_CONFIG_TPDO_TIMERS_ENABLE
1424:../CANopen/stack/301/CO_PDO.c ****             if (TPDO->eventTime_us != 0) {
 3799              	 .loc 3 1424 0
 3800 0038 FB68     	 ldr r3,[r7,#12]
 3801 003a D3F86031 	 ldr r3,[r3,#352]
 3802 003e 002B     	 cmp r3,#0
 3803 0040 18D0     	 beq .L219
1425:../CANopen/stack/301/CO_PDO.c ****                 TPDO->eventTimer = (TPDO->eventTimer > timeDifference_us)
 3804              	 .loc 3 1425 0
 3805 0042 FB68     	 ldr r3,[r7,#12]
 3806 0044 D3F86821 	 ldr r2,[r3,#360]
1426:../CANopen/stack/301/CO_PDO.c ****                                 ? (TPDO->eventTimer - timeDifference_us) : 0;
 3807              	 .loc 3 1426 0
 3808 0048 BB68     	 ldr r3,[r7,#8]
 3809 004a 9A42     	 cmp r2,r3
 3810 004c 05D9     	 bls .L220
 3811              	 .loc 3 1426 0 is_stmt 0 discriminator 1
 3812 004e FB68     	 ldr r3,[r7,#12]
 3813 0050 D3F86821 	 ldr r2,[r3,#360]
 3814 0054 BB68     	 ldr r3,[r7,#8]
 3815 0056 D31A     	 subs r3,r2,r3
 3816 0058 00E0     	 b .L221
 3817              	.L220:
 3818              	 .loc 3 1426 0 discriminator 2
 3819 005a 0023     	 movs r3,#0
 3820              	.L221:
1425:../CANopen/stack/301/CO_PDO.c ****                 TPDO->eventTimer = (TPDO->eventTimer > timeDifference_us)
 3821              	 .loc 3 1425 0 is_stmt 1
 3822 005c FA68     	 ldr r2,[r7,#12]
 3823 005e C2F86831 	 str r3,[r2,#360]
1427:../CANopen/stack/301/CO_PDO.c ****                 if (TPDO->eventTimer == 0) {
 3824              	 .loc 3 1427 0
 3825 0062 FB68     	 ldr r3,[r7,#12]
 3826 0064 D3F86831 	 ldr r3,[r3,#360]
 3827 0068 002B     	 cmp r3,#0
 3828 006a 03D1     	 bne .L219
1428:../CANopen/stack/301/CO_PDO.c ****                     TPDO->sendRequest = true;
 3829              	 .loc 3 1428 0
 3830 006c FB68     	 ldr r3,[r7,#12]
 3831 006e 0122     	 movs r2,#1
 3832 0070 C3F85021 	 str r2,[r3,#336]
 3833              	.L219:
1429:../CANopen/stack/301/CO_PDO.c ****                 }
1430:../CANopen/stack/301/CO_PDO.c ****    #if (CO_CONFIG_PDO) & CO_CONFIG_FLAG_TIMERNEXT
1431:../CANopen/stack/301/CO_PDO.c ****                 if (timerNext_us != NULL && *timerNext_us > TPDO->eventTimer) {
1432:../CANopen/stack/301/CO_PDO.c ****                     /* Schedule for next event time */
1433:../CANopen/stack/301/CO_PDO.c ****                     *timerNext_us = TPDO->eventTimer;
1434:../CANopen/stack/301/CO_PDO.c ****                 }
1435:../CANopen/stack/301/CO_PDO.c ****    #endif
1436:../CANopen/stack/301/CO_PDO.c ****             }
1437:../CANopen/stack/301/CO_PDO.c ****  #endif
1438:../CANopen/stack/301/CO_PDO.c ****             /* check for any OD_requestTPDO() */
1439:../CANopen/stack/301/CO_PDO.c ****  #if OD_FLAGS_PDO_SIZE > 0
1440:../CANopen/stack/301/CO_PDO.c ****             if (!TPDO->sendRequest) {
 3834              	 .loc 3 1440 0
 3835 0074 FB68     	 ldr r3,[r7,#12]
 3836 0076 D3F85031 	 ldr r3,[r3,#336]
 3837 007a 002B     	 cmp r3,#0
 3838 007c 23D1     	 bne .L218
 3839              	.LBB28:
1441:../CANopen/stack/301/CO_PDO.c ****                 for (uint8_t i = 0; i < PDO->mappedObjectsCount; i++) {
 3840              	 .loc 3 1441 0
 3841 007e 0023     	 movs r3,#0
 3842 0080 FB77     	 strb r3,[r7,#31]
 3843 0082 1BE0     	 b .L222
 3844              	.L224:
 3845              	.LBB29:
1442:../CANopen/stack/301/CO_PDO.c ****                     uint8_t *flagPDObyte = PDO->flagPDObyte[i];
 3846              	 .loc 3 1442 0
 3847 0084 FA7F     	 ldrb r2,[r7,#31]
 3848 0086 BB69     	 ldr r3,[r7,#24]
 3849 0088 3C32     	 adds r2,r2,#60
 3850 008a 53F82230 	 ldr r3,[r3,r2,lsl#2]
 3851 008e 7B61     	 str r3,[r7,#20]
1443:../CANopen/stack/301/CO_PDO.c ****                     if (flagPDObyte != NULL) {
 3852              	 .loc 3 1443 0
 3853 0090 7B69     	 ldr r3,[r7,#20]
 3854 0092 002B     	 cmp r3,#0
 3855 0094 0FD0     	 beq .L223
1444:../CANopen/stack/301/CO_PDO.c ****                         if ((*flagPDObyte & PDO->flagPDObitmask[i]) == 0) {
 3856              	 .loc 3 1444 0
 3857 0096 7B69     	 ldr r3,[r7,#20]
 3858 0098 1A78     	 ldrb r2,[r3]
 3859 009a FB7F     	 ldrb r3,[r7,#31]
 3860 009c B969     	 ldr r1,[r7,#24]
 3861 009e 0B44     	 add r3,r3,r1
 3862 00a0 93F81031 	 ldrb r3,[r3,#272]
 3863 00a4 1340     	 ands r3,r3,r2
 3864 00a6 DBB2     	 uxtb r3,r3
 3865 00a8 002B     	 cmp r3,#0
 3866 00aa 04D1     	 bne .L223
1445:../CANopen/stack/301/CO_PDO.c ****                             TPDO->sendRequest = true;
 3867              	 .loc 3 1445 0
 3868 00ac FB68     	 ldr r3,[r7,#12]
 3869 00ae 0122     	 movs r2,#1
 3870 00b0 C3F85021 	 str r2,[r3,#336]
1446:../CANopen/stack/301/CO_PDO.c ****                             break;
 3871              	 .loc 3 1446 0
 3872 00b4 07E0     	 b .L218
 3873              	.L223:
 3874              	.LBE29:
1441:../CANopen/stack/301/CO_PDO.c ****                     uint8_t *flagPDObyte = PDO->flagPDObyte[i];
 3875              	 .loc 3 1441 0 discriminator 2
 3876 00b6 FB7F     	 ldrb r3,[r7,#31]
 3877 00b8 0133     	 adds r3,r3,#1
 3878 00ba FB77     	 strb r3,[r7,#31]
 3879              	.L222:
1441:../CANopen/stack/301/CO_PDO.c ****                     uint8_t *flagPDObyte = PDO->flagPDObyte[i];
 3880              	 .loc 3 1441 0 is_stmt 0 discriminator 1
 3881 00bc BB69     	 ldr r3,[r7,#24]
 3882 00be 5B7B     	 ldrb r3,[r3,#13]
 3883 00c0 FA7F     	 ldrb r2,[r7,#31]
 3884 00c2 9A42     	 cmp r2,r3
 3885 00c4 DED3     	 bcc .L224
 3886              	.L218:
 3887              	.LBE28:
1447:../CANopen/stack/301/CO_PDO.c ****                         }
1448:../CANopen/stack/301/CO_PDO.c ****                     }
1449:../CANopen/stack/301/CO_PDO.c ****                 }
1450:../CANopen/stack/301/CO_PDO.c ****             }
1451:../CANopen/stack/301/CO_PDO.c ****  #endif
1452:../CANopen/stack/301/CO_PDO.c ****         }
1453:../CANopen/stack/301/CO_PDO.c **** #endif /*((CO_CONFIG_PDO)&CO_CONFIG_TPDO_TIMERS_ENABLE)||(OD_FLAGS_PDO_SIZE>0)*/
1454:../CANopen/stack/301/CO_PDO.c **** 
1455:../CANopen/stack/301/CO_PDO.c **** 
1456:../CANopen/stack/301/CO_PDO.c ****         /* Send PDO by application request or by Event timer */
1457:../CANopen/stack/301/CO_PDO.c ****         if (TPDO->transmissionType >= CO_PDO_TRANSM_TYPE_SYNC_EVENT_LO) {
 3888              	 .loc 3 1457 0 is_stmt 1
 3889 00c6 FB68     	 ldr r3,[r7,#12]
 3890 00c8 93F84C31 	 ldrb r3,[r3,#332]
 3891 00cc FD2B     	 cmp r3,#253
 3892 00ce 1DD9     	 bls .L225
1458:../CANopen/stack/301/CO_PDO.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_TPDO_TIMERS_ENABLE
1459:../CANopen/stack/301/CO_PDO.c ****             TPDO->inhibitTimer = (TPDO->inhibitTimer > timeDifference_us)
 3893              	 .loc 3 1459 0
 3894 00d0 FB68     	 ldr r3,[r7,#12]
 3895 00d2 D3F86421 	 ldr r2,[r3,#356]
1460:../CANopen/stack/301/CO_PDO.c ****                                ? (TPDO->inhibitTimer - timeDifference_us) : 0;
 3896              	 .loc 3 1460 0
 3897 00d6 BB68     	 ldr r3,[r7,#8]
 3898 00d8 9A42     	 cmp r2,r3
 3899 00da 05D9     	 bls .L226
 3900              	 .loc 3 1460 0 is_stmt 0 discriminator 1
 3901 00dc FB68     	 ldr r3,[r7,#12]
 3902 00de D3F86421 	 ldr r2,[r3,#356]
 3903 00e2 BB68     	 ldr r3,[r7,#8]
 3904 00e4 D31A     	 subs r3,r2,r3
 3905 00e6 00E0     	 b .L227
 3906              	.L226:
 3907              	 .loc 3 1460 0 discriminator 2
 3908 00e8 0023     	 movs r3,#0
 3909              	.L227:
1459:../CANopen/stack/301/CO_PDO.c ****                                ? (TPDO->inhibitTimer - timeDifference_us) : 0;
 3910              	 .loc 3 1459 0 is_stmt 1
 3911 00ea FA68     	 ldr r2,[r7,#12]
 3912 00ec C2F86431 	 str r3,[r2,#356]
1461:../CANopen/stack/301/CO_PDO.c **** 
1462:../CANopen/stack/301/CO_PDO.c ****             /* send TPDO */
1463:../CANopen/stack/301/CO_PDO.c ****             if (TPDO->sendRequest && TPDO->inhibitTimer == 0) {
 3913              	 .loc 3 1463 0
 3914 00f0 FB68     	 ldr r3,[r7,#12]
 3915 00f2 D3F85031 	 ldr r3,[r3,#336]
 3916 00f6 002B     	 cmp r3,#0
 3917 00f8 6CD0     	 beq .L229
 3918              	 .loc 3 1463 0 is_stmt 0 discriminator 1
 3919 00fa FB68     	 ldr r3,[r7,#12]
 3920 00fc D3F86431 	 ldr r3,[r3,#356]
 3921 0100 002B     	 cmp r3,#0
 3922 0102 67D1     	 bne .L229
1464:../CANopen/stack/301/CO_PDO.c ****                 CO_TPDOsend(TPDO);
 3923              	 .loc 3 1464 0 is_stmt 1
 3924 0104 F868     	 ldr r0,[r7,#12]
 3925 0106 FFF7FEFF 	 bl CO_TPDOsend
1457:../CANopen/stack/301/CO_PDO.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_TPDO_TIMERS_ENABLE
 3926              	 .loc 3 1457 0
 3927 010a 76E0     	 b .L215
 3928              	.L225:
1465:../CANopen/stack/301/CO_PDO.c ****             }
1466:../CANopen/stack/301/CO_PDO.c **** 
1467:../CANopen/stack/301/CO_PDO.c ****  #if (CO_CONFIG_PDO) & CO_CONFIG_FLAG_TIMERNEXT
1468:../CANopen/stack/301/CO_PDO.c ****             if (TPDO->sendRequest
1469:../CANopen/stack/301/CO_PDO.c ****                 && timerNext_us != NULL && *timerNext_us > TPDO->inhibitTimer
1470:../CANopen/stack/301/CO_PDO.c ****             ) {
1471:../CANopen/stack/301/CO_PDO.c ****                 /* Schedule for just beyond inhibit window */
1472:../CANopen/stack/301/CO_PDO.c ****                 *timerNext_us = TPDO->inhibitTimer;
1473:../CANopen/stack/301/CO_PDO.c ****             }
1474:../CANopen/stack/301/CO_PDO.c ****  #endif
1475:../CANopen/stack/301/CO_PDO.c **** #else
1476:../CANopen/stack/301/CO_PDO.c ****             if (TPDO->sendRequest) {
1477:../CANopen/stack/301/CO_PDO.c ****                 CO_TPDOsend(TPDO);
1478:../CANopen/stack/301/CO_PDO.c ****             }
1479:../CANopen/stack/301/CO_PDO.c **** #endif
1480:../CANopen/stack/301/CO_PDO.c ****         } /* if (TPDO->transmissionType >= CO_PDO_TRANSM_TYPE_SYNC_EVENT_LO) */
1481:../CANopen/stack/301/CO_PDO.c **** 
1482:../CANopen/stack/301/CO_PDO.c ****         /* Synchronous PDOs */
1483:../CANopen/stack/301/CO_PDO.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_PDO_SYNC_ENABLE
1484:../CANopen/stack/301/CO_PDO.c ****         else if (TPDO->SYNC != NULL && syncWas) {
 3929              	 .loc 3 1484 0
 3930 010c FB68     	 ldr r3,[r7,#12]
 3931 010e D3F85431 	 ldr r3,[r3,#340]
 3932 0112 002B     	 cmp r3,#0
 3933 0114 5ED0     	 beq .L229
 3934              	 .loc 3 1484 0 is_stmt 0 discriminator 1
 3935 0116 BB6A     	 ldr r3,[r7,#40]
 3936 0118 002B     	 cmp r3,#0
 3937 011a 5BD0     	 beq .L229
1485:../CANopen/stack/301/CO_PDO.c ****             /* send synchronous acyclic TPDO */
1486:../CANopen/stack/301/CO_PDO.c ****             if (TPDO->transmissionType == CO_PDO_TRANSM_TYPE_SYNC_ACYCLIC) {
 3938              	 .loc 3 1486 0 is_stmt 1
 3939 011c FB68     	 ldr r3,[r7,#12]
 3940 011e 93F84C31 	 ldrb r3,[r3,#332]
 3941 0122 002B     	 cmp r3,#0
 3942 0124 08D1     	 bne .L230
1487:../CANopen/stack/301/CO_PDO.c ****                 if (TPDO->sendRequest) CO_TPDOsend(TPDO);
 3943              	 .loc 3 1487 0
 3944 0126 FB68     	 ldr r3,[r7,#12]
 3945 0128 D3F85031 	 ldr r3,[r3,#336]
 3946 012c 002B     	 cmp r3,#0
 3947 012e 51D0     	 beq .L229
 3948              	 .loc 3 1487 0 is_stmt 0 discriminator 1
 3949 0130 F868     	 ldr r0,[r7,#12]
 3950 0132 FFF7FEFF 	 bl CO_TPDOsend
1457:../CANopen/stack/301/CO_PDO.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_TPDO_TIMERS_ENABLE
 3951              	 .loc 3 1457 0 is_stmt 1 discriminator 1
 3952 0136 60E0     	 b .L215
 3953              	.L230:
1488:../CANopen/stack/301/CO_PDO.c ****             }
1489:../CANopen/stack/301/CO_PDO.c ****             /* send synchronous cyclic TPDO */
1490:../CANopen/stack/301/CO_PDO.c ****             else {
1491:../CANopen/stack/301/CO_PDO.c ****                 /* is the start of synchronous TPDO transmission */
1492:../CANopen/stack/301/CO_PDO.c ****                 if (TPDO->syncCounter == 255) {
 3954              	 .loc 3 1492 0
 3955 0138 FB68     	 ldr r3,[r7,#12]
 3956 013a 93F85931 	 ldrb r3,[r3,#345]
 3957 013e FF2B     	 cmp r3,#255
 3958 0140 19D1     	 bne .L232
1493:../CANopen/stack/301/CO_PDO.c ****                     if (TPDO->SYNC->counterOverflowValue != 0
 3959              	 .loc 3 1493 0
 3960 0142 FB68     	 ldr r3,[r7,#12]
 3961 0144 D3F85431 	 ldr r3,[r3,#340]
 3962 0148 5B7C     	 ldrb r3,[r3,#17]
 3963 014a 002B     	 cmp r3,#0
 3964 014c 09D0     	 beq .L233
1494:../CANopen/stack/301/CO_PDO.c ****                         && TPDO->syncStartValue != 0
 3965              	 .loc 3 1494 0
 3966 014e FB68     	 ldr r3,[r7,#12]
 3967 0150 93F85831 	 ldrb r3,[r3,#344]
 3968 0154 002B     	 cmp r3,#0
 3969 0156 04D0     	 beq .L233
1495:../CANopen/stack/301/CO_PDO.c ****                     ) {
1496:../CANopen/stack/301/CO_PDO.c ****                         /* syncStartValue is in use */
1497:../CANopen/stack/301/CO_PDO.c ****                         TPDO->syncCounter = 254;
 3970              	 .loc 3 1497 0
 3971 0158 FB68     	 ldr r3,[r7,#12]
 3972 015a FE22     	 movs r2,#254
 3973 015c 83F85921 	 strb r2,[r3,#345]
 3974 0160 09E0     	 b .L232
 3975              	.L233:
1498:../CANopen/stack/301/CO_PDO.c ****                     }
1499:../CANopen/stack/301/CO_PDO.c ****                     else {
1500:../CANopen/stack/301/CO_PDO.c ****                         /* Send first TPDO somewhere in the middle */
1501:../CANopen/stack/301/CO_PDO.c ****                         TPDO->syncCounter = TPDO->transmissionType / 2 + 1;
 3976              	 .loc 3 1501 0
 3977 0162 FB68     	 ldr r3,[r7,#12]
 3978 0164 93F84C31 	 ldrb r3,[r3,#332]
 3979 0168 5B08     	 lsrs r3,r3,#1
 3980 016a DBB2     	 uxtb r3,r3
 3981 016c 0133     	 adds r3,r3,#1
 3982 016e DAB2     	 uxtb r2,r3
 3983 0170 FB68     	 ldr r3,[r7,#12]
 3984 0172 83F85921 	 strb r2,[r3,#345]
 3985              	.L232:
1502:../CANopen/stack/301/CO_PDO.c ****                     }
1503:../CANopen/stack/301/CO_PDO.c ****                 }
1504:../CANopen/stack/301/CO_PDO.c ****                 /* If the syncStartValue is in use, start first TPDO after SYNC
1505:../CANopen/stack/301/CO_PDO.c ****                  * with matched syncStartValue. */
1506:../CANopen/stack/301/CO_PDO.c ****                 if (TPDO->syncCounter == 254) {
 3986              	 .loc 3 1506 0
 3987 0176 FB68     	 ldr r3,[r7,#12]
 3988 0178 93F85931 	 ldrb r3,[r3,#345]
 3989 017c FE2B     	 cmp r3,#254
 3990 017e 12D1     	 bne .L234
1507:../CANopen/stack/301/CO_PDO.c ****                     if (TPDO->SYNC->counter == TPDO->syncStartValue) {
 3991              	 .loc 3 1507 0
 3992 0180 FB68     	 ldr r3,[r7,#12]
 3993 0182 D3F85431 	 ldr r3,[r3,#340]
 3994 0186 9A7C     	 ldrb r2,[r3,#18]
 3995 0188 FB68     	 ldr r3,[r7,#12]
 3996 018a 93F85831 	 ldrb r3,[r3,#344]
 3997 018e 9A42     	 cmp r2,r3
 3998 0190 20D1     	 bne .L229
1508:../CANopen/stack/301/CO_PDO.c ****                         TPDO->syncCounter = TPDO->transmissionType;
 3999              	 .loc 3 1508 0
 4000 0192 FB68     	 ldr r3,[r7,#12]
 4001 0194 93F84C21 	 ldrb r2,[r3,#332]
 4002 0198 FB68     	 ldr r3,[r7,#12]
 4003 019a 83F85921 	 strb r2,[r3,#345]
1509:../CANopen/stack/301/CO_PDO.c ****                         CO_TPDOsend(TPDO);
 4004              	 .loc 3 1509 0
 4005 019e F868     	 ldr r0,[r7,#12]
 4006 01a0 FFF7FEFF 	 bl CO_TPDOsend
1457:../CANopen/stack/301/CO_PDO.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_TPDO_TIMERS_ENABLE
 4007              	 .loc 3 1457 0
 4008 01a4 29E0     	 b .L215
 4009              	.L234:
1510:../CANopen/stack/301/CO_PDO.c ****                     }
1511:../CANopen/stack/301/CO_PDO.c ****                 }
1512:../CANopen/stack/301/CO_PDO.c ****                 /* Send TPDO after every N-th Sync */
1513:../CANopen/stack/301/CO_PDO.c ****                 else if (--TPDO->syncCounter == 0) {
 4010              	 .loc 3 1513 0
 4011 01a6 FB68     	 ldr r3,[r7,#12]
 4012 01a8 93F85931 	 ldrb r3,[r3,#345]
 4013 01ac 013B     	 subs r3,r3,#1
 4014 01ae DAB2     	 uxtb r2,r3
 4015 01b0 FB68     	 ldr r3,[r7,#12]
 4016 01b2 83F85921 	 strb r2,[r3,#345]
 4017 01b6 FB68     	 ldr r3,[r7,#12]
 4018 01b8 93F85931 	 ldrb r3,[r3,#345]
 4019 01bc 002B     	 cmp r3,#0
 4020 01be 09D1     	 bne .L229
1514:../CANopen/stack/301/CO_PDO.c ****                     TPDO->syncCounter = TPDO->transmissionType;
 4021              	 .loc 3 1514 0
 4022 01c0 FB68     	 ldr r3,[r7,#12]
 4023 01c2 93F84C21 	 ldrb r2,[r3,#332]
 4024 01c6 FB68     	 ldr r3,[r7,#12]
 4025 01c8 83F85921 	 strb r2,[r3,#345]
1515:../CANopen/stack/301/CO_PDO.c ****                     CO_TPDOsend(TPDO);
 4026              	 .loc 3 1515 0
 4027 01cc F868     	 ldr r0,[r7,#12]
 4028 01ce FFF7FEFF 	 bl CO_TPDOsend
1457:../CANopen/stack/301/CO_PDO.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_TPDO_TIMERS_ENABLE
 4029              	 .loc 3 1457 0
 4030 01d2 12E0     	 b .L215
 4031              	.L229:
1457:../CANopen/stack/301/CO_PDO.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_TPDO_TIMERS_ENABLE
 4032              	 .loc 3 1457 0 is_stmt 0 discriminator 1
 4033 01d4 11E0     	 b .L215
 4034              	.L216:
1516:../CANopen/stack/301/CO_PDO.c ****                 }
1517:../CANopen/stack/301/CO_PDO.c ****             }
1518:../CANopen/stack/301/CO_PDO.c ****         } /* else if (TPDO->SYNC && syncWas) */
1519:../CANopen/stack/301/CO_PDO.c **** #endif
1520:../CANopen/stack/301/CO_PDO.c **** 
1521:../CANopen/stack/301/CO_PDO.c ****     }
1522:../CANopen/stack/301/CO_PDO.c ****     else {
1523:../CANopen/stack/301/CO_PDO.c ****         /* Not operational or valid, reset triggers */
1524:../CANopen/stack/301/CO_PDO.c ****         TPDO->sendRequest = true;
 4035              	 .loc 3 1524 0 is_stmt 1
 4036 01d6 FB68     	 ldr r3,[r7,#12]
 4037 01d8 0122     	 movs r2,#1
 4038 01da C3F85021 	 str r2,[r3,#336]
1525:../CANopen/stack/301/CO_PDO.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_TPDO_TIMERS_ENABLE
1526:../CANopen/stack/301/CO_PDO.c ****         TPDO->inhibitTimer = TPDO->eventTimer = 0;
 4039              	 .loc 3 1526 0
 4040 01de FB68     	 ldr r3,[r7,#12]
 4041 01e0 0022     	 movs r2,#0
 4042 01e2 C3F86821 	 str r2,[r3,#360]
 4043 01e6 FB68     	 ldr r3,[r7,#12]
 4044 01e8 D3F86821 	 ldr r2,[r3,#360]
 4045 01ec FB68     	 ldr r3,[r7,#12]
 4046 01ee C3F86421 	 str r2,[r3,#356]
1527:../CANopen/stack/301/CO_PDO.c **** #endif
1528:../CANopen/stack/301/CO_PDO.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_PDO_SYNC_ENABLE
1529:../CANopen/stack/301/CO_PDO.c ****         TPDO->syncCounter = 255;
 4047              	 .loc 3 1529 0
 4048 01f2 FB68     	 ldr r3,[r7,#12]
 4049 01f4 FF22     	 movs r2,#255
 4050 01f6 83F85921 	 strb r2,[r3,#345]
 4051              	.L215:
1530:../CANopen/stack/301/CO_PDO.c **** #endif
1531:../CANopen/stack/301/CO_PDO.c ****     }
1532:../CANopen/stack/301/CO_PDO.c **** }
 4052              	 .loc 3 1532 0
 4053 01fa 2037     	 adds r7,r7,#32
 4054              	.LCFI117:
 4055              	 .cfi_def_cfa_offset 8
 4056 01fc BD46     	 mov sp,r7
 4057              	.LCFI118:
 4058              	 .cfi_def_cfa_register 13
 4059              	 
 4060 01fe 80BD     	 pop {r7,pc}
 4061              	 .cfi_endproc
 4062              	.LFE50:
 4064              	 .text
 4065              	.Letext0:
 4066              	 .file 4 "d:\\programs\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\lib\\gcc\\arm-none-eabi\\4.9.3\\include\\stddef.h"
 4067              	 .file 5 "d:\\programs\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 4068              	 .file 6 "d:\\programs\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 4069              	 .file 7 "D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/driver/CO_driver_target.h"
 4070              	 .file 8 "D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301/CO_Emergency.h"
 4071              	 .file 9 "D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301/CO_SYNC.h"
 4072              	 .file 10 "D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301/CO_PDO.h"
DEFINED SYMBOLS
                            *ABS*:00000000 CO_PDO.c
    {standard input}:20     .text.CO_getUint8:00000000 $t
    {standard input}:24     .text.CO_getUint8:00000000 CO_getUint8
    {standard input}:66     .text.CO_getUint16:00000000 $t
    {standard input}:70     .text.CO_getUint16:00000000 CO_getUint16
    {standard input}:109    .text.CO_getUint32:00000000 $t
    {standard input}:113    .text.CO_getUint32:00000000 CO_getUint32
    {standard input}:152    .text.CO_setUint32:00000000 $t
    {standard input}:156    .text.CO_setUint32:00000000 CO_setUint32
    {standard input}:196    .text.OD_getIndex:00000000 $t
    {standard input}:200    .text.OD_getIndex:00000000 OD_getIndex
    {standard input}:249    .text.OD_extension_init:00000000 $t
    {standard input}:253    .text.OD_extension_init:00000000 OD_extension_init
    {standard input}:306    .text.OD_get_u8:00000000 $t
    {standard input}:310    .text.OD_get_u8:00000000 OD_get_u8
    {standard input}:356    .text.OD_get_u16:00000000 $t
    {standard input}:360    .text.OD_get_u16:00000000 OD_get_u16
    {standard input}:406    .text.OD_get_u32:00000000 $t
    {standard input}:410    .text.OD_get_u32:00000000 OD_get_u32
    {standard input}:456    .text.OD_write_dummy:00000000 $t
    {standard input}:460    .text.OD_write_dummy:00000000 OD_write_dummy
    {standard input}:512    .text.OD_read_dummy:00000000 $t
    {standard input}:516    .text.OD_read_dummy:00000000 OD_read_dummy
    {standard input}:592    .text.PDOconfigMap:00000000 $t
    {standard input}:596    .text.PDOconfigMap:00000000 PDOconfigMap
    {standard input}:827    .text.PDOconfigMap:00000180 $d
    {standard input}:833    .text.PDO_initMapping:00000000 $t
    {standard input}:837    .text.PDO_initMapping:00000000 PDO_initMapping
    {standard input}:1062   .text.OD_write_PDO_mapping:00000000 $t
    {standard input}:1066   .text.OD_write_PDO_mapping:00000000 OD_write_PDO_mapping
    {standard input}:1290   .text.OD_read_PDO_commParam:00000000 $t
    {standard input}:1294   .text.OD_read_PDO_commParam:00000000 OD_read_PDO_commParam
    {standard input}:1406   .text.CO_PDO_receive:00000000 $t
    {standard input}:1410   .text.CO_PDO_receive:00000000 CO_PDO_receive
    {standard input}:1549   .text.OD_write_14xx:00000000 $t
    {standard input}:1553   .text.OD_write_14xx:00000000 OD_write_14xx
    {standard input}:1901   .text.OD_write_14xx:00000234 $d
    {standard input}:1907   .text.CO_RPDO_init:00000000 $t
    {standard input}:1912   .text.CO_RPDO_init:00000000 CO_RPDO_init
    {standard input}:2283   .text.CO_RPDO_init:0000027c $d
    {standard input}:2292   .text.CO_RPDO_process:00000000 $t
    {standard input}:2297   .text.CO_RPDO_process:00000000 CO_RPDO_process
    {standard input}:2665   .text.OD_write_18xx:00000000 $t
    {standard input}:2669   .text.OD_write_18xx:00000000 OD_write_18xx
    {standard input}:2735   .text.OD_write_18xx:00000054 $d
    {standard input}:2741   .text.OD_write_18xx:0000006c $t
    {standard input}:3084   .text.OD_write_18xx:0000029c $d
    {standard input}:3089   .text.CO_TPDO_init:00000000 $t
    {standard input}:3094   .text.CO_TPDO_init:00000000 CO_TPDO_init
    {standard input}:3524   .text.CO_TPDO_init:000002ec $d
    {standard input}:3532   .text.CO_TPDOsend:00000000 $t
    {standard input}:3536   .text.CO_TPDOsend:00000000 CO_TPDOsend
    {standard input}:3750   .text.CO_TPDO_process:00000000 $t
    {standard input}:3755   .text.CO_TPDO_process:00000000 CO_TPDO_process
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
memmove
OD_get_value
memset
OD_find
OD_getSub
OD_writeOriginal
OD_readOriginal
memcpy
CO_CANrxBufferInit
CO_error
CO_CANtxBufferInit
CO_CANsend
