   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "CANopen.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.CO_isError,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	CO_isError:
  25              	.LFB33:
  26              	 .file 1 "D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301/CO_Emergency.h"
   1:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** /**
   2:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * CANopen Emergency protocol.
   3:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  *
   4:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * @file        CO_Emergency.h
   5:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * @ingroup     CO_Emergency
   6:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * @author      Janez Paternoster
   7:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * @copyright   2020 Janez Paternoster
   8:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  *
   9:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * This file is part of CANopenNode, an opensource CANopen Stack.
  10:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * Project home page is <https://github.com/CANopenNode/CANopenNode>.
  11:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * For more information on CANopen see <http://www.can-cia.org/>.
  12:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  *
  13:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * Licensed under the Apache License, Version 2.0 (the "License");
  14:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * you may not use this file except in compliance with the License.
  15:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * You may obtain a copy of the License at
  16:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  *
  17:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  *     http://www.apache.org/licenses/LICENSE-2.0
  18:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  *
  19:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * Unless required by applicable law or agreed to in writing, software
  20:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * distributed under the License is distributed on an "AS IS" BASIS,
  21:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  22:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * See the License for the specific language governing permissions and
  23:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * limitations under the License.
  24:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  */
  25:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** 
  26:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** #ifndef CO_EMERGENCY_H
  27:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** #define CO_EMERGENCY_H
  28:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** 
  29:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** #include "301/CO_driver.h"
  30:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** #include "301/CO_ODinterface.h"
  31:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** 
  32:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** /* default configuration, see CO_config.h */
  33:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** #ifndef CO_CONFIG_EM
  34:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** #define CO_CONFIG_EM (CO_CONFIG_EM_PRODUCER | \
  35:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****                       CO_CONFIG_EM_HISTORY | \
  36:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****                       CO_CONFIG_GLOBAL_FLAG_CALLBACK_PRE | \
  37:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****                       CO_CONFIG_GLOBAL_FLAG_TIMERNEXT)
  38:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** #endif
  39:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** #ifndef CO_CONFIG_EM_ERR_STATUS_BITS_COUNT
  40:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** #define CO_CONFIG_EM_ERR_STATUS_BITS_COUNT (10*8)
  41:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** #endif
  42:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** #ifndef CO_CONFIG_ERR_CONDITION_GENERIC
  43:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** #define CO_CONFIG_ERR_CONDITION_GENERIC (em->errorStatusBits[5] != 0)
  44:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** #endif
  45:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** #ifndef CO_CONFIG_ERR_CONDITION_COMMUNICATION
  46:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** #define CO_CONFIG_ERR_CONDITION_COMMUNICATION (em->errorStatusBits[2] \
  47:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****                                             || em->errorStatusBits[3])
  48:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** #endif
  49:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** #ifndef CO_CONFIG_ERR_CONDITION_MANUFACTURER
  50:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** #define CO_CONFIG_ERR_CONDITION_MANUFACTURER (em->errorStatusBits[8] \
  51:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****                                            || em->errorStatusBits[9])
  52:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** #endif
  53:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** 
  54:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** #ifdef __cplusplus
  55:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** extern "C" {
  56:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** #endif
  57:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** 
  58:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** /**
  59:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * @defgroup CO_Emergency Emergency
  60:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * CANopen Emergency protocol.
  61:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  *
  62:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * @ingroup CO_CANopen_301
  63:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * @{
  64:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * Error control and Emergency is used for control internal error state
  65:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * and for sending a CANopen Emergency message.
  66:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  *
  67:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * In case of error condition stack or application calls CO_errorReport()
  68:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * function with indication of the error. Specific error condition is reported
  69:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * (with CANopen Emergency message) only the first time after it occurs.
  70:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * Internal state of specific error condition is indicated by internal bitfield
  71:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * variable, with space for maximum @ref CO_CONFIG_EM_ERR_STATUS_BITS_COUNT
  72:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * bits. Meaning for each bit is described by @ref CO_EM_errorStatusBits_t.
  73:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * Specific error condition can be reset by CO_errorReset() function. In that
  74:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * case Emergency message is sent with CO_EM_NO_ERROR indication.
  75:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  *
  76:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * Some error conditions are informative and some are critical. Critical error
  77:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * conditions set the corresponding bit in @ref CO_errorRegister_t. Critical
  78:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * error conditions for generic error are specified by
  79:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * @ref CO_CONFIG_ERR_CONDITION_GENERIC macro. Similar macros are defined for
  80:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * other error bits in in @ref CO_errorRegister_t.
  81:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  *
  82:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * ### Emergency producer
  83:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * If @ref CO_CONFIG_EM has CO_CONFIG_EM_PRODUCER enabled, then CANopen
  84:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * Emergency message will be sent on each change of any error condition.
  85:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * Emergency message contents are:
  86:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  *
  87:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  *   Byte | Description
  88:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  *   -----|-----------------------------------------------------------
  89:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  *   0..1 | @ref CO_EM_errorCode_t
  90:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  *   2    | @ref CO_errorRegister_t
  91:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  *   3    | Index of error condition (see @ref CO_EM_errorStatusBits_t).
  92:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  *   4..7 | Additional informative argument to CO_errorReport() function.
  93:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  *
  94:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * ### Error history
  95:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * If @ref CO_CONFIG_EM has CO_CONFIG_EM_HISTORY enabled, then latest errors
  96:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * can be read from _Pre Defined Error Field_ (object dictionary, index 0x1003).
  97:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * Contents corresponds to bytes 0..3 from the Emergency message.
  98:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  *
  99:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * ### Emergency consumer
 100:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * If @ref CO_CONFIG_EM has CO_CONFIG_EM_CONSUMER enabled, then callback can be
 101:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * registered by @ref CO_EM_initCallbackRx() function.
 102:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  */
 103:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** 
 104:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** 
 105:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** /**
 106:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * CANopen Error register.
 107:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  *
 108:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * Mandatory for CANopen, resides in object dictionary, index 0x1001.
 109:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  *
 110:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * Error register is calculated from internal bitfield variable, critical bits.
 111:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * See @ref CO_EM_errorStatusBits_t and @ref CO_STACK_CONFIG_EMERGENCY for error
 112:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * condition macros.
 113:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  *
 114:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * Internal errors may prevent device to stay in NMT Operational state and
 115:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * changes may switch between the states. See @ref CO_NMT_control_t for details.
 116:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  */
 117:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** typedef enum {
 118:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_ERR_REG_GENERIC_ERR   = 0x01U, /**< bit 0, generic error */
 119:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_ERR_REG_CURRENT       = 0x02U, /**< bit 1, current */
 120:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_ERR_REG_VOLTAGE       = 0x04U, /**< bit 2, voltage */
 121:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_ERR_REG_TEMPERATURE   = 0x08U, /**< bit 3, temperature */
 122:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_ERR_REG_COMMUNICATION = 0x10U, /**< bit 4, communication error */
 123:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_ERR_REG_DEV_PROFILE   = 0x20U, /**< bit 5, device profile specific */
 124:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_ERR_REG_RESERVED      = 0x40U, /**< bit 6, reserved (always 0) */
 125:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_ERR_REG_MANUFACTURER  = 0x80U  /**< bit 7, manufacturer specific */
 126:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** } CO_errorRegister_t;
 127:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** 
 128:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** 
 129:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** /**
 130:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * CANopen Error code
 131:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  *
 132:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * Standard error codes according to CiA DS-301 and DS-401.
 133:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  */
 134:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** typedef enum {
 135:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x00xx, error Reset or No Error */
 136:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EMC_NO_ERROR = 0x0000U,
 137:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x10xx, Generic Error */
 138:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EMC_GENERIC = 0x1000U,
 139:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x20xx, Current */
 140:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EMC_CURRENT = 0x2000U,
 141:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x21xx, Current, device input side */
 142:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EMC_CURRENT_INPUT = 0x2100U,
 143:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x22xx, Current inside the device */
 144:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EMC_CURRENT_INSIDE = 0x2200U,
 145:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x23xx, Current, device output side */
 146:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EMC_CURRENT_OUTPUT = 0x2300U,
 147:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x30xx, Voltage */
 148:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EMC_VOLTAGE = 0x3000U,
 149:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x31xx, Mains Voltage */
 150:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EMC_VOLTAGE_MAINS = 0x3100U,
 151:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x32xx, Voltage inside the device */
 152:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EMC_VOLTAGE_INSIDE = 0x3200U,
 153:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x33xx, Output Voltage */
 154:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EMC_VOLTAGE_OUTPUT = 0x3300U,
 155:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x40xx, Temperature */
 156:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EMC_TEMPERATURE = 0x4000U,
 157:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x41xx, Ambient Temperature */
 158:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EMC_TEMP_AMBIENT = 0x4100U,
 159:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x42xx, Device Temperature */
 160:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EMC_TEMP_DEVICE = 0x4200U,
 161:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x50xx, Device Hardware */
 162:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EMC_HARDWARE = 0x5000U,
 163:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x60xx, Device Software */
 164:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EMC_SOFTWARE_DEVICE = 0x6000U,
 165:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x61xx, Internal Software */
 166:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EMC_SOFTWARE_INTERNAL = 0x6100U,
 167:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x62xx, User Software */
 168:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EMC_SOFTWARE_USER = 0x6200U,
 169:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x63xx, Data Set */
 170:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EMC_DATA_SET = 0x6300U,
 171:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x70xx, Additional Modules */
 172:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EMC_ADDITIONAL_MODUL = 0x7000U,
 173:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x80xx, Monitoring */
 174:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EMC_MONITORING = 0x8000U,
 175:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x81xx, Communication */
 176:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EMC_COMMUNICATION = 0x8100U,
 177:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x8110, CAN Overrun (Objects lost) */
 178:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EMC_CAN_OVERRUN = 0x8110U,
 179:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x8120, CAN in Error Passive Mode */
 180:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EMC_CAN_PASSIVE = 0x8120U,
 181:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x8130, Life Guard Error or Heartbeat Error */
 182:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EMC_HEARTBEAT = 0x8130U,
 183:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x8140, recovered from bus off */
 184:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EMC_BUS_OFF_RECOVERED = 0x8140U,
 185:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x8150, CAN-ID collision */
 186:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EMC_CAN_ID_COLLISION = 0x8150U,
 187:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x82xx, Protocol Error */
 188:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EMC_PROTOCOL_ERROR = 0x8200U,
 189:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x8210, PDO not processed due to length error */
 190:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EMC_PDO_LENGTH = 0x8210U,
 191:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x8220, PDO length exceeded */
 192:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EMC_PDO_LENGTH_EXC = 0x8220U,
 193:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x8230, DAM MPDO not processed, destination object not available */
 194:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EMC_DAM_MPDO = 0x8230U,
 195:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x8240, Unexpected SYNC data length */
 196:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EMC_SYNC_DATA_LENGTH = 0x8240U,
 197:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x8250, RPDO timeout */
 198:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EMC_RPDO_TIMEOUT = 0x8250U,
 199:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x90xx, External Error */
 200:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EMC_EXTERNAL_ERROR = 0x9000U,
 201:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0xF0xx, Additional Functions */
 202:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EMC_ADDITIONAL_FUNC = 0xF000U,
 203:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0xFFxx, Device specific */
 204:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EMC_DEVICE_SPECIFIC = 0xFF00U,
 205:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** 
 206:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x2310, DS401, Current at outputs too high (overload) */
 207:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EMC401_OUT_CUR_HI = 0x2310U,
 208:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x2320, DS401, Short circuit at outputs */
 209:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EMC401_OUT_SHORTED = 0x2320U,
 210:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x2330, DS401, Load dump at outputs */
 211:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EMC401_OUT_LOAD_DUMP = 0x2330U,
 212:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x3110, DS401, Input voltage too high */
 213:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EMC401_IN_VOLT_HI = 0x3110U,
 214:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x3120, DS401, Input voltage too low */
 215:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EMC401_IN_VOLT_LOW = 0x3120U,
 216:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x3210, DS401, Internal voltage too high */
 217:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EMC401_INTERN_VOLT_HI = 0x3210U,
 218:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x3220, DS401, Internal voltage too low */
 219:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EMC401_INTERN_VOLT_LO = 0x3220U,
 220:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x3310, DS401, Output voltage too high */
 221:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EMC401_OUT_VOLT_HIGH = 0x3310U,
 222:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x3320, DS401, Output voltage too low */
 223:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EMC401_OUT_VOLT_LOW = 0x3320U,
 224:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** } CO_EM_errorCode_t;
 225:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** 
 226:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** 
 227:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** /**
 228:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * Error status bits
 229:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  *
 230:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * Bits for internal indication of the error condition. Each error condition is
 231:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * specified by unique index from 0x00 up to 0xFF.
 232:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  *
 233:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * If specific error occurs in the stack or in the application, CO_errorReport()
 234:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * sets specific bit in the _errorStatusBit_ variable from @ref CO_EM_t. If bit
 235:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * was already set, function returns without any action. Otherwise it prepares
 236:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * emergency message.
 237:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  *
 238:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * Maximum size (in bits) of the _errorStatusBit_ variable is specified by
 239:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * @ref CO_CONFIG_EM_ERR_STATUS_BITS_COUNT (set to 10*8 bits by default). Stack
 240:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * uses first 6 bytes. Additional 4 bytes are pre-defined for manufacturer
 241:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * or device specific error indications, by default.
 242:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  */
 243:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** typedef enum {
 244:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x00, Error Reset or No Error */
 245:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EM_NO_ERROR                  = 0x00U,
 246:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x01, communication, info, CAN bus warning limit reached */
 247:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EM_CAN_BUS_WARNING           = 0x01U,
 248:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x02, communication, info, Wrong data length of the received CAN
 249:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****      * message */
 250:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EM_RXMSG_WRONG_LENGTH        = 0x02U,
 251:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x03, communication, info, Previous received CAN message wasn't
 252:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****      * processed yet */
 253:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EM_RXMSG_OVERFLOW            = 0x03U,
 254:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x04, communication, info, Wrong data length of received PDO */
 255:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EM_RPDO_WRONG_LENGTH         = 0x04U,
 256:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x05, communication, info, Previous received PDO wasn't processed yet */
 257:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EM_RPDO_OVERFLOW             = 0x05U,
 258:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x06, communication, info, CAN receive bus is passive */
 259:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EM_CAN_RX_BUS_PASSIVE        = 0x06U,
 260:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x07, communication, info, CAN transmit bus is passive */
 261:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EM_CAN_TX_BUS_PASSIVE        = 0x07U,
 262:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x08, communication, info, Wrong NMT command received */
 263:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EM_NMT_WRONG_COMMAND         = 0x08U,
 264:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x09, communication, info, TIME message timeout */
 265:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EM_TIME_TIMEOUT              = 0x09U,
 266:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x0A, communication, info, (unused) */
 267:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EM_0A_unused                 = 0x0AU,
 268:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x0B, communication, info, (unused) */
 269:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EM_0B_unused                 = 0x0BU,
 270:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x0C, communication, info, (unused) */
 271:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EM_0C_unused                 = 0x0CU,
 272:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x0D, communication, info, (unused) */
 273:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EM_0D_unused                 = 0x0DU,
 274:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x0E, communication, info, (unused) */
 275:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EM_0E_unused                 = 0x0EU,
 276:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x0F, communication, info, (unused) */
 277:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EM_0F_unused                 = 0x0FU,
 278:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** 
 279:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x10, communication, critical, (unused) */
 280:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EM_10_unused                 = 0x10U,
 281:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x11, communication, critical, (unused) */
 282:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EM_11_unused                 = 0x11U,
 283:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x12, communication, critical, CAN transmit bus is off */
 284:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EM_CAN_TX_BUS_OFF            = 0x12U,
 285:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x13, communication, critical, CAN module receive buffer has
 286:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****      * overflowed */
 287:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EM_CAN_RXB_OVERFLOW          = 0x13U,
 288:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x14, communication, critical, CAN transmit buffer has overflowed */
 289:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EM_CAN_TX_OVERFLOW           = 0x14U,
 290:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x15, communication, critical, TPDO is outside SYNC window */
 291:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EM_TPDO_OUTSIDE_WINDOW       = 0x15U,
 292:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x16, communication, critical, (unused) */
 293:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EM_16_unused                 = 0x16U,
 294:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x17, communication, critical, RPDO message timeout */
 295:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EM_RPDO_TIME_OUT             = 0x17U,
 296:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x18, communication, critical, SYNC message timeout */
 297:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EM_SYNC_TIME_OUT             = 0x18U,
 298:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x19, communication, critical, Unexpected SYNC data length */
 299:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EM_SYNC_LENGTH               = 0x19U,
 300:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x1A, communication, critical, Error with PDO mapping */
 301:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EM_PDO_WRONG_MAPPING         = 0x1AU,
 302:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x1B, communication, critical, Heartbeat consumer timeout */
 303:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EM_HEARTBEAT_CONSUMER        = 0x1BU,
 304:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x1C, communication, critical, Heartbeat consumer detected remote node
 305:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****      * reset */
 306:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EM_HB_CONSUMER_REMOTE_RESET  = 0x1CU,
 307:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x1D, communication, critical, (unused) */
 308:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EM_1D_unused                 = 0x1DU,
 309:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x1E, communication, critical, (unused) */
 310:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EM_1E_unused                 = 0x1EU,
 311:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x1F, communication, critical, (unused) */
 312:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EM_1F_unused                 = 0x1FU,
 313:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** 
 314:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x20, generic, info, Emergency buffer is full, Emergency message wasn't
 315:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****      * sent */
 316:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EM_EMERGENCY_BUFFER_FULL     = 0x20U,
 317:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x21, generic, info, (unused) */
 318:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EM_21_unused                 = 0x21U,
 319:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x22, generic, info, Microcontroller has just started */
 320:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EM_MICROCONTROLLER_RESET     = 0x22U,
 321:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x23, generic, info, (unused) */
 322:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EM_23_unused                 = 0x23U,
 323:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x24, generic, info, (unused) */
 324:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EM_24_unused                 = 0x24U,
 325:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x25, generic, info, (unused) */
 326:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EM_25_unused                 = 0x25U,
 327:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x26, generic, info, (unused) */
 328:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EM_26_unused                 = 0x26U,
 329:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x27, generic, info, Automatic store to non-volatile memory failed */
 330:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EM_NON_VOLATILE_AUTO_SAVE    = 0x27U,
 331:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** 
 332:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x28, generic, critical, Wrong parameters to CO_errorReport() function*/
 333:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EM_WRONG_ERROR_REPORT        = 0x28U,
 334:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x29, generic, critical, Timer task has overflowed */
 335:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EM_ISR_TIMER_OVERFLOW        = 0x29U,
 336:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x2A, generic, critical, Unable to allocate memory for objects */
 337:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EM_MEMORY_ALLOCATION_ERROR   = 0x2AU,
 338:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x2B, generic, critical, Generic error, test usage */
 339:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EM_GENERIC_ERROR             = 0x2BU,
 340:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x2C, generic, critical, Software error */
 341:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EM_GENERIC_SOFTWARE_ERROR    = 0x2CU,
 342:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x2D, generic, critical, Object dictionary does not match the software*/
 343:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EM_INCONSISTENT_OBJECT_DICT  = 0x2DU,
 344:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x2E, generic, critical, Error in calculation of device parameters */
 345:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EM_CALCULATION_OF_PARAMETERS = 0x2EU,
 346:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x2F, generic, critical, Error with access to non volatile device memory
 347:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****      */
 348:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EM_NON_VOLATILE_MEMORY       = 0x2FU,
 349:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** 
 350:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** 0x30+, manufacturer, info or critical, Error status buts, free to use by
 351:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****      * manufacturer. By default bits 0x30..0x3F are set as informational and
 352:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****      * bits 0x40..0x4F are set as critical. Manufacturer critical bits sets the
 353:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****      * error register, as specified by @ref CO_CONFIG_ERR_CONDITION_MANUFACTURER
 354:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****      */
 355:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EM_MANUFACTURER_START        = 0x30U,
 356:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** (@ref CO_CONFIG_EM_ERR_STATUS_BITS_COUNT - 1), largest value of the
 357:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****      * Error status bit. */
 358:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EM_MANUFACTURER_END          = CO_CONFIG_EM_ERR_STATUS_BITS_COUNT - 1
 359:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** } CO_EM_errorStatusBits_t;
 360:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** 
 361:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** 
 362:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** 
 363:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** #if ((CO_CONFIG_EM) & (CO_CONFIG_EM_PRODUCER | CO_CONFIG_EM_HISTORY)) \
 364:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     || defined CO_DOXYGEN
 365:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** /**
 366:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * Fifo buffer for emergency producer and error history
 367:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  */
 368:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** typedef struct {
 369:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     uint32_t msg;
 370:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** #if ((CO_CONFIG_EM) & CO_CONFIG_EM_PRODUCER) || defined CO_DOXYGEN
 371:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     uint32_t info;
 372:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** #endif
 373:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** } CO_EM_fifo_t;
 374:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** #endif
 375:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** 
 376:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** 
 377:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** /**
 378:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * Emergency object.
 379:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  */
 380:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** typedef struct {
 381:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** Bitfield for the internal indication of the error condition. */
 382:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     uint8_t errorStatusBits[CO_CONFIG_EM_ERR_STATUS_BITS_COUNT / 8];
 383:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** Pointer to error register in object dictionary at 0x1001,00. */
 384:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     uint8_t *errorRegister;
 385:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** Old CAN error status bitfield */
 386:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     uint16_t CANerrorStatusOld;
 387:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** From CO_EM_init() */
 388:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_CANmodule_t *CANdevTx;
 389:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** 
 390:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** #if ((CO_CONFIG_EM) & (CO_CONFIG_EM_PRODUCER | CO_CONFIG_EM_HISTORY)) \
 391:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     || defined CO_DOXYGEN
 392:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** Internal circular FIFO buffer for storing pre-processed emergency
 393:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****      * messages. Messages are added by @ref CO_error() function. All messages
 394:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****      * are later post-processed by @ref CO_EM_process() function. In case of
 395:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****      * overflow, error is indicated but emergency message is not sent. Fifo is
 396:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****      * also used for error history, OD object 0x1003, "Pre-defined error field".
 397:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****      * Buffer is defined by @ref CO_EM_init(). */
 398:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_EM_fifo_t *fifo;
 399:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** Size of the above buffer, specified by @ref CO_EM_init(). */
 400:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     uint8_t fifoSize;
 401:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** Pointer for the fifo buffer, where next emergency message will be
 402:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****      * written by @ref CO_error() function. */
 403:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     uint8_t fifoWrPtr;
 404:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** Pointer for the fifo, where next emergency message has to be
 405:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****      * post-processed by @ref CO_EM_process() function. If equal to bufWrPtr,
 406:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****      * then all messages has been post-processed. */
 407:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     uint8_t fifoPpPtr;
 408:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** Indication of overflow - messages in buffer are not post-processed */
 409:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     uint8_t fifoOverflow;
 410:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** Count of emergency messages in fifo, used for OD object 0x1003 */
 411:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     uint8_t fifoCount;
 412:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** #endif /* (CO_CONFIG_EM) & (CO_CONFIG_EM_PRODUCER | CO_CONFIG_EM_HISTORY) */
 413:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** 
 414:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** #if ((CO_CONFIG_EM) & CO_CONFIG_EM_PRODUCER) || defined CO_DOXYGEN
 415:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** True, if emergency producer is enabled, from Object dictionary */
 416:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     bool_t producerEnabled;
 417:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** Copy of CANopen node ID, from CO_EM_init() */
 418:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     uint8_t nodeId;
 419:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** CAN transmit buffer */
 420:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_CANtx_t *CANtxBuff;
 421:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** Extension for OD object */
 422:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     OD_extension_t OD_1014_extension;
 423:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  #if ((CO_CONFIG_EM) & CO_CONFIG_EM_PROD_CONFIGURABLE) || defined CO_DOXYGEN
 424:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** COB ID of emergency message, from Object dictionary */
 425:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     uint16_t producerCanId;
 426:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** From CO_EM_init() */
 427:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     uint16_t CANdevTxIdx;
 428:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  #endif
 429:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  #if ((CO_CONFIG_EM) & CO_CONFIG_EM_PROD_INHIBIT) || defined CO_DOXYGEN
 430:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****      /** Inhibit time for emergency message, from Object dictionary */
 431:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     uint32_t inhibitEmTime_us;
 432:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /**< Internal timer for inhibit time */
 433:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     uint32_t inhibitEmTimer;
 434:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** Extension for OD object */
 435:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     OD_extension_t OD_1015_extension;
 436:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  #endif
 437:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** #endif /* (CO_CONFIG_EM) & CO_CONFIG_EM_PRODUCER */
 438:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** 
 439:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** #if ((CO_CONFIG_EM) & CO_CONFIG_EM_HISTORY) || defined CO_DOXYGEN
 440:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** Extension for OD object */
 441:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     OD_extension_t OD_1003_extension;
 442:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** #endif
 443:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** 
 444:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** #if ((CO_CONFIG_EM) & CO_CONFIG_EM_STATUS_BITS) || defined CO_DOXYGEN
 445:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** Extension for OD object */
 446:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     OD_extension_t OD_statusBits_extension;
 447:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** #endif
 448:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** 
 449:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** #if ((CO_CONFIG_EM) & CO_CONFIG_EM_CONSUMER) || defined CO_DOXYGEN
 450:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** From CO_EM_initCallbackRx() or NULL */
 451:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     void (*pFunctSignalRx)(const uint16_t ident,
 452:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****                            const uint16_t errorCode,
 453:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****                            const uint8_t errorRegister,
 454:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****                            const uint8_t errorBit,
 455:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****                            const uint32_t infoCode);
 456:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** #endif
 457:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** 
 458:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** #if ((CO_CONFIG_EM) & CO_CONFIG_FLAG_CALLBACK_PRE) || defined CO_DOXYGEN
 459:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** From CO_EM_initCallbackPre() or NULL */
 460:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     void (*pFunctSignalPre)(void *object);
 461:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     /** From CO_EM_initCallbackPre() or NULL */
 462:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     void *functSignalObjectPre;
 463:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** #endif
 464:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** } CO_EM_t;
 465:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** 
 466:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** 
 467:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** /**
 468:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * Initialize Emergency object.
 469:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  *
 470:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * Function must be called in the communication reset section.
 471:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  *
 472:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * @param em This object will be initialized.
 473:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * @param fifo Fifo buffer for emergency producer and error history. It must be
 474:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * defined externally. Its size must be capacity+1. See also @ref CO_EM_t, fifo.
 475:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * @param fifoSize Size of the above fifo buffer. It is usually equal to the
 476:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * length of the OD array 0x1003 + 1. If fifoSize is smaller than 2, then
 477:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * emergency producer and error history will not work and 'fifo' may be NULL.
 478:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * @param CANdevTx CAN device for Emergency transmission.
 479:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * @param OD_1001_errReg OD entry for 0x1001 - "Error register", entry is
 480:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * required, without IO extension.
 481:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * @param OD_1014_cobIdEm OD entry for 0x1014 - "COB-ID EMCY", entry is
 482:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * required, IO extension is required.
 483:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * @param CANdevTxIdx Index of transmit buffer in the above CAN device.
 484:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * @param OD_1015_InhTime OD entry for 0x1015 - "Inhibit time EMCY", entry is
 485:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * optional (can be NULL), IO extension is optional for runtime configuration.
 486:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * @param OD_1003_preDefErr OD entry for 0x1003 - "Pre-defined error field".
 487:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * Emergency object has own memory buffer for this entry. Entry is optional,
 488:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * IO extension is required.
 489:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * @param OD_statusBits Custom OD entry for accessing errorStatusBits from
 490:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * @ref CO_EM_t. Entry must have variable of size
 491:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * (CO_CONFIG_EM_ERR_STATUS_BITS_COUNT/8) bytes available for read/write access
 492:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * on subindex 0. Emergency object has own memory buffer for this entry. Entry
 493:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * is optional, IO extension is required.
 494:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * @param CANdevRx CAN device for Emergency consumer reception.
 495:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * @param CANdevRxIdx Index of receive buffer in the above CAN device.
 496:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * @param nodeId CANopen node ID of this device (for default emergency producer)
 497:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * @param [out] errInfo Additional information in case of error, may be NULL.
 498:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  *
 499:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * @return @ref CO_ReturnError_t CO_ERROR_NO in case of success.
 500:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  */
 501:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** CO_ReturnError_t CO_EM_init(CO_EM_t *em,
 502:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****                             CO_CANmodule_t *CANdevTx,
 503:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****                             const OD_entry_t *OD_1001_errReg,
 504:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** #if ((CO_CONFIG_EM) & (CO_CONFIG_EM_PRODUCER | CO_CONFIG_EM_HISTORY)) \
 505:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     || defined CO_DOXYGEN
 506:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****                             CO_EM_fifo_t *fifo,
 507:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****                             uint8_t fifoSize,
 508:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** #endif
 509:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** #if ((CO_CONFIG_EM) & CO_CONFIG_EM_PRODUCER) || defined CO_DOXYGEN
 510:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****                             OD_entry_t *OD_1014_cobIdEm,
 511:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****                             uint16_t CANdevTxIdx,
 512:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  #if ((CO_CONFIG_EM) & CO_CONFIG_EM_PROD_INHIBIT) || defined CO_DOXYGEN
 513:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****                             OD_entry_t *OD_1015_InhTime,
 514:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  #endif
 515:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** #endif
 516:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** #if ((CO_CONFIG_EM) & CO_CONFIG_EM_HISTORY) || defined CO_DOXYGEN
 517:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****                             OD_entry_t *OD_1003_preDefErr,
 518:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** #endif
 519:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** #if ((CO_CONFIG_EM) & CO_CONFIG_EM_STATUS_BITS) || defined CO_DOXYGEN
 520:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****                             OD_entry_t *OD_statusBits,
 521:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** #endif
 522:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** #if ((CO_CONFIG_EM) & CO_CONFIG_EM_CONSUMER) || defined CO_DOXYGEN
 523:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****                             CO_CANmodule_t *CANdevRx,
 524:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****                             uint16_t CANdevRxIdx,
 525:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** #endif
 526:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****                             const uint8_t nodeId,
 527:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****                             uint32_t *errInfo);
 528:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** 
 529:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** 
 530:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** #if ((CO_CONFIG_EM) & CO_CONFIG_FLAG_CALLBACK_PRE) || defined CO_DOXYGEN
 531:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** /**
 532:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * Initialize Emergency callback function.
 533:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  *
 534:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * Function initializes optional callback function, which should immediately
 535:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * start processing of CO_EM_process() function.
 536:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * Callback is called from CO_errorReport() or CO_errorReset() function. Those
 537:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * functions are fast and may be called from any thread. Callback should
 538:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * immediately start mainline thread, which calls CO_EM_process() function.
 539:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  *
 540:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * @param em This object.
 541:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * @param object Pointer to object, which will be passed to pFunctSignal(). Can
 542:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * be NULL
 543:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * @param pFunctSignal Pointer to the callback function. Not called if NULL.
 544:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  */
 545:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** void CO_EM_initCallbackPre(CO_EM_t *em,
 546:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****                            void *object,
 547:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****                            void (*pFunctSignal)(void *object));
 548:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** #endif
 549:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** 
 550:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** 
 551:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** #if ((CO_CONFIG_EM) & CO_CONFIG_EM_CONSUMER) || defined CO_DOXYGEN
 552:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** /**
 553:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * Initialize Emergency received callback function.
 554:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  *
 555:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * Function initializes optional callback function, which executes after
 556:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * error condition is received.
 557:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  *
 558:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * _ident_ argument from callback contains CAN-ID of the emergency message. If
 559:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * _ident_ == 0, then emergency message was sent from this device.
 560:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  *
 561:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * @remark Depending on the CAN driver implementation, this function is called
 562:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * inside an ISR or inside a mainline. Must be thread safe.
 563:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  *
 564:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * @param em This object.
 565:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * @param pFunctSignalRx Pointer to the callback function. Not called if NULL.
 566:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  */
 567:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** void CO_EM_initCallbackRx(CO_EM_t *em,
 568:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****                           void (*pFunctSignalRx)(const uint16_t ident,
 569:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****                                                  const uint16_t errorCode,
 570:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****                                                  const uint8_t errorRegister,
 571:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****                                                  const uint8_t errorBit,
 572:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****                                                  const uint32_t infoCode));
 573:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** #endif
 574:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** 
 575:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** 
 576:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** /**
 577:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * Process Error control and Emergency object.
 578:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  *
 579:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * Function must be called cyclically. It verifies some communication errors,
 580:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * calculates OD object 0x1001 - "Error register" and sends emergency message
 581:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * if necessary.
 582:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  *
 583:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * @param em This object.
 584:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * @param NMTisPreOrOperational True if this node is NMT_PRE_OPERATIONAL or
 585:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * NMT_OPERATIONAL state.
 586:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * @param timeDifference_us Time difference from previous function call in
 587:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * [microseconds].
 588:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * @param [out] timerNext_us info to OS - see CO_process().
 589:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  */
 590:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** void CO_EM_process(CO_EM_t *em,
 591:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****                    bool_t NMTisPreOrOperational,
 592:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****                    uint32_t timeDifference_us,
 593:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****                    uint32_t *timerNext_us);
 594:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** 
 595:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** 
 596:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** /**
 597:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * Set or reset error condition.
 598:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  *
 599:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * Function can be called on any error condition inside CANopen stack or
 600:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * application. Function first checks change of error condition (setError is
 601:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * true and error bit wasn't set or setError is false and error bit was set
 602:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * before). If changed, then Emergency message is prepared and record in history
 603:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * is added. Emergency message is later sent by CO_EM_process() function.
 604:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  *
 605:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * Function is short and thread safe.
 606:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  *
 607:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * @param em Emergency object.
 608:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * @param setError True if error occurred or false if error resolved.
 609:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * @param errorBit from @ref CO_EM_errorStatusBits_t.
 610:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * @param errorCode from @ref CO_EM_errorCode_t.
 611:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * @param infoCode 32 bit value is passed to bytes 4...7 of the Emergency
 612:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * message. It contains optional additional information.
 613:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  */
 614:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** void CO_error(CO_EM_t *em, bool_t setError, const uint8_t errorBit,
 615:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****               uint16_t errorCode, uint32_t infoCode);
 616:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** 
 617:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** 
 618:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** /**
 619:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * Report error condition, for description of parameters see @ref CO_error.
 620:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  */
 621:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** #define CO_errorReport(em, errorBit, errorCode, infoCode) \
 622:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_error(em, true, errorBit, errorCode, infoCode)
 623:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** 
 624:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** 
 625:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** /**
 626:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * Reset error condition, for description of parameters see @ref CO_error.
 627:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  */
 628:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** #define CO_errorReset(em, errorBit, infoCode) \
 629:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     CO_error(em, false, errorBit, CO_EMC_NO_ERROR, infoCode)
 630:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** 
 631:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** 
 632:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** /**
 633:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * Check specific error condition.
 634:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  *
 635:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * Function returns true, if specific internal error is present.
 636:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  *
 637:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * @param em Emergency object.
 638:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * @param errorBit from @ref CO_EM_errorStatusBits_t.
 639:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  *
 640:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * @return true if Error is present.
 641:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  */
 642:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** static inline bool_t CO_isError(CO_EM_t *em, const uint8_t errorBit) {
  27              	 .loc 1 642 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 85B0     	 sub sp,sp,#20
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 24
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
  43 0008 0B46     	 mov r3,r1
  44 000a FB70     	 strb r3,[r7,#3]
 643:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     uint8_t index = errorBit >> 3;
  45              	 .loc 1 643 0
  46 000c FB78     	 ldrb r3,[r7,#3]
  47 000e DB08     	 lsrs r3,r3,#3
  48 0010 FB73     	 strb r3,[r7,#15]
 644:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     uint8_t bitmask = 1 << (errorBit & 0x7);
  49              	 .loc 1 644 0
  50 0012 FB78     	 ldrb r3,[r7,#3]
  51 0014 03F00703 	 and r3,r3,#7
  52 0018 0122     	 movs r2,#1
  53 001a 02FA03F3 	 lsl r3,r2,r3
  54 001e BB73     	 strb r3,[r7,#14]
 645:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** 
 646:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     return (em == NULL || index >= (CO_CONFIG_EM_ERR_STATUS_BITS_COUNT / 8)
 647:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****             || (em->errorStatusBits[index] & bitmask) != 0) ? true : false;
  55              	 .loc 1 647 0
  56 0020 7B68     	 ldr r3,[r7,#4]
  57 0022 002B     	 cmp r3,#0
  58 0024 0AD0     	 beq .L2
 646:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****             || (em->errorStatusBits[index] & bitmask) != 0) ? true : false;
  59              	 .loc 1 646 0
  60 0026 FB7B     	 ldrb r3,[r7,#15]
  61 0028 092B     	 cmp r3,#9
  62 002a 07D8     	 bhi .L2
  63              	 .loc 1 647 0 discriminator 2
  64 002c FB7B     	 ldrb r3,[r7,#15]
  65 002e 7A68     	 ldr r2,[r7,#4]
  66 0030 D25C     	 ldrb r2,[r2,r3]
  67 0032 BB7B     	 ldrb r3,[r7,#14]
  68 0034 1340     	 ands r3,r3,r2
  69 0036 DBB2     	 uxtb r3,r3
  70 0038 002B     	 cmp r3,#0
  71 003a 01D0     	 beq .L3
  72              	.L2:
  73              	 .loc 1 647 0 is_stmt 0 discriminator 1
  74 003c 0123     	 movs r3,#1
  75 003e 00E0     	 b .L4
  76              	.L3:
  77              	 .loc 1 647 0 discriminator 3
  78 0040 0023     	 movs r3,#0
  79              	.L4:
 648:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** }
  80              	 .loc 1 648 0 is_stmt 1
  81 0042 1846     	 mov r0,r3
  82 0044 1437     	 adds r7,r7,#20
  83              	.LCFI3:
  84              	 .cfi_def_cfa_offset 4
  85 0046 BD46     	 mov sp,r7
  86              	.LCFI4:
  87              	 .cfi_def_cfa_register 13
  88              	 
  89 0048 5DF8047B 	 ldr r7,[sp],#4
  90              	.LCFI5:
  91              	 .cfi_restore 7
  92              	 .cfi_def_cfa_offset 0
  93 004c 7047     	 bx lr
  94              	 .cfi_endproc
  95              	.LFE33:
  97 004e 00BF     	 .section .text.CO_getErrorRegister,"ax",%progbits
  98              	 .align 2
  99              	 .thumb
 100              	 .thumb_func
 102              	CO_getErrorRegister:
 103              	.LFB34:
 649:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** 
 650:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** /**
 651:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * Get error register
 652:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  *
 653:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * @param em Emergency object.
 654:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  *
 655:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  * @return Error register or 0 if doesn't exist.
 656:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****  */
 657:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** static inline uint8_t CO_getErrorRegister(CO_EM_t *em) {
 104              	 .loc 1 657 0
 105              	 .cfi_startproc
 106              	 
 107              	 
 108              	 
 109 0000 80B4     	 push {r7}
 110              	.LCFI6:
 111              	 .cfi_def_cfa_offset 4
 112              	 .cfi_offset 7,-4
 113 0002 83B0     	 sub sp,sp,#12
 114              	.LCFI7:
 115              	 .cfi_def_cfa_offset 16
 116 0004 00AF     	 add r7,sp,#0
 117              	.LCFI8:
 118              	 .cfi_def_cfa_register 7
 119 0006 7860     	 str r0,[r7,#4]
 658:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h ****     return (em == NULL || em->errorRegister == NULL) ? 0 : *em->errorRegister;
 120              	 .loc 1 658 0
 121 0008 7B68     	 ldr r3,[r7,#4]
 122 000a 002B     	 cmp r3,#0
 123 000c 07D0     	 beq .L7
 124              	 .loc 1 658 0 is_stmt 0 discriminator 1
 125 000e 7B68     	 ldr r3,[r7,#4]
 126 0010 DB68     	 ldr r3,[r3,#12]
 127 0012 002B     	 cmp r3,#0
 128 0014 03D0     	 beq .L7
 129              	 .loc 1 658 0 discriminator 3
 130 0016 7B68     	 ldr r3,[r7,#4]
 131 0018 DB68     	 ldr r3,[r3,#12]
 132 001a 1B78     	 ldrb r3,[r3]
 133 001c 00E0     	 b .L8
 134              	.L7:
 135              	 .loc 1 658 0 discriminator 4
 136 001e 0023     	 movs r3,#0
 137              	.L8:
 659:D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301\CO_Emergency.h **** }
 138              	 .loc 1 659 0 is_stmt 1 discriminator 6
 139 0020 1846     	 mov r0,r3
 140 0022 0C37     	 adds r7,r7,#12
 141              	.LCFI9:
 142              	 .cfi_def_cfa_offset 4
 143 0024 BD46     	 mov sp,r7
 144              	.LCFI10:
 145              	 .cfi_def_cfa_register 13
 146              	 
 147 0026 5DF8047B 	 ldr r7,[sp],#4
 148              	.LCFI11:
 149              	 .cfi_restore 7
 150              	 .cfi_def_cfa_offset 0
 151 002a 7047     	 bx lr
 152              	 .cfi_endproc
 153              	.LFE34:
 155              	 .section .text.CO_NMT_getInternalState,"ax",%progbits
 156              	 .align 2
 157              	 .thumb
 158              	 .thumb_func
 160              	CO_NMT_getInternalState:
 161              	.LFB35:
 162              	 .file 2 "../CANopen/stack/301/CO_NMT_Heartbeat.h"
   1:../CANopen/stack/301/CO_NMT_Heartbeat.h **** /**
   2:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * CANopen Network management and Heartbeat producer protocol.
   3:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  *
   4:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * @file        CO_NMT_Heartbeat.h
   5:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * @ingroup     CO_NMT_Heartbeat
   6:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * @author      Janez Paternoster
   7:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * @copyright   2004 - 2020 Janez Paternoster
   8:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  *
   9:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * This file is part of CANopenNode, an opensource CANopen Stack.
  10:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * Project home page is <https://github.com/CANopenNode/CANopenNode>.
  11:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * For more information on CANopen see <http://www.can-cia.org/>.
  12:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  *
  13:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * Licensed under the Apache License, Version 2.0 (the "License");
  14:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * you may not use this file except in compliance with the License.
  15:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * You may obtain a copy of the License at
  16:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  *
  17:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  *     http://www.apache.org/licenses/LICENSE-2.0
  18:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  *
  19:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * Unless required by applicable law or agreed to in writing, software
  20:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * distributed under the License is distributed on an "AS IS" BASIS,
  21:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  22:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * See the License for the specific language governing permissions and
  23:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * limitations under the License.
  24:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  */
  25:../CANopen/stack/301/CO_NMT_Heartbeat.h **** 
  26:../CANopen/stack/301/CO_NMT_Heartbeat.h **** #ifndef CO_NMT_HEARTBEAT_H
  27:../CANopen/stack/301/CO_NMT_Heartbeat.h **** #define CO_NMT_HEARTBEAT_H
  28:../CANopen/stack/301/CO_NMT_Heartbeat.h **** 
  29:../CANopen/stack/301/CO_NMT_Heartbeat.h **** #include "301/CO_driver.h"
  30:../CANopen/stack/301/CO_NMT_Heartbeat.h **** #include "301/CO_ODinterface.h"
  31:../CANopen/stack/301/CO_NMT_Heartbeat.h **** #include "301/CO_Emergency.h"
  32:../CANopen/stack/301/CO_NMT_Heartbeat.h **** 
  33:../CANopen/stack/301/CO_NMT_Heartbeat.h **** /* default configuration, see CO_config.h */
  34:../CANopen/stack/301/CO_NMT_Heartbeat.h **** #ifndef CO_CONFIG_NMT
  35:../CANopen/stack/301/CO_NMT_Heartbeat.h **** #define CO_CONFIG_NMT (CO_CONFIG_GLOBAL_FLAG_CALLBACK_PRE | \
  36:../CANopen/stack/301/CO_NMT_Heartbeat.h ****                        CO_CONFIG_GLOBAL_FLAG_TIMERNEXT)
  37:../CANopen/stack/301/CO_NMT_Heartbeat.h **** #endif
  38:../CANopen/stack/301/CO_NMT_Heartbeat.h **** 
  39:../CANopen/stack/301/CO_NMT_Heartbeat.h **** #ifdef __cplusplus
  40:../CANopen/stack/301/CO_NMT_Heartbeat.h **** extern "C" {
  41:../CANopen/stack/301/CO_NMT_Heartbeat.h **** #endif
  42:../CANopen/stack/301/CO_NMT_Heartbeat.h **** 
  43:../CANopen/stack/301/CO_NMT_Heartbeat.h **** /**
  44:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * @defgroup CO_NMT_Heartbeat NMT and Heartbeat
  45:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * CANopen Network management and Heartbeat producer protocol.
  46:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  *
  47:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * @ingroup CO_CANopen_301
  48:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * @{
  49:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * CANopen device can be in one of the @ref CO_NMT_internalState_t
  50:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  *  - Initializing. It is active before CANopen is initialized.
  51:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  *  - Pre-operational. All CANopen objects are active, except PDOs.
  52:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  *  - Operational. Process data objects (PDOs) are active too.
  53:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  *  - Stopped. Only Heartbeat producer and NMT consumer are active.
  54:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  *
  55:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * NMT master can change the internal state of the devices by sending
  56:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * @ref CO_NMT_command_t.
  57:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  *
  58:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * ### NMT message contents:
  59:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  *
  60:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  *   Byte | Description
  61:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  *   -----|-----------------------------------------------------------
  62:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  *     0  | @ref CO_NMT_command_t
  63:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  *     1  | Node ID. If zero, command addresses all nodes.
  64:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  *
  65:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * ### Heartbeat message contents:
  66:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  *
  67:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  *   Byte | Description
  68:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  *   -----|-----------------------------------------------------------
  69:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  *     0  | @ref CO_NMT_internalState_t
  70:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  *
  71:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * See @ref CO_Default_CAN_ID_t for CAN identifiers.
  72:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  */
  73:../CANopen/stack/301/CO_NMT_Heartbeat.h **** 
  74:../CANopen/stack/301/CO_NMT_Heartbeat.h **** /**
  75:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * Internal network state of the CANopen node
  76:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  */
  77:../CANopen/stack/301/CO_NMT_Heartbeat.h **** typedef enum {
  78:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     /** -1, Device state is unknown (for heartbeat consumer) */
  79:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     CO_NMT_UNKNOWN = -1,
  80:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     /** 0, Device is initializing */
  81:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     CO_NMT_INITIALIZING = 0,
  82:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     /** 127, Device is in pre-operational state */
  83:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     CO_NMT_PRE_OPERATIONAL = 127,
  84:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     /** 5, Device is in operational state */
  85:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     CO_NMT_OPERATIONAL = 5,
  86:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     /** 4, Device is stopped */
  87:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     CO_NMT_STOPPED = 4
  88:../CANopen/stack/301/CO_NMT_Heartbeat.h **** } CO_NMT_internalState_t;
  89:../CANopen/stack/301/CO_NMT_Heartbeat.h **** 
  90:../CANopen/stack/301/CO_NMT_Heartbeat.h **** 
  91:../CANopen/stack/301/CO_NMT_Heartbeat.h **** /**
  92:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * Commands from NMT master.
  93:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  */
  94:../CANopen/stack/301/CO_NMT_Heartbeat.h **** typedef enum {
  95:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     /** 0, No command */
  96:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     CO_NMT_NO_COMMAND = 0,
  97:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     /** 1, Start device */
  98:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     CO_NMT_ENTER_OPERATIONAL = 1,
  99:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     /** 2, Stop device */
 100:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     CO_NMT_ENTER_STOPPED = 2,
 101:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     /** 128, Put device into pre-operational */
 102:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     CO_NMT_ENTER_PRE_OPERATIONAL = 128,
 103:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     /** 129, Reset device */
 104:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     CO_NMT_RESET_NODE = 129,
 105:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     /** 130, Reset CANopen communication on device */
 106:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     CO_NMT_RESET_COMMUNICATION = 130
 107:../CANopen/stack/301/CO_NMT_Heartbeat.h **** } CO_NMT_command_t;
 108:../CANopen/stack/301/CO_NMT_Heartbeat.h **** 
 109:../CANopen/stack/301/CO_NMT_Heartbeat.h **** 
 110:../CANopen/stack/301/CO_NMT_Heartbeat.h **** /**
 111:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * Return code from CO_NMT_process() that tells application code what to
 112:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * reset.
 113:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  */
 114:../CANopen/stack/301/CO_NMT_Heartbeat.h **** typedef enum {
 115:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     /** 0, Normal return, no action */
 116:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     CO_RESET_NOT = 0,
 117:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     /** 1, Application must provide communication reset. */
 118:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     CO_RESET_COMM = 1,
 119:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     /** 2, Application must provide complete device reset */
 120:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     CO_RESET_APP = 2,
 121:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     /** 3, Application must quit, no reset of microcontroller (command is not
 122:../CANopen/stack/301/CO_NMT_Heartbeat.h ****      * requested by the stack.) */
 123:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     CO_RESET_QUIT = 3
 124:../CANopen/stack/301/CO_NMT_Heartbeat.h **** } CO_NMT_reset_cmd_t;
 125:../CANopen/stack/301/CO_NMT_Heartbeat.h **** 
 126:../CANopen/stack/301/CO_NMT_Heartbeat.h **** 
 127:../CANopen/stack/301/CO_NMT_Heartbeat.h **** /**
 128:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * NMT control bitfield for NMT internal state.
 129:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  *
 130:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * Variable of this type is passed to @ref CO_NMT_init() function. It
 131:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * controls behavior of the @ref CO_NMT_internalState_t of the device according
 132:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * to CANopen error register.
 133:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  *
 134:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * Internal NMT state is controlled also with external NMT command,
 135:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * @ref CO_NMT_sendInternalCommand() or @ref CO_NMT_sendCommand() functions.
 136:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  */
 137:../CANopen/stack/301/CO_NMT_Heartbeat.h **** typedef enum {
 138:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     /** First 8 bits can be used to specify bitmask for the
 139:../CANopen/stack/301/CO_NMT_Heartbeat.h ****      * @ref CO_errorRegister_t, to get relevant bits for the calculation. */
 140:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     CO_NMT_ERR_REG_MASK = 0x00FFU,
 141:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     /** If bit is set, then device enters NMT operational state after the
 142:../CANopen/stack/301/CO_NMT_Heartbeat.h ****      * initialization phase, otherwise it enters NMT pre-operational state. */
 143:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     CO_NMT_STARTUP_TO_OPERATIONAL = 0x0100U,
 144:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     /** If bit is set and device is operational, it enters NMT pre-operational
 145:../CANopen/stack/301/CO_NMT_Heartbeat.h ****      * or stopped state, if CAN bus is off or heartbeat consumer timeout is
 146:../CANopen/stack/301/CO_NMT_Heartbeat.h ****      * detected. */
 147:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     CO_NMT_ERR_ON_BUSOFF_HB = 0x1000U,
 148:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     /** If bit is set and device is operational, it enters NMT pre-operational
 149:../CANopen/stack/301/CO_NMT_Heartbeat.h ****      * or stopped state, if masked CANopen error register is different than
 150:../CANopen/stack/301/CO_NMT_Heartbeat.h ****      * zero. */
 151:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     CO_NMT_ERR_ON_ERR_REG = 0x2000U,
 152:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     /** If bit is set and CO_NMT_ERR_ON_xx condition is met, then device will
 153:../CANopen/stack/301/CO_NMT_Heartbeat.h ****      * enter NMT stopped state, otherwise it will enter NMT pre-op state. */
 154:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     CO_NMT_ERR_TO_STOPPED = 0x4000U,
 155:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     /** If bit is set and device is pre-operational, it enters NMT operational
 156:../CANopen/stack/301/CO_NMT_Heartbeat.h ****      * state automatically, if conditions from CO_NMT_ERR_ON_xx are all false.*/
 157:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     CO_NMT_ERR_FREE_TO_OPERATIONAL = 0x8000U
 158:../CANopen/stack/301/CO_NMT_Heartbeat.h **** } CO_NMT_control_t;
 159:../CANopen/stack/301/CO_NMT_Heartbeat.h **** 
 160:../CANopen/stack/301/CO_NMT_Heartbeat.h **** 
 161:../CANopen/stack/301/CO_NMT_Heartbeat.h **** /**
 162:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * NMT consumer and Heartbeat producer object
 163:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  */
 164:../CANopen/stack/301/CO_NMT_Heartbeat.h **** typedef struct {
 165:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     /** Current NMT operating state. */
 166:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     CO_NMT_internalState_t operatingState;
 167:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     /** Previous NMT operating state. */
 168:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     CO_NMT_internalState_t operatingStatePrev;
 169:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     /** NMT internal command from CO_NMT_receive() or CO_NMT_sendCommand(),
 170:../CANopen/stack/301/CO_NMT_Heartbeat.h ****      * processed in CO_NMT_process(). */
 171:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     CO_NMT_command_t internalCommand;
 172:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     /** From CO_NMT_init() */
 173:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     uint8_t nodeId;
 174:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     /** From CO_NMT_init() */
 175:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     CO_NMT_control_t NMTcontrol;
 176:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     /** Producer heartbeat time, calculated from OD 0x1017 */
 177:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     uint32_t HBproducerTime_us;
 178:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     /** Internal timer for HB producer */
 179:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     uint32_t HBproducerTimer;
 180:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     /** Extension for OD object */
 181:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     OD_extension_t OD_1017_extension;
 182:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     /** From CO_NMT_init() */
 183:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     CO_EM_t *em;
 184:../CANopen/stack/301/CO_NMT_Heartbeat.h **** #if ((CO_CONFIG_NMT) & CO_CONFIG_NMT_MASTER) || defined CO_DOXYGEN
 185:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     /** From CO_NMT_init() */
 186:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     CO_CANmodule_t *NMT_CANdevTx;
 187:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     /** CAN transmit buffer for NMT master message */
 188:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     CO_CANtx_t *NMT_TXbuff;
 189:../CANopen/stack/301/CO_NMT_Heartbeat.h **** #endif
 190:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     /** From CO_NMT_init() */
 191:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     CO_CANmodule_t *HB_CANdevTx;
 192:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     /** CAN transmit buffer for heartbeat message */
 193:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     CO_CANtx_t *HB_TXbuff;
 194:../CANopen/stack/301/CO_NMT_Heartbeat.h **** #if ((CO_CONFIG_NMT) & CO_CONFIG_FLAG_CALLBACK_PRE) || defined CO_DOXYGEN
 195:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     /** From CO_NMT_initCallbackPre() or NULL */
 196:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     void (*pFunctSignalPre)(void *object);
 197:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     /** From CO_NMT_initCallbackPre() or NULL */
 198:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     void *functSignalObjectPre;
 199:../CANopen/stack/301/CO_NMT_Heartbeat.h **** #endif
 200:../CANopen/stack/301/CO_NMT_Heartbeat.h **** #if ((CO_CONFIG_NMT) & CO_CONFIG_NMT_CALLBACK_CHANGE) || defined CO_DOXYGEN
 201:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     /** From CO_NMT_initCallbackChanged() or NULL */
 202:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     void (*pFunctNMT)(CO_NMT_internalState_t state);
 203:../CANopen/stack/301/CO_NMT_Heartbeat.h **** #endif
 204:../CANopen/stack/301/CO_NMT_Heartbeat.h **** } CO_NMT_t;
 205:../CANopen/stack/301/CO_NMT_Heartbeat.h **** 
 206:../CANopen/stack/301/CO_NMT_Heartbeat.h **** 
 207:../CANopen/stack/301/CO_NMT_Heartbeat.h **** /**
 208:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * Initialize NMT and Heartbeat producer object.
 209:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  *
 210:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * Function must be called in the communication reset section.
 211:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  *
 212:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * @param NMT This object will be initialized.
 213:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * @param OD_1017_ProducerHbTime OD entry for 0x1017 -"Producer heartbeat time",
 214:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * entry is required, IO extension is optional for runtime configuration.
 215:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * @param em Emergency object.
 216:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * @param nodeId CANopen Node ID of this device.
 217:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * @param NMTcontrol Control variable for calculation of NMT internal state,
 218:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * based on error register, startup and runtime behavior.
 219:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * @param firstHBTime_ms Time between bootup and first heartbeat message in
 220:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * milliseconds. If firstHBTime_ms is greater than "Producer Heartbeat time"
 221:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * (OD object 0x1017), latter is used instead. Entry is required, IO extension
 222:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * is optional.
 223:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * @param NMT_CANdevRx CAN device for NMT reception.
 224:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * @param NMT_rxIdx Index of receive buffer in above CAN device.
 225:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * @param CANidRxNMT CAN identifier for NMT receive message.
 226:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * @param NMT_CANdevTx CAN device for NMT master transmission.
 227:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * @param NMT_txIdx Index of transmit buffer in above CAN device.
 228:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * @param CANidTxNMT CAN identifier for NMT transmit message.
 229:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * @param HB_CANdevTx CAN device for HB transmission.
 230:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * @param HB_txIdx Index of transmit buffer in the above CAN device.
 231:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * @param CANidTxHB CAN identifier for HB message.
 232:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * @param [out] errInfo Additional information in case of error, may be NULL.
 233:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  *
 234:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * @return #CO_ReturnError_t CO_ERROR_NO on success.
 235:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  */
 236:../CANopen/stack/301/CO_NMT_Heartbeat.h **** CO_ReturnError_t CO_NMT_init(CO_NMT_t *NMT,
 237:../CANopen/stack/301/CO_NMT_Heartbeat.h ****                              OD_entry_t *OD_1017_ProducerHbTime,
 238:../CANopen/stack/301/CO_NMT_Heartbeat.h ****                              CO_EM_t *em,
 239:../CANopen/stack/301/CO_NMT_Heartbeat.h ****                              uint8_t nodeId,
 240:../CANopen/stack/301/CO_NMT_Heartbeat.h ****                              CO_NMT_control_t NMTcontrol,
 241:../CANopen/stack/301/CO_NMT_Heartbeat.h ****                              uint16_t firstHBTime_ms,
 242:../CANopen/stack/301/CO_NMT_Heartbeat.h ****                              CO_CANmodule_t *NMT_CANdevRx,
 243:../CANopen/stack/301/CO_NMT_Heartbeat.h ****                              uint16_t NMT_rxIdx,
 244:../CANopen/stack/301/CO_NMT_Heartbeat.h ****                              uint16_t CANidRxNMT,
 245:../CANopen/stack/301/CO_NMT_Heartbeat.h **** #if ((CO_CONFIG_NMT) & CO_CONFIG_NMT_MASTER) || defined CO_DOXYGEN
 246:../CANopen/stack/301/CO_NMT_Heartbeat.h ****                              CO_CANmodule_t *NMT_CANdevTx,
 247:../CANopen/stack/301/CO_NMT_Heartbeat.h ****                              uint16_t NMT_txIdx,
 248:../CANopen/stack/301/CO_NMT_Heartbeat.h ****                              uint16_t CANidTxNMT,
 249:../CANopen/stack/301/CO_NMT_Heartbeat.h **** #endif
 250:../CANopen/stack/301/CO_NMT_Heartbeat.h ****                              CO_CANmodule_t *HB_CANdevTx,
 251:../CANopen/stack/301/CO_NMT_Heartbeat.h ****                              uint16_t HB_txIdx,
 252:../CANopen/stack/301/CO_NMT_Heartbeat.h ****                              uint16_t CANidTxHB,
 253:../CANopen/stack/301/CO_NMT_Heartbeat.h ****                              uint32_t *errInfo);
 254:../CANopen/stack/301/CO_NMT_Heartbeat.h **** 
 255:../CANopen/stack/301/CO_NMT_Heartbeat.h **** 
 256:../CANopen/stack/301/CO_NMT_Heartbeat.h **** #if ((CO_CONFIG_NMT) & CO_CONFIG_FLAG_CALLBACK_PRE) || defined CO_DOXYGEN
 257:../CANopen/stack/301/CO_NMT_Heartbeat.h **** /**
 258:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * Initialize NMT callback function after message preprocessed.
 259:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  *
 260:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * Function initializes optional callback function, which should immediately
 261:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * start processing of CO_NMT_process() function.
 262:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * Callback is called after NMT message is received from the CAN bus.
 263:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  *
 264:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * @param NMT This object.
 265:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * @param object Pointer to object, which will be passed to pFunctSignal().
 266:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * Can be NULL
 267:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * @param pFunctSignal Pointer to the callback function. Not called if NULL.
 268:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  */
 269:../CANopen/stack/301/CO_NMT_Heartbeat.h **** void CO_NMT_initCallbackPre(CO_NMT_t *NMT,
 270:../CANopen/stack/301/CO_NMT_Heartbeat.h ****                             void *object,
 271:../CANopen/stack/301/CO_NMT_Heartbeat.h ****                             void (*pFunctSignal)(void *object));
 272:../CANopen/stack/301/CO_NMT_Heartbeat.h **** #endif
 273:../CANopen/stack/301/CO_NMT_Heartbeat.h **** 
 274:../CANopen/stack/301/CO_NMT_Heartbeat.h **** 
 275:../CANopen/stack/301/CO_NMT_Heartbeat.h **** #if ((CO_CONFIG_NMT) & CO_CONFIG_NMT_CALLBACK_CHANGE) || defined CO_DOXYGEN
 276:../CANopen/stack/301/CO_NMT_Heartbeat.h **** /**
 277:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * Initialize NMT callback function.
 278:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  *
 279:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * Function initializes optional callback function, which is called after
 280:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * NMT State change has occurred. Function may wake up external task which
 281:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * handles NMT events. The first call is made immediately to give the consumer
 282:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * the current NMT state.
 283:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  *
 284:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * @param NMT This object.
 285:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * @param pFunctNMT Pointer to the callback function. Not called if NULL.
 286:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  */
 287:../CANopen/stack/301/CO_NMT_Heartbeat.h **** void CO_NMT_initCallbackChanged(CO_NMT_t *NMT,
 288:../CANopen/stack/301/CO_NMT_Heartbeat.h ****                                 void (*pFunctNMT)(CO_NMT_internalState_t state));
 289:../CANopen/stack/301/CO_NMT_Heartbeat.h **** #endif
 290:../CANopen/stack/301/CO_NMT_Heartbeat.h **** 
 291:../CANopen/stack/301/CO_NMT_Heartbeat.h **** 
 292:../CANopen/stack/301/CO_NMT_Heartbeat.h **** /**
 293:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * Process received NMT and produce Heartbeat messages.
 294:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  *
 295:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * Function must be called cyclically.
 296:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  *
 297:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * @param NMT This object.
 298:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * @param [out] NMTstate If not NULL, CANopen NMT internal state is returned.
 299:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * @param timeDifference_us Time difference from previous function call in
 300:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * microseconds.
 301:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * @param [out] timerNext_us info to OS - see CO_process().
 302:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  *
 303:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * @return #CO_NMT_reset_cmd_t
 304:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  */
 305:../CANopen/stack/301/CO_NMT_Heartbeat.h **** CO_NMT_reset_cmd_t CO_NMT_process(CO_NMT_t *NMT,
 306:../CANopen/stack/301/CO_NMT_Heartbeat.h ****                                   CO_NMT_internalState_t *NMTstate,
 307:../CANopen/stack/301/CO_NMT_Heartbeat.h ****                                   uint32_t timeDifference_us,
 308:../CANopen/stack/301/CO_NMT_Heartbeat.h ****                                   uint32_t *timerNext_us);
 309:../CANopen/stack/301/CO_NMT_Heartbeat.h **** 
 310:../CANopen/stack/301/CO_NMT_Heartbeat.h **** 
 311:../CANopen/stack/301/CO_NMT_Heartbeat.h **** /**
 312:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * Query current NMT state
 313:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  *
 314:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * @param NMT This object.
 315:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  *
 316:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  * @return @ref CO_NMT_internalState_t
 317:../CANopen/stack/301/CO_NMT_Heartbeat.h ****  */
 318:../CANopen/stack/301/CO_NMT_Heartbeat.h **** static inline CO_NMT_internalState_t CO_NMT_getInternalState(CO_NMT_t *NMT) {
 163              	 .loc 2 318 0
 164              	 .cfi_startproc
 165              	 
 166              	 
 167              	 
 168 0000 80B4     	 push {r7}
 169              	.LCFI12:
 170              	 .cfi_def_cfa_offset 4
 171              	 .cfi_offset 7,-4
 172 0002 83B0     	 sub sp,sp,#12
 173              	.LCFI13:
 174              	 .cfi_def_cfa_offset 16
 175 0004 00AF     	 add r7,sp,#0
 176              	.LCFI14:
 177              	 .cfi_def_cfa_register 7
 178 0006 7860     	 str r0,[r7,#4]
 319:../CANopen/stack/301/CO_NMT_Heartbeat.h ****     return (NMT == NULL) ? CO_NMT_INITIALIZING : NMT->operatingState;
 179              	 .loc 2 319 0
 180 0008 7B68     	 ldr r3,[r7,#4]
 181 000a 002B     	 cmp r3,#0
 182 000c 02D0     	 beq .L11
 183              	 .loc 2 319 0 is_stmt 0 discriminator 1
 184 000e 7B68     	 ldr r3,[r7,#4]
 185 0010 1B78     	 ldrb r3,[r3]
 186 0012 00E0     	 b .L12
 187              	.L11:
 188              	 .loc 2 319 0 discriminator 2
 189 0014 0023     	 movs r3,#0
 190              	.L12:
 191              	 .loc 2 319 0 discriminator 4
 192 0016 DBB2     	 uxtb r3,r3
 193 0018 5BB2     	 sxtb r3,r3
 320:../CANopen/stack/301/CO_NMT_Heartbeat.h **** }
 194              	 .loc 2 320 0 is_stmt 1 discriminator 4
 195 001a 1846     	 mov r0,r3
 196 001c 0C37     	 adds r7,r7,#12
 197              	.LCFI15:
 198              	 .cfi_def_cfa_offset 4
 199 001e BD46     	 mov sp,r7
 200              	.LCFI16:
 201              	 .cfi_def_cfa_register 13
 202              	 
 203 0020 5DF8047B 	 ldr r7,[sp],#4
 204              	.LCFI17:
 205              	 .cfi_restore 7
 206              	 .cfi_def_cfa_offset 0
 207 0024 7047     	 bx lr
 208              	 .cfi_endproc
 209              	.LFE35:
 211 0026 00BF     	 .section .rodata.CO_LSS_bitTimingTableLookup,"a",%progbits
 212              	 .align 2
 215              	CO_LSS_bitTimingTableLookup:
 216 0000 E803     	 .short 1000
 217 0002 2003     	 .short 800
 218 0004 F401     	 .short 500
 219 0006 FA00     	 .short 250
 220 0008 7D00     	 .short 125
 221 000a 0000     	 .short 0
 222 000c 3200     	 .short 50
 223 000e 1400     	 .short 20
 224 0010 0A00     	 .short 10
 225 0012 0000     	 .short 0
 226              	 .section .text.CO_LSSslave_getState,"ax",%progbits
 227              	 .align 2
 228              	 .thumb
 229              	 .thumb_func
 231              	CO_LSSslave_getState:
 232              	.LFB40:
 233              	 .file 3 "../CANopen/stack/305/CO_LSSslave.h"
   1:../CANopen/stack/305/CO_LSSslave.h **** /**
   2:../CANopen/stack/305/CO_LSSslave.h ****  * CANopen Layer Setting Service - slave protocol.
   3:../CANopen/stack/305/CO_LSSslave.h ****  *
   4:../CANopen/stack/305/CO_LSSslave.h ****  * @file        CO_LSSslave.h
   5:../CANopen/stack/305/CO_LSSslave.h ****  * @ingroup     CO_LSS
   6:../CANopen/stack/305/CO_LSSslave.h ****  * @author      Martin Wagner
   7:../CANopen/stack/305/CO_LSSslave.h ****  * @author      Janez Paternoster
   8:../CANopen/stack/305/CO_LSSslave.h ****  * @copyright   2017 - 2020 Neuberger Gebaeudeautomation GmbH
   9:../CANopen/stack/305/CO_LSSslave.h ****  *
  10:../CANopen/stack/305/CO_LSSslave.h ****  *
  11:../CANopen/stack/305/CO_LSSslave.h ****  * This file is part of CANopenNode, an opensource CANopen Stack.
  12:../CANopen/stack/305/CO_LSSslave.h ****  * Project home page is <https://github.com/CANopenNode/CANopenNode>.
  13:../CANopen/stack/305/CO_LSSslave.h ****  * For more information on CANopen see <http://www.can-cia.org/>.
  14:../CANopen/stack/305/CO_LSSslave.h ****  *
  15:../CANopen/stack/305/CO_LSSslave.h ****  * Licensed under the Apache License, Version 2.0 (the "License");
  16:../CANopen/stack/305/CO_LSSslave.h ****  * you may not use this file except in compliance with the License.
  17:../CANopen/stack/305/CO_LSSslave.h ****  * You may obtain a copy of the License at
  18:../CANopen/stack/305/CO_LSSslave.h ****  *
  19:../CANopen/stack/305/CO_LSSslave.h ****  *     http://www.apache.org/licenses/LICENSE-2.0
  20:../CANopen/stack/305/CO_LSSslave.h ****  *
  21:../CANopen/stack/305/CO_LSSslave.h ****  * Unless required by applicable law or agreed to in writing, software
  22:../CANopen/stack/305/CO_LSSslave.h ****  * distributed under the License is distributed on an "AS IS" BASIS,
  23:../CANopen/stack/305/CO_LSSslave.h ****  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  24:../CANopen/stack/305/CO_LSSslave.h ****  * See the License for the specific language governing permissions and
  25:../CANopen/stack/305/CO_LSSslave.h ****  * limitations under the License.
  26:../CANopen/stack/305/CO_LSSslave.h ****  */
  27:../CANopen/stack/305/CO_LSSslave.h **** 
  28:../CANopen/stack/305/CO_LSSslave.h **** #ifndef CO_LSSslave_H
  29:../CANopen/stack/305/CO_LSSslave.h **** #define CO_LSSslave_H
  30:../CANopen/stack/305/CO_LSSslave.h **** 
  31:../CANopen/stack/305/CO_LSSslave.h **** #include "305/CO_LSS.h"
  32:../CANopen/stack/305/CO_LSSslave.h **** 
  33:../CANopen/stack/305/CO_LSSslave.h **** #if ((CO_CONFIG_LSS) & CO_CONFIG_LSS_SLAVE) || defined CO_DOXYGEN
  34:../CANopen/stack/305/CO_LSSslave.h **** 
  35:../CANopen/stack/305/CO_LSSslave.h **** #ifdef __cplusplus
  36:../CANopen/stack/305/CO_LSSslave.h **** extern "C" {
  37:../CANopen/stack/305/CO_LSSslave.h **** #endif
  38:../CANopen/stack/305/CO_LSSslave.h **** 
  39:../CANopen/stack/305/CO_LSSslave.h **** /**
  40:../CANopen/stack/305/CO_LSSslave.h ****  * @defgroup CO_LSSslave LSS Slave
  41:../CANopen/stack/305/CO_LSSslave.h ****  * CANopen Layer Setting Service - slave protocol.
  42:../CANopen/stack/305/CO_LSSslave.h ****  *
  43:../CANopen/stack/305/CO_LSSslave.h ****  * @ingroup CO_CANopen_305
  44:../CANopen/stack/305/CO_LSSslave.h ****  * @{
  45:../CANopen/stack/305/CO_LSSslave.h ****  * The slave provides the following services
  46:../CANopen/stack/305/CO_LSSslave.h ****  * - node selection via LSS address
  47:../CANopen/stack/305/CO_LSSslave.h ****  * - node selection via LSS fastscan
  48:../CANopen/stack/305/CO_LSSslave.h ****  * - Inquire LSS address of currently selected node
  49:../CANopen/stack/305/CO_LSSslave.h ****  * - Inquire node ID
  50:../CANopen/stack/305/CO_LSSslave.h ****  * - Configure bit timing
  51:../CANopen/stack/305/CO_LSSslave.h ****  * - Configure node ID
  52:../CANopen/stack/305/CO_LSSslave.h ****  * - Activate bit timing parameters
  53:../CANopen/stack/305/CO_LSSslave.h ****  * - Store configuration (bit rate and node ID)
  54:../CANopen/stack/305/CO_LSSslave.h ****  *
  55:../CANopen/stack/305/CO_LSSslave.h ****  * After CAN module start, the LSS slave and NMT slave are started and then
  56:../CANopen/stack/305/CO_LSSslave.h ****  * coexist alongside each other. To achieve this behaviour, the CANopen node
  57:../CANopen/stack/305/CO_LSSslave.h ****  * startup process has to be controlled more detailed. Therefore, CO_LSSinit()
  58:../CANopen/stack/305/CO_LSSslave.h ****  * must be invoked between CO_CANinit() and CO_CANopenInit() in the
  59:../CANopen/stack/305/CO_LSSslave.h ****  * communication reset section.
  60:../CANopen/stack/305/CO_LSSslave.h ****  *
  61:../CANopen/stack/305/CO_LSSslave.h ****  * Moreover, the LSS slave needs to pause the NMT slave initialization in case
  62:../CANopen/stack/305/CO_LSSslave.h ****  * no valid node ID is available at start up. In that case CO_CANopenInit()
  63:../CANopen/stack/305/CO_LSSslave.h ****  * skips initialization of other CANopen modules and CO_process() skips
  64:../CANopen/stack/305/CO_LSSslave.h ****  * processing of other modules than LSS slave automatically.
  65:../CANopen/stack/305/CO_LSSslave.h ****  *
  66:../CANopen/stack/305/CO_LSSslave.h ****  * Variables for CAN-bitrate and CANopen node-id must be initialized by
  67:../CANopen/stack/305/CO_LSSslave.h ****  * application from non-volatile memory or dip switches. Pointers to them are
  68:../CANopen/stack/305/CO_LSSslave.h ****  * passed to CO_LSSinit() function. Those variables represents pending values.
  69:../CANopen/stack/305/CO_LSSslave.h ****  * If node-id is valid in the moment it enters CO_LSSinit(), it also becomes
  70:../CANopen/stack/305/CO_LSSslave.h ****  * active node-id and the stack initialises normally. Otherwise, node-id must be
  71:../CANopen/stack/305/CO_LSSslave.h ****  * configured by lss and after successful configuration stack passes reset
  72:../CANopen/stack/305/CO_LSSslave.h ****  * communication autonomously.
  73:../CANopen/stack/305/CO_LSSslave.h ****  *
  74:../CANopen/stack/305/CO_LSSslave.h ****  * Device with all threads can be normally initialized and running despite that
  75:../CANopen/stack/305/CO_LSSslave.h ****  * node-id is not valid. Application must take care, because CANopen is not
  76:../CANopen/stack/305/CO_LSSslave.h ****  * initialized. In that case CO_CANopenInit() returns error condition
  77:../CANopen/stack/305/CO_LSSslave.h ****  * CO_ERROR_NODE_ID_UNCONFIGURED_LSS which must be handled properly. Status can
  78:../CANopen/stack/305/CO_LSSslave.h ****  * also be checked with CO->nodeIdUnconfigured variable.
  79:../CANopen/stack/305/CO_LSSslave.h ****  *
  80:../CANopen/stack/305/CO_LSSslave.h ****  * Some callback functions may be initialized by application with
  81:../CANopen/stack/305/CO_LSSslave.h ****  * CO_LSSslave_initCheckBitRateCallback(),
  82:../CANopen/stack/305/CO_LSSslave.h ****  * CO_LSSslave_initActivateBitRateCallback() and
  83:../CANopen/stack/305/CO_LSSslave.h ****  * CO_LSSslave_initCfgStoreCallback().
  84:../CANopen/stack/305/CO_LSSslave.h ****  */
  85:../CANopen/stack/305/CO_LSSslave.h **** 
  86:../CANopen/stack/305/CO_LSSslave.h **** /**
  87:../CANopen/stack/305/CO_LSSslave.h ****  * LSS slave object.
  88:../CANopen/stack/305/CO_LSSslave.h ****  */
  89:../CANopen/stack/305/CO_LSSslave.h **** typedef struct{
  90:../CANopen/stack/305/CO_LSSslave.h ****     CO_LSS_address_t        lssAddress;       /**< From #CO_LSSslave_init */
  91:../CANopen/stack/305/CO_LSSslave.h ****     CO_LSS_state_t          lssState;         /**< #CO_LSS_state_t */
  92:../CANopen/stack/305/CO_LSSslave.h ****     CO_LSS_address_t        lssSelect;        /**< Received LSS Address by select */
  93:../CANopen/stack/305/CO_LSSslave.h **** 
  94:../CANopen/stack/305/CO_LSSslave.h ****     CO_LSS_address_t        lssFastscan;      /**< Received LSS Address by fastscan */
  95:../CANopen/stack/305/CO_LSSslave.h ****     uint8_t                 fastscanPos;      /**< Current state of fastscan */
  96:../CANopen/stack/305/CO_LSSslave.h **** 
  97:../CANopen/stack/305/CO_LSSslave.h ****     uint16_t               *pendingBitRate;   /**< Bit rate value that is temporarily configured */
  98:../CANopen/stack/305/CO_LSSslave.h ****     uint8_t                *pendingNodeID;    /**< Node ID that is temporarily configured */
  99:../CANopen/stack/305/CO_LSSslave.h ****     uint8_t                 activeNodeID;     /**< Node ID used at the CAN interface */
 100:../CANopen/stack/305/CO_LSSslave.h **** 
 101:../CANopen/stack/305/CO_LSSslave.h ****     volatile void          *sendResponse;     /**< Variable indicates, if LSS response has to be se
 102:../CANopen/stack/305/CO_LSSslave.h ****     CO_LSS_cs_t             service;          /**< Service, which will have to be processed by main
 103:../CANopen/stack/305/CO_LSSslave.h ****     uint8_t                 CANdata[8];       /**< Received CAN data, which will be processed by ma
 104:../CANopen/stack/305/CO_LSSslave.h **** 
 105:../CANopen/stack/305/CO_LSSslave.h **** #if ((CO_CONFIG_LSS) & CO_CONFIG_FLAG_CALLBACK_PRE) || defined CO_DOXYGEN
 106:../CANopen/stack/305/CO_LSSslave.h ****     void                  (*pFunctSignalPre)(void *object); /**< From CO_LSSslave_initCallbackPre()
 107:../CANopen/stack/305/CO_LSSslave.h ****     void                   *functSignalObjectPre;/**< Pointer to object */
 108:../CANopen/stack/305/CO_LSSslave.h **** #endif
 109:../CANopen/stack/305/CO_LSSslave.h ****     bool_t                (*pFunctLSScheckBitRate)(void *object, uint16_t bitRate); /**< From CO_LS
 110:../CANopen/stack/305/CO_LSSslave.h ****     void                   *functLSScheckBitRateObject; /** Pointer to object */
 111:../CANopen/stack/305/CO_LSSslave.h ****     void                  (*pFunctLSSactivateBitRate)(void *object, uint16_t delay); /**< From CO_L
 112:../CANopen/stack/305/CO_LSSslave.h ****     void                   *functLSSactivateBitRateObject; /** Pointer to object */
 113:../CANopen/stack/305/CO_LSSslave.h ****     bool_t                (*pFunctLSScfgStore)(void *object, uint8_t id, uint16_t bitRate); /**< Fr
 114:../CANopen/stack/305/CO_LSSslave.h ****     void                   *functLSScfgStoreObject; /** Pointer to object */
 115:../CANopen/stack/305/CO_LSSslave.h **** 
 116:../CANopen/stack/305/CO_LSSslave.h ****     CO_CANmodule_t         *CANdevTx;         /**< From #CO_LSSslave_init() */
 117:../CANopen/stack/305/CO_LSSslave.h ****     CO_CANtx_t             *TXbuff;           /**< CAN transmit buffer */
 118:../CANopen/stack/305/CO_LSSslave.h **** }CO_LSSslave_t;
 119:../CANopen/stack/305/CO_LSSslave.h **** 
 120:../CANopen/stack/305/CO_LSSslave.h **** /**
 121:../CANopen/stack/305/CO_LSSslave.h ****  * Initialize LSS object.
 122:../CANopen/stack/305/CO_LSSslave.h ****  *
 123:../CANopen/stack/305/CO_LSSslave.h ****  * Function must be called in the communication reset section.
 124:../CANopen/stack/305/CO_LSSslave.h ****  *
 125:../CANopen/stack/305/CO_LSSslave.h ****  * pendingBitRate and pendingNodeID must be pointers to external variables. Both
 126:../CANopen/stack/305/CO_LSSslave.h ****  * variables must be initialized on program startup (after #CO_NMT_RESET_NODE)
 127:../CANopen/stack/305/CO_LSSslave.h ****  * from non-volatile memory, dip switches or similar. They must not change
 128:../CANopen/stack/305/CO_LSSslave.h ****  * during #CO_NMT_RESET_COMMUNICATION. Both variables can be changed by
 129:../CANopen/stack/305/CO_LSSslave.h ****  * CO_LSSslave_process(), depending on commands from the LSS master.
 130:../CANopen/stack/305/CO_LSSslave.h ****  *
 131:../CANopen/stack/305/CO_LSSslave.h ****  * If pendingNodeID is valid (1 <= pendingNodeID <= 0x7F), then this becomes
 132:../CANopen/stack/305/CO_LSSslave.h ****  * valid active nodeId just after exit of this function. In that case all other
 133:../CANopen/stack/305/CO_LSSslave.h ****  * CANopen objects may be initialized and processed in run time.
 134:../CANopen/stack/305/CO_LSSslave.h ****  *
 135:../CANopen/stack/305/CO_LSSslave.h ****  * If pendingNodeID is not valid (pendingNodeID == 0xFF), then only LSS slave is
 136:../CANopen/stack/305/CO_LSSslave.h ****  * initialized and processed in run time. In that state pendingNodeID can be
 137:../CANopen/stack/305/CO_LSSslave.h ****  * configured and after successful configuration reset communication with all
 138:../CANopen/stack/305/CO_LSSslave.h ****  * CANopen object is activated automatically.
 139:../CANopen/stack/305/CO_LSSslave.h ****  *
 140:../CANopen/stack/305/CO_LSSslave.h ****  * @remark The LSS address needs to be unique on the network. For this, the 128
 141:../CANopen/stack/305/CO_LSSslave.h ****  * bit wide identity object (1018h) is used. Therefore, this object has to be
 142:../CANopen/stack/305/CO_LSSslave.h ****  * fully initialized before passing it to this function (vendorID, product
 143:../CANopen/stack/305/CO_LSSslave.h ****  * code, revisionNo, serialNo are set to 0 by default). Otherwise, if
 144:../CANopen/stack/305/CO_LSSslave.h ****  * non-configured devices are present on CANopen network, LSS configuration may
 145:../CANopen/stack/305/CO_LSSslave.h ****  * behave unpredictable.
 146:../CANopen/stack/305/CO_LSSslave.h ****  *
 147:../CANopen/stack/305/CO_LSSslave.h ****  * @param LSSslave This object will be initialized.
 148:../CANopen/stack/305/CO_LSSslave.h ****  * @param lssAddress LSS address
 149:../CANopen/stack/305/CO_LSSslave.h ****  * @param [in,out] pendingBitRate Pending bit rate of the CAN interface
 150:../CANopen/stack/305/CO_LSSslave.h ****  * @param [in,out] pendingNodeID Pending node ID or 0xFF - invalid
 151:../CANopen/stack/305/CO_LSSslave.h ****  * @param CANdevRx CAN device for LSS slave reception.
 152:../CANopen/stack/305/CO_LSSslave.h ****  * @param CANdevRxIdx Index of receive buffer in the above CAN device.
 153:../CANopen/stack/305/CO_LSSslave.h ****  * @param CANidLssMaster COB ID for reception.
 154:../CANopen/stack/305/CO_LSSslave.h ****  * @param CANdevTx CAN device for LSS slave transmission.
 155:../CANopen/stack/305/CO_LSSslave.h ****  * @param CANdevTxIdx Index of transmit buffer in the above CAN device.
 156:../CANopen/stack/305/CO_LSSslave.h ****  * @param CANidLssSlave COB ID for transmission.
 157:../CANopen/stack/305/CO_LSSslave.h ****  * @return #CO_ReturnError_t: CO_ERROR_NO or CO_ERROR_ILLEGAL_ARGUMENT.
 158:../CANopen/stack/305/CO_LSSslave.h ****  */
 159:../CANopen/stack/305/CO_LSSslave.h **** CO_ReturnError_t CO_LSSslave_init(
 160:../CANopen/stack/305/CO_LSSslave.h ****         CO_LSSslave_t          *LSSslave,
 161:../CANopen/stack/305/CO_LSSslave.h ****         CO_LSS_address_t       *lssAddress,
 162:../CANopen/stack/305/CO_LSSslave.h ****         uint16_t               *pendingBitRate,
 163:../CANopen/stack/305/CO_LSSslave.h ****         uint8_t                *pendingNodeID,
 164:../CANopen/stack/305/CO_LSSslave.h ****         CO_CANmodule_t         *CANdevRx,
 165:../CANopen/stack/305/CO_LSSslave.h ****         uint16_t                CANdevRxIdx,
 166:../CANopen/stack/305/CO_LSSslave.h ****         uint16_t                CANidLssMaster,
 167:../CANopen/stack/305/CO_LSSslave.h ****         CO_CANmodule_t         *CANdevTx,
 168:../CANopen/stack/305/CO_LSSslave.h ****         uint16_t                CANdevTxIdx,
 169:../CANopen/stack/305/CO_LSSslave.h ****         uint16_t                CANidLssSlave);
 170:../CANopen/stack/305/CO_LSSslave.h **** 
 171:../CANopen/stack/305/CO_LSSslave.h **** /**
 172:../CANopen/stack/305/CO_LSSslave.h ****  * Process LSS communication
 173:../CANopen/stack/305/CO_LSSslave.h ****  *
 174:../CANopen/stack/305/CO_LSSslave.h ****  * Object is partially pre-processed after LSS message received. Further
 175:../CANopen/stack/305/CO_LSSslave.h ****  * processing is inside this function.
 176:../CANopen/stack/305/CO_LSSslave.h ****  *
 177:../CANopen/stack/305/CO_LSSslave.h ****  * In case that Node-Id is unconfigured, then this function may request CANopen
 178:../CANopen/stack/305/CO_LSSslave.h ****  * communication reset. This happens, when valid node-id is configured by LSS
 179:../CANopen/stack/305/CO_LSSslave.h ****  * master.
 180:../CANopen/stack/305/CO_LSSslave.h ****  *
 181:../CANopen/stack/305/CO_LSSslave.h ****  * @param LSSslave This object.
 182:../CANopen/stack/305/CO_LSSslave.h ****  * @return True, if #CO_NMT_RESET_COMMUNICATION is requested
 183:../CANopen/stack/305/CO_LSSslave.h ****  */
 184:../CANopen/stack/305/CO_LSSslave.h **** bool_t CO_LSSslave_process(CO_LSSslave_t *LSSslave);
 185:../CANopen/stack/305/CO_LSSslave.h **** 
 186:../CANopen/stack/305/CO_LSSslave.h **** /**
 187:../CANopen/stack/305/CO_LSSslave.h ****  * Get current LSS state
 188:../CANopen/stack/305/CO_LSSslave.h ****  *
 189:../CANopen/stack/305/CO_LSSslave.h ****  * @param LSSslave This object.
 190:../CANopen/stack/305/CO_LSSslave.h ****  * @return #CO_LSS_state_t
 191:../CANopen/stack/305/CO_LSSslave.h ****  */
 192:../CANopen/stack/305/CO_LSSslave.h **** static inline CO_LSS_state_t CO_LSSslave_getState(CO_LSSslave_t *LSSslave) {
 234              	 .loc 3 192 0
 235              	 .cfi_startproc
 236              	 
 237              	 
 238              	 
 239 0000 80B4     	 push {r7}
 240              	.LCFI18:
 241              	 .cfi_def_cfa_offset 4
 242              	 .cfi_offset 7,-4
 243 0002 83B0     	 sub sp,sp,#12
 244              	.LCFI19:
 245              	 .cfi_def_cfa_offset 16
 246 0004 00AF     	 add r7,sp,#0
 247              	.LCFI20:
 248              	 .cfi_def_cfa_register 7
 249 0006 7860     	 str r0,[r7,#4]
 193:../CANopen/stack/305/CO_LSSslave.h ****     return (LSSslave == NULL) ? CO_LSS_STATE_WAITING : LSSslave->lssState;
 250              	 .loc 3 193 0
 251 0008 7B68     	 ldr r3,[r7,#4]
 252 000a 002B     	 cmp r3,#0
 253 000c 02D0     	 beq .L15
 254              	 .loc 3 193 0 is_stmt 0 discriminator 1
 255 000e 7B68     	 ldr r3,[r7,#4]
 256 0010 1B7C     	 ldrb r3,[r3,#16]
 257 0012 00E0     	 b .L16
 258              	.L15:
 259              	 .loc 3 193 0 discriminator 2
 260 0014 0023     	 movs r3,#0
 261              	.L16:
 194:../CANopen/stack/305/CO_LSSslave.h **** }
 262              	 .loc 3 194 0 is_stmt 1 discriminator 4
 263 0016 1846     	 mov r0,r3
 264 0018 0C37     	 adds r7,r7,#12
 265              	.LCFI21:
 266              	 .cfi_def_cfa_offset 4
 267 001a BD46     	 mov sp,r7
 268              	.LCFI22:
 269              	 .cfi_def_cfa_register 13
 270              	 
 271 001c 5DF8047B 	 ldr r7,[sp],#4
 272              	.LCFI23:
 273              	 .cfi_restore 7
 274              	 .cfi_def_cfa_offset 0
 275 0020 7047     	 bx lr
 276              	 .cfi_endproc
 277              	.LFE40:
 279 0022 00BF     	 .section .text.CO_new,"ax",%progbits
 280              	 .align 2
 281              	 .global CO_new
 282              	 .thumb
 283              	 .thumb_func
 285              	CO_new:
 286              	.LFB41:
 287              	 .file 4 "../CANopen/stack/CANopen.c"
   1:../CANopen/stack/CANopen.c **** /*
   2:../CANopen/stack/CANopen.c ****  * Main CANopenNode file.
   3:../CANopen/stack/CANopen.c ****  *
   4:../CANopen/stack/CANopen.c ****  * @file        CANopen.c
   5:../CANopen/stack/CANopen.c ****  * @ingroup     CO_CANopen
   6:../CANopen/stack/CANopen.c ****  * @author      Janez Paternoster
   7:../CANopen/stack/CANopen.c ****  * @copyright   2010 - 2020 Janez Paternoster
   8:../CANopen/stack/CANopen.c ****  *
   9:../CANopen/stack/CANopen.c ****  * This file is part of CANopenNode, an opensource CANopen Stack.
  10:../CANopen/stack/CANopen.c ****  * Project home page is <https://github.com/CANopenNode/CANopenNode>.
  11:../CANopen/stack/CANopen.c ****  * For more information on CANopen see <http://www.can-cia.org/>.
  12:../CANopen/stack/CANopen.c ****  *
  13:../CANopen/stack/CANopen.c ****  * Licensed under the Apache License, Version 2.0 (the "License");
  14:../CANopen/stack/CANopen.c ****  * you may not use this file except in compliance with the License.
  15:../CANopen/stack/CANopen.c ****  * You may obtain a copy of the License at
  16:../CANopen/stack/CANopen.c ****  *
  17:../CANopen/stack/CANopen.c ****  *     http://www.apache.org/licenses/LICENSE-2.0
  18:../CANopen/stack/CANopen.c ****  *
  19:../CANopen/stack/CANopen.c ****  * Unless required by applicable law or agreed to in writing, software
  20:../CANopen/stack/CANopen.c ****  * distributed under the License is distributed on an "AS IS" BASIS,
  21:../CANopen/stack/CANopen.c ****  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  22:../CANopen/stack/CANopen.c ****  * See the License for the specific language governing permissions and
  23:../CANopen/stack/CANopen.c ****  * limitations under the License.
  24:../CANopen/stack/CANopen.c ****  */
  25:../CANopen/stack/CANopen.c **** 
  26:../CANopen/stack/CANopen.c **** #include "CANopen.h"
  27:../CANopen/stack/CANopen.c **** 
  28:../CANopen/stack/CANopen.c **** /* Get values from CO_config_t or from single default OD.h ********************/
  29:../CANopen/stack/CANopen.c **** #ifdef CO_MULTIPLE_OD
  30:../CANopen/stack/CANopen.c **** #define CO_GET_CO(obj) co->obj
  31:../CANopen/stack/CANopen.c **** #define CO_GET_CNT(obj) co->config->CNT_##obj
  32:../CANopen/stack/CANopen.c **** #define OD_GET(entry, index) co->config->ENTRY_##entry
  33:../CANopen/stack/CANopen.c **** 
  34:../CANopen/stack/CANopen.c **** #else
  35:../CANopen/stack/CANopen.c **** #include "OD.h"
  36:../CANopen/stack/CANopen.c **** #define CO_GET_CO(obj) CO_##obj
  37:../CANopen/stack/CANopen.c **** #define CO_GET_CNT(obj) OD_CNT_##obj
  38:../CANopen/stack/CANopen.c **** #define OD_GET(entry, index) OD_ENTRY_##entry
  39:../CANopen/stack/CANopen.c **** 
  40:../CANopen/stack/CANopen.c **** /* Verify parameters from "OD.h" and calculate necessary values for each object:
  41:../CANopen/stack/CANopen.c ****  * - verify OD_CNT_xx or set default
  42:../CANopen/stack/CANopen.c ****  * - calculate number of CANrx and CYNtx messages: CO_RX_CNT_xx and CO_TX_CNT_xx
  43:../CANopen/stack/CANopen.c ****  * - set optional undefined OD_ENTRY_Hxxxx to NULL.
  44:../CANopen/stack/CANopen.c ****  * - calculate indexes: CO_RX_IDX_xx and CO_TX_IDX_xx
  45:../CANopen/stack/CANopen.c ****  * - calculate total count of CAN message buffers: CO_CNT_ALL_RX_MSGS and
  46:../CANopen/stack/CANopen.c ****  *   CO_CNT_ALL_TX_MSGS. */
  47:../CANopen/stack/CANopen.c **** #if OD_CNT_NMT != 1
  48:../CANopen/stack/CANopen.c ****  #error OD_CNT_NMT from OD.h not correct!
  49:../CANopen/stack/CANopen.c **** #endif
  50:../CANopen/stack/CANopen.c **** #define CO_RX_CNT_NMT_SLV OD_CNT_NMT
  51:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_NMT) & CO_CONFIG_NMT_MASTER
  52:../CANopen/stack/CANopen.c ****  #define CO_TX_CNT_NMT_MST 1
  53:../CANopen/stack/CANopen.c **** #else
  54:../CANopen/stack/CANopen.c ****  #define CO_TX_CNT_NMT_MST 0
  55:../CANopen/stack/CANopen.c **** #endif
  56:../CANopen/stack/CANopen.c **** 
  57:../CANopen/stack/CANopen.c **** #if OD_CNT_HB_PROD != 1
  58:../CANopen/stack/CANopen.c ****  #error OD_CNT_HB_PROD from OD.h not correct!
  59:../CANopen/stack/CANopen.c **** #endif
  60:../CANopen/stack/CANopen.c **** #define CO_TX_CNT_HB_PROD OD_CNT_HB_PROD
  61:../CANopen/stack/CANopen.c **** #if !defined OD_CNT_HB_CONS
  62:../CANopen/stack/CANopen.c ****  #define OD_CNT_HB_CONS 0
  63:../CANopen/stack/CANopen.c **** #elif OD_CNT_HB_CONS < 0 || OD_CNT_HB_CONS > 1
  64:../CANopen/stack/CANopen.c ****  #error OD_CNT_HB_CONS from OD.h not correct!
  65:../CANopen/stack/CANopen.c **** #endif
  66:../CANopen/stack/CANopen.c **** #if ((CO_CONFIG_HB_CONS) & CO_CONFIG_HB_CONS_ENABLE) && OD_CNT_HB_CONS == 1
  67:../CANopen/stack/CANopen.c ****  #if OD_CNT_ARR_1016 < 1 || OD_CNT_ARR_1016 > 127
  68:../CANopen/stack/CANopen.c ****   #error OD_CNT_ARR_1016 is not defined in Object Dictionary or value is wrong!
  69:../CANopen/stack/CANopen.c ****  #endif
  70:../CANopen/stack/CANopen.c ****  #define CO_RX_CNT_HB_CONS OD_CNT_ARR_1016
  71:../CANopen/stack/CANopen.c **** #else
  72:../CANopen/stack/CANopen.c ****  #define CO_RX_CNT_HB_CONS 0
  73:../CANopen/stack/CANopen.c **** #endif
  74:../CANopen/stack/CANopen.c **** 
  75:../CANopen/stack/CANopen.c **** #if OD_CNT_EM != 1
  76:../CANopen/stack/CANopen.c ****  #error OD_CNT_EM from OD.h not correct!
  77:../CANopen/stack/CANopen.c **** #endif
  78:../CANopen/stack/CANopen.c **** #ifndef OD_ENTRY_H1003
  79:../CANopen/stack/CANopen.c ****  #define OD_ENTRY_H1003 NULL
  80:../CANopen/stack/CANopen.c **** #endif
  81:../CANopen/stack/CANopen.c **** #ifndef OD_CNT_ARR_1003
  82:../CANopen/stack/CANopen.c ****  #define OD_CNT_ARR_1003 8
  83:../CANopen/stack/CANopen.c **** #endif
  84:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_EM) & CO_CONFIG_EM_PRODUCER
  85:../CANopen/stack/CANopen.c ****  #if OD_CNT_EM_PROD == 1
  86:../CANopen/stack/CANopen.c ****   #define CO_TX_CNT_EM_PROD OD_CNT_EM_PROD
  87:../CANopen/stack/CANopen.c ****  #else
  88:../CANopen/stack/CANopen.c ****   #error wrong OD_CNT_EM_PROD
  89:../CANopen/stack/CANopen.c ****  #endif
  90:../CANopen/stack/CANopen.c ****  #ifndef OD_ENTRY_H1015
  91:../CANopen/stack/CANopen.c ****   #define OD_ENTRY_H1015 NULL
  92:../CANopen/stack/CANopen.c ****  #endif
  93:../CANopen/stack/CANopen.c **** #else
  94:../CANopen/stack/CANopen.c ****  #define CO_TX_CNT_EM_PROD 0
  95:../CANopen/stack/CANopen.c **** #endif
  96:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_EM) & CO_CONFIG_EM_CONSUMER
  97:../CANopen/stack/CANopen.c ****  #define CO_RX_CNT_EM_CONS 1
  98:../CANopen/stack/CANopen.c **** #else
  99:../CANopen/stack/CANopen.c ****  #define CO_RX_CNT_EM_CONS 0
 100:../CANopen/stack/CANopen.c **** #endif
 101:../CANopen/stack/CANopen.c **** 
 102:../CANopen/stack/CANopen.c **** #if !defined OD_CNT_SDO_SRV
 103:../CANopen/stack/CANopen.c ****  #define OD_CNT_SDO_SRV 1
 104:../CANopen/stack/CANopen.c ****  #define OD_ENTRY_H1200 NULL
 105:../CANopen/stack/CANopen.c **** #elif OD_CNT_SDO_SRV < 1 || OD_CNT_SDO_SRV > 128
 106:../CANopen/stack/CANopen.c ****  #error OD_CNT_SDO_SRV from OD.h not correct!
 107:../CANopen/stack/CANopen.c **** #endif
 108:../CANopen/stack/CANopen.c **** #define CO_RX_CNT_SDO_SRV OD_CNT_SDO_SRV
 109:../CANopen/stack/CANopen.c **** #define CO_TX_CNT_SDO_SRV OD_CNT_SDO_SRV
 110:../CANopen/stack/CANopen.c **** 
 111:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_SDO_CLI) & CO_CONFIG_SDO_CLI_ENABLE
 112:../CANopen/stack/CANopen.c ****  #if !defined OD_CNT_SDO_CLI
 113:../CANopen/stack/CANopen.c ****   #define OD_CNT_SDO_CLI 0
 114:../CANopen/stack/CANopen.c ****   #define OD_ENTRY_H1280 NULL
 115:../CANopen/stack/CANopen.c ****  #elif OD_CNT_SDO_CLI < 0 || OD_CNT_SDO_CLI > 128
 116:../CANopen/stack/CANopen.c ****   #error OD_CNT_SDO_CLI from OD.h not correct!
 117:../CANopen/stack/CANopen.c ****  #endif
 118:../CANopen/stack/CANopen.c ****  #define CO_RX_CNT_SDO_CLI OD_CNT_SDO_CLI
 119:../CANopen/stack/CANopen.c ****  #define CO_TX_CNT_SDO_CLI OD_CNT_SDO_CLI
 120:../CANopen/stack/CANopen.c **** #else
 121:../CANopen/stack/CANopen.c ****  #define CO_RX_CNT_SDO_CLI 0
 122:../CANopen/stack/CANopen.c ****  #define CO_TX_CNT_SDO_CLI 0
 123:../CANopen/stack/CANopen.c **** #endif
 124:../CANopen/stack/CANopen.c **** 
 125:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_TIME) & CO_CONFIG_TIME_ENABLE
 126:../CANopen/stack/CANopen.c ****  #if !defined OD_CNT_TIME
 127:../CANopen/stack/CANopen.c ****   #define OD_CNT_TIME 0
 128:../CANopen/stack/CANopen.c ****   #define OD_ENTRY_H1012 NULL
 129:../CANopen/stack/CANopen.c ****  #elif OD_CNT_TIME < 0 || OD_CNT_TIME > 1
 130:../CANopen/stack/CANopen.c ****   #error OD_CNT_TIME from OD.h not correct!
 131:../CANopen/stack/CANopen.c ****  #endif
 132:../CANopen/stack/CANopen.c ****  #define CO_RX_CNT_TIME OD_CNT_TIME
 133:../CANopen/stack/CANopen.c ****  #if (CO_CONFIG_TIME) & CO_CONFIG_TIME_PRODUCER
 134:../CANopen/stack/CANopen.c ****   #define CO_TX_CNT_TIME OD_CNT_TIME
 135:../CANopen/stack/CANopen.c ****  #else
 136:../CANopen/stack/CANopen.c ****   #define CO_TX_CNT_TIME 0
 137:../CANopen/stack/CANopen.c ****  #endif
 138:../CANopen/stack/CANopen.c **** #else
 139:../CANopen/stack/CANopen.c ****  #define CO_RX_CNT_TIME 0
 140:../CANopen/stack/CANopen.c ****  #define CO_TX_CNT_TIME 0
 141:../CANopen/stack/CANopen.c **** #endif
 142:../CANopen/stack/CANopen.c **** 
 143:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_SYNC) & CO_CONFIG_SYNC_ENABLE
 144:../CANopen/stack/CANopen.c ****  #if !defined OD_CNT_SYNC
 145:../CANopen/stack/CANopen.c ****   #define OD_CNT_SYNC 0
 146:../CANopen/stack/CANopen.c ****   #define OD_ENTRY_H1005 NULL
 147:../CANopen/stack/CANopen.c ****   #define OD_ENTRY_H1006 NULL
 148:../CANopen/stack/CANopen.c ****  #elif OD_CNT_SYNC < 0 || OD_CNT_SYNC > 1
 149:../CANopen/stack/CANopen.c ****   #error OD_CNT_SYNC from OD.h not correct!
 150:../CANopen/stack/CANopen.c ****  #endif
 151:../CANopen/stack/CANopen.c ****  #define CO_RX_CNT_SYNC OD_CNT_SYNC
 152:../CANopen/stack/CANopen.c ****  #if (CO_CONFIG_SYNC) & CO_CONFIG_SYNC_PRODUCER
 153:../CANopen/stack/CANopen.c ****   #define CO_TX_CNT_SYNC OD_CNT_SYNC
 154:../CANopen/stack/CANopen.c ****  #else
 155:../CANopen/stack/CANopen.c ****   #define CO_TX_CNT_SYNC 0
 156:../CANopen/stack/CANopen.c ****  #endif
 157:../CANopen/stack/CANopen.c ****  #ifndef OD_ENTRY_H1007
 158:../CANopen/stack/CANopen.c ****   #define OD_ENTRY_H1007 NULL
 159:../CANopen/stack/CANopen.c ****  #endif
 160:../CANopen/stack/CANopen.c ****  #ifndef OD_ENTRY_H1019
 161:../CANopen/stack/CANopen.c ****   #define OD_ENTRY_H1019 NULL
 162:../CANopen/stack/CANopen.c ****  #endif
 163:../CANopen/stack/CANopen.c **** #else
 164:../CANopen/stack/CANopen.c ****  #define CO_RX_CNT_SYNC 0
 165:../CANopen/stack/CANopen.c ****  #define CO_TX_CNT_SYNC 0
 166:../CANopen/stack/CANopen.c **** #endif
 167:../CANopen/stack/CANopen.c **** 
 168:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_RPDO_ENABLE
 169:../CANopen/stack/CANopen.c ****  #if !defined OD_CNT_RPDO
 170:../CANopen/stack/CANopen.c ****   #define OD_CNT_RPDO 0
 171:../CANopen/stack/CANopen.c ****   #define OD_ENTRY_H1400 NULL
 172:../CANopen/stack/CANopen.c ****   #define OD_ENTRY_H1600 NULL
 173:../CANopen/stack/CANopen.c ****  #elif OD_CNT_RPDO < 0 || OD_CNT_RPDO > 0x200
 174:../CANopen/stack/CANopen.c ****   #error OD_CNT_RPDO from OD.h not correct!
 175:../CANopen/stack/CANopen.c ****  #endif
 176:../CANopen/stack/CANopen.c ****  #define CO_RX_CNT_RPDO OD_CNT_RPDO
 177:../CANopen/stack/CANopen.c **** #else
 178:../CANopen/stack/CANopen.c ****  #define CO_RX_CNT_RPDO 0
 179:../CANopen/stack/CANopen.c **** #endif
 180:../CANopen/stack/CANopen.c **** 
 181:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_TPDO_ENABLE
 182:../CANopen/stack/CANopen.c ****  #if !defined OD_CNT_TPDO
 183:../CANopen/stack/CANopen.c ****   #define OD_CNT_TPDO 0
 184:../CANopen/stack/CANopen.c ****   #define OD_ENTRY_H1800 NULL
 185:../CANopen/stack/CANopen.c ****   #define OD_ENTRY_H1A00 NULL
 186:../CANopen/stack/CANopen.c ****  #elif OD_CNT_TPDO < 0 || OD_CNT_TPDO > 0x200
 187:../CANopen/stack/CANopen.c ****   #error OD_CNT_TPDO from OD.h not correct!
 188:../CANopen/stack/CANopen.c ****  #endif
 189:../CANopen/stack/CANopen.c ****  #define CO_TX_CNT_TPDO OD_CNT_TPDO
 190:../CANopen/stack/CANopen.c **** #else
 191:../CANopen/stack/CANopen.c ****  #define CO_TX_CNT_TPDO 0
 192:../CANopen/stack/CANopen.c **** #endif
 193:../CANopen/stack/CANopen.c **** 
 194:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_LEDS) & CO_CONFIG_LEDS_ENABLE
 195:../CANopen/stack/CANopen.c ****  #define OD_CNT_LEDS 1
 196:../CANopen/stack/CANopen.c **** #endif
 197:../CANopen/stack/CANopen.c **** 
 198:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_GFC) & CO_CONFIG_GFC_ENABLE
 199:../CANopen/stack/CANopen.c ****  #if !defined OD_CNT_GFC
 200:../CANopen/stack/CANopen.c ****   #define OD_CNT_GFC 0
 201:../CANopen/stack/CANopen.c ****   #define OD_ENTRY_H1300 NULL
 202:../CANopen/stack/CANopen.c ****  #elif OD_CNT_GFC < 0 || OD_CNT_GFC > 1
 203:../CANopen/stack/CANopen.c ****   #error OD_CNT_GFC from OD.h not correct!
 204:../CANopen/stack/CANopen.c ****  #endif
 205:../CANopen/stack/CANopen.c ****  #define CO_RX_CNT_GFC OD_CNT_GFC
 206:../CANopen/stack/CANopen.c ****  #define CO_TX_CNT_GFC OD_CNT_GFC
 207:../CANopen/stack/CANopen.c **** #else
 208:../CANopen/stack/CANopen.c ****  #define CO_RX_CNT_GFC 0
 209:../CANopen/stack/CANopen.c ****  #define CO_TX_CNT_GFC 0
 210:../CANopen/stack/CANopen.c **** #endif
 211:../CANopen/stack/CANopen.c **** 
 212:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_SRDO) & CO_CONFIG_SRDO_ENABLE
 213:../CANopen/stack/CANopen.c ****  #if !defined OD_CNT_SRDO
 214:../CANopen/stack/CANopen.c ****   #define OD_CNT_SRDO 0
 215:../CANopen/stack/CANopen.c ****   #define OD_ENTRY_H1301 NULL
 216:../CANopen/stack/CANopen.c ****   #define OD_ENTRY_H1381 NULL
 217:../CANopen/stack/CANopen.c ****   #define OD_ENTRY_H13FE NULL
 218:../CANopen/stack/CANopen.c ****   #define OD_ENTRY_H13FF NULL
 219:../CANopen/stack/CANopen.c ****  #elif OD_CNT_SRDO < 0 || OD_CNT_SRDO > 64
 220:../CANopen/stack/CANopen.c ****   #error OD_CNT_SRDO from OD.h not correct!
 221:../CANopen/stack/CANopen.c ****  #endif
 222:../CANopen/stack/CANopen.c ****  #define CO_RX_CNT_SRDO OD_CNT_SRDO
 223:../CANopen/stack/CANopen.c ****  #define CO_TX_CNT_SRDO OD_CNT_SRDO
 224:../CANopen/stack/CANopen.c **** #else
 225:../CANopen/stack/CANopen.c ****  #define CO_RX_CNT_SRDO 0
 226:../CANopen/stack/CANopen.c ****  #define CO_TX_CNT_SRDO 0
 227:../CANopen/stack/CANopen.c **** #endif
 228:../CANopen/stack/CANopen.c **** 
 229:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_LSS) & CO_CONFIG_LSS_SLAVE
 230:../CANopen/stack/CANopen.c ****  #define OD_CNT_LSS_SLV 1
 231:../CANopen/stack/CANopen.c **** #else
 232:../CANopen/stack/CANopen.c ****  #define OD_CNT_LSS_SLV 0
 233:../CANopen/stack/CANopen.c **** #endif
 234:../CANopen/stack/CANopen.c **** #define CO_RX_CNT_LSS_SLV OD_CNT_LSS_SLV
 235:../CANopen/stack/CANopen.c **** #define CO_TX_CNT_LSS_SLV OD_CNT_LSS_SLV
 236:../CANopen/stack/CANopen.c **** 
 237:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_LSS) & CO_CONFIG_LSS_MASTER
 238:../CANopen/stack/CANopen.c ****  #define OD_CNT_LSS_MST 1
 239:../CANopen/stack/CANopen.c **** #else
 240:../CANopen/stack/CANopen.c ****  #define OD_CNT_LSS_MST 0
 241:../CANopen/stack/CANopen.c **** #endif
 242:../CANopen/stack/CANopen.c **** #define CO_RX_CNT_LSS_MST OD_CNT_LSS_MST
 243:../CANopen/stack/CANopen.c **** #define CO_TX_CNT_LSS_MST OD_CNT_LSS_MST
 244:../CANopen/stack/CANopen.c **** 
 245:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_GTW) & CO_CONFIG_GTW_ASCII
 246:../CANopen/stack/CANopen.c ****  #define OD_CNT_GTWA 1
 247:../CANopen/stack/CANopen.c **** #endif
 248:../CANopen/stack/CANopen.c **** 
 249:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_TRACE) & CO_CONFIG_TRACE_ENABLE
 250:../CANopen/stack/CANopen.c ****  #if !defined OD_CNT_TRACE
 251:../CANopen/stack/CANopen.c ****   #define OD_CNT_TRACE 0
 252:../CANopen/stack/CANopen.c ****  #elif OD_CNT_TRACE < 0
 253:../CANopen/stack/CANopen.c ****   #error OD_CNT_TRACE from OD.h not correct!
 254:../CANopen/stack/CANopen.c ****  #endif
 255:../CANopen/stack/CANopen.c **** #endif
 256:../CANopen/stack/CANopen.c **** 
 257:../CANopen/stack/CANopen.c **** /* Indexes of CO_CANrx_t and CO_CANtx_t objects in CO_CANmodule_t and total
 258:../CANopen/stack/CANopen.c ****  * number of them. Indexes are sorted in a way, that objects with highest
 259:../CANopen/stack/CANopen.c ****  * priority of the CAN identifier are listed first. */
 260:../CANopen/stack/CANopen.c **** #define CO_RX_IDX_NMT_SLV   0
 261:../CANopen/stack/CANopen.c **** #define CO_RX_IDX_SYNC      (CO_RX_IDX_NMT_SLV  + CO_RX_CNT_NMT_SLV)
 262:../CANopen/stack/CANopen.c **** #define CO_RX_IDX_EM_CONS   (CO_RX_IDX_SYNC     + CO_RX_CNT_SYNC)
 263:../CANopen/stack/CANopen.c **** #define CO_RX_IDX_TIME      (CO_RX_IDX_EM_CONS  + CO_RX_CNT_EM_CONS)
 264:../CANopen/stack/CANopen.c **** #define CO_RX_IDX_GFC       (CO_RX_IDX_TIME     + CO_RX_CNT_TIME)
 265:../CANopen/stack/CANopen.c **** #define CO_RX_IDX_SRDO      (CO_RX_IDX_GFC      + CO_RX_CNT_GFC)
 266:../CANopen/stack/CANopen.c **** #define CO_RX_IDX_RPDO      (CO_RX_IDX_SRDO     + CO_RX_CNT_SRDO * 2)
 267:../CANopen/stack/CANopen.c **** #define CO_RX_IDX_SDO_SRV   (CO_RX_IDX_RPDO     + CO_RX_CNT_RPDO)
 268:../CANopen/stack/CANopen.c **** #define CO_RX_IDX_SDO_CLI   (CO_RX_IDX_SDO_SRV  + CO_RX_CNT_SDO_SRV)
 269:../CANopen/stack/CANopen.c **** #define CO_RX_IDX_HB_CONS   (CO_RX_IDX_SDO_CLI  + CO_RX_CNT_SDO_CLI)
 270:../CANopen/stack/CANopen.c **** #define CO_RX_IDX_LSS_SLV   (CO_RX_IDX_HB_CONS  + CO_RX_CNT_HB_CONS)
 271:../CANopen/stack/CANopen.c **** #define CO_RX_IDX_LSS_MST   (CO_RX_IDX_LSS_SLV  + CO_RX_CNT_LSS_SLV)
 272:../CANopen/stack/CANopen.c **** #define CO_CNT_ALL_RX_MSGS  (CO_RX_IDX_LSS_MST  + CO_RX_CNT_LSS_MST)
 273:../CANopen/stack/CANopen.c **** 
 274:../CANopen/stack/CANopen.c **** #define CO_TX_IDX_NMT_MST   0
 275:../CANopen/stack/CANopen.c **** #define CO_TX_IDX_SYNC      (CO_TX_IDX_NMT_MST  + CO_TX_CNT_NMT_MST)
 276:../CANopen/stack/CANopen.c **** #define CO_TX_IDX_EM_PROD   (CO_TX_IDX_SYNC     + CO_TX_CNT_SYNC)
 277:../CANopen/stack/CANopen.c **** #define CO_TX_IDX_TIME      (CO_TX_IDX_EM_PROD  + CO_TX_CNT_EM_PROD)
 278:../CANopen/stack/CANopen.c **** #define CO_TX_IDX_GFC       (CO_TX_IDX_TIME     + CO_TX_CNT_TIME)
 279:../CANopen/stack/CANopen.c **** #define CO_TX_IDX_SRDO      (CO_TX_IDX_GFC      + CO_TX_CNT_GFC)
 280:../CANopen/stack/CANopen.c **** #define CO_TX_IDX_TPDO      (CO_TX_IDX_SRDO     + CO_TX_CNT_SRDO * 2)
 281:../CANopen/stack/CANopen.c **** #define CO_TX_IDX_SDO_SRV   (CO_TX_IDX_TPDO     + CO_TX_CNT_TPDO)
 282:../CANopen/stack/CANopen.c **** #define CO_TX_IDX_SDO_CLI   (CO_TX_IDX_SDO_SRV  + CO_TX_CNT_SDO_SRV)
 283:../CANopen/stack/CANopen.c **** #define CO_TX_IDX_HB_PROD   (CO_TX_IDX_SDO_CLI  + CO_TX_CNT_SDO_CLI)
 284:../CANopen/stack/CANopen.c **** #define CO_TX_IDX_LSS_SLV   (CO_TX_IDX_HB_PROD  + CO_TX_CNT_HB_PROD)
 285:../CANopen/stack/CANopen.c **** #define CO_TX_IDX_LSS_MST   (CO_TX_IDX_LSS_SLV  + CO_TX_CNT_LSS_SLV)
 286:../CANopen/stack/CANopen.c **** #define CO_CNT_ALL_TX_MSGS  (CO_TX_IDX_LSS_MST  + CO_TX_CNT_LSS_MST)
 287:../CANopen/stack/CANopen.c **** #endif /* #ifdef #else CO_MULTIPLE_OD */
 288:../CANopen/stack/CANopen.c **** 
 289:../CANopen/stack/CANopen.c **** 
 290:../CANopen/stack/CANopen.c **** /* Objects from heap **********************************************************/
 291:../CANopen/stack/CANopen.c **** #ifndef CO_USE_GLOBALS
 292:../CANopen/stack/CANopen.c **** #include <stdlib.h>
 293:../CANopen/stack/CANopen.c **** 
 294:../CANopen/stack/CANopen.c **** /* Default allocation strategy ************************************************/
 295:../CANopen/stack/CANopen.c **** #if !defined(CO_alloc) || !defined(CO_free)
 296:../CANopen/stack/CANopen.c **** #if defined(CO_alloc)
 297:../CANopen/stack/CANopen.c **** #warning CO_alloc is defined but CO_free is not. using default values instead
 298:../CANopen/stack/CANopen.c **** #undef CO_alloc
 299:../CANopen/stack/CANopen.c **** #endif
 300:../CANopen/stack/CANopen.c **** #if defined(CO_free)
 301:../CANopen/stack/CANopen.c **** #warning CO_free is defined but CO_alloc is not. using default values instead
 302:../CANopen/stack/CANopen.c **** #undef CO_free
 303:../CANopen/stack/CANopen.c **** #endif
 304:../CANopen/stack/CANopen.c **** 
 305:../CANopen/stack/CANopen.c **** /*
 306:../CANopen/stack/CANopen.c ****  * Allocate memory for number of elements, each of specific size
 307:../CANopen/stack/CANopen.c ****  * Allocated memory must be reset to all zeros
 308:../CANopen/stack/CANopen.c ****  */
 309:../CANopen/stack/CANopen.c **** #define CO_alloc(num, size)             calloc((num), (size))
 310:../CANopen/stack/CANopen.c **** #define CO_free(ptr)                    free((ptr))
 311:../CANopen/stack/CANopen.c **** 
 312:../CANopen/stack/CANopen.c **** #endif
 313:../CANopen/stack/CANopen.c **** 
 314:../CANopen/stack/CANopen.c **** /* Define macros for allocation */
 315:../CANopen/stack/CANopen.c **** #define CO_alloc_break_on_fail(var, num, size)   if (((var) = CO_alloc((num), (size))) != NULL) { m
 316:../CANopen/stack/CANopen.c **** 
 317:../CANopen/stack/CANopen.c **** #ifdef CO_MULTIPLE_OD
 318:../CANopen/stack/CANopen.c **** #define ON_MULTI_OD(sentence) sentence
 319:../CANopen/stack/CANopen.c **** #else
 320:../CANopen/stack/CANopen.c **** #define ON_MULTI_OD(sentence)
 321:../CANopen/stack/CANopen.c **** #endif
 322:../CANopen/stack/CANopen.c **** 
 323:../CANopen/stack/CANopen.c **** CO_t *CO_new(CO_config_t *config, uint32_t *heapMemoryUsed) {
 288              	 .loc 4 323 0
 289              	 .cfi_startproc
 290              	 
 291              	 
 292 0000 80B5     	 push {r7,lr}
 293              	.LCFI24:
 294              	 .cfi_def_cfa_offset 8
 295              	 .cfi_offset 7,-8
 296              	 .cfi_offset 14,-4
 297 0002 86B0     	 sub sp,sp,#24
 298              	.LCFI25:
 299              	 .cfi_def_cfa_offset 32
 300 0004 00AF     	 add r7,sp,#0
 301              	.LCFI26:
 302              	 .cfi_def_cfa_register 7
 303 0006 7860     	 str r0,[r7,#4]
 304 0008 3960     	 str r1,[r7]
 324:../CANopen/stack/CANopen.c ****     CO_t *co = NULL;
 305              	 .loc 4 324 0
 306 000a 0023     	 movs r3,#0
 307 000c FB60     	 str r3,[r7,#12]
 325:../CANopen/stack/CANopen.c ****     /* return values */
 326:../CANopen/stack/CANopen.c ****     CO_t *coFinal = NULL;
 308              	 .loc 4 326 0
 309 000e 0023     	 movs r3,#0
 310 0010 7B61     	 str r3,[r7,#20]
 327:../CANopen/stack/CANopen.c ****     uint32_t mem = 0;
 311              	 .loc 4 327 0
 312 0012 0023     	 movs r3,#0
 313 0014 3B61     	 str r3,[r7,#16]
 328:../CANopen/stack/CANopen.c **** 
 329:../CANopen/stack/CANopen.c ****     /* For each object:
 330:../CANopen/stack/CANopen.c ****      * - allocate memory, verify allocation and calculate size of heap used
 331:../CANopen/stack/CANopen.c ****      * - if CO_MULTIPLE_OD is defined:
 332:../CANopen/stack/CANopen.c ****      *   - use config structure
 333:../CANopen/stack/CANopen.c ****      *   - calculate number of CANrx and CYNtx messages: RX_CNT_xx and TX_CNT_xx
 334:../CANopen/stack/CANopen.c ****      *   - calculate indexes: RX_IDX_xx and TX_IDX_xx
 335:../CANopen/stack/CANopen.c ****      *   - calculate total count of CAN message buffers: CNT_ALL_RX_MSGS and
 336:../CANopen/stack/CANopen.c ****      *     CNT_ALL_TX_MSGS. */
 337:../CANopen/stack/CANopen.c **** 
 338:../CANopen/stack/CANopen.c ****     do {
 339:../CANopen/stack/CANopen.c **** #ifdef CO_MULTIPLE_OD
 340:../CANopen/stack/CANopen.c ****         /* verify arguments */
 341:../CANopen/stack/CANopen.c ****         if (config == NULL || config->CNT_NMT > 1 || config->CNT_HB_CONS > 1
 342:../CANopen/stack/CANopen.c ****             || config->CNT_EM > 1 || config->CNT_SDO_SRV > 128
 343:../CANopen/stack/CANopen.c ****             || config->CNT_SDO_CLI > 128 || config->CNT_SYNC > 1
 344:../CANopen/stack/CANopen.c ****             || config->CNT_RPDO > 512 || config->CNT_TPDO > 512
 345:../CANopen/stack/CANopen.c ****             || config->CNT_TIME > 1 || config->CNT_LEDS > 1
 346:../CANopen/stack/CANopen.c ****             || config->CNT_GFC > 1 || config->CNT_SRDO > 64
 347:../CANopen/stack/CANopen.c ****             || config->CNT_LSS_SLV > 1 || config->CNT_LSS_MST > 1
 348:../CANopen/stack/CANopen.c ****             || config->CNT_GTWA > 1
 349:../CANopen/stack/CANopen.c ****         ) {
 350:../CANopen/stack/CANopen.c ****             break;
 351:../CANopen/stack/CANopen.c ****         }
 352:../CANopen/stack/CANopen.c **** #else
 353:../CANopen/stack/CANopen.c ****         (void) config;
 354:../CANopen/stack/CANopen.c **** #endif
 355:../CANopen/stack/CANopen.c **** 
 356:../CANopen/stack/CANopen.c ****         /* CANopen object */
 357:../CANopen/stack/CANopen.c ****         CO_alloc_break_on_fail(co, 1, sizeof(*co));
 314              	 .loc 4 357 0
 315 0016 0120     	 movs r0,#1
 316 0018 4021     	 movs r1,#64
 317 001a FFF7FEFF 	 bl calloc
 318 001e 0346     	 mov r3,r0
 319 0020 FB60     	 str r3,[r7,#12]
 320 0022 FB68     	 ldr r3,[r7,#12]
 321 0024 002B     	 cmp r3,#0
 322 0026 0FD0     	 beq .L19
 323              	 .loc 4 357 0 is_stmt 0 discriminator 1
 324 0028 3B69     	 ldr r3,[r7,#16]
 325 002a 4033     	 adds r3,r3,#64
 326 002c 3B61     	 str r3,[r7,#16]
 358:../CANopen/stack/CANopen.c **** 
 359:../CANopen/stack/CANopen.c **** #ifdef CO_MULTIPLE_OD
 360:../CANopen/stack/CANopen.c ****         co->config = config;
 361:../CANopen/stack/CANopen.c **** #endif
 362:../CANopen/stack/CANopen.c **** 
 363:../CANopen/stack/CANopen.c ****         /* NMT_Heartbeat */
 364:../CANopen/stack/CANopen.c ****         ON_MULTI_OD(uint8_t RX_CNT_NMT_SLV = 0);
 365:../CANopen/stack/CANopen.c ****         ON_MULTI_OD(uint8_t TX_CNT_NMT_MST = 0);
 366:../CANopen/stack/CANopen.c ****         ON_MULTI_OD(uint8_t TX_CNT_HB_PROD = 0);
 367:../CANopen/stack/CANopen.c ****         if (CO_GET_CNT(NMT) == 1) {
 368:../CANopen/stack/CANopen.c ****             CO_alloc_break_on_fail(co->NMT, CO_GET_CNT(NMT), sizeof(*co->NMT));
 327              	 .loc 4 368 0 is_stmt 1 discriminator 1
 328 002e 0120     	 movs r0,#1
 329 0030 2C21     	 movs r1,#44
 330 0032 FFF7FEFF 	 bl calloc
 331 0036 0346     	 mov r3,r0
 332 0038 1A46     	 mov r2,r3
 333 003a FB68     	 ldr r3,[r7,#12]
 334 003c 1A61     	 str r2,[r3,#16]
 335 003e FB68     	 ldr r3,[r7,#12]
 336 0040 1B69     	 ldr r3,[r3,#16]
 337 0042 002B     	 cmp r3,#0
 338 0044 13D0     	 beq .L22
 339 0046 00E0     	 b .L53
 340              	.L19:
 357:../CANopen/stack/CANopen.c **** 
 341              	 .loc 4 357 0
 342 0048 F5E0     	 b .L21
 343              	.L53:
 344              	 .loc 4 368 0 discriminator 1
 345 004a 3B69     	 ldr r3,[r7,#16]
 346 004c 2C33     	 adds r3,r3,#44
 347 004e 3B61     	 str r3,[r7,#16]
 348              	.LBB2:
 369:../CANopen/stack/CANopen.c ****             ON_MULTI_OD(RX_CNT_NMT_SLV = 1);
 370:../CANopen/stack/CANopen.c ****  #if (CO_CONFIG_NMT) & CO_CONFIG_NMT_MASTER
 371:../CANopen/stack/CANopen.c ****             ON_MULTI_OD(TX_CNT_NMT_MST = 1);
 372:../CANopen/stack/CANopen.c ****  #endif
 373:../CANopen/stack/CANopen.c ****             ON_MULTI_OD(TX_CNT_HB_PROD = 1);
 374:../CANopen/stack/CANopen.c ****         }
 375:../CANopen/stack/CANopen.c **** 
 376:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_HB_CONS) & CO_CONFIG_HB_CONS_ENABLE
 377:../CANopen/stack/CANopen.c ****         ON_MULTI_OD(uint8_t RX_CNT_HB_CONS = 0);
 378:../CANopen/stack/CANopen.c ****         if (CO_GET_CNT(HB_CONS) == 1) {
 379:../CANopen/stack/CANopen.c ****             uint8_t countOfMonitoredNodes = CO_GET_CNT(ARR_1016);
 349              	 .loc 4 379 0 discriminator 1
 350 0050 0123     	 movs r3,#1
 351 0052 FB72     	 strb r3,[r7,#11]
 380:../CANopen/stack/CANopen.c ****             CO_alloc_break_on_fail(co->HBcons, CO_GET_CNT(HB_CONS), sizeof(*co->HBcons));
 352              	 .loc 4 380 0 discriminator 1
 353 0054 0120     	 movs r0,#1
 354 0056 3021     	 movs r1,#48
 355 0058 FFF7FEFF 	 bl calloc
 356 005c 0346     	 mov r3,r0
 357 005e 1A46     	 mov r2,r3
 358 0060 FB68     	 ldr r3,[r7,#12]
 359 0062 5A61     	 str r2,[r3,#20]
 360 0064 FB68     	 ldr r3,[r7,#12]
 361 0066 5B69     	 ldr r3,[r3,#20]
 362 0068 002B     	 cmp r3,#0
 363 006a 12D0     	 beq .L24
 364 006c 00E0     	 b .L54
 365              	.L22:
 366              	.LBE2:
 368:../CANopen/stack/CANopen.c ****             ON_MULTI_OD(RX_CNT_NMT_SLV = 1);
 367              	 .loc 4 368 0
 368 006e E2E0     	 b .L21
 369              	.L54:
 370              	.LBB3:
 371              	 .loc 4 380 0 discriminator 1
 372 0070 3B69     	 ldr r3,[r7,#16]
 373 0072 3033     	 adds r3,r3,#48
 374 0074 3B61     	 str r3,[r7,#16]
 381:../CANopen/stack/CANopen.c ****             CO_alloc_break_on_fail(co->HBconsMonitoredNodes, countOfMonitoredNodes, sizeof(*co->HBc
 375              	 .loc 4 381 0 discriminator 1
 376 0076 FB7A     	 ldrb r3,[r7,#11]
 377 0078 1846     	 mov r0,r3
 378 007a 1021     	 movs r1,#16
 379 007c FFF7FEFF 	 bl calloc
 380 0080 0346     	 mov r3,r0
 381 0082 1A46     	 mov r2,r3
 382 0084 FB68     	 ldr r3,[r7,#12]
 383 0086 9A61     	 str r2,[r3,#24]
 384 0088 FB68     	 ldr r3,[r7,#12]
 385 008a 9B69     	 ldr r3,[r3,#24]
 386 008c 002B     	 cmp r3,#0
 387 008e 13D0     	 beq .L26
 388 0090 00E0     	 b .L55
 389              	.L24:
 380:../CANopen/stack/CANopen.c ****             CO_alloc_break_on_fail(co->HBcons, CO_GET_CNT(HB_CONS), sizeof(*co->HBcons));
 390              	 .loc 4 380 0
 391 0092 D0E0     	 b .L21
 392              	.L55:
 393              	 .loc 4 381 0 discriminator 1
 394 0094 FB7A     	 ldrb r3,[r7,#11]
 395 0096 1B01     	 lsls r3,r3,#4
 396 0098 3A69     	 ldr r2,[r7,#16]
 397 009a 1344     	 add r3,r3,r2
 398 009c 3B61     	 str r3,[r7,#16]
 399              	.LBE3:
 400              	.LBB4:
 382:../CANopen/stack/CANopen.c ****             ON_MULTI_OD(RX_CNT_HB_CONS = countOfMonitoredNodes);
 383:../CANopen/stack/CANopen.c ****         }
 384:../CANopen/stack/CANopen.c **** #endif
 385:../CANopen/stack/CANopen.c **** 
 386:../CANopen/stack/CANopen.c ****         /* Emergency */
 387:../CANopen/stack/CANopen.c ****         ON_MULTI_OD(uint8_t RX_CNT_EM_CONS = 0);
 388:../CANopen/stack/CANopen.c ****         ON_MULTI_OD(uint8_t TX_CNT_EM_PROD = 0);
 389:../CANopen/stack/CANopen.c ****         if (CO_GET_CNT(EM) == 1) {
 390:../CANopen/stack/CANopen.c ****             CO_alloc_break_on_fail(co->em, CO_GET_CNT(EM), sizeof(*co->em));
 401              	 .loc 4 390 0 discriminator 1
 402 009e 0120     	 movs r0,#1
 403 00a0 5021     	 movs r1,#80
 404 00a2 FFF7FEFF 	 bl calloc
 405 00a6 0346     	 mov r3,r0
 406 00a8 1A46     	 mov r2,r3
 407 00aa FB68     	 ldr r3,[r7,#12]
 408 00ac DA61     	 str r2,[r3,#28]
 409 00ae FB68     	 ldr r3,[r7,#12]
 410 00b0 DB69     	 ldr r3,[r3,#28]
 411 00b2 002B     	 cmp r3,#0
 412 00b4 0AD0     	 beq .L28
 413 00b6 00E0     	 b .L56
 414              	.L26:
 415              	.LBE4:
 416              	.LBB5:
 381:../CANopen/stack/CANopen.c ****             CO_alloc_break_on_fail(co->HBconsMonitoredNodes, countOfMonitoredNodes, sizeof(*co->HBc
 417              	 .loc 4 381 0
 418 00b8 BDE0     	 b .L21
 419              	.L56:
 420              	.LBE5:
 421              	.LBB6:
 422              	 .loc 4 390 0 discriminator 1
 423 00ba 3B69     	 ldr r3,[r7,#16]
 424 00bc 5033     	 adds r3,r3,#80
 425 00be 3B61     	 str r3,[r7,#16]
 391:../CANopen/stack/CANopen.c ****  #if (CO_CONFIG_EM) & CO_CONFIG_EM_CONSUMER
 392:../CANopen/stack/CANopen.c ****             ON_MULTI_OD(RX_CNT_EM_CONS = 1);
 393:../CANopen/stack/CANopen.c ****  #endif
 394:../CANopen/stack/CANopen.c ****  #if (CO_CONFIG_EM) & CO_CONFIG_EM_PRODUCER
 395:../CANopen/stack/CANopen.c ****             ON_MULTI_OD(TX_CNT_EM_PROD = 1);
 396:../CANopen/stack/CANopen.c ****  #endif
 397:../CANopen/stack/CANopen.c ****  #if (CO_CONFIG_EM) & (CO_CONFIG_EM_PRODUCER | CO_CONFIG_EM_HISTORY)
 398:../CANopen/stack/CANopen.c ****             uint8_t fifoSize = CO_GET_CNT(ARR_1003) + 1;
 426              	 .loc 4 398 0 discriminator 1
 427 00c0 1123     	 movs r3,#17
 428 00c2 BB72     	 strb r3,[r7,#10]
 399:../CANopen/stack/CANopen.c ****             if (fifoSize >= 2) {
 429              	 .loc 4 399 0 discriminator 1
 430 00c4 BB7A     	 ldrb r3,[r7,#10]
 431 00c6 012B     	 cmp r3,#1
 432 00c8 15D9     	 bls .L30
 433 00ca 00E0     	 b .L57
 434              	.L28:
 390:../CANopen/stack/CANopen.c ****  #if (CO_CONFIG_EM) & CO_CONFIG_EM_CONSUMER
 435              	 .loc 4 390 0
 436 00cc B3E0     	 b .L21
 437              	.L57:
 400:../CANopen/stack/CANopen.c ****                 CO_alloc_break_on_fail(co->em_fifo, fifoSize, sizeof(*co->em_fifo));
 438              	 .loc 4 400 0
 439 00ce BB7A     	 ldrb r3,[r7,#10]
 440 00d0 1846     	 mov r0,r3
 441 00d2 0821     	 movs r1,#8
 442 00d4 FFF7FEFF 	 bl calloc
 443 00d8 0346     	 mov r3,r0
 444 00da 1A46     	 mov r2,r3
 445 00dc FB68     	 ldr r3,[r7,#12]
 446 00de 1A62     	 str r2,[r3,#32]
 447 00e0 FB68     	 ldr r3,[r7,#12]
 448 00e2 1B6A     	 ldr r3,[r3,#32]
 449 00e4 002B     	 cmp r3,#0
 450 00e6 05D0     	 beq .L31
 451              	 .loc 4 400 0 is_stmt 0 discriminator 1
 452 00e8 BB7A     	 ldrb r3,[r7,#10]
 453 00ea DB00     	 lsls r3,r3,#3
 454 00ec 3A69     	 ldr r2,[r7,#16]
 455 00ee 1344     	 add r3,r3,r2
 456 00f0 3B61     	 str r3,[r7,#16]
 457 00f2 00E0     	 b .L30
 458              	.L31:
 459              	 .loc 4 400 0
 460 00f4 9FE0     	 b .L21
 461              	.L30:
 462              	.LBE6:
 401:../CANopen/stack/CANopen.c ****             }
 402:../CANopen/stack/CANopen.c ****  #endif
 403:../CANopen/stack/CANopen.c ****         }
 404:../CANopen/stack/CANopen.c **** 
 405:../CANopen/stack/CANopen.c ****         /* SDOserver */
 406:../CANopen/stack/CANopen.c ****         ON_MULTI_OD(uint8_t RX_CNT_SDO_SRV = 0);
 407:../CANopen/stack/CANopen.c ****         ON_MULTI_OD(uint8_t TX_CNT_SDO_SRV = 0);
 408:../CANopen/stack/CANopen.c ****         if (CO_GET_CNT(SDO_SRV) > 0) {
 409:../CANopen/stack/CANopen.c ****             CO_alloc_break_on_fail(co->SDOserver, CO_GET_CNT(SDO_SRV), sizeof(*co->SDOserver));
 463              	 .loc 4 409 0 is_stmt 1
 464 00f6 0120     	 movs r0,#1
 465 00f8 A821     	 movs r1,#168
 466 00fa FFF7FEFF 	 bl calloc
 467 00fe 0346     	 mov r3,r0
 468 0100 1A46     	 mov r2,r3
 469 0102 FB68     	 ldr r3,[r7,#12]
 470 0104 5A62     	 str r2,[r3,#36]
 471 0106 FB68     	 ldr r3,[r7,#12]
 472 0108 5B6A     	 ldr r3,[r3,#36]
 473 010a 002B     	 cmp r3,#0
 474 010c 0FD0     	 beq .L32
 475              	 .loc 4 409 0 is_stmt 0 discriminator 1
 476 010e 3B69     	 ldr r3,[r7,#16]
 477 0110 A833     	 adds r3,r3,#168
 478 0112 3B61     	 str r3,[r7,#16]
 410:../CANopen/stack/CANopen.c ****             ON_MULTI_OD(RX_CNT_SDO_SRV = config->CNT_SDO_SRV);
 411:../CANopen/stack/CANopen.c ****             ON_MULTI_OD(TX_CNT_SDO_SRV = config->CNT_SDO_SRV);
 412:../CANopen/stack/CANopen.c ****         }
 413:../CANopen/stack/CANopen.c **** 
 414:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_SDO_CLI) & CO_CONFIG_SDO_CLI_ENABLE
 415:../CANopen/stack/CANopen.c ****         ON_MULTI_OD(uint8_t RX_CNT_SDO_CLI = 0);
 416:../CANopen/stack/CANopen.c ****         ON_MULTI_OD(uint8_t TX_CNT_SDO_CLI = 0);
 417:../CANopen/stack/CANopen.c ****         if (CO_GET_CNT(SDO_CLI) > 0) {
 418:../CANopen/stack/CANopen.c ****             CO_alloc_break_on_fail(co->SDOclient, CO_GET_CNT(SDO_CLI), sizeof(*co->SDOclient));
 419:../CANopen/stack/CANopen.c ****             ON_MULTI_OD(RX_CNT_SDO_CLI = config->CNT_SDO_CLI);
 420:../CANopen/stack/CANopen.c ****             ON_MULTI_OD(TX_CNT_SDO_CLI = config->CNT_SDO_CLI);
 421:../CANopen/stack/CANopen.c ****         }
 422:../CANopen/stack/CANopen.c **** #endif
 423:../CANopen/stack/CANopen.c **** 
 424:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_TIME) & CO_CONFIG_TIME_ENABLE
 425:../CANopen/stack/CANopen.c ****         ON_MULTI_OD(uint8_t RX_CNT_TIME = 0);
 426:../CANopen/stack/CANopen.c ****         ON_MULTI_OD(uint8_t TX_CNT_TIME = 0);
 427:../CANopen/stack/CANopen.c ****         if (CO_GET_CNT(TIME) == 1) {
 428:../CANopen/stack/CANopen.c ****             CO_alloc_break_on_fail(co->TIME, CO_GET_CNT(TIME), sizeof(*co->TIME));
 479              	 .loc 4 428 0 is_stmt 1 discriminator 1
 480 0114 0120     	 movs r0,#1
 481 0116 2C21     	 movs r1,#44
 482 0118 FFF7FEFF 	 bl calloc
 483 011c 0346     	 mov r3,r0
 484 011e 1A46     	 mov r2,r3
 485 0120 FB68     	 ldr r3,[r7,#12]
 486 0122 9A62     	 str r2,[r3,#40]
 487 0124 FB68     	 ldr r3,[r7,#12]
 488 0126 9B6A     	 ldr r3,[r3,#40]
 489 0128 002B     	 cmp r3,#0
 490 012a 11D0     	 beq .L34
 491 012c 00E0     	 b .L58
 492              	.L32:
 409:../CANopen/stack/CANopen.c ****             ON_MULTI_OD(RX_CNT_SDO_SRV = config->CNT_SDO_SRV);
 493              	 .loc 4 409 0
 494 012e 82E0     	 b .L21
 495              	.L58:
 496              	 .loc 4 428 0 discriminator 1
 497 0130 3B69     	 ldr r3,[r7,#16]
 498 0132 2C33     	 adds r3,r3,#44
 499 0134 3B61     	 str r3,[r7,#16]
 429:../CANopen/stack/CANopen.c ****             ON_MULTI_OD(RX_CNT_TIME = 1);
 430:../CANopen/stack/CANopen.c ****  #if (CO_CONFIG_TIME) & CO_CONFIG_TIME_PRODUCER
 431:../CANopen/stack/CANopen.c ****             ON_MULTI_OD(TX_CNT_TIME = 1);
 432:../CANopen/stack/CANopen.c ****  #endif
 433:../CANopen/stack/CANopen.c ****         }
 434:../CANopen/stack/CANopen.c **** #endif
 435:../CANopen/stack/CANopen.c **** 
 436:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_SYNC) & CO_CONFIG_SYNC_ENABLE
 437:../CANopen/stack/CANopen.c ****         ON_MULTI_OD(uint8_t RX_CNT_SYNC = 0);
 438:../CANopen/stack/CANopen.c ****         ON_MULTI_OD(uint8_t TX_CNT_SYNC = 0);
 439:../CANopen/stack/CANopen.c ****         if (CO_GET_CNT(SYNC) == 1) {
 440:../CANopen/stack/CANopen.c ****             CO_alloc_break_on_fail(co->SYNC, CO_GET_CNT(SYNC), sizeof(*co->SYNC));
 500              	 .loc 4 440 0 discriminator 1
 501 0136 0120     	 movs r0,#1
 502 0138 6021     	 movs r1,#96
 503 013a FFF7FEFF 	 bl calloc
 504 013e 0346     	 mov r3,r0
 505 0140 1A46     	 mov r2,r3
 506 0142 FB68     	 ldr r3,[r7,#12]
 507 0144 DA62     	 str r2,[r3,#44]
 508 0146 FB68     	 ldr r3,[r7,#12]
 509 0148 DB6A     	 ldr r3,[r3,#44]
 510 014a 002B     	 cmp r3,#0
 511 014c 12D0     	 beq .L36
 512 014e 00E0     	 b .L59
 513              	.L34:
 428:../CANopen/stack/CANopen.c ****             ON_MULTI_OD(RX_CNT_TIME = 1);
 514              	 .loc 4 428 0
 515 0150 71E0     	 b .L21
 516              	.L59:
 517              	 .loc 4 440 0 discriminator 1
 518 0152 3B69     	 ldr r3,[r7,#16]
 519 0154 6033     	 adds r3,r3,#96
 520 0156 3B61     	 str r3,[r7,#16]
 441:../CANopen/stack/CANopen.c ****             ON_MULTI_OD(RX_CNT_SYNC = 1);
 442:../CANopen/stack/CANopen.c ****  #if (CO_CONFIG_SYNC) & CO_CONFIG_SYNC_PRODUCER
 443:../CANopen/stack/CANopen.c ****             ON_MULTI_OD(TX_CNT_SYNC = 1);
 444:../CANopen/stack/CANopen.c ****  #endif
 445:../CANopen/stack/CANopen.c ****         }
 446:../CANopen/stack/CANopen.c **** #endif
 447:../CANopen/stack/CANopen.c **** 
 448:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_RPDO_ENABLE
 449:../CANopen/stack/CANopen.c ****         ON_MULTI_OD(uint16_t RX_CNT_RPDO = 0);
 450:../CANopen/stack/CANopen.c ****         if (CO_GET_CNT(RPDO) > 0) {
 451:../CANopen/stack/CANopen.c ****             CO_alloc_break_on_fail(co->RPDO, CO_GET_CNT(RPDO), sizeof(*co->RPDO));
 452:../CANopen/stack/CANopen.c ****             ON_MULTI_OD(RX_CNT_RPDO = config->CNT_RPDO);
 453:../CANopen/stack/CANopen.c ****         }
 454:../CANopen/stack/CANopen.c **** #endif
 455:../CANopen/stack/CANopen.c **** 
 456:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_TPDO_ENABLE
 457:../CANopen/stack/CANopen.c ****         ON_MULTI_OD(uint16_t TX_CNT_TPDO = 0);
 458:../CANopen/stack/CANopen.c ****         if (CO_GET_CNT(TPDO) > 0) {
 459:../CANopen/stack/CANopen.c ****             CO_alloc_break_on_fail(co->TPDO, CO_GET_CNT(TPDO), sizeof(*co->TPDO));
 521              	 .loc 4 459 0 discriminator 1
 522 0158 0120     	 movs r0,#1
 523 015a 4FF4B671 	 mov r1,#364
 524 015e FFF7FEFF 	 bl calloc
 525 0162 0346     	 mov r3,r0
 526 0164 1A46     	 mov r2,r3
 527 0166 FB68     	 ldr r3,[r7,#12]
 528 0168 5A63     	 str r2,[r3,#52]
 529 016a FB68     	 ldr r3,[r7,#12]
 530 016c 5B6B     	 ldr r3,[r3,#52]
 531 016e 002B     	 cmp r3,#0
 532 0170 12D0     	 beq .L38
 533 0172 00E0     	 b .L60
 534              	.L36:
 440:../CANopen/stack/CANopen.c ****             ON_MULTI_OD(RX_CNT_SYNC = 1);
 535              	 .loc 4 440 0
 536 0174 5FE0     	 b .L21
 537              	.L60:
 538              	 .loc 4 459 0 discriminator 1
 539 0176 3B69     	 ldr r3,[r7,#16]
 540 0178 03F5B673 	 add r3,r3,#364
 541 017c 3B61     	 str r3,[r7,#16]
 460:../CANopen/stack/CANopen.c ****             ON_MULTI_OD(TX_CNT_TPDO = config->CNT_TPDO);
 461:../CANopen/stack/CANopen.c ****         }
 462:../CANopen/stack/CANopen.c **** #endif
 463:../CANopen/stack/CANopen.c **** 
 464:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_LEDS) & CO_CONFIG_LEDS_ENABLE
 465:../CANopen/stack/CANopen.c ****         if (CO_GET_CNT(LEDS) == 1) {
 466:../CANopen/stack/CANopen.c ****             CO_alloc_break_on_fail(co->LEDs, CO_GET_CNT(LEDS), sizeof(*co->LEDs));
 542              	 .loc 4 466 0 discriminator 1
 543 017e 0120     	 movs r0,#1
 544 0180 0C21     	 movs r1,#12
 545 0182 FFF7FEFF 	 bl calloc
 546 0186 0346     	 mov r3,r0
 547 0188 1A46     	 mov r2,r3
 548 018a FB68     	 ldr r3,[r7,#12]
 549 018c 9A63     	 str r2,[r3,#56]
 550 018e FB68     	 ldr r3,[r7,#12]
 551 0190 9B6B     	 ldr r3,[r3,#56]
 552 0192 002B     	 cmp r3,#0
 553 0194 11D0     	 beq .L40
 554 0196 00E0     	 b .L61
 555              	.L38:
 459:../CANopen/stack/CANopen.c ****             ON_MULTI_OD(TX_CNT_TPDO = config->CNT_TPDO);
 556              	 .loc 4 459 0
 557 0198 4DE0     	 b .L21
 558              	.L61:
 559              	 .loc 4 466 0 discriminator 1
 560 019a 3B69     	 ldr r3,[r7,#16]
 561 019c 0C33     	 adds r3,r3,#12
 562 019e 3B61     	 str r3,[r7,#16]
 467:../CANopen/stack/CANopen.c ****         }
 468:../CANopen/stack/CANopen.c **** #endif
 469:../CANopen/stack/CANopen.c **** 
 470:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_GFC) & CO_CONFIG_GFC_ENABLE
 471:../CANopen/stack/CANopen.c ****         ON_MULTI_OD(uint8_t RX_CNT_GFC = 0);
 472:../CANopen/stack/CANopen.c ****         ON_MULTI_OD(uint8_t TX_CNT_GFC = 0);
 473:../CANopen/stack/CANopen.c ****         if (CO_GET_CNT(GFC) == 1) {
 474:../CANopen/stack/CANopen.c ****             CO_alloc_break_on_fail(co->GFC, CO_GET_CNT(GFC), sizeof(*co->GFC));
 475:../CANopen/stack/CANopen.c ****             ON_MULTI_OD(RX_CNT_GFC = 1);
 476:../CANopen/stack/CANopen.c ****             ON_MULTI_OD(TX_CNT_GFC = 1);
 477:../CANopen/stack/CANopen.c ****         }
 478:../CANopen/stack/CANopen.c **** #endif
 479:../CANopen/stack/CANopen.c **** 
 480:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_SRDO) & CO_CONFIG_SRDO_ENABLE
 481:../CANopen/stack/CANopen.c ****         ON_MULTI_OD(uint8_t RX_CNT_SRDO = 0);
 482:../CANopen/stack/CANopen.c ****         ON_MULTI_OD(uint8_t TX_CNT_SRDO = 0);
 483:../CANopen/stack/CANopen.c ****         if (CO_GET_CNT(SRDO) > 0) {
 484:../CANopen/stack/CANopen.c ****             CO_alloc_break_on_fail(co->SRDOGuard, 1, sizeof(*co->SRDOGuard));
 485:../CANopen/stack/CANopen.c ****             CO_alloc_break_on_fail(co->SRDO, CO_GET_CNT(SRDO), sizeof(*co->SRDO));
 486:../CANopen/stack/CANopen.c ****             ON_MULTI_OD(RX_CNT_SRDO = config->CNT_SRDO * 2);
 487:../CANopen/stack/CANopen.c ****             ON_MULTI_OD(TX_CNT_SRDO = config->CNT_SRDO * 2);
 488:../CANopen/stack/CANopen.c ****         }
 489:../CANopen/stack/CANopen.c **** #endif
 490:../CANopen/stack/CANopen.c **** 
 491:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_LSS) & CO_CONFIG_LSS_SLAVE
 492:../CANopen/stack/CANopen.c ****         ON_MULTI_OD(uint8_t RX_CNT_LSS_SLV = 0);
 493:../CANopen/stack/CANopen.c ****         ON_MULTI_OD(uint8_t TX_CNT_LSS_SLV = 0);
 494:../CANopen/stack/CANopen.c ****         if (CO_GET_CNT(LSS_SLV) == 1) {
 495:../CANopen/stack/CANopen.c ****             CO_alloc_break_on_fail(co->LSSslave, CO_GET_CNT(LSS_SLV), sizeof(*co->LSSslave));
 563              	 .loc 4 495 0 discriminator 1
 564 01a0 0120     	 movs r0,#1
 565 01a2 7421     	 movs r1,#116
 566 01a4 FFF7FEFF 	 bl calloc
 567 01a8 0346     	 mov r3,r0
 568 01aa 1A46     	 mov r2,r3
 569 01ac FB68     	 ldr r3,[r7,#12]
 570 01ae DA63     	 str r2,[r3,#60]
 571 01b0 FB68     	 ldr r3,[r7,#12]
 572 01b2 DB6B     	 ldr r3,[r3,#60]
 573 01b4 002B     	 cmp r3,#0
 574 01b6 11D0     	 beq .L42
 575 01b8 00E0     	 b .L62
 576              	.L40:
 466:../CANopen/stack/CANopen.c ****         }
 577              	 .loc 4 466 0
 578 01ba 3CE0     	 b .L21
 579              	.L62:
 580              	 .loc 4 495 0 discriminator 1
 581 01bc 3B69     	 ldr r3,[r7,#16]
 582 01be 7433     	 adds r3,r3,#116
 583 01c0 3B61     	 str r3,[r7,#16]
 496:../CANopen/stack/CANopen.c ****             ON_MULTI_OD(RX_CNT_LSS_SLV = 1);
 497:../CANopen/stack/CANopen.c ****             ON_MULTI_OD(TX_CNT_LSS_SLV = 1);
 498:../CANopen/stack/CANopen.c ****         }
 499:../CANopen/stack/CANopen.c **** #endif
 500:../CANopen/stack/CANopen.c **** 
 501:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_LSS) & CO_CONFIG_LSS_MASTER
 502:../CANopen/stack/CANopen.c ****         ON_MULTI_OD(uint8_t RX_CNT_LSS_MST = 0);
 503:../CANopen/stack/CANopen.c ****         ON_MULTI_OD(uint8_t TX_CNT_LSS_MST = 0);
 504:../CANopen/stack/CANopen.c ****         if (CO_GET_CNT(LSS_MST) == 1) {
 505:../CANopen/stack/CANopen.c ****             CO_alloc_break_on_fail(co->LSSmaster, CO_GET_CNT(LSS_MST), sizeof(*co->LSSmaster));
 506:../CANopen/stack/CANopen.c ****             ON_MULTI_OD(RX_CNT_LSS_MST = 1);
 507:../CANopen/stack/CANopen.c ****             ON_MULTI_OD(TX_CNT_LSS_MST = 1);
 508:../CANopen/stack/CANopen.c ****         }
 509:../CANopen/stack/CANopen.c **** #endif
 510:../CANopen/stack/CANopen.c **** 
 511:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_GTW) & CO_CONFIG_GTW_ASCII
 512:../CANopen/stack/CANopen.c ****         if (CO_GET_CNT(GTWA) == 1) {
 513:../CANopen/stack/CANopen.c ****             CO_alloc_break_on_fail(co->gtwa, CO_GET_CNT(GTWA), sizeof(*co->gtwa));
 514:../CANopen/stack/CANopen.c ****         }
 515:../CANopen/stack/CANopen.c **** #endif
 516:../CANopen/stack/CANopen.c **** 
 517:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_TRACE) & CO_CONFIG_TRACE_ENABLE
 518:../CANopen/stack/CANopen.c ****         if (CO_GET_CNT(TRACE) > 0) {
 519:../CANopen/stack/CANopen.c ****             CO_alloc_break_on_fail(co->trace, CO_GET_CNT(TRACE), sizeof(*co->trace));
 520:../CANopen/stack/CANopen.c ****         }
 521:../CANopen/stack/CANopen.c **** #endif
 522:../CANopen/stack/CANopen.c **** 
 523:../CANopen/stack/CANopen.c **** #ifdef CO_MULTIPLE_OD
 524:../CANopen/stack/CANopen.c ****         /* Indexes of CO_CANrx_t and CO_CANtx_t objects in CO_CANmodule_t and
 525:../CANopen/stack/CANopen.c ****          * total number of them. Indexes are sorted in a way, that objects with
 526:../CANopen/stack/CANopen.c ****          * highest priority of the CAN identifier are listed first. */
 527:../CANopen/stack/CANopen.c ****         int16_t idxRx = 0;
 528:../CANopen/stack/CANopen.c ****         co->RX_IDX_NMT_SLV = idxRx; idxRx += RX_CNT_NMT_SLV;
 529:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_SYNC) & CO_CONFIG_SYNC_ENABLE
 530:../CANopen/stack/CANopen.c ****         co->RX_IDX_SYNC = idxRx; idxRx += RX_CNT_SYNC;
 531:../CANopen/stack/CANopen.c **** #endif
 532:../CANopen/stack/CANopen.c ****         co->RX_IDX_EM_CONS = idxRx; idxRx += RX_CNT_EM_CONS;
 533:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_TIME) & CO_CONFIG_TIME_ENABLE
 534:../CANopen/stack/CANopen.c ****         co->RX_IDX_TIME = idxRx; idxRx += RX_CNT_TIME;
 535:../CANopen/stack/CANopen.c **** #endif
 536:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_GFC) & CO_CONFIG_GFC_ENABLE
 537:../CANopen/stack/CANopen.c ****         co->RX_IDX_GFC = idxRx; idxRx += RX_CNT_GFC;
 538:../CANopen/stack/CANopen.c **** #endif
 539:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_SRDO) & CO_CONFIG_SRDO_ENABLE
 540:../CANopen/stack/CANopen.c ****         co->RX_IDX_SRDO = idxRx; idxRx += RX_CNT_SRDO * 2;
 541:../CANopen/stack/CANopen.c **** #endif
 542:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_RPDO_ENABLE
 543:../CANopen/stack/CANopen.c ****         co->RX_IDX_RPDO = idxRx; idxRx += RX_CNT_RPDO;
 544:../CANopen/stack/CANopen.c **** #endif
 545:../CANopen/stack/CANopen.c ****         co->RX_IDX_SDO_SRV = idxRx; idxRx += RX_CNT_SDO_SRV;
 546:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_SDO_CLI) & CO_CONFIG_SDO_CLI_ENABLE
 547:../CANopen/stack/CANopen.c ****         co->RX_IDX_SDO_CLI = idxRx; idxRx += RX_CNT_SDO_CLI;
 548:../CANopen/stack/CANopen.c **** #endif
 549:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_HB_CONS) & CO_CONFIG_HB_CONS_ENABLE
 550:../CANopen/stack/CANopen.c ****         co->RX_IDX_HB_CONS = idxRx; idxRx += RX_CNT_HB_CONS;
 551:../CANopen/stack/CANopen.c **** #endif
 552:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_LSS) & CO_CONFIG_LSS_SLAVE
 553:../CANopen/stack/CANopen.c ****         co->RX_IDX_LSS_SLV = idxRx; idxRx += RX_CNT_LSS_SLV;
 554:../CANopen/stack/CANopen.c **** #endif
 555:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_LSS) & CO_CONFIG_LSS_MASTER
 556:../CANopen/stack/CANopen.c ****         co->RX_IDX_LSS_MST = idxRx; idxRx += RX_CNT_LSS_MST;
 557:../CANopen/stack/CANopen.c **** #endif
 558:../CANopen/stack/CANopen.c ****         co->CNT_ALL_RX_MSGS = idxRx;
 559:../CANopen/stack/CANopen.c **** 
 560:../CANopen/stack/CANopen.c ****         int16_t idxTx = 0;
 561:../CANopen/stack/CANopen.c ****         co->TX_IDX_NMT_MST = idxTx; idxTx += TX_CNT_NMT_MST;
 562:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_SYNC) & CO_CONFIG_SYNC_ENABLE
 563:../CANopen/stack/CANopen.c ****         co->TX_IDX_SYNC = idxTx; idxTx += TX_CNT_SYNC;
 564:../CANopen/stack/CANopen.c **** #endif
 565:../CANopen/stack/CANopen.c ****         co->TX_IDX_EM_PROD = idxTx; idxTx += TX_CNT_EM_PROD;
 566:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_TIME) & CO_CONFIG_TIME_ENABLE
 567:../CANopen/stack/CANopen.c ****         co->TX_IDX_TIME = idxTx; idxTx += TX_CNT_TIME;
 568:../CANopen/stack/CANopen.c **** #endif
 569:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_GFC) & CO_CONFIG_GFC_ENABLE
 570:../CANopen/stack/CANopen.c ****         co->TX_IDX_GFC = idxTx; idxTx += TX_CNT_GFC;
 571:../CANopen/stack/CANopen.c **** #endif
 572:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_SRDO) & CO_CONFIG_SRDO_ENABLE
 573:../CANopen/stack/CANopen.c ****         co->TX_IDX_SRDO = idxTx; idxTx += TX_CNT_SRDO * 2;
 574:../CANopen/stack/CANopen.c **** #endif
 575:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_TPDO_ENABLE
 576:../CANopen/stack/CANopen.c ****         co->TX_IDX_TPDO = idxTx; idxTx += TX_CNT_TPDO;
 577:../CANopen/stack/CANopen.c **** #endif
 578:../CANopen/stack/CANopen.c ****         co->TX_IDX_SDO_SRV = idxTx; idxTx += TX_CNT_SDO_SRV;
 579:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_SDO_CLI) & CO_CONFIG_SDO_CLI_ENABLE
 580:../CANopen/stack/CANopen.c ****         co->TX_IDX_SDO_CLI = idxTx; idxTx += TX_CNT_SDO_CLI;
 581:../CANopen/stack/CANopen.c **** #endif
 582:../CANopen/stack/CANopen.c ****         co->TX_IDX_HB_PROD = idxTx; idxTx += TX_CNT_HB_PROD;
 583:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_LSS) & CO_CONFIG_LSS_SLAVE
 584:../CANopen/stack/CANopen.c ****         co->TX_IDX_LSS_SLV = idxTx; idxTx += TX_CNT_LSS_SLV;
 585:../CANopen/stack/CANopen.c **** #endif
 586:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_LSS) & CO_CONFIG_LSS_MASTER
 587:../CANopen/stack/CANopen.c ****         co->TX_IDX_LSS_MST = idxTx; idxTx += TX_CNT_LSS_MST;
 588:../CANopen/stack/CANopen.c **** #endif
 589:../CANopen/stack/CANopen.c ****         co->CNT_ALL_TX_MSGS = idxTx;
 590:../CANopen/stack/CANopen.c **** #endif /* #ifdef CO_MULTIPLE_OD */
 591:../CANopen/stack/CANopen.c **** 
 592:../CANopen/stack/CANopen.c ****         /* CANmodule */
 593:../CANopen/stack/CANopen.c ****         CO_alloc_break_on_fail(co->CANmodule, 1, sizeof(*co->CANmodule));
 584              	 .loc 4 593 0 discriminator 1
 585 01c2 0120     	 movs r0,#1
 586 01c4 2C21     	 movs r1,#44
 587 01c6 FFF7FEFF 	 bl calloc
 588 01ca 0346     	 mov r3,r0
 589 01cc 1A46     	 mov r2,r3
 590 01ce FB68     	 ldr r3,[r7,#12]
 591 01d0 5A60     	 str r2,[r3,#4]
 592 01d2 FB68     	 ldr r3,[r7,#12]
 593 01d4 5B68     	 ldr r3,[r3,#4]
 594 01d6 002B     	 cmp r3,#0
 595 01d8 11D0     	 beq .L44
 596 01da 00E0     	 b .L63
 597              	.L42:
 495:../CANopen/stack/CANopen.c ****             ON_MULTI_OD(RX_CNT_LSS_SLV = 1);
 598              	 .loc 4 495 0
 599 01dc 2BE0     	 b .L21
 600              	.L63:
 601              	 .loc 4 593 0 discriminator 1
 602 01de 3B69     	 ldr r3,[r7,#16]
 603 01e0 2C33     	 adds r3,r3,#44
 604 01e2 3B61     	 str r3,[r7,#16]
 594:../CANopen/stack/CANopen.c **** 
 595:../CANopen/stack/CANopen.c ****         /* CAN RX blocks */
 596:../CANopen/stack/CANopen.c ****         CO_alloc_break_on_fail(co->CANrx, CO_GET_CO(CNT_ALL_RX_MSGS), sizeof(*co->CANrx));
 605              	 .loc 4 596 0 discriminator 1
 606 01e4 0620     	 movs r0,#6
 607 01e6 0C21     	 movs r1,#12
 608 01e8 FFF7FEFF 	 bl calloc
 609 01ec 0346     	 mov r3,r0
 610 01ee 1A46     	 mov r2,r3
 611 01f0 FB68     	 ldr r3,[r7,#12]
 612 01f2 9A60     	 str r2,[r3,#8]
 613 01f4 FB68     	 ldr r3,[r7,#12]
 614 01f6 9B68     	 ldr r3,[r3,#8]
 615 01f8 002B     	 cmp r3,#0
 616 01fa 11D0     	 beq .L46
 617 01fc 00E0     	 b .L64
 618              	.L44:
 593:../CANopen/stack/CANopen.c **** 
 619              	 .loc 4 593 0
 620 01fe 1AE0     	 b .L21
 621              	.L64:
 622              	 .loc 4 596 0 discriminator 1
 623 0200 3B69     	 ldr r3,[r7,#16]
 624 0202 4833     	 adds r3,r3,#72
 625 0204 3B61     	 str r3,[r7,#16]
 597:../CANopen/stack/CANopen.c **** 
 598:../CANopen/stack/CANopen.c ****         /* CAN TX blocks */
 599:../CANopen/stack/CANopen.c ****         CO_alloc_break_on_fail(co->CANtx, CO_GET_CO(CNT_ALL_TX_MSGS), sizeof(*co->CANtx));
 626              	 .loc 4 599 0 discriminator 1
 627 0206 0620     	 movs r0,#6
 628 0208 1821     	 movs r1,#24
 629 020a FFF7FEFF 	 bl calloc
 630 020e 0346     	 mov r3,r0
 631 0210 1A46     	 mov r2,r3
 632 0212 FB68     	 ldr r3,[r7,#12]
 633 0214 DA60     	 str r2,[r3,#12]
 634 0216 FB68     	 ldr r3,[r7,#12]
 635 0218 DB68     	 ldr r3,[r3,#12]
 636 021a 002B     	 cmp r3,#0
 637 021c 0AD0     	 beq .L48
 638 021e 00E0     	 b .L65
 639              	.L46:
 596:../CANopen/stack/CANopen.c **** 
 640              	 .loc 4 596 0
 641 0220 09E0     	 b .L21
 642              	.L65:
 643              	 .loc 4 599 0 discriminator 1
 644 0222 3B69     	 ldr r3,[r7,#16]
 645 0224 9033     	 adds r3,r3,#144
 646 0226 3B61     	 str r3,[r7,#16]
 600:../CANopen/stack/CANopen.c **** 
 601:../CANopen/stack/CANopen.c ****         /* finish successfully, set other parameters */
 602:../CANopen/stack/CANopen.c ****         co->nodeIdUnconfigured = true;
 647              	 .loc 4 602 0 discriminator 1
 648 0228 FB68     	 ldr r3,[r7,#12]
 649 022a 0122     	 movs r2,#1
 650 022c 1A60     	 str r2,[r3]
 603:../CANopen/stack/CANopen.c ****         coFinal = co;
 651              	 .loc 4 603 0 discriminator 1
 652 022e FB68     	 ldr r3,[r7,#12]
 653 0230 7B61     	 str r3,[r7,#20]
 654 0232 00E0     	 b .L21
 655              	.L48:
 599:../CANopen/stack/CANopen.c **** 
 656              	 .loc 4 599 0
 657 0234 00BF     	 nop
 658              	.L21:
 604:../CANopen/stack/CANopen.c ****     } while (false);
 605:../CANopen/stack/CANopen.c **** 
 606:../CANopen/stack/CANopen.c ****     if (coFinal == NULL) {
 659              	 .loc 4 606 0
 660 0236 7B69     	 ldr r3,[r7,#20]
 661 0238 002B     	 cmp r3,#0
 662 023a 02D1     	 bne .L50
 607:../CANopen/stack/CANopen.c ****         CO_delete(co);
 663              	 .loc 4 607 0
 664 023c F868     	 ldr r0,[r7,#12]
 665 023e FFF7FEFF 	 bl CO_delete
 666              	.L50:
 608:../CANopen/stack/CANopen.c ****     }
 609:../CANopen/stack/CANopen.c ****     if (heapMemoryUsed != NULL) {
 667              	 .loc 4 609 0
 668 0242 3B68     	 ldr r3,[r7]
 669 0244 002B     	 cmp r3,#0
 670 0246 02D0     	 beq .L51
 610:../CANopen/stack/CANopen.c ****         *heapMemoryUsed = mem;
 671              	 .loc 4 610 0
 672 0248 3B68     	 ldr r3,[r7]
 673 024a 3A69     	 ldr r2,[r7,#16]
 674 024c 1A60     	 str r2,[r3]
 675              	.L51:
 611:../CANopen/stack/CANopen.c ****     }
 612:../CANopen/stack/CANopen.c ****     return coFinal;
 676              	 .loc 4 612 0
 677 024e 7B69     	 ldr r3,[r7,#20]
 613:../CANopen/stack/CANopen.c **** }
 678              	 .loc 4 613 0
 679 0250 1846     	 mov r0,r3
 680 0252 1837     	 adds r7,r7,#24
 681              	.LCFI27:
 682              	 .cfi_def_cfa_offset 8
 683 0254 BD46     	 mov sp,r7
 684              	.LCFI28:
 685              	 .cfi_def_cfa_register 13
 686              	 
 687 0256 80BD     	 pop {r7,pc}
 688              	 .cfi_endproc
 689              	.LFE41:
 691              	 .section .text.CO_delete,"ax",%progbits
 692              	 .align 2
 693              	 .global CO_delete
 694              	 .thumb
 695              	 .thumb_func
 697              	CO_delete:
 698              	.LFB42:
 614:../CANopen/stack/CANopen.c **** 
 615:../CANopen/stack/CANopen.c **** void CO_delete(CO_t *co) {
 699              	 .loc 4 615 0
 700              	 .cfi_startproc
 701              	 
 702              	 
 703 0000 80B5     	 push {r7,lr}
 704              	.LCFI29:
 705              	 .cfi_def_cfa_offset 8
 706              	 .cfi_offset 7,-8
 707              	 .cfi_offset 14,-4
 708 0002 82B0     	 sub sp,sp,#8
 709              	.LCFI30:
 710              	 .cfi_def_cfa_offset 16
 711 0004 00AF     	 add r7,sp,#0
 712              	.LCFI31:
 713              	 .cfi_def_cfa_register 7
 714 0006 7860     	 str r0,[r7,#4]
 616:../CANopen/stack/CANopen.c ****     if (co == NULL) {
 715              	 .loc 4 616 0
 716 0008 7B68     	 ldr r3,[r7,#4]
 717 000a 002B     	 cmp r3,#0
 718 000c 00D1     	 bne .L67
 617:../CANopen/stack/CANopen.c ****         return;
 719              	 .loc 4 617 0
 720 000e 52E0     	 b .L66
 721              	.L67:
 618:../CANopen/stack/CANopen.c ****     }
 619:../CANopen/stack/CANopen.c **** 
 620:../CANopen/stack/CANopen.c ****     CO_CANmodule_disable(co->CANmodule);
 722              	 .loc 4 620 0
 723 0010 7B68     	 ldr r3,[r7,#4]
 724 0012 5B68     	 ldr r3,[r3,#4]
 725 0014 1846     	 mov r0,r3
 726 0016 FFF7FEFF 	 bl CO_CANmodule_disable
 621:../CANopen/stack/CANopen.c **** 
 622:../CANopen/stack/CANopen.c ****     /* CANmodule */
 623:../CANopen/stack/CANopen.c ****     CO_free(co->CANtx);
 727              	 .loc 4 623 0
 728 001a 7B68     	 ldr r3,[r7,#4]
 729 001c DB68     	 ldr r3,[r3,#12]
 730 001e 1846     	 mov r0,r3
 731 0020 FFF7FEFF 	 bl free
 624:../CANopen/stack/CANopen.c ****     CO_free(co->CANrx);
 732              	 .loc 4 624 0
 733 0024 7B68     	 ldr r3,[r7,#4]
 734 0026 9B68     	 ldr r3,[r3,#8]
 735 0028 1846     	 mov r0,r3
 736 002a FFF7FEFF 	 bl free
 625:../CANopen/stack/CANopen.c ****     CO_free(co->CANmodule);
 737              	 .loc 4 625 0
 738 002e 7B68     	 ldr r3,[r7,#4]
 739 0030 5B68     	 ldr r3,[r3,#4]
 740 0032 1846     	 mov r0,r3
 741 0034 FFF7FEFF 	 bl free
 626:../CANopen/stack/CANopen.c **** 
 627:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_TRACE) & CO_CONFIG_TRACE_ENABLE
 628:../CANopen/stack/CANopen.c ****     CO_free(co->trace);
 629:../CANopen/stack/CANopen.c **** #endif
 630:../CANopen/stack/CANopen.c **** 
 631:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_GTW) & CO_CONFIG_GTW_ASCII
 632:../CANopen/stack/CANopen.c ****     CO_free(co->gtwa);
 633:../CANopen/stack/CANopen.c **** #endif
 634:../CANopen/stack/CANopen.c **** 
 635:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_LSS) & CO_CONFIG_LSS_MASTER
 636:../CANopen/stack/CANopen.c ****     CO_free(co->LSSmaster);
 637:../CANopen/stack/CANopen.c **** #endif
 638:../CANopen/stack/CANopen.c **** 
 639:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_LSS) & CO_CONFIG_LSS_SLAVE
 640:../CANopen/stack/CANopen.c ****     CO_free(co->LSSslave);
 742              	 .loc 4 640 0
 743 0038 7B68     	 ldr r3,[r7,#4]
 744 003a DB6B     	 ldr r3,[r3,#60]
 745 003c 1846     	 mov r0,r3
 746 003e FFF7FEFF 	 bl free
 641:../CANopen/stack/CANopen.c **** #endif
 642:../CANopen/stack/CANopen.c **** 
 643:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_SRDO) & CO_CONFIG_SRDO_ENABLE
 644:../CANopen/stack/CANopen.c ****     CO_free(co->SRDO);
 645:../CANopen/stack/CANopen.c ****     CO_free(co->SRDOGuard);
 646:../CANopen/stack/CANopen.c **** #endif
 647:../CANopen/stack/CANopen.c **** 
 648:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_GFC) & CO_CONFIG_GFC_ENABLE
 649:../CANopen/stack/CANopen.c ****     CO_free(co->GFC);
 650:../CANopen/stack/CANopen.c **** #endif
 651:../CANopen/stack/CANopen.c **** 
 652:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_LEDS) & CO_CONFIG_LEDS_ENABLE
 653:../CANopen/stack/CANopen.c ****     CO_free(co->LEDs);
 747              	 .loc 4 653 0
 748 0042 7B68     	 ldr r3,[r7,#4]
 749 0044 9B6B     	 ldr r3,[r3,#56]
 750 0046 1846     	 mov r0,r3
 751 0048 FFF7FEFF 	 bl free
 654:../CANopen/stack/CANopen.c **** #endif
 655:../CANopen/stack/CANopen.c **** 
 656:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_TPDO_ENABLE
 657:../CANopen/stack/CANopen.c ****     CO_free(co->TPDO);
 752              	 .loc 4 657 0
 753 004c 7B68     	 ldr r3,[r7,#4]
 754 004e 5B6B     	 ldr r3,[r3,#52]
 755 0050 1846     	 mov r0,r3
 756 0052 FFF7FEFF 	 bl free
 658:../CANopen/stack/CANopen.c **** #endif
 659:../CANopen/stack/CANopen.c **** 
 660:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_RPDO_ENABLE
 661:../CANopen/stack/CANopen.c ****     CO_free(co->RPDO);
 757              	 .loc 4 661 0
 758 0056 7B68     	 ldr r3,[r7,#4]
 759 0058 1B6B     	 ldr r3,[r3,#48]
 760 005a 1846     	 mov r0,r3
 761 005c FFF7FEFF 	 bl free
 662:../CANopen/stack/CANopen.c **** #endif
 663:../CANopen/stack/CANopen.c **** 
 664:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_SYNC) & CO_CONFIG_SYNC_ENABLE
 665:../CANopen/stack/CANopen.c ****     CO_free(co->SYNC);
 762              	 .loc 4 665 0
 763 0060 7B68     	 ldr r3,[r7,#4]
 764 0062 DB6A     	 ldr r3,[r3,#44]
 765 0064 1846     	 mov r0,r3
 766 0066 FFF7FEFF 	 bl free
 666:../CANopen/stack/CANopen.c **** #endif
 667:../CANopen/stack/CANopen.c **** 
 668:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_TIME) & CO_CONFIG_TIME_ENABLE
 669:../CANopen/stack/CANopen.c ****     CO_free(co->TIME);
 767              	 .loc 4 669 0
 768 006a 7B68     	 ldr r3,[r7,#4]
 769 006c 9B6A     	 ldr r3,[r3,#40]
 770 006e 1846     	 mov r0,r3
 771 0070 FFF7FEFF 	 bl free
 670:../CANopen/stack/CANopen.c **** #endif
 671:../CANopen/stack/CANopen.c **** 
 672:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_SDO_CLI) & CO_CONFIG_SDO_CLI_ENABLE
 673:../CANopen/stack/CANopen.c ****     free(co->SDOclient);
 674:../CANopen/stack/CANopen.c **** #endif
 675:../CANopen/stack/CANopen.c **** 
 676:../CANopen/stack/CANopen.c ****     /* SDOserver */
 677:../CANopen/stack/CANopen.c ****     CO_free(co->SDOserver);
 772              	 .loc 4 677 0
 773 0074 7B68     	 ldr r3,[r7,#4]
 774 0076 5B6A     	 ldr r3,[r3,#36]
 775 0078 1846     	 mov r0,r3
 776 007a FFF7FEFF 	 bl free
 678:../CANopen/stack/CANopen.c **** 
 679:../CANopen/stack/CANopen.c ****     /* Emergency */
 680:../CANopen/stack/CANopen.c ****     CO_free(co->em);
 777              	 .loc 4 680 0
 778 007e 7B68     	 ldr r3,[r7,#4]
 779 0080 DB69     	 ldr r3,[r3,#28]
 780 0082 1846     	 mov r0,r3
 781 0084 FFF7FEFF 	 bl free
 681:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_EM) & (CO_CONFIG_EM_PRODUCER | CO_CONFIG_EM_HISTORY)
 682:../CANopen/stack/CANopen.c ****     CO_free(co->em_fifo);
 782              	 .loc 4 682 0
 783 0088 7B68     	 ldr r3,[r7,#4]
 784 008a 1B6A     	 ldr r3,[r3,#32]
 785 008c 1846     	 mov r0,r3
 786 008e FFF7FEFF 	 bl free
 683:../CANopen/stack/CANopen.c **** #endif
 684:../CANopen/stack/CANopen.c **** 
 685:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_HB_CONS) & CO_CONFIG_HB_CONS_ENABLE
 686:../CANopen/stack/CANopen.c ****     CO_free(co->HBconsMonitoredNodes);
 787              	 .loc 4 686 0
 788 0092 7B68     	 ldr r3,[r7,#4]
 789 0094 9B69     	 ldr r3,[r3,#24]
 790 0096 1846     	 mov r0,r3
 791 0098 FFF7FEFF 	 bl free
 687:../CANopen/stack/CANopen.c ****     CO_free(co->HBcons);
 792              	 .loc 4 687 0
 793 009c 7B68     	 ldr r3,[r7,#4]
 794 009e 5B69     	 ldr r3,[r3,#20]
 795 00a0 1846     	 mov r0,r3
 796 00a2 FFF7FEFF 	 bl free
 688:../CANopen/stack/CANopen.c **** #endif
 689:../CANopen/stack/CANopen.c **** 
 690:../CANopen/stack/CANopen.c ****     /* NMT_Heartbeat */
 691:../CANopen/stack/CANopen.c ****     CO_free(co->NMT);
 797              	 .loc 4 691 0
 798 00a6 7B68     	 ldr r3,[r7,#4]
 799 00a8 1B69     	 ldr r3,[r3,#16]
 800 00aa 1846     	 mov r0,r3
 801 00ac FFF7FEFF 	 bl free
 692:../CANopen/stack/CANopen.c **** 
 693:../CANopen/stack/CANopen.c ****     /* CANopen object */
 694:../CANopen/stack/CANopen.c ****     CO_free(co);
 802              	 .loc 4 694 0
 803 00b0 7868     	 ldr r0,[r7,#4]
 804 00b2 FFF7FEFF 	 bl free
 805              	.L66:
 695:../CANopen/stack/CANopen.c **** }
 806              	 .loc 4 695 0
 807 00b6 0837     	 adds r7,r7,#8
 808              	.LCFI32:
 809              	 .cfi_def_cfa_offset 8
 810 00b8 BD46     	 mov sp,r7
 811              	.LCFI33:
 812              	 .cfi_def_cfa_register 13
 813              	 
 814 00ba 80BD     	 pop {r7,pc}
 815              	 .cfi_endproc
 816              	.LFE42:
 818              	 .section .text.CO_isLSSslaveEnabled,"ax",%progbits
 819              	 .align 2
 820              	 .global CO_isLSSslaveEnabled
 821              	 .thumb
 822              	 .thumb_func
 824              	CO_isLSSslaveEnabled:
 825              	.LFB43:
 696:../CANopen/stack/CANopen.c **** #endif /* #ifndef CO_USE_GLOBALS */
 697:../CANopen/stack/CANopen.c **** 
 698:../CANopen/stack/CANopen.c **** 
 699:../CANopen/stack/CANopen.c **** /* Objects as globals *********************************************************/
 700:../CANopen/stack/CANopen.c **** #ifdef CO_USE_GLOBALS
 701:../CANopen/stack/CANopen.c ****  #ifdef CO_MULTIPLE_OD
 702:../CANopen/stack/CANopen.c ****   #error CO_MULTIPLE_OD can not be used with CO_USE_GLOBALS
 703:../CANopen/stack/CANopen.c ****  #endif
 704:../CANopen/stack/CANopen.c ****     static CO_t COO;
 705:../CANopen/stack/CANopen.c ****     static CO_CANmodule_t COO_CANmodule;
 706:../CANopen/stack/CANopen.c ****     static CO_CANrx_t COO_CANmodule_rxArray[CO_CNT_ALL_RX_MSGS];
 707:../CANopen/stack/CANopen.c ****     static CO_CANtx_t COO_CANmodule_txArray[CO_CNT_ALL_TX_MSGS];
 708:../CANopen/stack/CANopen.c ****     static CO_NMT_t COO_NMT;
 709:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_HB_CONS) & CO_CONFIG_HB_CONS_ENABLE
 710:../CANopen/stack/CANopen.c ****     static CO_HBconsumer_t COO_HBcons;
 711:../CANopen/stack/CANopen.c ****     static CO_HBconsNode_t COO_HBconsMonitoredNodes[OD_CNT_ARR_1016];
 712:../CANopen/stack/CANopen.c **** #endif
 713:../CANopen/stack/CANopen.c ****     static CO_EM_t COO_EM;
 714:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_EM) & (CO_CONFIG_EM_PRODUCER | CO_CONFIG_EM_HISTORY)
 715:../CANopen/stack/CANopen.c ****     static CO_EM_fifo_t COO_EM_FIFO[CO_GET_CNT(ARR_1003) + 1];
 716:../CANopen/stack/CANopen.c **** #endif
 717:../CANopen/stack/CANopen.c ****     static CO_SDOserver_t COO_SDOserver[OD_CNT_SDO_SRV];
 718:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_SDO_CLI) & CO_CONFIG_SDO_CLI_ENABLE
 719:../CANopen/stack/CANopen.c ****     static CO_SDOclient_t COO_SDOclient[OD_CNT_SDO_CLI];
 720:../CANopen/stack/CANopen.c **** #endif
 721:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_TIME) & CO_CONFIG_TIME_ENABLE
 722:../CANopen/stack/CANopen.c ****     static CO_TIME_t COO_TIME;
 723:../CANopen/stack/CANopen.c **** #endif
 724:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_SYNC) & CO_CONFIG_SYNC_ENABLE
 725:../CANopen/stack/CANopen.c ****     static CO_SYNC_t COO_SYNC;
 726:../CANopen/stack/CANopen.c **** #endif
 727:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_RPDO_ENABLE
 728:../CANopen/stack/CANopen.c ****     static CO_RPDO_t COO_RPDO[OD_CNT_RPDO];
 729:../CANopen/stack/CANopen.c **** #endif
 730:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_TPDO_ENABLE
 731:../CANopen/stack/CANopen.c ****     static CO_TPDO_t COO_TPDO[OD_CNT_TPDO];
 732:../CANopen/stack/CANopen.c **** #endif
 733:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_LEDS) & CO_CONFIG_LEDS_ENABLE
 734:../CANopen/stack/CANopen.c ****     static CO_LEDs_t COO_LEDs;
 735:../CANopen/stack/CANopen.c **** #endif
 736:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_GFC) & CO_CONFIG_GFC_ENABLE
 737:../CANopen/stack/CANopen.c ****     static CO_GFC_t COO_GFC;
 738:../CANopen/stack/CANopen.c **** #endif
 739:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_SRDO) & CO_CONFIG_SRDO_ENABLE
 740:../CANopen/stack/CANopen.c ****     static CO_SRDOGuard_t COO_SRDOGuard;
 741:../CANopen/stack/CANopen.c ****     static CO_SRDO_t COO_SRDO[OD_CNT_SRDO];
 742:../CANopen/stack/CANopen.c **** #endif
 743:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_LSS) & CO_CONFIG_LSS_SLAVE
 744:../CANopen/stack/CANopen.c ****     static CO_LSSslave_t COO_LSSslave;
 745:../CANopen/stack/CANopen.c **** #endif
 746:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_LSS) & CO_CONFIG_LSS_MASTER
 747:../CANopen/stack/CANopen.c ****     static CO_LSSmaster_t COO_LSSmaster;
 748:../CANopen/stack/CANopen.c **** #endif
 749:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_GTW) & CO_CONFIG_GTW_ASCII
 750:../CANopen/stack/CANopen.c ****     static CO_GTWA_t COO_gtwa;
 751:../CANopen/stack/CANopen.c **** #endif
 752:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_TRACE) & CO_CONFIG_TRACE_ENABLE
 753:../CANopen/stack/CANopen.c ****   #ifndef CO_TRACE_BUFFER_SIZE_FIXED
 754:../CANopen/stack/CANopen.c ****     #define CO_TRACE_BUFFER_SIZE_FIXED 100
 755:../CANopen/stack/CANopen.c ****   #endif
 756:../CANopen/stack/CANopen.c ****     static CO_trace_t COO_trace[OD_CNT_TRACE];
 757:../CANopen/stack/CANopen.c ****     static uint32_t COO_traceTimeBuffers[OD_CNT_TRACE][CO_TRACE_BUFFER_SIZE_FIXED];
 758:../CANopen/stack/CANopen.c ****     static int32_t COO_traceValueBuffers[OD_CNT_TRACE][CO_TRACE_BUFFER_SIZE_FIXED];
 759:../CANopen/stack/CANopen.c **** #endif
 760:../CANopen/stack/CANopen.c **** 
 761:../CANopen/stack/CANopen.c **** CO_t *CO_new(CO_config_t *config, uint32_t *heapMemoryUsed) {
 762:../CANopen/stack/CANopen.c ****     (void)config; (void)heapMemoryUsed;
 763:../CANopen/stack/CANopen.c **** 
 764:../CANopen/stack/CANopen.c ****     CO_t *co = &COO;
 765:../CANopen/stack/CANopen.c **** 
 766:../CANopen/stack/CANopen.c ****     co->CANmodule = &COO_CANmodule;
 767:../CANopen/stack/CANopen.c ****     co->CANrx = &COO_CANmodule_rxArray[0];
 768:../CANopen/stack/CANopen.c ****     co->CANtx = &COO_CANmodule_txArray[0];
 769:../CANopen/stack/CANopen.c **** 
 770:../CANopen/stack/CANopen.c ****     co->NMT = &COO_NMT;
 771:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_HB_CONS) & CO_CONFIG_HB_CONS_ENABLE
 772:../CANopen/stack/CANopen.c ****     co->HBcons = &COO_HBcons;
 773:../CANopen/stack/CANopen.c ****     co->HBconsMonitoredNodes = &COO_HBconsMonitoredNodes[0];
 774:../CANopen/stack/CANopen.c **** #endif
 775:../CANopen/stack/CANopen.c ****     co->em = &COO_EM;
 776:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_EM) & (CO_CONFIG_EM_PRODUCER | CO_CONFIG_EM_HISTORY)
 777:../CANopen/stack/CANopen.c ****     co->em_fifo = &COO_EM_FIFO[0];
 778:../CANopen/stack/CANopen.c **** #endif
 779:../CANopen/stack/CANopen.c ****     co->SDOserver = &COO_SDOserver[0];
 780:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_SDO_CLI) & CO_CONFIG_SDO_CLI_ENABLE
 781:../CANopen/stack/CANopen.c ****     co->SDOclient = &COO_SDOclient[0];
 782:../CANopen/stack/CANopen.c **** #endif
 783:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_TIME) & CO_CONFIG_TIME_ENABLE
 784:../CANopen/stack/CANopen.c ****     co->TIME = &COO_TIME;
 785:../CANopen/stack/CANopen.c **** #endif
 786:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_SYNC) & CO_CONFIG_SYNC_ENABLE
 787:../CANopen/stack/CANopen.c ****     co->SYNC = &COO_SYNC;
 788:../CANopen/stack/CANopen.c **** #endif
 789:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_RPDO_ENABLE
 790:../CANopen/stack/CANopen.c ****     co->RPDO = &COO_RPDO[0];
 791:../CANopen/stack/CANopen.c **** #endif
 792:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_TPDO_ENABLE
 793:../CANopen/stack/CANopen.c ****     co->TPDO = &COO_TPDO[0];
 794:../CANopen/stack/CANopen.c **** #endif
 795:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_LEDS) & CO_CONFIG_LEDS_ENABLE
 796:../CANopen/stack/CANopen.c ****     co->LEDs = &COO_LEDs;
 797:../CANopen/stack/CANopen.c **** #endif
 798:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_GFC) & CO_CONFIG_GFC_ENABLE
 799:../CANopen/stack/CANopen.c ****     co->GFC = &COO_GFC;
 800:../CANopen/stack/CANopen.c **** #endif
 801:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_SRDO) & CO_CONFIG_SRDO_ENABLE
 802:../CANopen/stack/CANopen.c ****     co->SRDOGuard = &COO_SRDOGuard;
 803:../CANopen/stack/CANopen.c ****     co->SRDO = &COO_SRDO[0];
 804:../CANopen/stack/CANopen.c **** #endif
 805:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_LSS) & CO_CONFIG_LSS_SLAVE
 806:../CANopen/stack/CANopen.c ****     co->LSSslave = &COO_LSSslave;
 807:../CANopen/stack/CANopen.c **** #endif
 808:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_LSS) & CO_CONFIG_LSS_MASTER
 809:../CANopen/stack/CANopen.c ****     co->LSSmaster = &COO_LSSmaster;
 810:../CANopen/stack/CANopen.c **** #endif
 811:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_GTW) & CO_CONFIG_GTW_ASCII
 812:../CANopen/stack/CANopen.c ****     co->gtwa = &COO_gtwa;
 813:../CANopen/stack/CANopen.c **** #endif
 814:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_TRACE) & CO_CONFIG_TRACE_ENABLE
 815:../CANopen/stack/CANopen.c ****     co->trace = &COO_trace[0];
 816:../CANopen/stack/CANopen.c ****     co->traceTimeBuffers = &COO_traceTimeBuffers[0][0];
 817:../CANopen/stack/CANopen.c ****     co->traceValueBuffers = &COO_traceValueBuffers[0][0];
 818:../CANopen/stack/CANopen.c ****     co->traceBufferSize = CO_TRACE_BUFFER_SIZE_FIXED;
 819:../CANopen/stack/CANopen.c **** #endif
 820:../CANopen/stack/CANopen.c **** 
 821:../CANopen/stack/CANopen.c ****     return co;
 822:../CANopen/stack/CANopen.c **** }
 823:../CANopen/stack/CANopen.c **** 
 824:../CANopen/stack/CANopen.c **** void CO_delete(CO_t *co) {
 825:../CANopen/stack/CANopen.c ****     if (co == NULL) {
 826:../CANopen/stack/CANopen.c ****         return;
 827:../CANopen/stack/CANopen.c ****     }
 828:../CANopen/stack/CANopen.c **** 
 829:../CANopen/stack/CANopen.c ****     CO_CANmodule_disable(co->CANmodule);
 830:../CANopen/stack/CANopen.c **** }
 831:../CANopen/stack/CANopen.c **** #endif /* #ifdef CO_USE_GLOBALS */
 832:../CANopen/stack/CANopen.c **** 
 833:../CANopen/stack/CANopen.c **** /* Helper functions ***********************************************************/
 834:../CANopen/stack/CANopen.c **** bool_t CO_isLSSslaveEnabled(CO_t *co) {
 826              	 .loc 4 834 0
 827              	 .cfi_startproc
 828              	 
 829              	 
 830              	 
 831 0000 80B4     	 push {r7}
 832              	.LCFI34:
 833              	 .cfi_def_cfa_offset 4
 834              	 .cfi_offset 7,-4
 835 0002 85B0     	 sub sp,sp,#20
 836              	.LCFI35:
 837              	 .cfi_def_cfa_offset 24
 838 0004 00AF     	 add r7,sp,#0
 839              	.LCFI36:
 840              	 .cfi_def_cfa_register 7
 841 0006 7860     	 str r0,[r7,#4]
 835:../CANopen/stack/CANopen.c ****     (void) co; /* may be unused */
 836:../CANopen/stack/CANopen.c ****     bool_t en = false;
 842              	 .loc 4 836 0
 843 0008 0023     	 movs r3,#0
 844 000a FB60     	 str r3,[r7,#12]
 837:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_LSS) & CO_CONFIG_LSS_SLAVE
 838:../CANopen/stack/CANopen.c ****     if (CO_GET_CNT(LSS_SLV) == 1) en = true;
 845              	 .loc 4 838 0
 846 000c 0123     	 movs r3,#1
 847 000e FB60     	 str r3,[r7,#12]
 839:../CANopen/stack/CANopen.c **** #endif
 840:../CANopen/stack/CANopen.c ****     return en;
 848              	 .loc 4 840 0
 849 0010 FB68     	 ldr r3,[r7,#12]
 841:../CANopen/stack/CANopen.c **** }
 850              	 .loc 4 841 0
 851 0012 1846     	 mov r0,r3
 852 0014 1437     	 adds r7,r7,#20
 853              	.LCFI37:
 854              	 .cfi_def_cfa_offset 4
 855 0016 BD46     	 mov sp,r7
 856              	.LCFI38:
 857              	 .cfi_def_cfa_register 13
 858              	 
 859 0018 5DF8047B 	 ldr r7,[sp],#4
 860              	.LCFI39:
 861              	 .cfi_restore 7
 862              	 .cfi_def_cfa_offset 0
 863 001c 7047     	 bx lr
 864              	 .cfi_endproc
 865              	.LFE43:
 867 001e 00BF     	 .section .text.CO_CANinit,"ax",%progbits
 868              	 .align 2
 869              	 .global CO_CANinit
 870              	 .thumb
 871              	 .thumb_func
 873              	CO_CANinit:
 874              	.LFB44:
 842:../CANopen/stack/CANopen.c **** 
 843:../CANopen/stack/CANopen.c **** /******************************************************************************/
 844:../CANopen/stack/CANopen.c **** CO_ReturnError_t CO_CANinit(CO_t *co, void *CANptr, uint16_t bitRate) {
 875              	 .loc 4 844 0
 876              	 .cfi_startproc
 877              	 
 878              	 
 879 0000 80B5     	 push {r7,lr}
 880              	.LCFI40:
 881              	 .cfi_def_cfa_offset 8
 882              	 .cfi_offset 7,-8
 883              	 .cfi_offset 14,-4
 884 0002 8AB0     	 sub sp,sp,#40
 885              	.LCFI41:
 886              	 .cfi_def_cfa_offset 48
 887 0004 04AF     	 add r7,sp,#16
 888              	.LCFI42:
 889              	 .cfi_def_cfa 7,32
 890 0006 F860     	 str r0,[r7,#12]
 891 0008 B960     	 str r1,[r7,#8]
 892 000a 1346     	 mov r3,r2
 893 000c FB80     	 strh r3,[r7,#6]
 845:../CANopen/stack/CANopen.c ****     CO_ReturnError_t err;
 846:../CANopen/stack/CANopen.c **** 
 847:../CANopen/stack/CANopen.c ****     if (co == NULL) return CO_ERROR_ILLEGAL_ARGUMENT;
 894              	 .loc 4 847 0
 895 000e FB68     	 ldr r3,[r7,#12]
 896 0010 002B     	 cmp r3,#0
 897 0012 01D1     	 bne .L72
 898              	 .loc 4 847 0 is_stmt 0 discriminator 1
 899 0014 FF23     	 movs r3,#255
 900 0016 19E0     	 b .L73
 901              	.L72:
 848:../CANopen/stack/CANopen.c **** 
 849:../CANopen/stack/CANopen.c ****     co->CANmodule->CANnormal = false;
 902              	 .loc 4 849 0 is_stmt 1
 903 0018 FB68     	 ldr r3,[r7,#12]
 904 001a 5B68     	 ldr r3,[r3,#4]
 905 001c 0022     	 movs r2,#0
 906 001e 5A61     	 str r2,[r3,#20]
 850:../CANopen/stack/CANopen.c ****     CO_CANsetConfigurationMode(CANptr);
 907              	 .loc 4 850 0
 908 0020 B868     	 ldr r0,[r7,#8]
 909 0022 FFF7FEFF 	 bl CO_CANsetConfigurationMode
 851:../CANopen/stack/CANopen.c **** 
 852:../CANopen/stack/CANopen.c ****     /* CANmodule */
 853:../CANopen/stack/CANopen.c ****     err = CO_CANmodule_init(co->CANmodule,
 910              	 .loc 4 853 0
 911 0026 FB68     	 ldr r3,[r7,#12]
 912 0028 5968     	 ldr r1,[r3,#4]
 913 002a FB68     	 ldr r3,[r7,#12]
 914 002c 9A68     	 ldr r2,[r3,#8]
 915 002e FB68     	 ldr r3,[r7,#12]
 916 0030 DB68     	 ldr r3,[r3,#12]
 917 0032 0093     	 str r3,[sp]
 918 0034 0623     	 movs r3,#6
 919 0036 0193     	 str r3,[sp,#4]
 920 0038 FB88     	 ldrh r3,[r7,#6]
 921 003a 0293     	 str r3,[sp,#8]
 922 003c 0846     	 mov r0,r1
 923 003e B968     	 ldr r1,[r7,#8]
 924 0040 0623     	 movs r3,#6
 925 0042 FFF7FEFF 	 bl CO_CANmodule_init
 926 0046 0346     	 mov r3,r0
 927 0048 FB75     	 strb r3,[r7,#23]
 854:../CANopen/stack/CANopen.c ****                             CANptr,
 855:../CANopen/stack/CANopen.c ****                             co->CANrx,
 856:../CANopen/stack/CANopen.c ****                             CO_GET_CO(CNT_ALL_RX_MSGS),
 857:../CANopen/stack/CANopen.c ****                             co->CANtx,
 858:../CANopen/stack/CANopen.c ****                             CO_GET_CO(CNT_ALL_TX_MSGS),
 859:../CANopen/stack/CANopen.c ****                             bitRate);
 860:../CANopen/stack/CANopen.c **** 
 861:../CANopen/stack/CANopen.c ****     return err;
 928              	 .loc 4 861 0
 929 004a FB7D     	 ldrb r3,[r7,#23]
 930              	.L73:
 931 004c 5BB2     	 sxtb r3,r3
 862:../CANopen/stack/CANopen.c **** }
 932              	 .loc 4 862 0
 933 004e 1846     	 mov r0,r3
 934 0050 1837     	 adds r7,r7,#24
 935              	.LCFI43:
 936              	 .cfi_def_cfa_offset 8
 937 0052 BD46     	 mov sp,r7
 938              	.LCFI44:
 939              	 .cfi_def_cfa_register 13
 940              	 
 941 0054 80BD     	 pop {r7,pc}
 942              	 .cfi_endproc
 943              	.LFE44:
 945 0056 00BF     	 .section .text.CO_LSSinit,"ax",%progbits
 946              	 .align 2
 947              	 .global CO_LSSinit
 948              	 .thumb
 949              	 .thumb_func
 951              	CO_LSSinit:
 952              	.LFB45:
 863:../CANopen/stack/CANopen.c **** 
 864:../CANopen/stack/CANopen.c **** 
 865:../CANopen/stack/CANopen.c **** /******************************************************************************/
 866:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_LSS) & CO_CONFIG_LSS_SLAVE
 867:../CANopen/stack/CANopen.c **** CO_ReturnError_t CO_LSSinit(CO_t *co,
 868:../CANopen/stack/CANopen.c ****                             CO_LSS_address_t *lssAddress,
 869:../CANopen/stack/CANopen.c ****                             uint8_t *pendingNodeID,
 870:../CANopen/stack/CANopen.c ****                             uint16_t *pendingBitRate)
 871:../CANopen/stack/CANopen.c **** {
 953              	 .loc 4 871 0
 954              	 .cfi_startproc
 955              	 
 956              	 
 957 0000 80B5     	 push {r7,lr}
 958              	.LCFI45:
 959              	 .cfi_def_cfa_offset 8
 960              	 .cfi_offset 7,-8
 961              	 .cfi_offset 14,-4
 962 0002 8CB0     	 sub sp,sp,#48
 963              	.LCFI46:
 964              	 .cfi_def_cfa_offset 56
 965 0004 06AF     	 add r7,sp,#24
 966              	.LCFI47:
 967              	 .cfi_def_cfa 7,32
 968 0006 F860     	 str r0,[r7,#12]
 969 0008 B960     	 str r1,[r7,#8]
 970 000a 7A60     	 str r2,[r7,#4]
 971 000c 3B60     	 str r3,[r7]
 872:../CANopen/stack/CANopen.c ****     CO_ReturnError_t err;
 873:../CANopen/stack/CANopen.c **** 
 874:../CANopen/stack/CANopen.c ****     if (co == NULL || CO_GET_CNT(LSS_SLV) != 1) {
 972              	 .loc 4 874 0
 973 000e FB68     	 ldr r3,[r7,#12]
 974 0010 002B     	 cmp r3,#0
 975 0012 01D1     	 bne .L75
 875:../CANopen/stack/CANopen.c ****         return CO_ERROR_ILLEGAL_ARGUMENT;
 976              	 .loc 4 875 0
 977 0014 FF23     	 movs r3,#255
 978 0016 1AE0     	 b .L76
 979              	.L75:
 876:../CANopen/stack/CANopen.c ****     }
 877:../CANopen/stack/CANopen.c **** 
 878:../CANopen/stack/CANopen.c ****     /* LSSslave */
 879:../CANopen/stack/CANopen.c ****     err = CO_LSSslave_init(co->LSSslave,
 980              	 .loc 4 879 0
 981 0018 FB68     	 ldr r3,[r7,#12]
 982 001a D96B     	 ldr r1,[r3,#60]
 983 001c FB68     	 ldr r3,[r7,#12]
 984 001e 5A68     	 ldr r2,[r3,#4]
 985 0020 FB68     	 ldr r3,[r7,#12]
 986 0022 5B68     	 ldr r3,[r3,#4]
 987 0024 0092     	 str r2,[sp]
 988 0026 0522     	 movs r2,#5
 989 0028 0192     	 str r2,[sp,#4]
 990 002a 40F2E572 	 movw r2,#2021
 991 002e 0292     	 str r2,[sp,#8]
 992 0030 0393     	 str r3,[sp,#12]
 993 0032 0523     	 movs r3,#5
 994 0034 0493     	 str r3,[sp,#16]
 995 0036 40F2E473 	 movw r3,#2020
 996 003a 0593     	 str r3,[sp,#20]
 997 003c 0846     	 mov r0,r1
 998 003e B968     	 ldr r1,[r7,#8]
 999 0040 3A68     	 ldr r2,[r7]
 1000 0042 7B68     	 ldr r3,[r7,#4]
 1001 0044 FFF7FEFF 	 bl CO_LSSslave_init
 1002 0048 0346     	 mov r3,r0
 1003 004a FB75     	 strb r3,[r7,#23]
 880:../CANopen/stack/CANopen.c ****                            lssAddress,
 881:../CANopen/stack/CANopen.c ****                            pendingBitRate,
 882:../CANopen/stack/CANopen.c ****                            pendingNodeID,
 883:../CANopen/stack/CANopen.c ****                            co->CANmodule,
 884:../CANopen/stack/CANopen.c ****                            CO_GET_CO(RX_IDX_LSS_SLV),
 885:../CANopen/stack/CANopen.c ****                            CO_CAN_ID_LSS_MST,
 886:../CANopen/stack/CANopen.c ****                            co->CANmodule,
 887:../CANopen/stack/CANopen.c ****                            CO_GET_CO(TX_IDX_LSS_SLV),
 888:../CANopen/stack/CANopen.c ****                            CO_CAN_ID_LSS_SLV);
 889:../CANopen/stack/CANopen.c **** 
 890:../CANopen/stack/CANopen.c ****     return err;
 1004              	 .loc 4 890 0
 1005 004c FB7D     	 ldrb r3,[r7,#23]
 1006              	.L76:
 1007 004e 5BB2     	 sxtb r3,r3
 891:../CANopen/stack/CANopen.c **** }
 1008              	 .loc 4 891 0
 1009 0050 1846     	 mov r0,r3
 1010 0052 1837     	 adds r7,r7,#24
 1011              	.LCFI48:
 1012              	 .cfi_def_cfa_offset 8
 1013 0054 BD46     	 mov sp,r7
 1014              	.LCFI49:
 1015              	 .cfi_def_cfa_register 13
 1016              	 
 1017 0056 80BD     	 pop {r7,pc}
 1018              	 .cfi_endproc
 1019              	.LFE45:
 1021              	 .section .text.CO_CANopenInit,"ax",%progbits
 1022              	 .align 2
 1023              	 .global CO_CANopenInit
 1024              	 .thumb
 1025              	 .thumb_func
 1027              	CO_CANopenInit:
 1028              	.LFB46:
 892:../CANopen/stack/CANopen.c **** #endif /* (CO_CONFIG_LSS) & CO_CONFIG_LSS_SLAVE */
 893:../CANopen/stack/CANopen.c **** 
 894:../CANopen/stack/CANopen.c **** 
 895:../CANopen/stack/CANopen.c **** /******************************************************************************/
 896:../CANopen/stack/CANopen.c **** CO_ReturnError_t CO_CANopenInit(CO_t *co,
 897:../CANopen/stack/CANopen.c ****                                 CO_NMT_t *NMT,
 898:../CANopen/stack/CANopen.c ****                                 CO_EM_t *em,
 899:../CANopen/stack/CANopen.c ****                                 OD_t *od,
 900:../CANopen/stack/CANopen.c ****                                 OD_entry_t *OD_statusBits,
 901:../CANopen/stack/CANopen.c ****                                 CO_NMT_control_t NMTcontrol,
 902:../CANopen/stack/CANopen.c ****                                 uint16_t firstHBTime_ms,
 903:../CANopen/stack/CANopen.c ****                                 uint16_t SDOserverTimeoutTime_ms,
 904:../CANopen/stack/CANopen.c ****                                 uint16_t SDOclientTimeoutTime_ms,
 905:../CANopen/stack/CANopen.c ****                                 bool_t SDOclientBlockTransfer,
 906:../CANopen/stack/CANopen.c ****                                 uint8_t nodeId,
 907:../CANopen/stack/CANopen.c ****                                 uint32_t *errInfo)
 908:../CANopen/stack/CANopen.c **** {
 1029              	 .loc 4 908 0
 1030              	 .cfi_startproc
 1031              	 
 1032              	 
 1033 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 1034              	.LCFI50:
 1035              	 .cfi_def_cfa_offset 20
 1036              	 .cfi_offset 4,-20
 1037              	 .cfi_offset 5,-16
 1038              	 .cfi_offset 6,-12
 1039              	 .cfi_offset 7,-8
 1040              	 .cfi_offset 14,-4
 1041 0002 91B0     	 sub sp,sp,#68
 1042              	.LCFI51:
 1043              	 .cfi_def_cfa_offset 88
 1044 0004 0AAF     	 add r7,sp,#40
 1045              	.LCFI52:
 1046              	 .cfi_def_cfa 7,48
 1047 0006 F860     	 str r0,[r7,#12]
 1048 0008 B960     	 str r1,[r7,#8]
 1049 000a 7A60     	 str r2,[r7,#4]
 1050 000c 3B60     	 str r3,[r7]
 909:../CANopen/stack/CANopen.c ****     (void)SDOclientTimeoutTime_ms; (void)SDOclientBlockTransfer;
 910:../CANopen/stack/CANopen.c ****     CO_ReturnError_t err;
 911:../CANopen/stack/CANopen.c **** 
 912:../CANopen/stack/CANopen.c ****     if (co == NULL
 1051              	 .loc 4 912 0
 1052 000e FB68     	 ldr r3,[r7,#12]
 1053 0010 002B     	 cmp r3,#0
 1054 0012 01D1     	 bne .L78
 913:../CANopen/stack/CANopen.c ****         || (CO_GET_CNT(NMT) == 0 && NMT == NULL)
 914:../CANopen/stack/CANopen.c ****         || (CO_GET_CNT(EM) == 0 && em == NULL)
 915:../CANopen/stack/CANopen.c ****     ) {
 916:../CANopen/stack/CANopen.c ****         return CO_ERROR_ILLEGAL_ARGUMENT;
 1055              	 .loc 4 916 0
 1056 0014 FF23     	 movs r3,#255
 1057 0016 33E1     	 b .L79
 1058              	.L78:
 917:../CANopen/stack/CANopen.c ****     }
 918:../CANopen/stack/CANopen.c **** 
 919:../CANopen/stack/CANopen.c ****     /* alternatives */
 920:../CANopen/stack/CANopen.c ****     if (CO_GET_CNT(NMT) == 0) {
 921:../CANopen/stack/CANopen.c ****         co->NMT = NMT;
 922:../CANopen/stack/CANopen.c ****     }
 923:../CANopen/stack/CANopen.c ****     if (em == NULL) {
 1059              	 .loc 4 923 0
 1060 0018 7B68     	 ldr r3,[r7,#4]
 1061 001a 002B     	 cmp r3,#0
 1062 001c 02D1     	 bne .L80
 924:../CANopen/stack/CANopen.c ****         em = co->em;
 1063              	 .loc 4 924 0
 1064 001e FB68     	 ldr r3,[r7,#12]
 1065 0020 DB69     	 ldr r3,[r3,#28]
 1066 0022 7B60     	 str r3,[r7,#4]
 1067              	.L80:
 925:../CANopen/stack/CANopen.c ****     }
 926:../CANopen/stack/CANopen.c **** 
 927:../CANopen/stack/CANopen.c ****     /* Verify CANopen Node-ID */
 928:../CANopen/stack/CANopen.c ****     co->nodeIdUnconfigured = false;
 1068              	 .loc 4 928 0
 1069 0024 FB68     	 ldr r3,[r7,#12]
 1070 0026 0022     	 movs r2,#0
 1071 0028 1A60     	 str r2,[r3]
 929:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_LSS) & CO_CONFIG_LSS_SLAVE
 930:../CANopen/stack/CANopen.c ****     if (CO_GET_CNT(LSS_SLV) == 1 && nodeId == CO_LSS_NODE_ID_ASSIGNMENT) {
 1072              	 .loc 4 930 0
 1073 002a 97F84830 	 ldrb r3,[r7,#72]
 1074 002e FF2B     	 cmp r3,#255
 1075 0030 03D1     	 bne .L81
 931:../CANopen/stack/CANopen.c ****         co->nodeIdUnconfigured = true;
 1076              	 .loc 4 931 0
 1077 0032 FB68     	 ldr r3,[r7,#12]
 1078 0034 0122     	 movs r2,#1
 1079 0036 1A60     	 str r2,[r3]
 1080 0038 0AE0     	 b .L82
 1081              	.L81:
 932:../CANopen/stack/CANopen.c ****     }
 933:../CANopen/stack/CANopen.c ****     else
 934:../CANopen/stack/CANopen.c **** #endif
 935:../CANopen/stack/CANopen.c ****     if (nodeId < 1 || nodeId > 127) {
 1082              	 .loc 4 935 0
 1083 003a 97F84830 	 ldrb r3,[r7,#72]
 1084 003e 002B     	 cmp r3,#0
 1085 0040 04D0     	 beq .L83
 1086              	 .loc 4 935 0 is_stmt 0 discriminator 1
 1087 0042 97F84830 	 ldrb r3,[r7,#72]
 1088 0046 5BB2     	 sxtb r3,r3
 1089 0048 002B     	 cmp r3,#0
 1090 004a 01DA     	 bge .L82
 1091              	.L83:
 936:../CANopen/stack/CANopen.c ****         return CO_ERROR_ILLEGAL_ARGUMENT;
 1092              	 .loc 4 936 0 is_stmt 1
 1093 004c FF23     	 movs r3,#255
 1094 004e 17E1     	 b .L79
 1095              	.L82:
 937:../CANopen/stack/CANopen.c ****     }
 938:../CANopen/stack/CANopen.c **** 
 939:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_LEDS) & CO_CONFIG_LEDS_ENABLE
 940:../CANopen/stack/CANopen.c ****     if (CO_GET_CNT(LEDS) == 1) {
 941:../CANopen/stack/CANopen.c ****         err = CO_LEDs_init(co->LEDs);
 1096              	 .loc 4 941 0
 1097 0050 FB68     	 ldr r3,[r7,#12]
 1098 0052 9B6B     	 ldr r3,[r3,#56]
 1099 0054 1846     	 mov r0,r3
 1100 0056 FFF7FEFF 	 bl CO_LEDs_init
 1101 005a 0346     	 mov r3,r0
 1102 005c 7B74     	 strb r3,[r7,#17]
 942:../CANopen/stack/CANopen.c ****         if (err) return err;
 1103              	 .loc 4 942 0
 1104 005e 97F91130 	 ldrsb r3,[r7,#17]
 1105 0062 002B     	 cmp r3,#0
 1106 0064 01D0     	 beq .L84
 1107              	 .loc 4 942 0 is_stmt 0 discriminator 1
 1108 0066 7B7C     	 ldrb r3,[r7,#17]
 1109 0068 0AE1     	 b .L79
 1110              	.L84:
 943:../CANopen/stack/CANopen.c ****     }
 944:../CANopen/stack/CANopen.c **** #endif
 945:../CANopen/stack/CANopen.c **** 
 946:../CANopen/stack/CANopen.c ****     /* CANopen Node ID is unconfigured, stop initialization here */
 947:../CANopen/stack/CANopen.c ****     if (co->nodeIdUnconfigured) {
 1111              	 .loc 4 947 0 is_stmt 1
 1112 006a FB68     	 ldr r3,[r7,#12]
 1113 006c 1B68     	 ldr r3,[r3]
 1114 006e 002B     	 cmp r3,#0
 1115 0070 01D0     	 beq .L85
 948:../CANopen/stack/CANopen.c ****         return CO_ERROR_NODE_ID_UNCONFIGURED_LSS;
 1116              	 .loc 4 948 0
 1117 0072 ED23     	 movs r3,#237
 1118 0074 04E1     	 b .L79
 1119              	.L85:
 949:../CANopen/stack/CANopen.c ****     }
 950:../CANopen/stack/CANopen.c **** 
 951:../CANopen/stack/CANopen.c ****     /* Emergency */
 952:../CANopen/stack/CANopen.c ****     if (CO_GET_CNT(EM) == 1) {
 953:../CANopen/stack/CANopen.c ****         err = CO_EM_init(co->em,
 1120              	 .loc 4 953 0
 1121 0076 FB68     	 ldr r3,[r7,#12]
 1122 0078 D869     	 ldr r0,[r3,#28]
 1123 007a FB68     	 ldr r3,[r7,#12]
 1124 007c 5E68     	 ldr r6,[r3,#4]
 954:../CANopen/stack/CANopen.c ****                          co->CANmodule,
 955:../CANopen/stack/CANopen.c ****                          OD_GET(H1001, OD_H1001_ERR_REG),
 1125              	 .loc 4 955 0
 1126 007e 834B     	 ldr r3,.L94
 1127 0080 1B68     	 ldr r3,[r3]
 1128 0082 5B68     	 ldr r3,[r3,#4]
 953:../CANopen/stack/CANopen.c ****                          co->CANmodule,
 1129              	 .loc 4 953 0
 1130 0084 03F10C05 	 add r5,r3,#12
 1131 0088 FB68     	 ldr r3,[r7,#12]
 1132 008a 1C6A     	 ldr r4,[r3,#32]
 956:../CANopen/stack/CANopen.c ****  #if (CO_CONFIG_EM) & (CO_CONFIG_EM_PRODUCER | CO_CONFIG_EM_HISTORY)
 957:../CANopen/stack/CANopen.c ****                          co->em_fifo,
 958:../CANopen/stack/CANopen.c ****                          (CO_GET_CNT(ARR_1003) + 1),
 959:../CANopen/stack/CANopen.c ****  #endif
 960:../CANopen/stack/CANopen.c ****  #if (CO_CONFIG_EM) & CO_CONFIG_EM_PRODUCER
 961:../CANopen/stack/CANopen.c ****                          OD_GET(H1014, OD_H1014_COBID_EMERGENCY),
 1133              	 .loc 4 961 0
 1134 008c 7F4B     	 ldr r3,.L94
 1135 008e 1B68     	 ldr r3,[r3]
 1136 0090 5B68     	 ldr r3,[r3,#4]
 953:../CANopen/stack/CANopen.c ****                          co->CANmodule,
 1137              	 .loc 4 953 0
 1138 0092 03F1B402 	 add r2,r3,#180
 962:../CANopen/stack/CANopen.c ****                          CO_GET_CO(TX_IDX_EM_PROD),
 963:../CANopen/stack/CANopen.c ****   #if (CO_CONFIG_EM) & CO_CONFIG_EM_PROD_INHIBIT
 964:../CANopen/stack/CANopen.c ****                          OD_GET(H1015, OD_H1015_INHIBIT_TIME_EMCY),
 965:../CANopen/stack/CANopen.c ****   #endif
 966:../CANopen/stack/CANopen.c ****  #endif
 967:../CANopen/stack/CANopen.c ****  #if (CO_CONFIG_EM) & CO_CONFIG_EM_HISTORY
 968:../CANopen/stack/CANopen.c ****                          OD_GET(H1003, OD_H1003_PREDEF_ERR_FIELD),
 1139              	 .loc 4 968 0
 1140 0096 7D4B     	 ldr r3,.L94
 1141 0098 1B68     	 ldr r3,[r3]
 1142 009a 5B68     	 ldr r3,[r3,#4]
 953:../CANopen/stack/CANopen.c ****                          co->CANmodule,
 1143              	 .loc 4 953 0
 1144 009c 2433     	 adds r3,r3,#36
 1145 009e 1121     	 movs r1,#17
 1146 00a0 0091     	 str r1,[sp]
 1147 00a2 0192     	 str r2,[sp,#4]
 1148 00a4 0122     	 movs r2,#1
 1149 00a6 0292     	 str r2,[sp,#8]
 1150 00a8 0393     	 str r3,[sp,#12]
 1151 00aa 97F84830 	 ldrb r3,[r7,#72]
 1152 00ae 0493     	 str r3,[sp,#16]
 1153 00b0 FB6C     	 ldr r3,[r7,#76]
 1154 00b2 0593     	 str r3,[sp,#20]
 1155 00b4 3146     	 mov r1,r6
 1156 00b6 2A46     	 mov r2,r5
 1157 00b8 2346     	 mov r3,r4
 1158 00ba FFF7FEFF 	 bl CO_EM_init
 1159 00be 0346     	 mov r3,r0
 1160 00c0 7B74     	 strb r3,[r7,#17]
 969:../CANopen/stack/CANopen.c ****  #endif
 970:../CANopen/stack/CANopen.c ****  #if (CO_CONFIG_EM) & CO_CONFIG_EM_STATUS_BITS
 971:../CANopen/stack/CANopen.c ****                          OD_statusBits,
 972:../CANopen/stack/CANopen.c ****  #endif
 973:../CANopen/stack/CANopen.c ****  #if (CO_CONFIG_EM) & CO_CONFIG_EM_CONSUMER
 974:../CANopen/stack/CANopen.c ****                          co->CANmodule,
 975:../CANopen/stack/CANopen.c ****                          CO_GET_CO(RX_IDX_EM_CONS),
 976:../CANopen/stack/CANopen.c ****  #endif
 977:../CANopen/stack/CANopen.c ****                          nodeId,
 978:../CANopen/stack/CANopen.c ****                          errInfo);
 979:../CANopen/stack/CANopen.c ****         if (err) return err;
 1161              	 .loc 4 979 0
 1162 00c2 97F91130 	 ldrsb r3,[r7,#17]
 1163 00c6 002B     	 cmp r3,#0
 1164 00c8 01D0     	 beq .L86
 1165              	 .loc 4 979 0 is_stmt 0 discriminator 1
 1166 00ca 7B7C     	 ldrb r3,[r7,#17]
 1167 00cc D8E0     	 b .L79
 1168              	.L86:
 980:../CANopen/stack/CANopen.c ****     }
 981:../CANopen/stack/CANopen.c **** 
 982:../CANopen/stack/CANopen.c ****     /* NMT_Heartbeat */
 983:../CANopen/stack/CANopen.c ****     if (CO_GET_CNT(NMT) == 1) {
 984:../CANopen/stack/CANopen.c ****         err = CO_NMT_init(co->NMT,
 1169              	 .loc 4 984 0 is_stmt 1
 1170 00ce FB68     	 ldr r3,[r7,#12]
 1171 00d0 1E69     	 ldr r6,[r3,#16]
 985:../CANopen/stack/CANopen.c ****                           OD_GET(H1017, OD_H1017_PRODUCER_HB_TIME),
 1172              	 .loc 4 985 0
 1173 00d2 6E4B     	 ldr r3,.L94
 1174 00d4 1B68     	 ldr r3,[r3]
 1175 00d6 5B68     	 ldr r3,[r3,#4]
 984:../CANopen/stack/CANopen.c ****                           OD_GET(H1017, OD_H1017_PRODUCER_HB_TIME),
 1176              	 .loc 4 984 0
 1177 00d8 03F1D805 	 add r5,r3,#216
 1178 00dc FB68     	 ldr r3,[r7,#12]
 1179 00de 5968     	 ldr r1,[r3,#4]
 1180 00e0 FB68     	 ldr r3,[r7,#12]
 1181 00e2 5A68     	 ldr r2,[r3,#4]
 1182 00e4 97F84830 	 ldrb r3,[r7,#72]
 1183 00e8 9BB2     	 uxth r3,r3
 1184 00ea 03F5E063 	 add r3,r3,#1792
 1185 00ee 9BB2     	 uxth r3,r3
 1186 00f0 97F84840 	 ldrb r4,[r7,#72]
 1187 00f4 B88E     	 ldrh r0,[r7,#52]
 1188 00f6 0090     	 str r0,[sp]
 1189 00f8 388F     	 ldrh r0,[r7,#56]
 1190 00fa 0190     	 str r0,[sp,#4]
 1191 00fc 0291     	 str r1,[sp,#8]
 1192 00fe 0021     	 movs r1,#0
 1193 0100 0391     	 str r1,[sp,#12]
 1194 0102 0021     	 movs r1,#0
 1195 0104 0491     	 str r1,[sp,#16]
 1196 0106 0592     	 str r2,[sp,#20]
 1197 0108 0422     	 movs r2,#4
 1198 010a 0692     	 str r2,[sp,#24]
 1199 010c 0793     	 str r3,[sp,#28]
 1200 010e FB6C     	 ldr r3,[r7,#76]
 1201 0110 0893     	 str r3,[sp,#32]
 1202 0112 3046     	 mov r0,r6
 1203 0114 2946     	 mov r1,r5
 1204 0116 7A68     	 ldr r2,[r7,#4]
 1205 0118 2346     	 mov r3,r4
 1206 011a FFF7FEFF 	 bl CO_NMT_init
 1207 011e 0346     	 mov r3,r0
 1208 0120 7B74     	 strb r3,[r7,#17]
 986:../CANopen/stack/CANopen.c ****                           em,
 987:../CANopen/stack/CANopen.c ****                           nodeId,
 988:../CANopen/stack/CANopen.c ****                           NMTcontrol,
 989:../CANopen/stack/CANopen.c ****                           firstHBTime_ms,
 990:../CANopen/stack/CANopen.c ****                           co->CANmodule,
 991:../CANopen/stack/CANopen.c ****                           CO_GET_CO(RX_IDX_NMT_SLV),
 992:../CANopen/stack/CANopen.c ****                           CO_CAN_ID_NMT_SERVICE,
 993:../CANopen/stack/CANopen.c ****  #if (CO_CONFIG_NMT) & CO_CONFIG_NMT_MASTER
 994:../CANopen/stack/CANopen.c ****                           co->CANmodule,
 995:../CANopen/stack/CANopen.c ****                           CO_GET_CO(TX_IDX_NMT_MST),
 996:../CANopen/stack/CANopen.c ****                           CO_CAN_ID_NMT_SERVICE,
 997:../CANopen/stack/CANopen.c ****  #endif
 998:../CANopen/stack/CANopen.c ****                           co->CANmodule,
 999:../CANopen/stack/CANopen.c ****                           CO_GET_CO(TX_IDX_HB_PROD),
1000:../CANopen/stack/CANopen.c ****                           CO_CAN_ID_HEARTBEAT + nodeId,
1001:../CANopen/stack/CANopen.c ****                           errInfo);
1002:../CANopen/stack/CANopen.c ****         if (err) return err;
 1209              	 .loc 4 1002 0
 1210 0122 97F91130 	 ldrsb r3,[r7,#17]
 1211 0126 002B     	 cmp r3,#0
 1212 0128 01D0     	 beq .L87
 1213              	 .loc 4 1002 0 is_stmt 0 discriminator 1
 1214 012a 7B7C     	 ldrb r3,[r7,#17]
 1215 012c A8E0     	 b .L79
 1216              	.L87:
1003:../CANopen/stack/CANopen.c ****     }
1004:../CANopen/stack/CANopen.c **** 
1005:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_HB_CONS) & CO_CONFIG_HB_CONS_ENABLE
1006:../CANopen/stack/CANopen.c ****     if (CO_GET_CNT(HB_CONS) == 1) {
1007:../CANopen/stack/CANopen.c ****         err = CO_HBconsumer_init(co->HBcons,
 1217              	 .loc 4 1007 0 is_stmt 1
 1218 012e FB68     	 ldr r3,[r7,#12]
 1219 0130 5969     	 ldr r1,[r3,#20]
 1220 0132 FB68     	 ldr r3,[r7,#12]
 1221 0134 9C69     	 ldr r4,[r3,#24]
1008:../CANopen/stack/CANopen.c ****                                  em,
1009:../CANopen/stack/CANopen.c ****                                  co->HBconsMonitoredNodes,
1010:../CANopen/stack/CANopen.c ****                                  CO_GET_CNT(ARR_1016),
1011:../CANopen/stack/CANopen.c ****                                  OD_GET(H1016, OD_H1016_CONSUMER_HB_TIME),
 1222              	 .loc 4 1011 0
 1223 0136 554B     	 ldr r3,.L94
 1224 0138 1B68     	 ldr r3,[r3]
 1225 013a 5B68     	 ldr r3,[r3,#4]
1007:../CANopen/stack/CANopen.c ****                                  em,
 1226              	 .loc 4 1007 0
 1227 013c 03F1CC02 	 add r2,r3,#204
 1228 0140 FB68     	 ldr r3,[r7,#12]
 1229 0142 5B68     	 ldr r3,[r3,#4]
 1230 0144 0092     	 str r2,[sp]
 1231 0146 0193     	 str r3,[sp,#4]
 1232 0148 0423     	 movs r3,#4
 1233 014a 0293     	 str r3,[sp,#8]
 1234 014c FB6C     	 ldr r3,[r7,#76]
 1235 014e 0393     	 str r3,[sp,#12]
 1236 0150 0846     	 mov r0,r1
 1237 0152 7968     	 ldr r1,[r7,#4]
 1238 0154 2246     	 mov r2,r4
 1239 0156 0123     	 movs r3,#1
 1240 0158 FFF7FEFF 	 bl CO_HBconsumer_init
 1241 015c 0346     	 mov r3,r0
 1242 015e 7B74     	 strb r3,[r7,#17]
1012:../CANopen/stack/CANopen.c ****                                  co->CANmodule,
1013:../CANopen/stack/CANopen.c ****                                  CO_GET_CO(RX_IDX_HB_CONS),
1014:../CANopen/stack/CANopen.c ****                                  errInfo);
1015:../CANopen/stack/CANopen.c ****         if (err) return err;
 1243              	 .loc 4 1015 0
 1244 0160 97F91130 	 ldrsb r3,[r7,#17]
 1245 0164 002B     	 cmp r3,#0
 1246 0166 01D0     	 beq .L88
 1247              	 .loc 4 1015 0 is_stmt 0 discriminator 1
 1248 0168 7B7C     	 ldrb r3,[r7,#17]
 1249 016a 89E0     	 b .L79
 1250              	.L88:
 1251              	.LBB7:
1016:../CANopen/stack/CANopen.c ****     }
1017:../CANopen/stack/CANopen.c **** #endif
1018:../CANopen/stack/CANopen.c **** 
1019:../CANopen/stack/CANopen.c ****     /* SDOserver */
1020:../CANopen/stack/CANopen.c ****     if (CO_GET_CNT(SDO_SRV) > 0) {
1021:../CANopen/stack/CANopen.c ****         OD_entry_t *SDOsrvPar = OD_GET(H1200, OD_H1200_SDO_SERVER_1_PARAM);
 1252              	 .loc 4 1021 0 is_stmt 1
 1253 016c 474B     	 ldr r3,.L94
 1254 016e 1B68     	 ldr r3,[r3]
 1255 0170 5B68     	 ldr r3,[r3,#4]
 1256 0172 03F59073 	 add r3,r3,#288
 1257 0176 7B61     	 str r3,[r7,#20]
 1258              	.LBB8:
1022:../CANopen/stack/CANopen.c ****         for (int16_t i = 0; i < CO_GET_CNT(SDO_SRV); i++) {
 1259              	 .loc 4 1022 0
 1260 0178 0023     	 movs r3,#0
 1261 017a 7B82     	 strh r3,[r7,#18]
 1262 017c 33E0     	 b .L89
 1263              	.L91:
1023:../CANopen/stack/CANopen.c ****             err = CO_SDOserver_init(&co->SDOserver[i],
 1264              	 .loc 4 1023 0
 1265 017e FB68     	 ldr r3,[r7,#12]
 1266 0180 5A6A     	 ldr r2,[r3,#36]
 1267 0182 B7F91230 	 ldrsh r3,[r7,#18]
 1268 0186 A821     	 movs r1,#168
 1269 0188 01FB03F3 	 mul r3,r1,r3
 1270 018c 02EB030E 	 add lr,r2,r3
 1271 0190 7B69     	 ldr r3,[r7,#20]
 1272 0192 03F10C02 	 add r2,r3,#12
 1273 0196 7A61     	 str r2,[r7,#20]
 1274 0198 FA68     	 ldr r2,[r7,#12]
 1275 019a 5468     	 ldr r4,[r2,#4]
 1276 019c 7A8A     	 ldrh r2,[r7,#18]
 1277 019e 0332     	 adds r2,r2,#3
 1278 01a0 90B2     	 uxth r0,r2
 1279 01a2 FA68     	 ldr r2,[r7,#12]
 1280 01a4 5168     	 ldr r1,[r2,#4]
 1281 01a6 7A8A     	 ldrh r2,[r7,#18]
 1282 01a8 0332     	 adds r2,r2,#3
 1283 01aa 92B2     	 uxth r2,r2
 1284 01ac 97F84860 	 ldrb r6,[r7,#72]
 1285 01b0 BD8F     	 ldrh r5,[r7,#60]
 1286 01b2 0095     	 str r5,[sp]
 1287 01b4 0194     	 str r4,[sp,#4]
 1288 01b6 0290     	 str r0,[sp,#8]
 1289 01b8 0391     	 str r1,[sp,#12]
 1290 01ba 0492     	 str r2,[sp,#16]
 1291 01bc FA6C     	 ldr r2,[r7,#76]
 1292 01be 0592     	 str r2,[sp,#20]
 1293 01c0 7046     	 mov r0,lr
 1294 01c2 3968     	 ldr r1,[r7]
 1295 01c4 1A46     	 mov r2,r3
 1296 01c6 3346     	 mov r3,r6
 1297 01c8 FFF7FEFF 	 bl CO_SDOserver_init
 1298 01cc 0346     	 mov r3,r0
 1299 01ce 7B74     	 strb r3,[r7,#17]
1024:../CANopen/stack/CANopen.c ****                                     od,
1025:../CANopen/stack/CANopen.c ****                                     SDOsrvPar++,
1026:../CANopen/stack/CANopen.c ****                                     nodeId,
1027:../CANopen/stack/CANopen.c ****                                     SDOserverTimeoutTime_ms,
1028:../CANopen/stack/CANopen.c ****                                     co->CANmodule,
1029:../CANopen/stack/CANopen.c ****                                     CO_GET_CO(RX_IDX_SDO_SRV) + i,
1030:../CANopen/stack/CANopen.c ****                                     co->CANmodule,
1031:../CANopen/stack/CANopen.c ****                                     CO_GET_CO(TX_IDX_SDO_SRV) + i,
1032:../CANopen/stack/CANopen.c ****                                     errInfo);
1033:../CANopen/stack/CANopen.c ****             if (err) return err;
 1300              	 .loc 4 1033 0
 1301 01d0 97F91130 	 ldrsb r3,[r7,#17]
 1302 01d4 002B     	 cmp r3,#0
 1303 01d6 01D0     	 beq .L90
 1304              	 .loc 4 1033 0 is_stmt 0 discriminator 1
 1305 01d8 7B7C     	 ldrb r3,[r7,#17]
 1306 01da 51E0     	 b .L79
 1307              	.L90:
1022:../CANopen/stack/CANopen.c ****             err = CO_SDOserver_init(&co->SDOserver[i],
 1308              	 .loc 4 1022 0 is_stmt 1 discriminator 2
 1309 01dc 7B8A     	 ldrh r3,[r7,#18]
 1310 01de 9BB2     	 uxth r3,r3
 1311 01e0 0133     	 adds r3,r3,#1
 1312 01e2 9BB2     	 uxth r3,r3
 1313 01e4 7B82     	 strh r3,[r7,#18]
 1314              	.L89:
1022:../CANopen/stack/CANopen.c ****             err = CO_SDOserver_init(&co->SDOserver[i],
 1315              	 .loc 4 1022 0 is_stmt 0 discriminator 1
 1316 01e6 B7F91230 	 ldrsh r3,[r7,#18]
 1317 01ea 002B     	 cmp r3,#0
 1318 01ec C7DD     	 ble .L91
 1319              	.LBE8:
 1320              	.LBE7:
1034:../CANopen/stack/CANopen.c ****         }
1035:../CANopen/stack/CANopen.c ****     }
1036:../CANopen/stack/CANopen.c **** 
1037:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_SDO_CLI) & CO_CONFIG_SDO_CLI_ENABLE
1038:../CANopen/stack/CANopen.c ****     if (CO_GET_CNT(SDO_CLI) > 0) {
1039:../CANopen/stack/CANopen.c ****         OD_entry_t *SDOcliPar = OD_GET(H1280, OD_H1280_SDO_CLIENT_1_PARAM);
1040:../CANopen/stack/CANopen.c ****         for (int16_t i = 0; i < CO_GET_CNT(SDO_CLI); i++) {
1041:../CANopen/stack/CANopen.c ****             err = CO_SDOclient_init(&co->SDOclient[i],
1042:../CANopen/stack/CANopen.c ****                                     od,
1043:../CANopen/stack/CANopen.c ****                                     SDOcliPar++,
1044:../CANopen/stack/CANopen.c ****                                     nodeId,
1045:../CANopen/stack/CANopen.c ****                                     co->CANmodule,
1046:../CANopen/stack/CANopen.c ****                                     CO_GET_CO(RX_IDX_SDO_CLI) + i,
1047:../CANopen/stack/CANopen.c ****                                     co->CANmodule,
1048:../CANopen/stack/CANopen.c ****                                     CO_GET_CO(TX_IDX_SDO_CLI) + i,
1049:../CANopen/stack/CANopen.c ****                                     errInfo);
1050:../CANopen/stack/CANopen.c ****             if (err) return err;
1051:../CANopen/stack/CANopen.c ****         }
1052:../CANopen/stack/CANopen.c ****     }
1053:../CANopen/stack/CANopen.c **** #endif
1054:../CANopen/stack/CANopen.c **** 
1055:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_TIME) & CO_CONFIG_TIME_ENABLE
1056:../CANopen/stack/CANopen.c ****     if (CO_GET_CNT(TIME) == 1) {
1057:../CANopen/stack/CANopen.c ****         err = CO_TIME_init(co->TIME,
 1321              	 .loc 4 1057 0 is_stmt 1
 1322 01ee FB68     	 ldr r3,[r7,#12]
 1323 01f0 986A     	 ldr r0,[r3,#40]
1058:../CANopen/stack/CANopen.c ****                            OD_GET(H1012, OD_H1012_COBID_TIME),
 1324              	 .loc 4 1058 0
 1325 01f2 264B     	 ldr r3,.L94
 1326 01f4 1B68     	 ldr r3,[r3]
 1327 01f6 5B68     	 ldr r3,[r3,#4]
1057:../CANopen/stack/CANopen.c ****                            OD_GET(H1012, OD_H1012_COBID_TIME),
 1328              	 .loc 4 1057 0
 1329 01f8 03F19C01 	 add r1,r3,#156
 1330 01fc FB68     	 ldr r3,[r7,#12]
 1331 01fe 5A68     	 ldr r2,[r3,#4]
 1332 0200 FB6C     	 ldr r3,[r7,#76]
 1333 0202 0093     	 str r3,[sp]
 1334 0204 0223     	 movs r3,#2
 1335 0206 FFF7FEFF 	 bl CO_TIME_init
 1336 020a 0346     	 mov r3,r0
 1337 020c 7B74     	 strb r3,[r7,#17]
1059:../CANopen/stack/CANopen.c ****                            co->CANmodule,
1060:../CANopen/stack/CANopen.c ****                            CO_GET_CO(RX_IDX_TIME),
1061:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_TIME) & CO_CONFIG_TIME_PRODUCER
1062:../CANopen/stack/CANopen.c ****                            co->CANmodule,
1063:../CANopen/stack/CANopen.c ****                            CO_GET_CO(TX_IDX_TIME),
1064:../CANopen/stack/CANopen.c **** #endif
1065:../CANopen/stack/CANopen.c ****                            errInfo);
1066:../CANopen/stack/CANopen.c ****         if (err) return err;
 1338              	 .loc 4 1066 0
 1339 020e 97F91130 	 ldrsb r3,[r7,#17]
 1340 0212 002B     	 cmp r3,#0
 1341 0214 01D0     	 beq .L92
 1342              	 .loc 4 1066 0 is_stmt 0 discriminator 1
 1343 0216 7B7C     	 ldrb r3,[r7,#17]
 1344 0218 32E0     	 b .L79
 1345              	.L92:
1067:../CANopen/stack/CANopen.c ****     }
1068:../CANopen/stack/CANopen.c **** #endif
1069:../CANopen/stack/CANopen.c **** 
1070:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_SYNC) & CO_CONFIG_SYNC_ENABLE
1071:../CANopen/stack/CANopen.c ****     if (CO_GET_CNT(SYNC) == 1) {
1072:../CANopen/stack/CANopen.c ****         err = CO_SYNC_init(co->SYNC,
 1346              	 .loc 4 1072 0 is_stmt 1
 1347 021a FB68     	 ldr r3,[r7,#12]
 1348 021c DE6A     	 ldr r6,[r3,#44]
1073:../CANopen/stack/CANopen.c ****                            em,
1074:../CANopen/stack/CANopen.c ****                            OD_GET(H1005, OD_H1005_COBID_SYNC),
 1349              	 .loc 4 1074 0
 1350 021e 1B4B     	 ldr r3,.L94
 1351 0220 1B68     	 ldr r3,[r3]
 1352 0222 5B68     	 ldr r3,[r3,#4]
1072:../CANopen/stack/CANopen.c ****                            em,
 1353              	 .loc 4 1072 0
 1354 0224 03F13005 	 add r5,r3,#48
1075:../CANopen/stack/CANopen.c ****                            OD_GET(H1006, OD_H1006_COMM_CYCL_PERIOD),
 1355              	 .loc 4 1075 0
 1356 0228 184B     	 ldr r3,.L94
 1357 022a 1B68     	 ldr r3,[r3]
 1358 022c 5B68     	 ldr r3,[r3,#4]
1072:../CANopen/stack/CANopen.c ****                            em,
 1359              	 .loc 4 1072 0
 1360 022e 03F13C04 	 add r4,r3,#60
1076:../CANopen/stack/CANopen.c ****                            OD_GET(H1007, OD_H1007_SYNC_WINDOW_LEN),
 1361              	 .loc 4 1076 0
 1362 0232 164B     	 ldr r3,.L94
 1363 0234 1B68     	 ldr r3,[r3]
 1364 0236 5B68     	 ldr r3,[r3,#4]
1072:../CANopen/stack/CANopen.c ****                            em,
 1365              	 .loc 4 1072 0
 1366 0238 03F14800 	 add r0,r3,#72
1077:../CANopen/stack/CANopen.c ****                            OD_GET(H1019, OD_H1019_SYNC_CNT_OVERFLOW),
 1367              	 .loc 4 1077 0
 1368 023c 134B     	 ldr r3,.L94
 1369 023e 1B68     	 ldr r3,[r3]
 1370 0240 5B68     	 ldr r3,[r3,#4]
1072:../CANopen/stack/CANopen.c ****                            em,
 1371              	 .loc 4 1072 0
 1372 0242 03F1F001 	 add r1,r3,#240
 1373 0246 FB68     	 ldr r3,[r7,#12]
 1374 0248 5A68     	 ldr r2,[r3,#4]
 1375 024a FB68     	 ldr r3,[r7,#12]
 1376 024c 5B68     	 ldr r3,[r3,#4]
 1377 024e 0090     	 str r0,[sp]
 1378 0250 0191     	 str r1,[sp,#4]
 1379 0252 0292     	 str r2,[sp,#8]
 1380 0254 0122     	 movs r2,#1
 1381 0256 0392     	 str r2,[sp,#12]
 1382 0258 0493     	 str r3,[sp,#16]
 1383 025a 0023     	 movs r3,#0
 1384 025c 0593     	 str r3,[sp,#20]
 1385 025e FB6C     	 ldr r3,[r7,#76]
 1386 0260 0693     	 str r3,[sp,#24]
 1387 0262 3046     	 mov r0,r6
 1388 0264 7968     	 ldr r1,[r7,#4]
 1389 0266 2A46     	 mov r2,r5
 1390 0268 2346     	 mov r3,r4
 1391 026a FFF7FEFF 	 bl CO_SYNC_init
 1392 026e 0346     	 mov r3,r0
 1393 0270 7B74     	 strb r3,[r7,#17]
1078:../CANopen/stack/CANopen.c ****                            co->CANmodule,
1079:../CANopen/stack/CANopen.c ****                            CO_GET_CO(RX_IDX_SYNC),
1080:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_SYNC) & CO_CONFIG_SYNC_PRODUCER
1081:../CANopen/stack/CANopen.c ****                            co->CANmodule,
1082:../CANopen/stack/CANopen.c ****                            CO_GET_CO(TX_IDX_SYNC),
1083:../CANopen/stack/CANopen.c **** #endif
1084:../CANopen/stack/CANopen.c ****                            errInfo);
1085:../CANopen/stack/CANopen.c ****         if (err) return err;
 1394              	 .loc 4 1085 0
 1395 0272 97F91130 	 ldrsb r3,[r7,#17]
 1396 0276 002B     	 cmp r3,#0
 1397 0278 01D0     	 beq .L93
 1398              	 .loc 4 1085 0 is_stmt 0 discriminator 1
 1399 027a 7B7C     	 ldrb r3,[r7,#17]
 1400 027c 00E0     	 b .L79
 1401              	.L93:
1086:../CANopen/stack/CANopen.c ****     }
1087:../CANopen/stack/CANopen.c **** #endif
1088:../CANopen/stack/CANopen.c **** 
1089:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_GFC) & CO_CONFIG_GFC_ENABLE
1090:../CANopen/stack/CANopen.c ****     if (CO_GET_CNT(GFC) == 1) {
1091:../CANopen/stack/CANopen.c ****         err = CO_GFC_init(co->GFC,
1092:../CANopen/stack/CANopen.c ****                           &OD_globalFailSafeCommandParameter,
1093:../CANopen/stack/CANopen.c ****                           co->CANmodule,
1094:../CANopen/stack/CANopen.c ****                           CO_GET_CO(RX_IDX_GFC),
1095:../CANopen/stack/CANopen.c ****                           CO_CAN_ID_GFC,
1096:../CANopen/stack/CANopen.c ****                           co->CANmodule,
1097:../CANopen/stack/CANopen.c ****                           CO_GET_CO(TX_IDX_GFC),
1098:../CANopen/stack/CANopen.c ****                           CO_CAN_ID_GFC);
1099:../CANopen/stack/CANopen.c ****         if (err) return err;
1100:../CANopen/stack/CANopen.c ****     }
1101:../CANopen/stack/CANopen.c **** #endif
1102:../CANopen/stack/CANopen.c **** 
1103:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_SRDO) & CO_CONFIG_SRDO_ENABLE
1104:../CANopen/stack/CANopen.c ****     if (CO_GET_CNT(SRDO) > 0) {
1105:../CANopen/stack/CANopen.c ****         err = CO_SRDOGuard_init(co->SRDOGuard,
1106:../CANopen/stack/CANopen.c ****                                 co->SDO[0],
1107:../CANopen/stack/CANopen.c ****                                 &co->NMT->operatingState,
1108:../CANopen/stack/CANopen.c ****                                 &OD_configurationValid,
1109:../CANopen/stack/CANopen.c ****                                 OD_H13FE_SRDO_VALID,
1110:../CANopen/stack/CANopen.c ****                                 OD_H13FF_SRDO_CHECKSUM);
1111:../CANopen/stack/CANopen.c ****         if (err) return err;
1112:../CANopen/stack/CANopen.c **** 
1113:../CANopen/stack/CANopen.c ****         OD_entry_t *SRDOcomm = OD_GET(H1301, OD_H1301_SRDO_1_PARAM);
1114:../CANopen/stack/CANopen.c ****         OD_entry_t *SRDOmap = OD_GET(H1318, OD_H1381_SRDO_1_MAPPING);
1115:../CANopen/stack/CANopen.c ****         for (int16_t i = 0; i < CO_GET_CNT(SRDO); i++) {
1116:../CANopen/stack/CANopen.c ****             uint16_t CANdevRxIdx = CO_GET_CO(RX_IDX_SRDO) + 2 * i;
1117:../CANopen/stack/CANopen.c ****             uint16_t CANdevTxIdx = CO_GET_CO(TX_IDX_SRDO) + 2 * i;
1118:../CANopen/stack/CANopen.c **** 
1119:../CANopen/stack/CANopen.c ****             err = CO_SRDO_init(&co->SRDO[i],
1120:../CANopen/stack/CANopen.c ****                                co->SRDOGuard,
1121:../CANopen/stack/CANopen.c ****                                em,
1122:../CANopen/stack/CANopen.c ****                                co->SDO[0],
1123:../CANopen/stack/CANopen.c ****                                nodeId,
1124:../CANopen/stack/CANopen.c ****                                ((i == 0) ? CO_CAN_ID_SRDO_1 : 0),
1125:../CANopen/stack/CANopen.c ****                                SRDOcomm++,
1126:../CANopen/stack/CANopen.c ****                                SRDOmap++,
1127:../CANopen/stack/CANopen.c ****                                &OD_safetyConfigurationChecksum[i],
1128:../CANopen/stack/CANopen.c ****                                OD_H1301_SRDO_1_PARAM + i,
1129:../CANopen/stack/CANopen.c ****                                OD_H1381_SRDO_1_MAPPING + i,
1130:../CANopen/stack/CANopen.c ****                                co->CANmodule,
1131:../CANopen/stack/CANopen.c ****                                CANdevRxIdx,
1132:../CANopen/stack/CANopen.c ****                                CANdevRxIdx + 1,
1133:../CANopen/stack/CANopen.c ****                                co->CANmodule,
1134:../CANopen/stack/CANopen.c ****                                CANdevTxIdx,
1135:../CANopen/stack/CANopen.c ****                                CANdevTxIdx + 1);
1136:../CANopen/stack/CANopen.c ****             if (err) return err;
1137:../CANopen/stack/CANopen.c ****         }
1138:../CANopen/stack/CANopen.c ****     }
1139:../CANopen/stack/CANopen.c **** #endif
1140:../CANopen/stack/CANopen.c **** 
1141:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_LSS) & CO_CONFIG_LSS_MASTER
1142:../CANopen/stack/CANopen.c ****     if (CO_GET_CNT(LSS_MST) == 1) {
1143:../CANopen/stack/CANopen.c ****         err = CO_LSSmaster_init(co->LSSmaster,
1144:../CANopen/stack/CANopen.c ****                                 CO_LSSmaster_DEFAULT_TIMEOUT,
1145:../CANopen/stack/CANopen.c ****                                 co->CANmodule,
1146:../CANopen/stack/CANopen.c ****                                 CO_GET_CO(RX_IDX_LSS_MST),
1147:../CANopen/stack/CANopen.c ****                                 CO_CAN_ID_LSS_SLV,
1148:../CANopen/stack/CANopen.c ****                                 co->CANmodule,
1149:../CANopen/stack/CANopen.c ****                                 CO_GET_CO(TX_IDX_LSS_MST),
1150:../CANopen/stack/CANopen.c ****                                 CO_CAN_ID_LSS_MST);
1151:../CANopen/stack/CANopen.c ****         if (err) return err;
1152:../CANopen/stack/CANopen.c ****     }
1153:../CANopen/stack/CANopen.c **** #endif
1154:../CANopen/stack/CANopen.c **** 
1155:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_GTW) & CO_CONFIG_GTW_ASCII
1156:../CANopen/stack/CANopen.c ****     if (CO_GET_CNT(GTWA) == 1) {
1157:../CANopen/stack/CANopen.c ****         err = CO_GTWA_init(co->gtwa,
1158:../CANopen/stack/CANopen.c ****  #if (CO_CONFIG_GTW) & CO_CONFIG_GTW_ASCII_SDO
1159:../CANopen/stack/CANopen.c ****                            &co->SDOclient[0],
1160:../CANopen/stack/CANopen.c ****                            SDOclientTimeoutTime_ms,
1161:../CANopen/stack/CANopen.c ****                            SDOclientBlockTransfer,
1162:../CANopen/stack/CANopen.c ****  #endif
1163:../CANopen/stack/CANopen.c ****  #if (CO_CONFIG_GTW) & CO_CONFIG_GTW_ASCII_NMT
1164:../CANopen/stack/CANopen.c ****                            co->NMT,
1165:../CANopen/stack/CANopen.c ****  #endif
1166:../CANopen/stack/CANopen.c ****  #if (CO_CONFIG_GTW) & CO_CONFIG_GTW_ASCII_LSS
1167:../CANopen/stack/CANopen.c ****                            co->LSSmaster,
1168:../CANopen/stack/CANopen.c ****  #endif
1169:../CANopen/stack/CANopen.c ****  #if (CO_CONFIG_GTW) & CO_CONFIG_GTW_ASCII_PRINT_LEDS
1170:../CANopen/stack/CANopen.c ****                            co->LEDs,
1171:../CANopen/stack/CANopen.c ****  #endif
1172:../CANopen/stack/CANopen.c ****                            0);
1173:../CANopen/stack/CANopen.c ****         if (err) return err;
1174:../CANopen/stack/CANopen.c ****     }
1175:../CANopen/stack/CANopen.c **** #endif
1176:../CANopen/stack/CANopen.c **** 
1177:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_TRACE) & CO_CONFIG_TRACE_ENABLE
1178:../CANopen/stack/CANopen.c ****     if (CO_GET_CNT(TRACE) > 0) {
1179:../CANopen/stack/CANopen.c ****         for (uint16_t i = 0; i < CO_GET_CNT(TRACE); i++) {
1180:../CANopen/stack/CANopen.c ****             err = CO_trace_init(co->trace[i],
1181:../CANopen/stack/CANopen.c ****                                 co->SDO[0],
1182:../CANopen/stack/CANopen.c ****                                 OD_traceConfig[i].axisNo,
1183:../CANopen/stack/CANopen.c ****                                 CO_traceTimeBuffers[i],
1184:../CANopen/stack/CANopen.c ****                                 CO_traceValueBuffers[i],
1185:../CANopen/stack/CANopen.c ****                                 CO_traceBufferSize[i],
1186:../CANopen/stack/CANopen.c ****                                 &OD_traceConfig[i].map,
1187:../CANopen/stack/CANopen.c ****                                 &OD_traceConfig[i].format,
1188:../CANopen/stack/CANopen.c ****                                 &OD_traceConfig[i].trigger,
1189:../CANopen/stack/CANopen.c ****                                 &OD_traceConfig[i].threshold,
1190:../CANopen/stack/CANopen.c ****                                 &OD_trace[i].value,
1191:../CANopen/stack/CANopen.c ****                                 &OD_trace[i].min,
1192:../CANopen/stack/CANopen.c ****                                 &OD_trace[i].max,
1193:../CANopen/stack/CANopen.c ****                                 &OD_trace[i].triggerTime,
1194:../CANopen/stack/CANopen.c ****                                 OD_INDEX_TRACE_CONFIG + i,
1195:../CANopen/stack/CANopen.c ****                                 OD_INDEX_TRACE + i);
1196:../CANopen/stack/CANopen.c ****             if (err) return err;
1197:../CANopen/stack/CANopen.c ****         }
1198:../CANopen/stack/CANopen.c ****     }
1199:../CANopen/stack/CANopen.c **** #endif
1200:../CANopen/stack/CANopen.c **** 
1201:../CANopen/stack/CANopen.c ****     return CO_ERROR_NO;
 1402              	 .loc 4 1201 0 is_stmt 1
 1403 027e 0023     	 movs r3,#0
 1404              	.L79:
 1405 0280 5BB2     	 sxtb r3,r3
1202:../CANopen/stack/CANopen.c **** }
 1406              	 .loc 4 1202 0
 1407 0282 1846     	 mov r0,r3
 1408 0284 1C37     	 adds r7,r7,#28
 1409              	.LCFI53:
 1410              	 .cfi_def_cfa_offset 20
 1411 0286 BD46     	 mov sp,r7
 1412              	.LCFI54:
 1413              	 .cfi_def_cfa_register 13
 1414              	 
 1415 0288 F0BD     	 pop {r4,r5,r6,r7,pc}
 1416              	.L95:
 1417 028a 00BF     	 .align 2
 1418              	.L94:
 1419 028c 00000000 	 .word OD
 1420              	 .cfi_endproc
 1421              	.LFE46:
 1423              	 .section .text.CO_CANopenInitPDO,"ax",%progbits
 1424              	 .align 2
 1425              	 .global CO_CANopenInitPDO
 1426              	 .thumb
 1427              	 .thumb_func
 1429              	CO_CANopenInitPDO:
 1430              	.LFB47:
1203:../CANopen/stack/CANopen.c **** 
1204:../CANopen/stack/CANopen.c **** 
1205:../CANopen/stack/CANopen.c **** /******************************************************************************/
1206:../CANopen/stack/CANopen.c **** CO_ReturnError_t CO_CANopenInitPDO(CO_t *co,
1207:../CANopen/stack/CANopen.c ****                                    CO_EM_t *em,
1208:../CANopen/stack/CANopen.c ****                                    OD_t *od,
1209:../CANopen/stack/CANopen.c ****                                    uint8_t nodeId,
1210:../CANopen/stack/CANopen.c ****                                    uint32_t *errInfo)
1211:../CANopen/stack/CANopen.c **** {
 1431              	 .loc 4 1211 0
 1432              	 .cfi_startproc
 1433              	 
 1434              	 
 1435 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 1436              	.LCFI55:
 1437              	 .cfi_def_cfa_offset 20
 1438              	 .cfi_offset 4,-20
 1439              	 .cfi_offset 5,-16
 1440              	 .cfi_offset 6,-12
 1441              	 .cfi_offset 7,-8
 1442              	 .cfi_offset 14,-4
 1443 0002 8FB0     	 sub sp,sp,#60
 1444              	.LCFI56:
 1445              	 .cfi_def_cfa_offset 80
 1446 0004 06AF     	 add r7,sp,#24
 1447              	.LCFI57:
 1448              	 .cfi_def_cfa 7,56
 1449 0006 F860     	 str r0,[r7,#12]
 1450 0008 B960     	 str r1,[r7,#8]
 1451 000a 7A60     	 str r2,[r7,#4]
 1452 000c FB70     	 strb r3,[r7,#3]
1212:../CANopen/stack/CANopen.c ****     if (co == NULL) {
 1453              	 .loc 4 1212 0
 1454 000e FB68     	 ldr r3,[r7,#12]
 1455 0010 002B     	 cmp r3,#0
 1456 0012 01D1     	 bne .L97
1213:../CANopen/stack/CANopen.c ****         return CO_ERROR_ILLEGAL_ARGUMENT;
 1457              	 .loc 4 1213 0
 1458 0014 FF23     	 movs r3,#255
 1459 0016 6AE0     	 b .L98
 1460              	.L97:
1214:../CANopen/stack/CANopen.c ****     }
1215:../CANopen/stack/CANopen.c ****     if (nodeId < 1 || nodeId > 127 || co->nodeIdUnconfigured) {
 1461              	 .loc 4 1215 0
 1462 0018 FB78     	 ldrb r3,[r7,#3]
 1463 001a 002B     	 cmp r3,#0
 1464 001c 07D0     	 beq .L99
 1465              	 .loc 4 1215 0 is_stmt 0 discriminator 1
 1466 001e FB78     	 ldrb r3,[r7,#3]
 1467 0020 5BB2     	 sxtb r3,r3
 1468 0022 002B     	 cmp r3,#0
 1469 0024 03DB     	 blt .L99
 1470              	 .loc 4 1215 0 discriminator 2
 1471 0026 FB68     	 ldr r3,[r7,#12]
 1472 0028 1B68     	 ldr r3,[r3]
 1473 002a 002B     	 cmp r3,#0
 1474 002c 08D0     	 beq .L100
 1475              	.L99:
1216:../CANopen/stack/CANopen.c ****         return (co->nodeIdUnconfigured)
 1476              	 .loc 4 1216 0 is_stmt 1
 1477 002e FB68     	 ldr r3,[r7,#12]
 1478 0030 1B68     	 ldr r3,[r3]
 1479 0032 002B     	 cmp r3,#0
 1480 0034 01D0     	 beq .L101
 1481              	 .loc 4 1216 0 is_stmt 0 discriminator 1
 1482 0036 ED23     	 movs r3,#237
 1483 0038 00E0     	 b .L102
 1484              	.L101:
 1485              	 .loc 4 1216 0 discriminator 2
 1486 003a FF23     	 movs r3,#255
 1487              	.L102:
 1488              	 .loc 4 1216 0 discriminator 4
 1489 003c DBB2     	 uxtb r3,r3
 1490 003e 56E0     	 b .L98
 1491              	.L100:
 1492              	.LBB9:
1217:../CANopen/stack/CANopen.c ****                ? CO_ERROR_NODE_ID_UNCONFIGURED_LSS : CO_ERROR_ILLEGAL_ARGUMENT;
1218:../CANopen/stack/CANopen.c ****     }
1219:../CANopen/stack/CANopen.c **** 
1220:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_RPDO_ENABLE
1221:../CANopen/stack/CANopen.c ****     if (CO_GET_CNT(RPDO) > 0) {
1222:../CANopen/stack/CANopen.c ****         OD_entry_t *RPDOcomm = OD_GET(H1400, OD_H1400_RXPDO_1_PARAM);
1223:../CANopen/stack/CANopen.c ****         OD_entry_t *RPDOmap = OD_GET(H1600, OD_H1600_RXPDO_1_MAPPING);
1224:../CANopen/stack/CANopen.c ****         for (int16_t i = 0; i < CO_GET_CNT(RPDO); i++) {
1225:../CANopen/stack/CANopen.c ****             CO_ReturnError_t err;
1226:../CANopen/stack/CANopen.c ****             uint16_t preDefinedCanId = 0;
1227:../CANopen/stack/CANopen.c ****             if (i < CO_RPDO_DEFAULT_CANID_COUNT) {
1228:../CANopen/stack/CANopen.c **** #if CO_RPDO_DEFAULT_CANID_COUNT <= 4
1229:../CANopen/stack/CANopen.c ****                 preDefinedCanId = (CO_CAN_ID_RPDO_1 + i * 0x100) + nodeId;
1230:../CANopen/stack/CANopen.c **** #else
1231:../CANopen/stack/CANopen.c ****                 uint16_t pdoOffset = i % 4;
1232:../CANopen/stack/CANopen.c ****                 uint16_t nodeIdOffset = i / 4;
1233:../CANopen/stack/CANopen.c ****                 preDefinedCanId = (CO_CAN_ID_RPDO_1 + pdoOffset * 0x100)
1234:../CANopen/stack/CANopen.c ****                                 + nodeId + nodeIdOffset;
1235:../CANopen/stack/CANopen.c **** #endif
1236:../CANopen/stack/CANopen.c ****             }
1237:../CANopen/stack/CANopen.c ****             err = CO_RPDO_init(&co->RPDO[i],
1238:../CANopen/stack/CANopen.c ****                                od,
1239:../CANopen/stack/CANopen.c ****                                em,
1240:../CANopen/stack/CANopen.c ****  #if (CO_CONFIG_PDO) & CO_CONFIG_PDO_SYNC_ENABLE
1241:../CANopen/stack/CANopen.c ****                                co->SYNC,
1242:../CANopen/stack/CANopen.c ****  #endif
1243:../CANopen/stack/CANopen.c ****                                preDefinedCanId,
1244:../CANopen/stack/CANopen.c ****                                RPDOcomm++,
1245:../CANopen/stack/CANopen.c ****                                RPDOmap++,
1246:../CANopen/stack/CANopen.c ****                                co->CANmodule,
1247:../CANopen/stack/CANopen.c ****                                CO_GET_CO(RX_IDX_RPDO) + i,
1248:../CANopen/stack/CANopen.c ****                                errInfo);
1249:../CANopen/stack/CANopen.c ****             if (err) return err;
1250:../CANopen/stack/CANopen.c ****         }
1251:../CANopen/stack/CANopen.c ****     }
1252:../CANopen/stack/CANopen.c **** #endif
1253:../CANopen/stack/CANopen.c **** 
1254:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_TPDO_ENABLE
1255:../CANopen/stack/CANopen.c ****     if (CO_GET_CNT(TPDO) > 0) {
1256:../CANopen/stack/CANopen.c ****         OD_entry_t *TPDOcomm = OD_GET(H1800, OD_H1800_TXPDO_1_PARAM);
 1493              	 .loc 4 1256 0 is_stmt 1
 1494 0040 2D4B     	 ldr r3,.L107
 1495 0042 1B68     	 ldr r3,[r3]
 1496 0044 5B68     	 ldr r3,[r3,#4]
 1497 0046 03F5C073 	 add r3,r3,#384
 1498 004a FB61     	 str r3,[r7,#28]
1257:../CANopen/stack/CANopen.c ****         OD_entry_t *TPDOmap = OD_GET(H1A00, OD_H1A00_TXPDO_1_MAPPING);
 1499              	 .loc 4 1257 0
 1500 004c 2A4B     	 ldr r3,.L107
 1501 004e 1B68     	 ldr r3,[r3]
 1502 0050 5B68     	 ldr r3,[r3,#4]
 1503 0052 03F5D873 	 add r3,r3,#432
 1504 0056 BB61     	 str r3,[r7,#24]
 1505              	.LBB10:
1258:../CANopen/stack/CANopen.c ****         for (int16_t i = 0; i < CO_GET_CNT(TPDO); i++) {
 1506              	 .loc 4 1258 0
 1507 0058 0023     	 movs r3,#0
 1508 005a FB82     	 strh r3,[r7,#22]
 1509 005c 42E0     	 b .L103
 1510              	.L106:
 1511              	.LBB11:
1259:../CANopen/stack/CANopen.c ****             CO_ReturnError_t err;
1260:../CANopen/stack/CANopen.c ****             uint16_t preDefinedCanId = 0;
 1512              	 .loc 4 1260 0
 1513 005e 0023     	 movs r3,#0
 1514 0060 BB82     	 strh r3,[r7,#20]
1261:../CANopen/stack/CANopen.c ****             if (i < CO_TPDO_DEFAULT_CANID_COUNT) {
 1515              	 .loc 4 1261 0
 1516 0062 B7F91630 	 ldrsh r3,[r7,#22]
 1517 0066 032B     	 cmp r3,#3
 1518 0068 09DC     	 bgt .L104
1262:../CANopen/stack/CANopen.c **** #if CO_TPDO_DEFAULT_CANID_COUNT <= 4
1263:../CANopen/stack/CANopen.c ****                 preDefinedCanId = (CO_CAN_ID_TPDO_1 + i * 0x100) + nodeId;
 1519              	 .loc 4 1263 0
 1520 006a FB8A     	 ldrh r3,[r7,#22]
 1521 006c 1B02     	 lsls r3,r3,#8
 1522 006e 9AB2     	 uxth r2,r3
 1523 0070 FB78     	 ldrb r3,[r7,#3]
 1524 0072 9BB2     	 uxth r3,r3
 1525 0074 1344     	 add r3,r3,r2
 1526 0076 9BB2     	 uxth r3,r3
 1527 0078 03F5C073 	 add r3,r3,#384
 1528 007c BB82     	 strh r3,[r7,#20]
 1529              	.L104:
1264:../CANopen/stack/CANopen.c **** #else
1265:../CANopen/stack/CANopen.c ****                 uint16_t pdoOffset = i % 4;
1266:../CANopen/stack/CANopen.c ****                 uint16_t nodeIdOffset = i / 4;
1267:../CANopen/stack/CANopen.c ****                 preDefinedCanId = (CO_CAN_ID_TPDO_1 + pdoOffset * 0x100)
1268:../CANopen/stack/CANopen.c ****                                 + nodeId + nodeIdOffset;
1269:../CANopen/stack/CANopen.c **** #endif
1270:../CANopen/stack/CANopen.c ****             }
1271:../CANopen/stack/CANopen.c ****             err = CO_TPDO_init(&co->TPDO[i],
 1530              	 .loc 4 1271 0
 1531 007e FB68     	 ldr r3,[r7,#12]
 1532 0080 5A6B     	 ldr r2,[r3,#52]
 1533 0082 B7F91630 	 ldrsh r3,[r7,#22]
 1534 0086 4FF4B671 	 mov r1,#364
 1535 008a 01FB03F3 	 mul r3,r1,r3
 1536 008e D618     	 adds r6,r2,r3
 1537 0090 FB68     	 ldr r3,[r7,#12]
 1538 0092 DD6A     	 ldr r5,[r3,#44]
 1539 0094 FA69     	 ldr r2,[r7,#28]
 1540 0096 02F10C03 	 add r3,r2,#12
 1541 009a FB61     	 str r3,[r7,#28]
 1542 009c BB69     	 ldr r3,[r7,#24]
 1543 009e 03F10C01 	 add r1,r3,#12
 1544 00a2 B961     	 str r1,[r7,#24]
 1545 00a4 F968     	 ldr r1,[r7,#12]
 1546 00a6 4868     	 ldr r0,[r1,#4]
 1547 00a8 F98A     	 ldrh r1,[r7,#22]
 1548 00aa 0231     	 adds r1,r1,#2
 1549 00ac 89B2     	 uxth r1,r1
 1550 00ae BC8A     	 ldrh r4,[r7,#20]
 1551 00b0 0094     	 str r4,[sp]
 1552 00b2 0192     	 str r2,[sp,#4]
 1553 00b4 0293     	 str r3,[sp,#8]
 1554 00b6 0390     	 str r0,[sp,#12]
 1555 00b8 0491     	 str r1,[sp,#16]
 1556 00ba BB6B     	 ldr r3,[r7,#56]
 1557 00bc 0593     	 str r3,[sp,#20]
 1558 00be 3046     	 mov r0,r6
 1559 00c0 7968     	 ldr r1,[r7,#4]
 1560 00c2 BA68     	 ldr r2,[r7,#8]
 1561 00c4 2B46     	 mov r3,r5
 1562 00c6 FFF7FEFF 	 bl CO_TPDO_init
 1563 00ca 0346     	 mov r3,r0
 1564 00cc FB74     	 strb r3,[r7,#19]
1272:../CANopen/stack/CANopen.c ****                                od,
1273:../CANopen/stack/CANopen.c ****                                em,
1274:../CANopen/stack/CANopen.c ****  #if (CO_CONFIG_PDO) & CO_CONFIG_PDO_SYNC_ENABLE
1275:../CANopen/stack/CANopen.c ****                                co->SYNC,
1276:../CANopen/stack/CANopen.c ****  #endif
1277:../CANopen/stack/CANopen.c ****                                preDefinedCanId,
1278:../CANopen/stack/CANopen.c ****                                TPDOcomm++,
1279:../CANopen/stack/CANopen.c ****                                TPDOmap++,
1280:../CANopen/stack/CANopen.c ****                                co->CANmodule,
1281:../CANopen/stack/CANopen.c ****                                CO_GET_CO(TX_IDX_TPDO) + i,
1282:../CANopen/stack/CANopen.c ****                                errInfo);
1283:../CANopen/stack/CANopen.c ****             if (err) return err;
 1565              	 .loc 4 1283 0
 1566 00ce 97F91330 	 ldrsb r3,[r7,#19]
 1567 00d2 002B     	 cmp r3,#0
 1568 00d4 01D0     	 beq .L105
 1569              	 .loc 4 1283 0 is_stmt 0 discriminator 1
 1570 00d6 FB7C     	 ldrb r3,[r7,#19]
 1571 00d8 09E0     	 b .L98
 1572              	.L105:
 1573              	.LBE11:
1258:../CANopen/stack/CANopen.c ****             CO_ReturnError_t err;
 1574              	 .loc 4 1258 0 is_stmt 1 discriminator 2
 1575 00da FB8A     	 ldrh r3,[r7,#22]
 1576 00dc 9BB2     	 uxth r3,r3
 1577 00de 0133     	 adds r3,r3,#1
 1578 00e0 9BB2     	 uxth r3,r3
 1579 00e2 FB82     	 strh r3,[r7,#22]
 1580              	.L103:
1258:../CANopen/stack/CANopen.c ****             CO_ReturnError_t err;
 1581              	 .loc 4 1258 0 is_stmt 0 discriminator 1
 1582 00e4 B7F91630 	 ldrsh r3,[r7,#22]
 1583 00e8 002B     	 cmp r3,#0
 1584 00ea B8DD     	 ble .L106
 1585              	.LBE10:
 1586              	.LBE9:
1284:../CANopen/stack/CANopen.c ****         }
1285:../CANopen/stack/CANopen.c ****     }
1286:../CANopen/stack/CANopen.c **** #endif
1287:../CANopen/stack/CANopen.c **** 
1288:../CANopen/stack/CANopen.c ****     return CO_ERROR_NO;
 1587              	 .loc 4 1288 0 is_stmt 1
 1588 00ec 0023     	 movs r3,#0
 1589              	.L98:
 1590 00ee 5BB2     	 sxtb r3,r3
1289:../CANopen/stack/CANopen.c **** }
 1591              	 .loc 4 1289 0
 1592 00f0 1846     	 mov r0,r3
 1593 00f2 2437     	 adds r7,r7,#36
 1594              	.LCFI58:
 1595              	 .cfi_def_cfa_offset 20
 1596 00f4 BD46     	 mov sp,r7
 1597              	.LCFI59:
 1598              	 .cfi_def_cfa_register 13
 1599              	 
 1600 00f6 F0BD     	 pop {r4,r5,r6,r7,pc}
 1601              	.L108:
 1602              	 .align 2
 1603              	.L107:
 1604 00f8 00000000 	 .word OD
 1605              	 .cfi_endproc
 1606              	.LFE47:
 1608              	 .section .text.CO_process,"ax",%progbits
 1609              	 .align 2
 1610              	 .global CO_process
 1611              	 .thumb
 1612              	 .thumb_func
 1614              	CO_process:
 1615              	.LFB48:
1290:../CANopen/stack/CANopen.c **** 
1291:../CANopen/stack/CANopen.c **** 
1292:../CANopen/stack/CANopen.c **** /******************************************************************************/
1293:../CANopen/stack/CANopen.c **** CO_NMT_reset_cmd_t CO_process(CO_t *co,
1294:../CANopen/stack/CANopen.c ****                               bool_t enableGateway,
1295:../CANopen/stack/CANopen.c ****                               uint32_t timeDifference_us,
1296:../CANopen/stack/CANopen.c ****                               uint32_t *timerNext_us)
1297:../CANopen/stack/CANopen.c **** {
 1616              	 .loc 4 1297 0
 1617              	 .cfi_startproc
 1618              	 
 1619              	 
 1620 0000 2DE9F047 	 push {r4,r5,r6,r7,r8,r9,r10,lr}
 1621              	.LCFI60:
 1622              	 .cfi_def_cfa_offset 32
 1623              	 .cfi_offset 4,-32
 1624              	 .cfi_offset 5,-28
 1625              	 .cfi_offset 6,-24
 1626              	 .cfi_offset 7,-20
 1627              	 .cfi_offset 8,-16
 1628              	 .cfi_offset 9,-12
 1629              	 .cfi_offset 10,-8
 1630              	 .cfi_offset 14,-4
 1631 0004 92B0     	 sub sp,sp,#72
 1632              	.LCFI61:
 1633              	 .cfi_def_cfa_offset 104
 1634 0006 08AF     	 add r7,sp,#32
 1635              	.LCFI62:
 1636              	 .cfi_def_cfa 7,72
 1637 0008 F860     	 str r0,[r7,#12]
 1638 000a B960     	 str r1,[r7,#8]
 1639 000c 7A60     	 str r2,[r7,#4]
 1640 000e 3B60     	 str r3,[r7]
1298:../CANopen/stack/CANopen.c ****     (void) enableGateway; /* may be unused */
1299:../CANopen/stack/CANopen.c ****     CO_NMT_reset_cmd_t reset = CO_RESET_NOT;
 1641              	 .loc 4 1299 0
 1642 0010 0023     	 movs r3,#0
 1643 0012 87F82730 	 strb r3,[r7,#39]
1300:../CANopen/stack/CANopen.c ****     CO_NMT_internalState_t NMTstate = CO_NMT_getInternalState(co->NMT);
 1644              	 .loc 4 1300 0
 1645 0016 FB68     	 ldr r3,[r7,#12]
 1646 0018 1B69     	 ldr r3,[r3,#16]
 1647 001a 1846     	 mov r0,r3
 1648 001c FFF7FEFF 	 bl CO_NMT_getInternalState
 1649 0020 0346     	 mov r3,r0
 1650 0022 7B74     	 strb r3,[r7,#17]
1301:../CANopen/stack/CANopen.c ****     bool_t NMTisPreOrOperational = (NMTstate == CO_NMT_PRE_OPERATIONAL
 1651              	 .loc 4 1301 0
 1652 0024 7B7C     	 ldrb r3,[r7,#17]
1302:../CANopen/stack/CANopen.c ****                                     || NMTstate == CO_NMT_OPERATIONAL);
 1653              	 .loc 4 1302 0
 1654 0026 5BB2     	 sxtb r3,r3
 1655 0028 7F2B     	 cmp r3,#127
 1656 002a 03D0     	 beq .L110
 1657              	 .loc 4 1302 0 is_stmt 0 discriminator 2
 1658 002c 7B7C     	 ldrb r3,[r7,#17]
 1659 002e 5BB2     	 sxtb r3,r3
 1660 0030 052B     	 cmp r3,#5
 1661 0032 01D1     	 bne .L111
 1662              	.L110:
 1663              	 .loc 4 1302 0 discriminator 3
 1664 0034 0123     	 movs r3,#1
 1665 0036 00E0     	 b .L112
 1666              	.L111:
 1667              	 .loc 4 1302 0 discriminator 4
 1668 0038 0023     	 movs r3,#0
 1669              	.L112:
1301:../CANopen/stack/CANopen.c ****     bool_t NMTisPreOrOperational = (NMTstate == CO_NMT_PRE_OPERATIONAL
 1670              	 .loc 4 1301 0 is_stmt 1
 1671 003a BB61     	 str r3,[r7,#24]
1303:../CANopen/stack/CANopen.c **** 
1304:../CANopen/stack/CANopen.c ****     /* CAN module */
1305:../CANopen/stack/CANopen.c ****     CO_CANmodule_process(co->CANmodule);
 1672              	 .loc 4 1305 0
 1673 003c FB68     	 ldr r3,[r7,#12]
 1674 003e 5B68     	 ldr r3,[r3,#4]
 1675 0040 1846     	 mov r0,r3
 1676 0042 FFF7FEFF 	 bl CO_CANmodule_process
1306:../CANopen/stack/CANopen.c **** 
1307:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_LSS) & CO_CONFIG_LSS_SLAVE
1308:../CANopen/stack/CANopen.c ****     if (CO_GET_CNT(LSS_SLV) == 1) {
1309:../CANopen/stack/CANopen.c ****         if (CO_LSSslave_process(co->LSSslave)) {
 1677              	 .loc 4 1309 0
 1678 0046 FB68     	 ldr r3,[r7,#12]
 1679 0048 DB6B     	 ldr r3,[r3,#60]
 1680 004a 1846     	 mov r0,r3
 1681 004c FFF7FEFF 	 bl CO_LSSslave_process
 1682 0050 0346     	 mov r3,r0
 1683 0052 002B     	 cmp r3,#0
 1684 0054 02D0     	 beq .L113
1310:../CANopen/stack/CANopen.c ****             reset = CO_RESET_COMM;
 1685              	 .loc 4 1310 0
 1686 0056 0123     	 movs r3,#1
 1687 0058 87F82730 	 strb r3,[r7,#39]
 1688              	.L113:
1311:../CANopen/stack/CANopen.c ****         }
1312:../CANopen/stack/CANopen.c ****     }
1313:../CANopen/stack/CANopen.c **** #endif
1314:../CANopen/stack/CANopen.c **** 
1315:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_LEDS) & CO_CONFIG_LEDS_ENABLE
1316:../CANopen/stack/CANopen.c ****     bool_t unc = co->nodeIdUnconfigured;
 1689              	 .loc 4 1316 0
 1690 005c FB68     	 ldr r3,[r7,#12]
 1691 005e 1B68     	 ldr r3,[r3]
 1692 0060 7B61     	 str r3,[r7,#20]
1317:../CANopen/stack/CANopen.c ****     uint16_t CANerrorStatus = co->CANmodule->CANerrorStatus;
 1693              	 .loc 4 1317 0
 1694 0062 FB68     	 ldr r3,[r7,#12]
 1695 0064 5B68     	 ldr r3,[r3,#4]
 1696 0066 5B8A     	 ldrh r3,[r3,#18]
 1697 0068 7B82     	 strh r3,[r7,#18]
1318:../CANopen/stack/CANopen.c ****     bool_t LSSslave_configuration = false;
 1698              	 .loc 4 1318 0
 1699 006a 0023     	 movs r3,#0
 1700 006c 3B62     	 str r3,[r7,#32]
1319:../CANopen/stack/CANopen.c ****  #if (CO_CONFIG_LSS) & CO_CONFIG_LSS_SLAVE
1320:../CANopen/stack/CANopen.c ****     if (CO_GET_CNT(LSS_SLV) == 1
1321:../CANopen/stack/CANopen.c ****         && CO_LSSslave_getState(co->LSSslave) == CO_LSS_STATE_CONFIGURATION
 1701              	 .loc 4 1321 0
 1702 006e FB68     	 ldr r3,[r7,#12]
 1703 0070 DB6B     	 ldr r3,[r3,#60]
 1704 0072 1846     	 mov r0,r3
 1705 0074 FFF7FEFF 	 bl CO_LSSslave_getState
 1706 0078 0346     	 mov r3,r0
1320:../CANopen/stack/CANopen.c ****         && CO_LSSslave_getState(co->LSSslave) == CO_LSS_STATE_CONFIGURATION
 1707              	 .loc 4 1320 0
 1708 007a 012B     	 cmp r3,#1
 1709 007c 01D1     	 bne .L130
1322:../CANopen/stack/CANopen.c ****     ) {
1323:../CANopen/stack/CANopen.c ****         LSSslave_configuration = true;
 1710              	 .loc 4 1323 0
 1711 007e 0123     	 movs r3,#1
 1712 0080 3B62     	 str r3,[r7,#32]
 1713              	.L130:
1324:../CANopen/stack/CANopen.c ****     }
1325:../CANopen/stack/CANopen.c ****  #endif
1326:../CANopen/stack/CANopen.c ****  /* default macro, can be defined externally */
1327:../CANopen/stack/CANopen.c ****  #ifndef CO_STATUS_FIRMWARE_DOWNLOAD_IN_PROGRESS
1328:../CANopen/stack/CANopen.c ****   #define CO_STATUS_FIRMWARE_DOWNLOAD_IN_PROGRESS 0
1329:../CANopen/stack/CANopen.c ****  #endif
1330:../CANopen/stack/CANopen.c **** 
1331:../CANopen/stack/CANopen.c ****     if (CO_GET_CNT(LEDS) == 1) {
1332:../CANopen/stack/CANopen.c ****         CO_LEDs_process(co->LEDs,
 1714              	 .loc 4 1332 0
 1715 0082 FB68     	 ldr r3,[r7,#12]
 1716 0084 9E6B     	 ldr r6,[r3,#56]
 1717 0086 7B69     	 ldr r3,[r7,#20]
 1718 0088 002B     	 cmp r3,#0
 1719 008a 01D1     	 bne .L115
 1720              	 .loc 4 1332 0 is_stmt 0 discriminator 1
 1721 008c 7D7C     	 ldrb r5,[r7,#17]
 1722 008e 00E0     	 b .L116
 1723              	.L115:
 1724              	 .loc 4 1332 0 discriminator 2
 1725 0090 0025     	 movs r5,#0
 1726              	.L116:
1333:../CANopen/stack/CANopen.c ****             timeDifference_us,
1334:../CANopen/stack/CANopen.c ****             unc ? CO_NMT_INITIALIZING : NMTstate,
1335:../CANopen/stack/CANopen.c ****             LSSslave_configuration,
1336:../CANopen/stack/CANopen.c ****             (CANerrorStatus & CO_CAN_ERRTX_BUS_OFF) != 0,
 1727              	 .loc 4 1336 0 is_stmt 1 discriminator 4
 1728 0092 7B8A     	 ldrh r3,[r7,#18]
 1729 0094 03F00403 	 and r3,r3,#4
1332:../CANopen/stack/CANopen.c ****             timeDifference_us,
 1730              	 .loc 4 1332 0 discriminator 4
 1731 0098 002B     	 cmp r3,#0
 1732 009a 14BF     	 ite ne
 1733 009c 0123     	 movne r3,#1
 1734 009e 0023     	 moveq r3,#0
 1735 00a0 DBB2     	 uxtb r3,r3
 1736 00a2 9A46     	 mov r10,r3
1337:../CANopen/stack/CANopen.c ****             (CANerrorStatus & CO_CAN_ERR_WARN_PASSIVE) != 0,
 1737              	 .loc 4 1337 0 discriminator 4
 1738 00a4 7A8A     	 ldrh r2,[r7,#18]
 1739 00a6 40F20333 	 movw r3,#771
 1740 00aa 1340     	 ands r3,r3,r2
1332:../CANopen/stack/CANopen.c ****             timeDifference_us,
 1741              	 .loc 4 1332 0 discriminator 4
 1742 00ac 002B     	 cmp r3,#0
 1743 00ae 14BF     	 ite ne
 1744 00b0 0123     	 movne r3,#1
 1745 00b2 0023     	 moveq r3,#0
 1746 00b4 DBB2     	 uxtb r3,r3
 1747 00b6 9946     	 mov r9,r3
 1748 00b8 7B69     	 ldr r3,[r7,#20]
 1749 00ba 002B     	 cmp r3,#0
 1750 00bc 07D1     	 bne .L117
1338:../CANopen/stack/CANopen.c ****             0, /* RPDO event timer timeout */
1339:../CANopen/stack/CANopen.c ****             unc ? false : CO_isError(co->em, CO_EM_SYNC_TIME_OUT),
 1751              	 .loc 4 1339 0 discriminator 5
 1752 00be FB68     	 ldr r3,[r7,#12]
 1753 00c0 DB69     	 ldr r3,[r3,#28]
1332:../CANopen/stack/CANopen.c ****             timeDifference_us,
 1754              	 .loc 4 1332 0 discriminator 5
 1755 00c2 1846     	 mov r0,r3
 1756 00c4 1821     	 movs r1,#24
 1757 00c6 FFF7FEFF 	 bl CO_isError
 1758 00ca 0446     	 mov r4,r0
 1759 00cc 00E0     	 b .L118
 1760              	.L117:
1332:../CANopen/stack/CANopen.c ****             timeDifference_us,
 1761              	 .loc 4 1332 0 is_stmt 0 discriminator 6
 1762 00ce 0024     	 movs r4,#0
 1763              	.L118:
1340:../CANopen/stack/CANopen.c ****             unc ? false : (CO_isError(co->em, CO_EM_HEARTBEAT_CONSUMER)
 1764              	 .loc 4 1340 0 is_stmt 1
 1765 00d0 7B69     	 ldr r3,[r7,#20]
 1766 00d2 002B     	 cmp r3,#0
 1767 00d4 13D1     	 bne .L119
 1768              	 .loc 4 1340 0 is_stmt 0 discriminator 1
 1769 00d6 FB68     	 ldr r3,[r7,#12]
 1770 00d8 DB69     	 ldr r3,[r3,#28]
 1771 00da 1846     	 mov r0,r3
 1772 00dc 1B21     	 movs r1,#27
 1773 00de FFF7FEFF 	 bl CO_isError
 1774 00e2 0346     	 mov r3,r0
 1775 00e4 002B     	 cmp r3,#0
 1776 00e6 08D1     	 bne .L120
1341:../CANopen/stack/CANopen.c ****                         || CO_isError(co->em, CO_EM_HB_CONSUMER_REMOTE_RESET)),
 1777              	 .loc 4 1341 0 is_stmt 1
 1778 00e8 FB68     	 ldr r3,[r7,#12]
 1779 00ea DB69     	 ldr r3,[r3,#28]
 1780 00ec 1846     	 mov r0,r3
 1781 00ee 1C21     	 movs r1,#28
 1782 00f0 FFF7FEFF 	 bl CO_isError
 1783 00f4 0346     	 mov r3,r0
 1784 00f6 002B     	 cmp r3,#0
 1785 00f8 01D0     	 beq .L119
 1786              	.L120:
1340:../CANopen/stack/CANopen.c ****             unc ? false : (CO_isError(co->em, CO_EM_HEARTBEAT_CONSUMER)
 1787              	 .loc 4 1340 0 discriminator 3
 1788 00fa 0123     	 movs r3,#1
 1789 00fc 00E0     	 b .L121
 1790              	.L119:
1340:../CANopen/stack/CANopen.c ****             unc ? false : (CO_isError(co->em, CO_EM_HEARTBEAT_CONSUMER)
 1791              	 .loc 4 1340 0 is_stmt 0 discriminator 2
 1792 00fe 0023     	 movs r3,#0
 1793              	.L121:
1332:../CANopen/stack/CANopen.c ****             timeDifference_us,
 1794              	 .loc 4 1332 0 is_stmt 1
 1795 0100 9846     	 mov r8,r3
1342:../CANopen/stack/CANopen.c ****             CO_getErrorRegister(co->em) != 0,
 1796              	 .loc 4 1342 0
 1797 0102 FB68     	 ldr r3,[r7,#12]
 1798 0104 DB69     	 ldr r3,[r3,#28]
 1799 0106 1846     	 mov r0,r3
 1800 0108 FFF7FEFF 	 bl CO_getErrorRegister
 1801 010c 0346     	 mov r3,r0
1332:../CANopen/stack/CANopen.c ****             timeDifference_us,
 1802              	 .loc 4 1332 0
 1803 010e 002B     	 cmp r3,#0
 1804 0110 14BF     	 ite ne
 1805 0112 0123     	 movne r3,#1
 1806 0114 0023     	 moveq r3,#0
 1807 0116 DBB2     	 uxtb r3,r3
 1808 0118 1946     	 mov r1,r3
 1809 011a 6AB2     	 sxtb r2,r5
 1810 011c CDF800A0 	 str r10,[sp]
 1811 0120 CDF80490 	 str r9,[sp,#4]
 1812 0124 0023     	 movs r3,#0
 1813 0126 0293     	 str r3,[sp,#8]
 1814 0128 0394     	 str r4,[sp,#12]
 1815 012a CDF81080 	 str r8,[sp,#16]
 1816 012e 0591     	 str r1,[sp,#20]
 1817 0130 0023     	 movs r3,#0
 1818 0132 0693     	 str r3,[sp,#24]
 1819 0134 3B68     	 ldr r3,[r7]
 1820 0136 0793     	 str r3,[sp,#28]
 1821 0138 3046     	 mov r0,r6
 1822 013a 7968     	 ldr r1,[r7,#4]
 1823 013c 3B6A     	 ldr r3,[r7,#32]
 1824 013e FFF7FEFF 	 bl CO_LEDs_process
1343:../CANopen/stack/CANopen.c ****             CO_STATUS_FIRMWARE_DOWNLOAD_IN_PROGRESS,
1344:../CANopen/stack/CANopen.c ****             timerNext_us);
1345:../CANopen/stack/CANopen.c ****     }
1346:../CANopen/stack/CANopen.c **** #endif
1347:../CANopen/stack/CANopen.c **** 
1348:../CANopen/stack/CANopen.c ****     /* CANopen Node ID is unconfigured (LSS slave), stop processing here */
1349:../CANopen/stack/CANopen.c ****     if (co->nodeIdUnconfigured) {
 1825              	 .loc 4 1349 0
 1826 0142 FB68     	 ldr r3,[r7,#12]
 1827 0144 1B68     	 ldr r3,[r3]
 1828 0146 002B     	 cmp r3,#0
 1829 0148 02D0     	 beq .L122
1350:../CANopen/stack/CANopen.c ****         return reset;
 1830              	 .loc 4 1350 0
 1831 014a 97F82730 	 ldrb r3,[r7,#39]
 1832 014e 47E0     	 b .L129
 1833              	.L122:
1351:../CANopen/stack/CANopen.c ****     }
1352:../CANopen/stack/CANopen.c **** 
1353:../CANopen/stack/CANopen.c ****     /* Emergency */
1354:../CANopen/stack/CANopen.c ****     if (CO_GET_CNT(EM) == 1) {
1355:../CANopen/stack/CANopen.c ****         CO_EM_process(co->em,
 1834              	 .loc 4 1355 0
 1835 0150 FB68     	 ldr r3,[r7,#12]
 1836 0152 DB69     	 ldr r3,[r3,#28]
 1837 0154 1846     	 mov r0,r3
 1838 0156 B969     	 ldr r1,[r7,#24]
 1839 0158 7A68     	 ldr r2,[r7,#4]
 1840 015a 3B68     	 ldr r3,[r7]
 1841 015c FFF7FEFF 	 bl CO_EM_process
1356:../CANopen/stack/CANopen.c ****                       NMTisPreOrOperational,
1357:../CANopen/stack/CANopen.c ****                       timeDifference_us,
1358:../CANopen/stack/CANopen.c ****                       timerNext_us);
1359:../CANopen/stack/CANopen.c ****     }
1360:../CANopen/stack/CANopen.c **** 
1361:../CANopen/stack/CANopen.c ****     /* NMT_Heartbeat */
1362:../CANopen/stack/CANopen.c ****     if (CO_GET_CNT(NMT) == 1) {
1363:../CANopen/stack/CANopen.c ****         reset = CO_NMT_process(co->NMT,
 1842              	 .loc 4 1363 0
 1843 0160 FB68     	 ldr r3,[r7,#12]
 1844 0162 1A69     	 ldr r2,[r3,#16]
 1845 0164 07F11103 	 add r3,r7,#17
 1846 0168 1046     	 mov r0,r2
 1847 016a 1946     	 mov r1,r3
 1848 016c 7A68     	 ldr r2,[r7,#4]
 1849 016e 3B68     	 ldr r3,[r7]
 1850 0170 FFF7FEFF 	 bl CO_NMT_process
 1851 0174 0346     	 mov r3,r0
 1852 0176 87F82730 	 strb r3,[r7,#39]
1364:../CANopen/stack/CANopen.c ****                                &NMTstate,
1365:../CANopen/stack/CANopen.c ****                                timeDifference_us,
1366:../CANopen/stack/CANopen.c ****                                timerNext_us);
1367:../CANopen/stack/CANopen.c ****     }
1368:../CANopen/stack/CANopen.c ****     NMTisPreOrOperational = (NMTstate == CO_NMT_PRE_OPERATIONAL
 1853              	 .loc 4 1368 0
 1854 017a 7B7C     	 ldrb r3,[r7,#17]
1369:../CANopen/stack/CANopen.c ****                              || NMTstate == CO_NMT_OPERATIONAL);
 1855              	 .loc 4 1369 0
 1856 017c 5BB2     	 sxtb r3,r3
 1857 017e 7F2B     	 cmp r3,#127
 1858 0180 03D0     	 beq .L124
 1859              	 .loc 4 1369 0 is_stmt 0 discriminator 2
 1860 0182 7B7C     	 ldrb r3,[r7,#17]
 1861 0184 5BB2     	 sxtb r3,r3
 1862 0186 052B     	 cmp r3,#5
 1863 0188 01D1     	 bne .L125
 1864              	.L124:
 1865              	 .loc 4 1369 0 discriminator 3
 1866 018a 0123     	 movs r3,#1
 1867 018c 00E0     	 b .L126
 1868              	.L125:
 1869              	 .loc 4 1369 0 discriminator 4
 1870 018e 0023     	 movs r3,#0
 1871              	.L126:
1368:../CANopen/stack/CANopen.c ****                              || NMTstate == CO_NMT_OPERATIONAL);
 1872              	 .loc 4 1368 0 is_stmt 1
 1873 0190 BB61     	 str r3,[r7,#24]
 1874              	.LBB12:
1370:../CANopen/stack/CANopen.c **** 
1371:../CANopen/stack/CANopen.c ****     /* SDOserver */
1372:../CANopen/stack/CANopen.c ****     for (uint8_t i = 0; i < CO_GET_CNT(SDO_SRV); i++) {
 1875              	 .loc 4 1372 0
 1876 0192 0023     	 movs r3,#0
 1877 0194 FB77     	 strb r3,[r7,#31]
 1878 0196 0FE0     	 b .L127
 1879              	.L128:
1373:../CANopen/stack/CANopen.c ****         CO_SDOserver_process(&co->SDOserver[i],
 1880              	 .loc 4 1373 0 discriminator 3
 1881 0198 FB68     	 ldr r3,[r7,#12]
 1882 019a 5A6A     	 ldr r2,[r3,#36]
 1883 019c FB7F     	 ldrb r3,[r7,#31]
 1884 019e A821     	 movs r1,#168
 1885 01a0 01FB03F3 	 mul r3,r1,r3
 1886 01a4 1344     	 add r3,r3,r2
 1887 01a6 1846     	 mov r0,r3
 1888 01a8 B969     	 ldr r1,[r7,#24]
 1889 01aa 7A68     	 ldr r2,[r7,#4]
 1890 01ac 3B68     	 ldr r3,[r7]
 1891 01ae FFF7FEFF 	 bl CO_SDOserver_process
1372:../CANopen/stack/CANopen.c ****         CO_SDOserver_process(&co->SDOserver[i],
 1892              	 .loc 4 1372 0 discriminator 3
 1893 01b2 FB7F     	 ldrb r3,[r7,#31]
 1894 01b4 0133     	 adds r3,r3,#1
 1895 01b6 FB77     	 strb r3,[r7,#31]
 1896              	.L127:
1372:../CANopen/stack/CANopen.c ****         CO_SDOserver_process(&co->SDOserver[i],
 1897              	 .loc 4 1372 0 is_stmt 0 discriminator 1
 1898 01b8 FB7F     	 ldrb r3,[r7,#31]
 1899 01ba 002B     	 cmp r3,#0
 1900 01bc ECD0     	 beq .L128
 1901              	.LBE12:
1374:../CANopen/stack/CANopen.c ****                              NMTisPreOrOperational,
1375:../CANopen/stack/CANopen.c ****                              timeDifference_us,
1376:../CANopen/stack/CANopen.c ****                              timerNext_us);
1377:../CANopen/stack/CANopen.c ****     }
1378:../CANopen/stack/CANopen.c **** 
1379:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_HB_CONS) & CO_CONFIG_HB_CONS_ENABLE
1380:../CANopen/stack/CANopen.c ****     if (CO_GET_CNT(HB_CONS) == 1) {
1381:../CANopen/stack/CANopen.c ****         CO_HBconsumer_process(co->HBcons,
 1902              	 .loc 4 1381 0 is_stmt 1
 1903 01be FB68     	 ldr r3,[r7,#12]
 1904 01c0 5B69     	 ldr r3,[r3,#20]
 1905 01c2 1846     	 mov r0,r3
 1906 01c4 B969     	 ldr r1,[r7,#24]
 1907 01c6 7A68     	 ldr r2,[r7,#4]
 1908 01c8 3B68     	 ldr r3,[r7]
 1909 01ca FFF7FEFF 	 bl CO_HBconsumer_process
1382:../CANopen/stack/CANopen.c ****                               NMTisPreOrOperational,
1383:../CANopen/stack/CANopen.c ****                               timeDifference_us,
1384:../CANopen/stack/CANopen.c ****                               timerNext_us);
1385:../CANopen/stack/CANopen.c ****     }
1386:../CANopen/stack/CANopen.c **** #endif
1387:../CANopen/stack/CANopen.c **** 
1388:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_TIME) & CO_CONFIG_TIME_ENABLE
1389:../CANopen/stack/CANopen.c ****     if (CO_GET_CNT(TIME) == 1) {
1390:../CANopen/stack/CANopen.c ****         CO_TIME_process(co->TIME, NMTisPreOrOperational, timeDifference_us);
 1910              	 .loc 4 1390 0
 1911 01ce FB68     	 ldr r3,[r7,#12]
 1912 01d0 9B6A     	 ldr r3,[r3,#40]
 1913 01d2 1846     	 mov r0,r3
 1914 01d4 B969     	 ldr r1,[r7,#24]
 1915 01d6 7A68     	 ldr r2,[r7,#4]
 1916 01d8 FFF7FEFF 	 bl CO_TIME_process
1391:../CANopen/stack/CANopen.c ****     }
1392:../CANopen/stack/CANopen.c **** #endif
1393:../CANopen/stack/CANopen.c **** 
1394:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_GTW) & CO_CONFIG_GTW_ASCII
1395:../CANopen/stack/CANopen.c ****     if (CO_GET_CNT(GTWA) == 1) {
1396:../CANopen/stack/CANopen.c ****         CO_GTWA_process(co->gtwa,
1397:../CANopen/stack/CANopen.c ****                         enableGateway,
1398:../CANopen/stack/CANopen.c ****                         timeDifference_us,
1399:../CANopen/stack/CANopen.c ****                         timerNext_us);
1400:../CANopen/stack/CANopen.c ****     }
1401:../CANopen/stack/CANopen.c **** #endif
1402:../CANopen/stack/CANopen.c **** 
1403:../CANopen/stack/CANopen.c ****     return reset;
 1917              	 .loc 4 1403 0
 1918 01dc 97F82730 	 ldrb r3,[r7,#39]
 1919              	.L129:
1404:../CANopen/stack/CANopen.c **** }
 1920              	 .loc 4 1404 0 discriminator 1
 1921 01e0 1846     	 mov r0,r3
 1922 01e2 2837     	 adds r7,r7,#40
 1923              	.LCFI63:
 1924              	 .cfi_def_cfa_offset 32
 1925 01e4 BD46     	 mov sp,r7
 1926              	.LCFI64:
 1927              	 .cfi_def_cfa_register 13
 1928              	 
 1929 01e6 BDE8F087 	 pop {r4,r5,r6,r7,r8,r9,r10,pc}
 1930              	 .cfi_endproc
 1931              	.LFE48:
 1933 01ea 00BF     	 .section .text.CO_process_SYNC,"ax",%progbits
 1934              	 .align 2
 1935              	 .global CO_process_SYNC
 1936              	 .thumb
 1937              	 .thumb_func
 1939              	CO_process_SYNC:
 1940              	.LFB49:
1405:../CANopen/stack/CANopen.c **** 
1406:../CANopen/stack/CANopen.c **** 
1407:../CANopen/stack/CANopen.c **** /******************************************************************************/
1408:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_SYNC) & CO_CONFIG_SYNC_ENABLE
1409:../CANopen/stack/CANopen.c **** bool_t CO_process_SYNC(CO_t *co,
1410:../CANopen/stack/CANopen.c ****                        uint32_t timeDifference_us,
1411:../CANopen/stack/CANopen.c ****                        uint32_t *timerNext_us)
1412:../CANopen/stack/CANopen.c **** {
 1941              	 .loc 4 1412 0
 1942              	 .cfi_startproc
 1943              	 
 1944              	 
 1945 0000 80B5     	 push {r7,lr}
 1946              	.LCFI65:
 1947              	 .cfi_def_cfa_offset 8
 1948              	 .cfi_offset 7,-8
 1949              	 .cfi_offset 14,-4
 1950 0002 88B0     	 sub sp,sp,#32
 1951              	.LCFI66:
 1952              	 .cfi_def_cfa_offset 40
 1953 0004 00AF     	 add r7,sp,#0
 1954              	.LCFI67:
 1955              	 .cfi_def_cfa_register 7
 1956 0006 F860     	 str r0,[r7,#12]
 1957 0008 B960     	 str r1,[r7,#8]
 1958 000a 7A60     	 str r2,[r7,#4]
1413:../CANopen/stack/CANopen.c ****     bool_t syncWas = false;
 1959              	 .loc 4 1413 0
 1960 000c 0023     	 movs r3,#0
 1961 000e FB61     	 str r3,[r7,#28]
1414:../CANopen/stack/CANopen.c **** 
1415:../CANopen/stack/CANopen.c ****     if (!co->nodeIdUnconfigured && CO_GET_CNT(SYNC) == 1) {
 1962              	 .loc 4 1415 0
 1963 0010 FB68     	 ldr r3,[r7,#12]
 1964 0012 1B68     	 ldr r3,[r3]
 1965 0014 002B     	 cmp r3,#0
 1966 0016 2CD1     	 bne .L132
 1967              	.LBB13:
1416:../CANopen/stack/CANopen.c ****         CO_NMT_internalState_t NMTstate = CO_NMT_getInternalState(co->NMT);
 1968              	 .loc 4 1416 0
 1969 0018 FB68     	 ldr r3,[r7,#12]
 1970 001a 1B69     	 ldr r3,[r3,#16]
 1971 001c 1846     	 mov r0,r3
 1972 001e FFF7FEFF 	 bl CO_NMT_getInternalState
 1973 0022 0346     	 mov r3,r0
 1974 0024 FB76     	 strb r3,[r7,#27]
1417:../CANopen/stack/CANopen.c ****         bool_t NMTisPreOrOperational = (NMTstate == CO_NMT_PRE_OPERATIONAL
1418:../CANopen/stack/CANopen.c ****                                         || NMTstate == CO_NMT_OPERATIONAL);
 1975              	 .loc 4 1418 0
 1976 0026 97F91B30 	 ldrsb r3,[r7,#27]
 1977 002a 7F2B     	 cmp r3,#127
 1978 002c 03D0     	 beq .L133
 1979              	 .loc 4 1418 0 is_stmt 0 discriminator 2
 1980 002e 97F91B30 	 ldrsb r3,[r7,#27]
 1981 0032 052B     	 cmp r3,#5
 1982 0034 01D1     	 bne .L134
 1983              	.L133:
 1984              	 .loc 4 1418 0 discriminator 3
 1985 0036 0123     	 movs r3,#1
 1986 0038 00E0     	 b .L135
 1987              	.L134:
 1988              	 .loc 4 1418 0 discriminator 4
 1989 003a 0023     	 movs r3,#0
 1990              	.L135:
1417:../CANopen/stack/CANopen.c ****         bool_t NMTisPreOrOperational = (NMTstate == CO_NMT_PRE_OPERATIONAL
 1991              	 .loc 4 1417 0 is_stmt 1
 1992 003c 7B61     	 str r3,[r7,#20]
1419:../CANopen/stack/CANopen.c **** 
1420:../CANopen/stack/CANopen.c ****         CO_SYNC_status_t sync_process = CO_SYNC_process(co->SYNC,
 1993              	 .loc 4 1420 0
 1994 003e FB68     	 ldr r3,[r7,#12]
 1995 0040 DB6A     	 ldr r3,[r3,#44]
 1996 0042 1846     	 mov r0,r3
 1997 0044 7969     	 ldr r1,[r7,#20]
 1998 0046 BA68     	 ldr r2,[r7,#8]
 1999 0048 7B68     	 ldr r3,[r7,#4]
 2000 004a FFF7FEFF 	 bl CO_SYNC_process
 2001 004e 0346     	 mov r3,r0
 2002 0050 FB74     	 strb r3,[r7,#19]
1421:../CANopen/stack/CANopen.c ****                                                         NMTisPreOrOperational,
1422:../CANopen/stack/CANopen.c ****                                                         timeDifference_us,
1423:../CANopen/stack/CANopen.c ****                                                         timerNext_us);
1424:../CANopen/stack/CANopen.c **** 
1425:../CANopen/stack/CANopen.c ****         switch (sync_process) {
 2003              	 .loc 4 1425 0
 2004 0052 FB7C     	 ldrb r3,[r7,#19]
 2005 0054 012B     	 cmp r3,#1
 2006 0056 03D0     	 beq .L136
 2007 0058 022B     	 cmp r3,#2
 2008 005a 04D0     	 beq .L137
 2009 005c 002B     	 cmp r3,#0
1426:../CANopen/stack/CANopen.c ****             case CO_SYNC_NONE:
1427:../CANopen/stack/CANopen.c ****                 break;
 2010              	 .loc 4 1427 0
 2011 005e 08E0     	 b .L132
 2012              	.L136:
1428:../CANopen/stack/CANopen.c ****             case CO_SYNC_RX_TX:
1429:../CANopen/stack/CANopen.c ****                 syncWas = true;
 2013              	 .loc 4 1429 0
 2014 0060 0123     	 movs r3,#1
 2015 0062 FB61     	 str r3,[r7,#28]
1430:../CANopen/stack/CANopen.c ****                 break;
 2016              	 .loc 4 1430 0
 2017 0064 05E0     	 b .L132
 2018              	.L137:
1431:../CANopen/stack/CANopen.c ****             case CO_SYNC_PASSED_WINDOW:
1432:../CANopen/stack/CANopen.c ****                 CO_CANclearPendingSyncPDOs(co->CANmodule);
 2019              	 .loc 4 1432 0
 2020 0066 FB68     	 ldr r3,[r7,#12]
 2021 0068 5B68     	 ldr r3,[r3,#4]
 2022 006a 1846     	 mov r0,r3
 2023 006c FFF7FEFF 	 bl CO_CANclearPendingSyncPDOs
1433:../CANopen/stack/CANopen.c ****                 break;
 2024              	 .loc 4 1433 0
 2025 0070 00BF     	 nop
 2026              	.L132:
 2027              	.LBE13:
1434:../CANopen/stack/CANopen.c ****         }
1435:../CANopen/stack/CANopen.c ****     }
1436:../CANopen/stack/CANopen.c **** 
1437:../CANopen/stack/CANopen.c ****     return syncWas;
 2028              	 .loc 4 1437 0
 2029 0072 FB69     	 ldr r3,[r7,#28]
1438:../CANopen/stack/CANopen.c **** }
 2030              	 .loc 4 1438 0
 2031 0074 1846     	 mov r0,r3
 2032 0076 2037     	 adds r7,r7,#32
 2033              	.LCFI68:
 2034              	 .cfi_def_cfa_offset 8
 2035 0078 BD46     	 mov sp,r7
 2036              	.LCFI69:
 2037              	 .cfi_def_cfa_register 13
 2038              	 
 2039 007a 80BD     	 pop {r7,pc}
 2040              	 .cfi_endproc
 2041              	.LFE49:
 2043              	 .section .text.CO_process_RPDO,"ax",%progbits
 2044              	 .align 2
 2045              	 .global CO_process_RPDO
 2046              	 .thumb
 2047              	 .thumb_func
 2049              	CO_process_RPDO:
 2050              	.LFB50:
1439:../CANopen/stack/CANopen.c **** #endif
1440:../CANopen/stack/CANopen.c **** 
1441:../CANopen/stack/CANopen.c **** 
1442:../CANopen/stack/CANopen.c **** /******************************************************************************/
1443:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_RPDO_ENABLE
1444:../CANopen/stack/CANopen.c **** void CO_process_RPDO(CO_t *co,
1445:../CANopen/stack/CANopen.c ****                      bool_t syncWas,
1446:../CANopen/stack/CANopen.c ****                      uint32_t timeDifference_us,
1447:../CANopen/stack/CANopen.c ****                      uint32_t *timerNext_us)
1448:../CANopen/stack/CANopen.c **** {
 2051              	 .loc 4 1448 0
 2052              	 .cfi_startproc
 2053              	 
 2054              	 
 2055 0000 80B5     	 push {r7,lr}
 2056              	.LCFI70:
 2057              	 .cfi_def_cfa_offset 8
 2058              	 .cfi_offset 7,-8
 2059              	 .cfi_offset 14,-4
 2060 0002 88B0     	 sub sp,sp,#32
 2061              	.LCFI71:
 2062              	 .cfi_def_cfa_offset 40
 2063 0004 02AF     	 add r7,sp,#8
 2064              	.LCFI72:
 2065              	 .cfi_def_cfa 7,32
 2066 0006 F860     	 str r0,[r7,#12]
 2067 0008 B960     	 str r1,[r7,#8]
 2068 000a 7A60     	 str r2,[r7,#4]
 2069 000c 3B60     	 str r3,[r7]
1449:../CANopen/stack/CANopen.c ****     (void) timeDifference_us; (void) timerNext_us;
1450:../CANopen/stack/CANopen.c ****     if (co->nodeIdUnconfigured) {
 2070              	 .loc 4 1450 0
 2071 000e FB68     	 ldr r3,[r7,#12]
 2072 0010 1B68     	 ldr r3,[r3]
 2073 0012 002B     	 cmp r3,#0
 2074 0014 00D0     	 beq .L141
1451:../CANopen/stack/CANopen.c ****         return;
 2075              	 .loc 4 1451 0
 2076 0016 28E0     	 b .L140
 2077              	.L141:
1452:../CANopen/stack/CANopen.c ****     }
1453:../CANopen/stack/CANopen.c **** 
1454:../CANopen/stack/CANopen.c ****     bool_t NMTisOperational =
1455:../CANopen/stack/CANopen.c ****         CO_NMT_getInternalState(co->NMT) == CO_NMT_OPERATIONAL;
 2078              	 .loc 4 1455 0
 2079 0018 FB68     	 ldr r3,[r7,#12]
 2080 001a 1B69     	 ldr r3,[r3,#16]
 2081 001c 1846     	 mov r0,r3
 2082 001e FFF7FEFF 	 bl CO_NMT_getInternalState
 2083 0022 0346     	 mov r3,r0
 2084 0024 052B     	 cmp r3,#5
 2085 0026 0CBF     	 ite eq
 2086 0028 0123     	 moveq r3,#1
 2087 002a 0023     	 movne r3,#0
 2088 002c DBB2     	 uxtb r3,r3
1454:../CANopen/stack/CANopen.c ****         CO_NMT_getInternalState(co->NMT) == CO_NMT_OPERATIONAL;
 2089              	 .loc 4 1454 0
 2090 002e 3B61     	 str r3,[r7,#16]
 2091              	.LBB14:
1456:../CANopen/stack/CANopen.c **** 
1457:../CANopen/stack/CANopen.c ****     for (int16_t i = 0; i < CO_GET_CNT(RPDO); i++) {
 2092              	 .loc 4 1457 0
 2093 0030 0023     	 movs r3,#0
 2094 0032 FB82     	 strh r3,[r7,#22]
 2095 0034 15E0     	 b .L143
 2096              	.L144:
1458:../CANopen/stack/CANopen.c ****         CO_RPDO_process(&co->RPDO[i],
 2097              	 .loc 4 1458 0 discriminator 3
 2098 0036 FB68     	 ldr r3,[r7,#12]
 2099 0038 1A6B     	 ldr r2,[r3,#48]
 2100 003a B7F91630 	 ldrsh r3,[r7,#22]
 2101 003e 4FF4BA71 	 mov r1,#372
 2102 0042 01FB03F3 	 mul r3,r1,r3
 2103 0046 1A44     	 add r2,r2,r3
 2104 0048 BB68     	 ldr r3,[r7,#8]
 2105 004a 0093     	 str r3,[sp]
 2106 004c 1046     	 mov r0,r2
 2107 004e 7968     	 ldr r1,[r7,#4]
 2108 0050 3A68     	 ldr r2,[r7]
 2109 0052 3B69     	 ldr r3,[r7,#16]
 2110 0054 FFF7FEFF 	 bl CO_RPDO_process
1457:../CANopen/stack/CANopen.c ****         CO_RPDO_process(&co->RPDO[i],
 2111              	 .loc 4 1457 0 discriminator 3
 2112 0058 FB8A     	 ldrh r3,[r7,#22]
 2113 005a 9BB2     	 uxth r3,r3
 2114 005c 0133     	 adds r3,r3,#1
 2115 005e 9BB2     	 uxth r3,r3
 2116 0060 FB82     	 strh r3,[r7,#22]
 2117              	.L143:
1457:../CANopen/stack/CANopen.c ****         CO_RPDO_process(&co->RPDO[i],
 2118              	 .loc 4 1457 0 is_stmt 0 discriminator 1
 2119 0062 B7F91630 	 ldrsh r3,[r7,#22]
 2120 0066 002B     	 cmp r3,#0
 2121 0068 E5DB     	 blt .L144
 2122              	.L140:
 2123              	.LBE14:
1459:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_RPDO_TIMERS_ENABLE
1460:../CANopen/stack/CANopen.c ****                         timeDifference_us,
1461:../CANopen/stack/CANopen.c ****                         timerNext_us,
1462:../CANopen/stack/CANopen.c **** #endif
1463:../CANopen/stack/CANopen.c ****                         NMTisOperational,
1464:../CANopen/stack/CANopen.c ****                         syncWas);
1465:../CANopen/stack/CANopen.c ****     }
1466:../CANopen/stack/CANopen.c **** }
 2124              	 .loc 4 1466 0 is_stmt 1
 2125 006a 1837     	 adds r7,r7,#24
 2126              	.LCFI73:
 2127              	 .cfi_def_cfa_offset 8
 2128 006c BD46     	 mov sp,r7
 2129              	.LCFI74:
 2130              	 .cfi_def_cfa_register 13
 2131              	 
 2132 006e 80BD     	 pop {r7,pc}
 2133              	 .cfi_endproc
 2134              	.LFE50:
 2136              	 .section .text.CO_process_TPDO,"ax",%progbits
 2137              	 .align 2
 2138              	 .global CO_process_TPDO
 2139              	 .thumb
 2140              	 .thumb_func
 2142              	CO_process_TPDO:
 2143              	.LFB51:
1467:../CANopen/stack/CANopen.c **** #endif
1468:../CANopen/stack/CANopen.c **** 
1469:../CANopen/stack/CANopen.c **** 
1470:../CANopen/stack/CANopen.c **** /******************************************************************************/
1471:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_TPDO_ENABLE
1472:../CANopen/stack/CANopen.c **** void CO_process_TPDO(CO_t *co,
1473:../CANopen/stack/CANopen.c ****                      bool_t syncWas,
1474:../CANopen/stack/CANopen.c ****                      uint32_t timeDifference_us,
1475:../CANopen/stack/CANopen.c ****                      uint32_t *timerNext_us)
1476:../CANopen/stack/CANopen.c **** {
 2144              	 .loc 4 1476 0
 2145              	 .cfi_startproc
 2146              	 
 2147              	 
 2148 0000 80B5     	 push {r7,lr}
 2149              	.LCFI75:
 2150              	 .cfi_def_cfa_offset 8
 2151              	 .cfi_offset 7,-8
 2152              	 .cfi_offset 14,-4
 2153 0002 88B0     	 sub sp,sp,#32
 2154              	.LCFI76:
 2155              	 .cfi_def_cfa_offset 40
 2156 0004 02AF     	 add r7,sp,#8
 2157              	.LCFI77:
 2158              	 .cfi_def_cfa 7,32
 2159 0006 F860     	 str r0,[r7,#12]
 2160 0008 B960     	 str r1,[r7,#8]
 2161 000a 7A60     	 str r2,[r7,#4]
 2162 000c 3B60     	 str r3,[r7]
1477:../CANopen/stack/CANopen.c ****     (void) timeDifference_us; (void) timerNext_us;
1478:../CANopen/stack/CANopen.c ****     if (co->nodeIdUnconfigured) {
 2163              	 .loc 4 1478 0
 2164 000e FB68     	 ldr r3,[r7,#12]
 2165 0010 1B68     	 ldr r3,[r3]
 2166 0012 002B     	 cmp r3,#0
 2167 0014 00D0     	 beq .L146
1479:../CANopen/stack/CANopen.c ****         return;
 2168              	 .loc 4 1479 0
 2169 0016 28E0     	 b .L145
 2170              	.L146:
1480:../CANopen/stack/CANopen.c ****     }
1481:../CANopen/stack/CANopen.c **** 
1482:../CANopen/stack/CANopen.c ****     bool_t NMTisOperational =
1483:../CANopen/stack/CANopen.c ****         CO_NMT_getInternalState(co->NMT) == CO_NMT_OPERATIONAL;
 2171              	 .loc 4 1483 0
 2172 0018 FB68     	 ldr r3,[r7,#12]
 2173 001a 1B69     	 ldr r3,[r3,#16]
 2174 001c 1846     	 mov r0,r3
 2175 001e FFF7FEFF 	 bl CO_NMT_getInternalState
 2176 0022 0346     	 mov r3,r0
 2177 0024 052B     	 cmp r3,#5
 2178 0026 0CBF     	 ite eq
 2179 0028 0123     	 moveq r3,#1
 2180 002a 0023     	 movne r3,#0
 2181 002c DBB2     	 uxtb r3,r3
1482:../CANopen/stack/CANopen.c ****         CO_NMT_getInternalState(co->NMT) == CO_NMT_OPERATIONAL;
 2182              	 .loc 4 1482 0
 2183 002e 3B61     	 str r3,[r7,#16]
 2184              	.LBB15:
1484:../CANopen/stack/CANopen.c **** 
1485:../CANopen/stack/CANopen.c ****     for (int16_t i = 0; i < CO_GET_CNT(TPDO); i++) {
 2185              	 .loc 4 1485 0
 2186 0030 0023     	 movs r3,#0
 2187 0032 FB82     	 strh r3,[r7,#22]
 2188 0034 15E0     	 b .L148
 2189              	.L149:
1486:../CANopen/stack/CANopen.c ****         CO_TPDO_process(&co->TPDO[i],
 2190              	 .loc 4 1486 0 discriminator 3
 2191 0036 FB68     	 ldr r3,[r7,#12]
 2192 0038 5A6B     	 ldr r2,[r3,#52]
 2193 003a B7F91630 	 ldrsh r3,[r7,#22]
 2194 003e 4FF4B671 	 mov r1,#364
 2195 0042 01FB03F3 	 mul r3,r1,r3
 2196 0046 1A44     	 add r2,r2,r3
 2197 0048 BB68     	 ldr r3,[r7,#8]
 2198 004a 0093     	 str r3,[sp]
 2199 004c 1046     	 mov r0,r2
 2200 004e 7968     	 ldr r1,[r7,#4]
 2201 0050 3A68     	 ldr r2,[r7]
 2202 0052 3B69     	 ldr r3,[r7,#16]
 2203 0054 FFF7FEFF 	 bl CO_TPDO_process
1485:../CANopen/stack/CANopen.c ****         CO_TPDO_process(&co->TPDO[i],
 2204              	 .loc 4 1485 0 discriminator 3
 2205 0058 FB8A     	 ldrh r3,[r7,#22]
 2206 005a 9BB2     	 uxth r3,r3
 2207 005c 0133     	 adds r3,r3,#1
 2208 005e 9BB2     	 uxth r3,r3
 2209 0060 FB82     	 strh r3,[r7,#22]
 2210              	.L148:
1485:../CANopen/stack/CANopen.c ****         CO_TPDO_process(&co->TPDO[i],
 2211              	 .loc 4 1485 0 is_stmt 0 discriminator 1
 2212 0062 B7F91630 	 ldrsh r3,[r7,#22]
 2213 0066 002B     	 cmp r3,#0
 2214 0068 E5DD     	 ble .L149
 2215              	.L145:
 2216              	.LBE15:
1487:../CANopen/stack/CANopen.c **** #if (CO_CONFIG_PDO) & CO_CONFIG_TPDO_TIMERS_ENABLE
1488:../CANopen/stack/CANopen.c ****                         timeDifference_us,
1489:../CANopen/stack/CANopen.c ****                         timerNext_us,
1490:../CANopen/stack/CANopen.c **** #endif
1491:../CANopen/stack/CANopen.c ****                         NMTisOperational,
1492:../CANopen/stack/CANopen.c ****                         syncWas);
1493:../CANopen/stack/CANopen.c ****     }
1494:../CANopen/stack/CANopen.c **** }
 2217              	 .loc 4 1494 0 is_stmt 1
 2218 006a 1837     	 adds r7,r7,#24
 2219              	.LCFI78:
 2220              	 .cfi_def_cfa_offset 8
 2221 006c BD46     	 mov sp,r7
 2222              	.LCFI79:
 2223              	 .cfi_def_cfa_register 13
 2224              	 
 2225 006e 80BD     	 pop {r7,pc}
 2226              	 .cfi_endproc
 2227              	.LFE51:
 2229              	 .text
 2230              	.Letext0:
 2231              	 .file 5 "d:\\programs\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 2232              	 .file 6 "d:\\programs\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 2233              	 .file 7 "D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/driver/CO_driver_target.h"
 2234              	 .file 8 "../CANopen/stack/301/CO_driver.h"
 2235              	 .file 9 "../CANopen/stack/301/CO_ODinterface.h"
 2236              	 .file 10 "../CANopen/stack/301/CO_HBconsumer.h"
 2237              	 .file 11 "../CANopen/stack/301/CO_SDOserver.h"
 2238              	 .file 12 "../CANopen/stack/301/CO_SYNC.h"
 2239              	 .file 13 "../CANopen/stack/301/CO_PDO.h"
 2240              	 .file 14 "../CANopen/stack/301/CO_TIME.h"
 2241              	 .file 15 "../CANopen/stack/303/CO_LEDs.h"
 2242              	 .file 16 "D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/305/CO_LSS.h"
 2243              	 .file 17 "../CANopen/stack/CANopen.h"
 2244              	 .file 18 "D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/driver/OD.h"
DEFINED SYMBOLS
                            *ABS*:00000000 CANopen.c
    {standard input}:20     .text.CO_isError:00000000 $t
    {standard input}:24     .text.CO_isError:00000000 CO_isError
    {standard input}:98     .text.CO_getErrorRegister:00000000 $t
    {standard input}:102    .text.CO_getErrorRegister:00000000 CO_getErrorRegister
    {standard input}:156    .text.CO_NMT_getInternalState:00000000 $t
    {standard input}:160    .text.CO_NMT_getInternalState:00000000 CO_NMT_getInternalState
    {standard input}:212    .rodata.CO_LSS_bitTimingTableLookup:00000000 $d
    {standard input}:215    .rodata.CO_LSS_bitTimingTableLookup:00000000 CO_LSS_bitTimingTableLookup
    {standard input}:227    .text.CO_LSSslave_getState:00000000 $t
    {standard input}:231    .text.CO_LSSslave_getState:00000000 CO_LSSslave_getState
    {standard input}:280    .text.CO_new:00000000 $t
    {standard input}:285    .text.CO_new:00000000 CO_new
    {standard input}:697    .text.CO_delete:00000000 CO_delete
    {standard input}:692    .text.CO_delete:00000000 $t
    {standard input}:819    .text.CO_isLSSslaveEnabled:00000000 $t
    {standard input}:824    .text.CO_isLSSslaveEnabled:00000000 CO_isLSSslaveEnabled
    {standard input}:868    .text.CO_CANinit:00000000 $t
    {standard input}:873    .text.CO_CANinit:00000000 CO_CANinit
    {standard input}:946    .text.CO_LSSinit:00000000 $t
    {standard input}:951    .text.CO_LSSinit:00000000 CO_LSSinit
    {standard input}:1022   .text.CO_CANopenInit:00000000 $t
    {standard input}:1027   .text.CO_CANopenInit:00000000 CO_CANopenInit
    {standard input}:1419   .text.CO_CANopenInit:0000028c $d
    {standard input}:1424   .text.CO_CANopenInitPDO:00000000 $t
    {standard input}:1429   .text.CO_CANopenInitPDO:00000000 CO_CANopenInitPDO
    {standard input}:1604   .text.CO_CANopenInitPDO:000000f8 $d
    {standard input}:1609   .text.CO_process:00000000 $t
    {standard input}:1614   .text.CO_process:00000000 CO_process
    {standard input}:1934   .text.CO_process_SYNC:00000000 $t
    {standard input}:1939   .text.CO_process_SYNC:00000000 CO_process_SYNC
    {standard input}:2044   .text.CO_process_RPDO:00000000 $t
    {standard input}:2049   .text.CO_process_RPDO:00000000 CO_process_RPDO
    {standard input}:2137   .text.CO_process_TPDO:00000000 $t
    {standard input}:2142   .text.CO_process_TPDO:00000000 CO_process_TPDO
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
calloc
CO_CANmodule_disable
free
CO_CANsetConfigurationMode
CO_CANmodule_init
CO_LSSslave_init
CO_LEDs_init
CO_EM_init
CO_NMT_init
CO_HBconsumer_init
CO_SDOserver_init
CO_TIME_init
CO_SYNC_init
OD
CO_TPDO_init
CO_CANmodule_process
CO_LSSslave_process
CO_LEDs_process
CO_EM_process
CO_NMT_process
CO_SDOserver_process
CO_HBconsumer_process
CO_TIME_process
CO_SYNC_process
CO_CANclearPendingSyncPDOs
CO_RPDO_process
CO_TPDO_process
