   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "CO_LSSslave.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .rodata.CO_LSS_bitTimingTableLookup,"a",%progbits
  20              	 .align 2
  23              	CO_LSS_bitTimingTableLookup:
  24 0000 E803     	 .short 1000
  25 0002 2003     	 .short 800
  26 0004 F401     	 .short 500
  27 0006 FA00     	 .short 250
  28 0008 7D00     	 .short 125
  29 000a 0000     	 .short 0
  30 000c 3200     	 .short 50
  31 000e 1400     	 .short 20
  32 0010 0A00     	 .short 10
  33 0012 0000     	 .short 0
  34              	 .section .text.CO_LSSslave_receive,"ax",%progbits
  35              	 .align 2
  36              	 .thumb
  37              	 .thumb_func
  39              	CO_LSSslave_receive:
  40              	.LFB7:
  41              	 .file 1 "../CANopen/stack/305/CO_LSSslave.c"
   1:../CANopen/stack/305/CO_LSSslave.c **** /*
   2:../CANopen/stack/305/CO_LSSslave.c ****  * CANopen LSS Slave protocol.
   3:../CANopen/stack/305/CO_LSSslave.c ****  *
   4:../CANopen/stack/305/CO_LSSslave.c ****  * @file        CO_LSSslave.c
   5:../CANopen/stack/305/CO_LSSslave.c ****  * @ingroup     CO_LSS
   6:../CANopen/stack/305/CO_LSSslave.c ****  * @author      Martin Wagner
   7:../CANopen/stack/305/CO_LSSslave.c ****  * @author      Janez Paternoster
   8:../CANopen/stack/305/CO_LSSslave.c ****  * @copyright   2017 - 2020 Neuberger Gebaeudeautomation GmbH
   9:../CANopen/stack/305/CO_LSSslave.c ****  *
  10:../CANopen/stack/305/CO_LSSslave.c ****  *
  11:../CANopen/stack/305/CO_LSSslave.c ****  * This file is part of CANopenNode, an opensource CANopen Stack.
  12:../CANopen/stack/305/CO_LSSslave.c ****  * Project home page is <https://github.com/CANopenNode/CANopenNode>.
  13:../CANopen/stack/305/CO_LSSslave.c ****  * For more information on CANopen see <http://www.can-cia.org/>.
  14:../CANopen/stack/305/CO_LSSslave.c ****  *
  15:../CANopen/stack/305/CO_LSSslave.c ****  * Licensed under the Apache License, Version 2.0 (the "License");
  16:../CANopen/stack/305/CO_LSSslave.c ****  * you may not use this file except in compliance with the License.
  17:../CANopen/stack/305/CO_LSSslave.c ****  * You may obtain a copy of the License at
  18:../CANopen/stack/305/CO_LSSslave.c ****  *
  19:../CANopen/stack/305/CO_LSSslave.c ****  *     http://www.apache.org/licenses/LICENSE-2.0
  20:../CANopen/stack/305/CO_LSSslave.c ****  *
  21:../CANopen/stack/305/CO_LSSslave.c ****  * Unless required by applicable law or agreed to in writing, software
  22:../CANopen/stack/305/CO_LSSslave.c ****  * distributed under the License is distributed on an "AS IS" BASIS,
  23:../CANopen/stack/305/CO_LSSslave.c ****  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  24:../CANopen/stack/305/CO_LSSslave.c ****  * See the License for the specific language governing permissions and
  25:../CANopen/stack/305/CO_LSSslave.c ****  * limitations under the License.
  26:../CANopen/stack/305/CO_LSSslave.c ****  */
  27:../CANopen/stack/305/CO_LSSslave.c **** 
  28:../CANopen/stack/305/CO_LSSslave.c **** #include "305/CO_LSSslave.h"
  29:../CANopen/stack/305/CO_LSSslave.c **** 
  30:../CANopen/stack/305/CO_LSSslave.c **** #if (CO_CONFIG_LSS) & CO_CONFIG_LSS_SLAVE
  31:../CANopen/stack/305/CO_LSSslave.c **** 
  32:../CANopen/stack/305/CO_LSSslave.c **** #include <string.h>
  33:../CANopen/stack/305/CO_LSSslave.c **** 
  34:../CANopen/stack/305/CO_LSSslave.c **** /* 'bit' must be unsigned or additional range check must be added: bit>=CO_LSS_FASTSCAN_BIT0 */
  35:../CANopen/stack/305/CO_LSSslave.c **** #define CO_LSS_FASTSCAN_BITCHECK_VALID(bit) (bit<=CO_LSS_FASTSCAN_BIT31 || bit==CO_LSS_FASTSCAN_CON
  36:../CANopen/stack/305/CO_LSSslave.c **** /* 'index' must be unsigned or additional range check must be added: index>=CO_LSS_FASTSCAN_VENDOR_
  37:../CANopen/stack/305/CO_LSSslave.c **** #define CO_LSS_FASTSCAN_LSS_SUB_NEXT_VALID(index) (index<=CO_LSS_FASTSCAN_SERIAL)
  38:../CANopen/stack/305/CO_LSSslave.c **** /* 'index' must be unsigned or additional range check must be added: index>=CO_LSS_BIT_TIMING_1000 
  39:../CANopen/stack/305/CO_LSSslave.c **** #define CO_LSS_BIT_TIMING_VALID(index) (index != 5 && index <= CO_LSS_BIT_TIMING_AUTO)
  40:../CANopen/stack/305/CO_LSSslave.c **** 
  41:../CANopen/stack/305/CO_LSSslave.c **** #if CO_LSS_FASTSCAN_BIT0!=0 || CO_LSS_FASTSCAN_VENDOR_ID!=0 || CO_LSS_BIT_TIMING_1000!=0
  42:../CANopen/stack/305/CO_LSSslave.c **** #error Inconsistency in LSS macros
  43:../CANopen/stack/305/CO_LSSslave.c **** #endif
  44:../CANopen/stack/305/CO_LSSslave.c **** 
  45:../CANopen/stack/305/CO_LSSslave.c **** /*
  46:../CANopen/stack/305/CO_LSSslave.c ****  * Read received message from CAN module.
  47:../CANopen/stack/305/CO_LSSslave.c ****  *
  48:../CANopen/stack/305/CO_LSSslave.c ****  * Function will be called (by CAN receive interrupt) every time, when CAN
  49:../CANopen/stack/305/CO_LSSslave.c ****  * message with correct identifier will be received. For more information and
  50:../CANopen/stack/305/CO_LSSslave.c ****  * description of parameters see file CO_driver.h.
  51:../CANopen/stack/305/CO_LSSslave.c ****  */
  52:../CANopen/stack/305/CO_LSSslave.c **** static void CO_LSSslave_receive(void *object, void *msg)
  53:../CANopen/stack/305/CO_LSSslave.c **** {
  42              	 .loc 1 53 0
  43              	 .cfi_startproc
  44              	 
  45              	 
  46 0000 80B5     	 push {r7,lr}
  47              	.LCFI0:
  48              	 .cfi_def_cfa_offset 8
  49              	 .cfi_offset 7,-8
  50              	 .cfi_offset 14,-4
  51 0002 90B0     	 sub sp,sp,#64
  52              	.LCFI1:
  53              	 .cfi_def_cfa_offset 72
  54 0004 00AF     	 add r7,sp,#0
  55              	.LCFI2:
  56              	 .cfi_def_cfa_register 7
  57 0006 7860     	 str r0,[r7,#4]
  58 0008 3960     	 str r1,[r7]
  54:../CANopen/stack/305/CO_LSSslave.c ****     CO_LSSslave_t *LSSslave = (CO_LSSslave_t*)object;
  59              	 .loc 1 54 0
  60 000a 7B68     	 ldr r3,[r7,#4]
  61 000c 7B63     	 str r3,[r7,#52]
  55:../CANopen/stack/305/CO_LSSslave.c ****     uint8_t DLC = CO_CANrxMsg_readDLC(msg);
  62              	 .loc 1 55 0
  63 000e 3B68     	 ldr r3,[r7]
  64 0010 1B79     	 ldrb r3,[r3,#4]
  65 0012 87F83330 	 strb r3,[r7,#51]
  56:../CANopen/stack/305/CO_LSSslave.c **** 
  57:../CANopen/stack/305/CO_LSSslave.c ****     if(DLC == 8U && !CO_FLAG_READ(LSSslave->sendResponse)) {
  66              	 .loc 1 57 0
  67 0016 97F83330 	 ldrb r3,[r7,#51]
  68 001a 082B     	 cmp r3,#8
  69 001c 40F06481 	 bne .L1
  70              	 .loc 1 57 0 is_stmt 0 discriminator 1
  71 0020 7B6B     	 ldr r3,[r7,#52]
  72 0022 5B6C     	 ldr r3,[r3,#68]
  73 0024 002B     	 cmp r3,#0
  74 0026 40F05F81 	 bne .L1
  75              	.LBB2:
  58:../CANopen/stack/305/CO_LSSslave.c ****         bool_t request_LSSslave_process = false;
  76              	 .loc 1 58 0 is_stmt 1
  77 002a 0023     	 movs r3,#0
  78 002c FB63     	 str r3,[r7,#60]
  59:../CANopen/stack/305/CO_LSSslave.c ****         uint8_t *data = CO_CANrxMsg_readData(msg);
  79              	 .loc 1 59 0
  80 002e 3B68     	 ldr r3,[r7]
  81 0030 0533     	 adds r3,r3,#5
  82 0032 FB62     	 str r3,[r7,#44]
  60:../CANopen/stack/305/CO_LSSslave.c ****         CO_LSS_cs_t cs = (CO_LSS_cs_t) data[0];
  83              	 .loc 1 60 0
  84 0034 FB6A     	 ldr r3,[r7,#44]
  85 0036 1B78     	 ldrb r3,[r3]
  86 0038 87F82B30 	 strb r3,[r7,#43]
  61:../CANopen/stack/305/CO_LSSslave.c **** 
  62:../CANopen/stack/305/CO_LSSslave.c ****         if (cs == CO_LSS_SWITCH_STATE_GLOBAL) {
  87              	 .loc 1 62 0
  88 003c 97F82B30 	 ldrb r3,[r7,#43]
  89 0040 042B     	 cmp r3,#4
  90 0042 2FD1     	 bne .L3
  91              	.LBB3:
  63:../CANopen/stack/305/CO_LSSslave.c ****             uint8_t mode = data[1];
  92              	 .loc 1 63 0
  93 0044 FB6A     	 ldr r3,[r7,#44]
  94 0046 5B78     	 ldrb r3,[r3,#1]
  95 0048 87F82A30 	 strb r3,[r7,#42]
  64:../CANopen/stack/305/CO_LSSslave.c **** 
  65:../CANopen/stack/305/CO_LSSslave.c ****             switch (mode) {
  96              	 .loc 1 65 0
  97 004c 97F82A30 	 ldrb r3,[r7,#42]
  98 0050 002B     	 cmp r3,#0
  99 0052 02D0     	 beq .L5
 100 0054 012B     	 cmp r3,#1
 101 0056 20D0     	 beq .L6
  66:../CANopen/stack/305/CO_LSSslave.c ****                 case CO_LSS_STATE_WAITING:
  67:../CANopen/stack/305/CO_LSSslave.c ****                     if (LSSslave->lssState == CO_LSS_STATE_CONFIGURATION &&
  68:../CANopen/stack/305/CO_LSSslave.c ****                         LSSslave->activeNodeID == CO_LSS_NODE_ID_ASSIGNMENT &&
  69:../CANopen/stack/305/CO_LSSslave.c ****                         *LSSslave->pendingNodeID != CO_LSS_NODE_ID_ASSIGNMENT)
  70:../CANopen/stack/305/CO_LSSslave.c ****                     {
  71:../CANopen/stack/305/CO_LSSslave.c ****                         /* Slave process function will request NMT Reset comm.*/
  72:../CANopen/stack/305/CO_LSSslave.c ****                         LSSslave->service = cs;
  73:../CANopen/stack/305/CO_LSSslave.c ****                         request_LSSslave_process = true;
  74:../CANopen/stack/305/CO_LSSslave.c ****                     }
  75:../CANopen/stack/305/CO_LSSslave.c ****                     LSSslave->lssState = CO_LSS_STATE_WAITING;
  76:../CANopen/stack/305/CO_LSSslave.c ****                     memset(&LSSslave->lssSelect, 0,
  77:../CANopen/stack/305/CO_LSSslave.c ****                            sizeof(LSSslave->lssSelect));
  78:../CANopen/stack/305/CO_LSSslave.c ****                     break;
  79:../CANopen/stack/305/CO_LSSslave.c ****                 case CO_LSS_STATE_CONFIGURATION:
  80:../CANopen/stack/305/CO_LSSslave.c ****                     LSSslave->lssState = CO_LSS_STATE_CONFIGURATION;
  81:../CANopen/stack/305/CO_LSSslave.c ****                     break;
  82:../CANopen/stack/305/CO_LSSslave.c ****                 default:
  83:../CANopen/stack/305/CO_LSSslave.c ****                     break;
 102              	 .loc 1 83 0
 103 0058 23E0     	 b .L8
 104              	.L5:
  67:../CANopen/stack/305/CO_LSSslave.c ****                         LSSslave->activeNodeID == CO_LSS_NODE_ID_ASSIGNMENT &&
 105              	 .loc 1 67 0
 106 005a 7B6B     	 ldr r3,[r7,#52]
 107 005c 1B7C     	 ldrb r3,[r3,#16]
 108 005e 012B     	 cmp r3,#1
 109 0060 10D1     	 bne .L7
  68:../CANopen/stack/305/CO_LSSslave.c ****                         *LSSslave->pendingNodeID != CO_LSS_NODE_ID_ASSIGNMENT)
 110              	 .loc 1 68 0 discriminator 1
 111 0062 7B6B     	 ldr r3,[r7,#52]
 112 0064 93F84030 	 ldrb r3,[r3,#64]
  67:../CANopen/stack/305/CO_LSSslave.c ****                         LSSslave->activeNodeID == CO_LSS_NODE_ID_ASSIGNMENT &&
 113              	 .loc 1 67 0 discriminator 1
 114 0068 FF2B     	 cmp r3,#255
 115 006a 0BD1     	 bne .L7
  69:../CANopen/stack/305/CO_LSSslave.c ****                     {
 116              	 .loc 1 69 0
 117 006c 7B6B     	 ldr r3,[r7,#52]
 118 006e DB6B     	 ldr r3,[r3,#60]
 119 0070 1B78     	 ldrb r3,[r3]
  68:../CANopen/stack/305/CO_LSSslave.c ****                         *LSSslave->pendingNodeID != CO_LSS_NODE_ID_ASSIGNMENT)
 120              	 .loc 1 68 0
 121 0072 FF2B     	 cmp r3,#255
 122 0074 06D0     	 beq .L7
  72:../CANopen/stack/305/CO_LSSslave.c ****                         request_LSSslave_process = true;
 123              	 .loc 1 72 0
 124 0076 7B6B     	 ldr r3,[r7,#52]
 125 0078 97F82B20 	 ldrb r2,[r7,#43]
 126 007c 83F84820 	 strb r2,[r3,#72]
  73:../CANopen/stack/305/CO_LSSslave.c ****                     }
 127              	 .loc 1 73 0
 128 0080 0123     	 movs r3,#1
 129 0082 FB63     	 str r3,[r7,#60]
 130              	.L7:
  75:../CANopen/stack/305/CO_LSSslave.c ****                     memset(&LSSslave->lssSelect, 0,
 131              	 .loc 1 75 0
 132 0084 7B6B     	 ldr r3,[r7,#52]
 133 0086 0022     	 movs r2,#0
 134 0088 1A74     	 strb r2,[r3,#16]
  76:../CANopen/stack/305/CO_LSSslave.c ****                            sizeof(LSSslave->lssSelect));
 135              	 .loc 1 76 0
 136 008a 7B6B     	 ldr r3,[r7,#52]
 137 008c 1433     	 adds r3,r3,#20
 138 008e 1846     	 mov r0,r3
 139 0090 0021     	 movs r1,#0
 140 0092 1022     	 movs r2,#16
 141 0094 FFF7FEFF 	 bl memset
  78:../CANopen/stack/305/CO_LSSslave.c ****                 case CO_LSS_STATE_CONFIGURATION:
 142              	 .loc 1 78 0
 143 0098 03E0     	 b .L8
 144              	.L6:
  80:../CANopen/stack/305/CO_LSSslave.c ****                     break;
 145              	 .loc 1 80 0
 146 009a 7B6B     	 ldr r3,[r7,#52]
 147 009c 0122     	 movs r2,#1
 148 009e 1A74     	 strb r2,[r3,#16]
  81:../CANopen/stack/305/CO_LSSslave.c ****                 default:
 149              	 .loc 1 81 0
 150 00a0 00BF     	 nop
 151              	.L8:
 152              	.LBE3:
 153 00a2 1BE1     	 b .L9
 154              	.L3:
  84:../CANopen/stack/305/CO_LSSslave.c ****             }
  85:../CANopen/stack/305/CO_LSSslave.c ****         }
  86:../CANopen/stack/305/CO_LSSslave.c ****         else if(LSSslave->lssState == CO_LSS_STATE_WAITING) {
 155              	 .loc 1 86 0
 156 00a4 7B6B     	 ldr r3,[r7,#52]
 157 00a6 1B7C     	 ldrb r3,[r3,#16]
 158 00a8 002B     	 cmp r3,#0
 159 00aa 40F00981 	 bne .L10
  87:../CANopen/stack/305/CO_LSSslave.c ****             switch (cs) {
 160              	 .loc 1 87 0
 161 00ae 97F82B30 	 ldrb r3,[r7,#43]
 162 00b2 403B     	 subs r3,r3,#64
 163 00b4 112B     	 cmp r3,#17
 164 00b6 00F2FF80 	 bhi .L26
 165 00ba 01A2     	 adr r2,.L13
 166 00bc 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 167              	 .p2align 2
 168              	.L13:
 169 00c0 09010000 	 .word .L12+1
 170 00c4 25010000 	 .word .L14+1
 171 00c8 41010000 	 .word .L15+1
 172 00cc 5D010000 	 .word .L16+1
 173 00d0 B9020000 	 .word .L26+1
 174 00d4 B9020000 	 .word .L26+1
 175 00d8 B9020000 	 .word .L26+1
 176 00dc B9020000 	 .word .L26+1
 177 00e0 B9020000 	 .word .L26+1
 178 00e4 B9020000 	 .word .L26+1
 179 00e8 B9020000 	 .word .L26+1
 180 00ec B9020000 	 .word .L26+1
 181 00f0 B9020000 	 .word .L26+1
 182 00f4 B9020000 	 .word .L26+1
 183 00f8 B9020000 	 .word .L26+1
 184 00fc B9020000 	 .word .L26+1
 185 0100 B9020000 	 .word .L26+1
 186 0104 BD010000 	 .word .L17+1
 187              	 .p2align 1
 188              	.L12:
 189              	.LBB4:
  88:../CANopen/stack/305/CO_LSSslave.c ****             case CO_LSS_SWITCH_STATE_SEL_VENDOR: {
  89:../CANopen/stack/305/CO_LSSslave.c ****                 uint32_t valSw;
  90:../CANopen/stack/305/CO_LSSslave.c ****                 memcpy(&valSw, &data[1], sizeof(valSw));
 190              	 .loc 1 90 0
 191 0108 FB6A     	 ldr r3,[r7,#44]
 192 010a 0133     	 adds r3,r3,#1
 193 010c 07F11802 	 add r2,r7,#24
 194 0110 1046     	 mov r0,r2
 195 0112 1946     	 mov r1,r3
 196 0114 0422     	 movs r2,#4
 197 0116 FFF7FEFF 	 bl memcpy
  91:../CANopen/stack/305/CO_LSSslave.c ****                 LSSslave->lssSelect.identity.vendorID = CO_SWAP_32(valSw);
 198              	 .loc 1 91 0
 199 011a BA69     	 ldr r2,[r7,#24]
 200 011c 7B6B     	 ldr r3,[r7,#52]
 201 011e 5A61     	 str r2,[r3,#20]
  92:../CANopen/stack/305/CO_LSSslave.c ****                 break;
 202              	 .loc 1 92 0
 203 0120 00BF     	 nop
 204 0122 CCE0     	 b .L18
 205              	.L14:
 206              	.LBE4:
 207              	.LBB5:
  93:../CANopen/stack/305/CO_LSSslave.c ****             }
  94:../CANopen/stack/305/CO_LSSslave.c ****             case CO_LSS_SWITCH_STATE_SEL_PRODUCT: {
  95:../CANopen/stack/305/CO_LSSslave.c ****                 uint32_t valSw;
  96:../CANopen/stack/305/CO_LSSslave.c ****                 memcpy(&valSw, &data[1], sizeof(valSw));
 208              	 .loc 1 96 0
 209 0124 FB6A     	 ldr r3,[r7,#44]
 210 0126 0133     	 adds r3,r3,#1
 211 0128 07F11402 	 add r2,r7,#20
 212 012c 1046     	 mov r0,r2
 213 012e 1946     	 mov r1,r3
 214 0130 0422     	 movs r2,#4
 215 0132 FFF7FEFF 	 bl memcpy
  97:../CANopen/stack/305/CO_LSSslave.c ****                 LSSslave->lssSelect.identity.productCode = CO_SWAP_32(valSw);
 216              	 .loc 1 97 0
 217 0136 7A69     	 ldr r2,[r7,#20]
 218 0138 7B6B     	 ldr r3,[r7,#52]
 219 013a 9A61     	 str r2,[r3,#24]
  98:../CANopen/stack/305/CO_LSSslave.c ****                 break;
 220              	 .loc 1 98 0
 221 013c 00BF     	 nop
 222 013e BEE0     	 b .L18
 223              	.L15:
 224              	.LBE5:
 225              	.LBB6:
  99:../CANopen/stack/305/CO_LSSslave.c ****             }
 100:../CANopen/stack/305/CO_LSSslave.c ****             case CO_LSS_SWITCH_STATE_SEL_REV: {
 101:../CANopen/stack/305/CO_LSSslave.c ****                 uint32_t valSw;
 102:../CANopen/stack/305/CO_LSSslave.c ****                 memcpy(&valSw, &data[1], sizeof(valSw));
 226              	 .loc 1 102 0
 227 0140 FB6A     	 ldr r3,[r7,#44]
 228 0142 0133     	 adds r3,r3,#1
 229 0144 07F11002 	 add r2,r7,#16
 230 0148 1046     	 mov r0,r2
 231 014a 1946     	 mov r1,r3
 232 014c 0422     	 movs r2,#4
 233 014e FFF7FEFF 	 bl memcpy
 103:../CANopen/stack/305/CO_LSSslave.c ****                 LSSslave->lssSelect.identity.revisionNumber = CO_SWAP_32(valSw);
 234              	 .loc 1 103 0
 235 0152 3A69     	 ldr r2,[r7,#16]
 236 0154 7B6B     	 ldr r3,[r7,#52]
 237 0156 DA61     	 str r2,[r3,#28]
 104:../CANopen/stack/305/CO_LSSslave.c ****                 break;
 238              	 .loc 1 104 0
 239 0158 00BF     	 nop
 240 015a B0E0     	 b .L18
 241              	.L16:
 242              	.LBE6:
 243              	.LBB7:
 105:../CANopen/stack/305/CO_LSSslave.c ****             }
 106:../CANopen/stack/305/CO_LSSslave.c ****             case CO_LSS_SWITCH_STATE_SEL_SERIAL: {
 107:../CANopen/stack/305/CO_LSSslave.c ****                 uint32_t valSw;
 108:../CANopen/stack/305/CO_LSSslave.c ****                 memcpy(&valSw, &data[1], sizeof(valSw));
 244              	 .loc 1 108 0
 245 015c FB6A     	 ldr r3,[r7,#44]
 246 015e 0133     	 adds r3,r3,#1
 247 0160 07F10C02 	 add r2,r7,#12
 248 0164 1046     	 mov r0,r2
 249 0166 1946     	 mov r1,r3
 250 0168 0422     	 movs r2,#4
 251 016a FFF7FEFF 	 bl memcpy
 109:../CANopen/stack/305/CO_LSSslave.c ****                 LSSslave->lssSelect.identity.serialNumber = CO_SWAP_32(valSw);
 252              	 .loc 1 109 0
 253 016e FA68     	 ldr r2,[r7,#12]
 254 0170 7B6B     	 ldr r3,[r7,#52]
 255 0172 1A62     	 str r2,[r3,#32]
 110:../CANopen/stack/305/CO_LSSslave.c **** 
 111:../CANopen/stack/305/CO_LSSslave.c ****                 if (CO_LSS_ADDRESS_EQUAL(LSSslave->lssAddress,
 256              	 .loc 1 111 0
 257 0174 7B6B     	 ldr r3,[r7,#52]
 258 0176 5A68     	 ldr r2,[r3,#4]
 259 0178 7B6B     	 ldr r3,[r7,#52]
 260 017a 9B69     	 ldr r3,[r3,#24]
 261 017c 9A42     	 cmp r2,r3
 262 017e 1BD1     	 bne .L19
 263              	 .loc 1 111 0 is_stmt 0 discriminator 1
 264 0180 7B6B     	 ldr r3,[r7,#52]
 265 0182 9A68     	 ldr r2,[r3,#8]
 266 0184 7B6B     	 ldr r3,[r7,#52]
 267 0186 DB69     	 ldr r3,[r3,#28]
 268 0188 9A42     	 cmp r2,r3
 269 018a 15D1     	 bne .L19
 270              	 .loc 1 111 0 discriminator 2
 271 018c 7B6B     	 ldr r3,[r7,#52]
 272 018e DA68     	 ldr r2,[r3,#12]
 273 0190 7B6B     	 ldr r3,[r7,#52]
 274 0192 1B6A     	 ldr r3,[r3,#32]
 275 0194 9A42     	 cmp r2,r3
 276 0196 0FD1     	 bne .L19
 277              	 .loc 1 111 0 discriminator 3
 278 0198 7B6B     	 ldr r3,[r7,#52]
 279 019a 1A68     	 ldr r2,[r3]
 280 019c 7B6B     	 ldr r3,[r7,#52]
 281 019e 5B69     	 ldr r3,[r3,#20]
 282 01a0 9A42     	 cmp r2,r3
 283 01a2 09D1     	 bne .L19
 112:../CANopen/stack/305/CO_LSSslave.c ****                                          LSSslave->lssSelect)
 113:../CANopen/stack/305/CO_LSSslave.c ****                 ) {
 114:../CANopen/stack/305/CO_LSSslave.c ****                     LSSslave->lssState = CO_LSS_STATE_CONFIGURATION;
 284              	 .loc 1 114 0 is_stmt 1
 285 01a4 7B6B     	 ldr r3,[r7,#52]
 286 01a6 0122     	 movs r2,#1
 287 01a8 1A74     	 strb r2,[r3,#16]
 115:../CANopen/stack/305/CO_LSSslave.c ****                     LSSslave->service = cs;
 288              	 .loc 1 115 0
 289 01aa 7B6B     	 ldr r3,[r7,#52]
 290 01ac 97F82B20 	 ldrb r2,[r7,#43]
 291 01b0 83F84820 	 strb r2,[r3,#72]
 116:../CANopen/stack/305/CO_LSSslave.c ****                     request_LSSslave_process = true;
 292              	 .loc 1 116 0
 293 01b4 0123     	 movs r3,#1
 294 01b6 FB63     	 str r3,[r7,#60]
 295              	.L19:
 117:../CANopen/stack/305/CO_LSSslave.c ****                 }
 118:../CANopen/stack/305/CO_LSSslave.c ****                 break;
 296              	 .loc 1 118 0
 297 01b8 00BF     	 nop
 298 01ba 80E0     	 b .L18
 299              	.L17:
 300              	.LBE7:
 119:../CANopen/stack/305/CO_LSSslave.c ****             }
 120:../CANopen/stack/305/CO_LSSslave.c ****             case CO_LSS_IDENT_FASTSCAN: {
 121:../CANopen/stack/305/CO_LSSslave.c ****                 /* fastscan is only active on unconfigured nodes */
 122:../CANopen/stack/305/CO_LSSslave.c ****                 if (*LSSslave->pendingNodeID == CO_LSS_NODE_ID_ASSIGNMENT &&
 301              	 .loc 1 122 0
 302 01bc 7B6B     	 ldr r3,[r7,#52]
 303 01be DB6B     	 ldr r3,[r3,#60]
 304 01c0 1B78     	 ldrb r3,[r3]
 305 01c2 FF2B     	 cmp r3,#255
 306 01c4 7AD1     	 bne .L27
 123:../CANopen/stack/305/CO_LSSslave.c ****                     LSSslave->activeNodeID == CO_LSS_NODE_ID_ASSIGNMENT)
 307              	 .loc 1 123 0 discriminator 1
 308 01c6 7B6B     	 ldr r3,[r7,#52]
 309 01c8 93F84030 	 ldrb r3,[r3,#64]
 122:../CANopen/stack/305/CO_LSSslave.c ****                     LSSslave->activeNodeID == CO_LSS_NODE_ID_ASSIGNMENT)
 310              	 .loc 1 122 0 discriminator 1
 311 01cc FF2B     	 cmp r3,#255
 312 01ce 75D1     	 bne .L27
 313              	.LBB8:
 124:../CANopen/stack/305/CO_LSSslave.c ****                 {
 125:../CANopen/stack/305/CO_LSSslave.c ****                     uint8_t bitCheck = data[5];
 314              	 .loc 1 125 0
 315 01d0 FB6A     	 ldr r3,[r7,#44]
 316 01d2 5B79     	 ldrb r3,[r3,#5]
 317 01d4 87F82930 	 strb r3,[r7,#41]
 126:../CANopen/stack/305/CO_LSSslave.c ****                     uint8_t lssSub = data[6];
 318              	 .loc 1 126 0
 319 01d8 FB6A     	 ldr r3,[r7,#44]
 320 01da 9B79     	 ldrb r3,[r3,#6]
 321 01dc 87F82830 	 strb r3,[r7,#40]
 127:../CANopen/stack/305/CO_LSSslave.c ****                     uint8_t lssNext = data[7];
 322              	 .loc 1 127 0
 323 01e0 FB6A     	 ldr r3,[r7,#44]
 324 01e2 DB79     	 ldrb r3,[r3,#7]
 325 01e4 87F82730 	 strb r3,[r7,#39]
 128:../CANopen/stack/305/CO_LSSslave.c ****                     uint32_t valSw;
 129:../CANopen/stack/305/CO_LSSslave.c ****                     uint32_t idNumber;
 130:../CANopen/stack/305/CO_LSSslave.c ****                     bool_t ack;
 131:../CANopen/stack/305/CO_LSSslave.c **** 
 132:../CANopen/stack/305/CO_LSSslave.c ****                     if (!CO_LSS_FASTSCAN_BITCHECK_VALID(bitCheck) ||
 326              	 .loc 1 132 0
 327 01e8 97F82930 	 ldrb r3,[r7,#41]
 328 01ec 1F2B     	 cmp r3,#31
 329 01ee 03D9     	 bls .L21
 330              	 .loc 1 132 0 is_stmt 0 discriminator 1
 331 01f0 97F82930 	 ldrb r3,[r7,#41]
 332 01f4 802B     	 cmp r3,#128
 333 01f6 62D1     	 bne .L18
 334              	.L21:
 335              	 .loc 1 132 0 discriminator 3
 336 01f8 97F82830 	 ldrb r3,[r7,#40]
 337 01fc 032B     	 cmp r3,#3
 338 01fe 5ED8     	 bhi .L18
 133:../CANopen/stack/305/CO_LSSslave.c ****                         !CO_LSS_FASTSCAN_LSS_SUB_NEXT_VALID(lssSub) ||
 339              	 .loc 1 133 0 is_stmt 1
 340 0200 97F82730 	 ldrb r3,[r7,#39]
 341 0204 032B     	 cmp r3,#3
 342 0206 5AD8     	 bhi .L18
 134:../CANopen/stack/305/CO_LSSslave.c ****                         !CO_LSS_FASTSCAN_LSS_SUB_NEXT_VALID(lssNext)) {
 135:../CANopen/stack/305/CO_LSSslave.c ****                         /* Invalid request */
 136:../CANopen/stack/305/CO_LSSslave.c ****                         break;
 137:../CANopen/stack/305/CO_LSSslave.c ****                     }
 138:../CANopen/stack/305/CO_LSSslave.c **** 
 139:../CANopen/stack/305/CO_LSSslave.c ****                     memcpy(&valSw, &data[1], sizeof(valSw));
 343              	 .loc 1 139 0
 344 0208 FB6A     	 ldr r3,[r7,#44]
 345 020a 0133     	 adds r3,r3,#1
 346 020c 07F10802 	 add r2,r7,#8
 347 0210 1046     	 mov r0,r2
 348 0212 1946     	 mov r1,r3
 349 0214 0422     	 movs r2,#4
 350 0216 FFF7FEFF 	 bl memcpy
 140:../CANopen/stack/305/CO_LSSslave.c ****                     idNumber = CO_SWAP_32(valSw);
 351              	 .loc 1 140 0
 352 021a BB68     	 ldr r3,[r7,#8]
 353 021c 3B62     	 str r3,[r7,#32]
 141:../CANopen/stack/305/CO_LSSslave.c ****                     ack = false;
 354              	 .loc 1 141 0
 355 021e 0023     	 movs r3,#0
 356 0220 BB63     	 str r3,[r7,#56]
 142:../CANopen/stack/305/CO_LSSslave.c **** 
 143:../CANopen/stack/305/CO_LSSslave.c ****                     if (bitCheck == CO_LSS_FASTSCAN_CONFIRM) {
 357              	 .loc 1 143 0
 358 0222 97F82930 	 ldrb r3,[r7,#41]
 359 0226 802B     	 cmp r3,#128
 360 0228 0DD1     	 bne .L23
 144:../CANopen/stack/305/CO_LSSslave.c ****                         /* Confirm, Reset */
 145:../CANopen/stack/305/CO_LSSslave.c ****                         ack = true;
 361              	 .loc 1 145 0
 362 022a 0123     	 movs r3,#1
 363 022c BB63     	 str r3,[r7,#56]
 146:../CANopen/stack/305/CO_LSSslave.c ****                         LSSslave->fastscanPos = CO_LSS_FASTSCAN_VENDOR_ID;
 364              	 .loc 1 146 0
 365 022e 7B6B     	 ldr r3,[r7,#52]
 366 0230 0022     	 movs r2,#0
 367 0232 83F83420 	 strb r2,[r3,#52]
 147:../CANopen/stack/305/CO_LSSslave.c ****                         memset(&LSSslave->lssFastscan, 0,
 368              	 .loc 1 147 0
 369 0236 7B6B     	 ldr r3,[r7,#52]
 370 0238 2433     	 adds r3,r3,#36
 371 023a 1846     	 mov r0,r3
 372 023c 0021     	 movs r1,#0
 373 023e 1022     	 movs r2,#16
 374 0240 FFF7FEFF 	 bl memset
 375 0244 2CE0     	 b .L24
 376              	.L23:
 148:../CANopen/stack/305/CO_LSSslave.c ****                                 sizeof(LSSslave->lssFastscan));
 149:../CANopen/stack/305/CO_LSSslave.c ****                     }
 150:../CANopen/stack/305/CO_LSSslave.c ****                     else if (LSSslave->fastscanPos == lssSub) {
 377              	 .loc 1 150 0
 378 0246 7B6B     	 ldr r3,[r7,#52]
 379 0248 93F83430 	 ldrb r3,[r3,#52]
 380 024c 97F82820 	 ldrb r2,[r7,#40]
 381 0250 9A42     	 cmp r2,r3
 382 0252 25D1     	 bne .L24
 383              	.LBB9:
 151:../CANopen/stack/305/CO_LSSslave.c ****                         uint32_t mask = 0xFFFFFFFF << bitCheck;
 384              	 .loc 1 151 0
 385 0254 97F82930 	 ldrb r3,[r7,#41]
 386 0258 4FF0FF32 	 mov r2,#-1
 387 025c 02FA03F3 	 lsl r3,r2,r3
 388 0260 FB61     	 str r3,[r7,#28]
 152:../CANopen/stack/305/CO_LSSslave.c **** 
 153:../CANopen/stack/305/CO_LSSslave.c ****                         if ((LSSslave->lssAddress.addr[lssSub] & mask)
 389              	 .loc 1 153 0
 390 0262 97F82820 	 ldrb r2,[r7,#40]
 391 0266 7B6B     	 ldr r3,[r7,#52]
 392 0268 53F82220 	 ldr r2,[r3,r2,lsl#2]
 154:../CANopen/stack/305/CO_LSSslave.c ****                             == (idNumber & mask))
 393              	 .loc 1 154 0
 394 026c 3B6A     	 ldr r3,[r7,#32]
 395 026e 5A40     	 eors r2,r2,r3
 396 0270 FB69     	 ldr r3,[r7,#28]
 397 0272 1340     	 ands r3,r3,r2
 153:../CANopen/stack/305/CO_LSSslave.c ****                             == (idNumber & mask))
 398              	 .loc 1 153 0
 399 0274 002B     	 cmp r3,#0
 400 0276 13D1     	 bne .L24
 155:../CANopen/stack/305/CO_LSSslave.c ****                         {
 156:../CANopen/stack/305/CO_LSSslave.c ****                             /* all requested bits match */
 157:../CANopen/stack/305/CO_LSSslave.c ****                             ack = true;
 401              	 .loc 1 157 0
 402 0278 0123     	 movs r3,#1
 403 027a BB63     	 str r3,[r7,#56]
 158:../CANopen/stack/305/CO_LSSslave.c ****                             LSSslave->fastscanPos = lssNext;
 404              	 .loc 1 158 0
 405 027c 7B6B     	 ldr r3,[r7,#52]
 406 027e 97F82720 	 ldrb r2,[r7,#39]
 407 0282 83F83420 	 strb r2,[r3,#52]
 159:../CANopen/stack/305/CO_LSSslave.c **** 
 160:../CANopen/stack/305/CO_LSSslave.c ****                             if (bitCheck == 0 && lssNext < lssSub) {
 408              	 .loc 1 160 0
 409 0286 97F82930 	 ldrb r3,[r7,#41]
 410 028a 002B     	 cmp r3,#0
 411 028c 08D1     	 bne .L24
 412              	 .loc 1 160 0 is_stmt 0 discriminator 1
 413 028e 97F82720 	 ldrb r2,[r7,#39]
 414 0292 97F82830 	 ldrb r3,[r7,#40]
 415 0296 9A42     	 cmp r2,r3
 416 0298 02D2     	 bcs .L24
 161:../CANopen/stack/305/CO_LSSslave.c ****                                 /* complete match, enter configuration state */
 162:../CANopen/stack/305/CO_LSSslave.c ****                                 LSSslave->lssState = CO_LSS_STATE_CONFIGURATION;
 417              	 .loc 1 162 0 is_stmt 1
 418 029a 7B6B     	 ldr r3,[r7,#52]
 419 029c 0122     	 movs r2,#1
 420 029e 1A74     	 strb r2,[r3,#16]
 421              	.L24:
 422              	.LBE9:
 163:../CANopen/stack/305/CO_LSSslave.c ****                             }
 164:../CANopen/stack/305/CO_LSSslave.c ****                         }
 165:../CANopen/stack/305/CO_LSSslave.c ****                     }
 166:../CANopen/stack/305/CO_LSSslave.c ****                     if (ack) {
 423              	 .loc 1 166 0
 424 02a0 BB6B     	 ldr r3,[r7,#56]
 425 02a2 002B     	 cmp r3,#0
 426 02a4 07D0     	 beq .L20
 167:../CANopen/stack/305/CO_LSSslave.c **** #if (CO_CONFIG_LSS) & CO_CONFIG_LSS_SLAVE_FASTSCAN_DIRECT_RESPOND
 168:../CANopen/stack/305/CO_LSSslave.c ****                         LSSslave->TXbuff->data[0] = CO_LSS_IDENT_SLAVE;
 169:../CANopen/stack/305/CO_LSSslave.c ****                         memset(&LSSslave->TXbuff->data[1], 0,
 170:../CANopen/stack/305/CO_LSSslave.c ****                                sizeof(LSSslave->TXbuff->data) - 1);
 171:../CANopen/stack/305/CO_LSSslave.c ****                         CO_CANsend(LSSslave->CANdevTx, LSSslave->TXbuff);
 172:../CANopen/stack/305/CO_LSSslave.c **** #else
 173:../CANopen/stack/305/CO_LSSslave.c ****                         LSSslave->service = cs;
 427              	 .loc 1 173 0
 428 02a6 7B6B     	 ldr r3,[r7,#52]
 429 02a8 97F82B20 	 ldrb r2,[r7,#43]
 430 02ac 83F84820 	 strb r2,[r3,#72]
 174:../CANopen/stack/305/CO_LSSslave.c ****                         request_LSSslave_process = true;
 431              	 .loc 1 174 0
 432 02b0 0123     	 movs r3,#1
 433 02b2 FB63     	 str r3,[r7,#60]
 434              	.LBE8:
 175:../CANopen/stack/305/CO_LSSslave.c **** #endif
 176:../CANopen/stack/305/CO_LSSslave.c ****                     }
 177:../CANopen/stack/305/CO_LSSslave.c ****                 }
 178:../CANopen/stack/305/CO_LSSslave.c ****                 break;
 435              	 .loc 1 178 0
 436 02b4 02E0     	 b .L27
 437              	.L20:
 438              	 .loc 1 178 0 is_stmt 0 discriminator 7
 439 02b6 01E0     	 b .L27
 440              	.L26:
 179:../CANopen/stack/305/CO_LSSslave.c ****             }
 180:../CANopen/stack/305/CO_LSSslave.c ****             default: {
 181:../CANopen/stack/305/CO_LSSslave.c ****                 break;
 441              	 .loc 1 181 0 is_stmt 1
 442 02b8 00BF     	 nop
 443 02ba 0FE0     	 b .L9
 444              	.L27:
 178:../CANopen/stack/305/CO_LSSslave.c ****             }
 445              	 .loc 1 178 0
 446 02bc 00BF     	 nop
 447              	.L18:
 448 02be 0DE0     	 b .L9
 449              	.L10:
 182:../CANopen/stack/305/CO_LSSslave.c ****             }
 183:../CANopen/stack/305/CO_LSSslave.c ****             }
 184:../CANopen/stack/305/CO_LSSslave.c ****         }
 185:../CANopen/stack/305/CO_LSSslave.c ****         else { /* LSSslave->lssState == CO_LSS_STATE_CONFIGURATION */
 186:../CANopen/stack/305/CO_LSSslave.c ****             memcpy(&LSSslave->CANdata, &data[0], sizeof(LSSslave->CANdata));
 450              	 .loc 1 186 0
 451 02c0 7B6B     	 ldr r3,[r7,#52]
 452 02c2 4933     	 adds r3,r3,#73
 453 02c4 1846     	 mov r0,r3
 454 02c6 F96A     	 ldr r1,[r7,#44]
 455 02c8 0822     	 movs r2,#8
 456 02ca FFF7FEFF 	 bl memcpy
 187:../CANopen/stack/305/CO_LSSslave.c ****             LSSslave->service = cs;
 457              	 .loc 1 187 0
 458 02ce 7B6B     	 ldr r3,[r7,#52]
 459 02d0 97F82B20 	 ldrb r2,[r7,#43]
 460 02d4 83F84820 	 strb r2,[r3,#72]
 188:../CANopen/stack/305/CO_LSSslave.c ****             request_LSSslave_process = true;
 461              	 .loc 1 188 0
 462 02d8 0123     	 movs r3,#1
 463 02da FB63     	 str r3,[r7,#60]
 464              	.L9:
 189:../CANopen/stack/305/CO_LSSslave.c ****         }
 190:../CANopen/stack/305/CO_LSSslave.c **** 
 191:../CANopen/stack/305/CO_LSSslave.c ****         if (request_LSSslave_process) {
 465              	 .loc 1 191 0
 466 02dc FB6B     	 ldr r3,[r7,#60]
 467 02de 002B     	 cmp r3,#0
 468 02e0 02D0     	 beq .L1
 192:../CANopen/stack/305/CO_LSSslave.c ****             CO_FLAG_SET(LSSslave->sendResponse);
 469              	 .loc 1 192 0
 470 02e2 7B6B     	 ldr r3,[r7,#52]
 471 02e4 0122     	 movs r2,#1
 472 02e6 5A64     	 str r2,[r3,#68]
 473              	.L1:
 474              	.LBE2:
 193:../CANopen/stack/305/CO_LSSslave.c **** #if (CO_CONFIG_LSS) & CO_CONFIG_FLAG_CALLBACK_PRE
 194:../CANopen/stack/305/CO_LSSslave.c ****             /* Optional signal to RTOS, which can resume task,
 195:../CANopen/stack/305/CO_LSSslave.c ****              * which handles further processing. */
 196:../CANopen/stack/305/CO_LSSslave.c ****             if (LSSslave->pFunctSignalPre != NULL) {
 197:../CANopen/stack/305/CO_LSSslave.c ****                 LSSslave->pFunctSignalPre(LSSslave->functSignalObjectPre);
 198:../CANopen/stack/305/CO_LSSslave.c ****             }
 199:../CANopen/stack/305/CO_LSSslave.c **** #endif
 200:../CANopen/stack/305/CO_LSSslave.c ****         }
 201:../CANopen/stack/305/CO_LSSslave.c ****     }
 202:../CANopen/stack/305/CO_LSSslave.c **** }
 475              	 .loc 1 202 0
 476 02e8 4037     	 adds r7,r7,#64
 477              	.LCFI3:
 478              	 .cfi_def_cfa_offset 8
 479 02ea BD46     	 mov sp,r7
 480              	.LCFI4:
 481              	 .cfi_def_cfa_register 13
 482              	 
 483 02ec 80BD     	 pop {r7,pc}
 484              	 .cfi_endproc
 485              	.LFE7:
 487 02ee 00BF     	 .section .text.CO_LSSslave_init,"ax",%progbits
 488              	 .align 2
 489              	 .global CO_LSSslave_init
 490              	 .thumb
 491              	 .thumb_func
 493              	CO_LSSslave_init:
 494              	.LFB8:
 203:../CANopen/stack/305/CO_LSSslave.c **** 
 204:../CANopen/stack/305/CO_LSSslave.c **** 
 205:../CANopen/stack/305/CO_LSSslave.c **** /******************************************************************************/
 206:../CANopen/stack/305/CO_LSSslave.c **** CO_ReturnError_t CO_LSSslave_init(
 207:../CANopen/stack/305/CO_LSSslave.c ****         CO_LSSslave_t          *LSSslave,
 208:../CANopen/stack/305/CO_LSSslave.c ****         CO_LSS_address_t       *lssAddress,
 209:../CANopen/stack/305/CO_LSSslave.c ****         uint16_t               *pendingBitRate,
 210:../CANopen/stack/305/CO_LSSslave.c ****         uint8_t                *pendingNodeID,
 211:../CANopen/stack/305/CO_LSSslave.c ****         CO_CANmodule_t         *CANdevRx,
 212:../CANopen/stack/305/CO_LSSslave.c ****         uint16_t                CANdevRxIdx,
 213:../CANopen/stack/305/CO_LSSslave.c ****         uint16_t                CANidLssMaster,
 214:../CANopen/stack/305/CO_LSSslave.c ****         CO_CANmodule_t         *CANdevTx,
 215:../CANopen/stack/305/CO_LSSslave.c ****         uint16_t                CANdevTxIdx,
 216:../CANopen/stack/305/CO_LSSslave.c ****         uint16_t                CANidLssSlave)
 217:../CANopen/stack/305/CO_LSSslave.c **** {
 495              	 .loc 1 217 0
 496              	 .cfi_startproc
 497              	 
 498              	 
 499 0000 80B5     	 push {r7,lr}
 500              	.LCFI5:
 501              	 .cfi_def_cfa_offset 8
 502              	 .cfi_offset 7,-8
 503              	 .cfi_offset 14,-4
 504 0002 8AB0     	 sub sp,sp,#40
 505              	.LCFI6:
 506              	 .cfi_def_cfa_offset 48
 507 0004 04AF     	 add r7,sp,#16
 508              	.LCFI7:
 509              	 .cfi_def_cfa 7,32
 510 0006 F860     	 str r0,[r7,#12]
 511 0008 B960     	 str r1,[r7,#8]
 512 000a 7A60     	 str r2,[r7,#4]
 513 000c 3B60     	 str r3,[r7]
 218:../CANopen/stack/305/CO_LSSslave.c ****     CO_ReturnError_t ret = CO_ERROR_NO;
 514              	 .loc 1 218 0
 515 000e 0023     	 movs r3,#0
 516 0010 FB75     	 strb r3,[r7,#23]
 219:../CANopen/stack/305/CO_LSSslave.c **** 
 220:../CANopen/stack/305/CO_LSSslave.c ****     /* verify arguments */
 221:../CANopen/stack/305/CO_LSSslave.c ****     if (LSSslave==NULL || pendingBitRate == NULL || pendingNodeID == NULL ||
 517              	 .loc 1 221 0
 518 0012 FB68     	 ldr r3,[r7,#12]
 519 0014 002B     	 cmp r3,#0
 520 0016 19D0     	 beq .L29
 521              	 .loc 1 221 0 is_stmt 0 discriminator 1
 522 0018 7B68     	 ldr r3,[r7,#4]
 523 001a 002B     	 cmp r3,#0
 524 001c 16D0     	 beq .L29
 525              	 .loc 1 221 0 discriminator 2
 526 001e 3B68     	 ldr r3,[r7]
 527 0020 002B     	 cmp r3,#0
 528 0022 13D0     	 beq .L29
 529              	 .loc 1 221 0 discriminator 3
 530 0024 3B6A     	 ldr r3,[r7,#32]
 531 0026 002B     	 cmp r3,#0
 532 0028 10D0     	 beq .L29
 222:../CANopen/stack/305/CO_LSSslave.c ****         CANdevRx==NULL || CANdevTx==NULL ||
 533              	 .loc 1 222 0 is_stmt 1
 534 002a FB6A     	 ldr r3,[r7,#44]
 535 002c 002B     	 cmp r3,#0
 536 002e 0DD0     	 beq .L29
 223:../CANopen/stack/305/CO_LSSslave.c ****         !CO_LSS_NODE_ID_VALID(*pendingNodeID)
 537              	 .loc 1 223 0 discriminator 1
 538 0030 3B68     	 ldr r3,[r7]
 539 0032 1B78     	 ldrb r3,[r3]
 222:../CANopen/stack/305/CO_LSSslave.c ****         CANdevRx==NULL || CANdevTx==NULL ||
 540              	 .loc 1 222 0 discriminator 1
 541 0034 002B     	 cmp r3,#0
 542 0036 05D0     	 beq .L30
 543              	 .loc 1 223 0
 544 0038 3B68     	 ldr r3,[r7]
 545 003a 1B78     	 ldrb r3,[r3]
 546 003c DBB2     	 uxtb r3,r3
 547 003e 5BB2     	 sxtb r3,r3
 548 0040 002B     	 cmp r3,#0
 549 0042 05DA     	 bge .L31
 550              	.L30:
 551              	 .loc 1 223 0 is_stmt 0 discriminator 1
 552 0044 3B68     	 ldr r3,[r7]
 553 0046 1B78     	 ldrb r3,[r3]
 554 0048 FF2B     	 cmp r3,#255
 555 004a 01D0     	 beq .L31
 556              	.L29:
 224:../CANopen/stack/305/CO_LSSslave.c ****     ) {
 225:../CANopen/stack/305/CO_LSSslave.c ****         return CO_ERROR_ILLEGAL_ARGUMENT;
 557              	 .loc 1 225 0 is_stmt 1
 558 004c FF23     	 movs r3,#255
 559 004e 45E0     	 b .L32
 560              	.L31:
 226:../CANopen/stack/305/CO_LSSslave.c ****     }
 227:../CANopen/stack/305/CO_LSSslave.c **** 
 228:../CANopen/stack/305/CO_LSSslave.c ****     /* Application must make sure that lssAddress is filled with data. */
 229:../CANopen/stack/305/CO_LSSslave.c **** 
 230:../CANopen/stack/305/CO_LSSslave.c ****     /* clear the object */
 231:../CANopen/stack/305/CO_LSSslave.c ****     memset(LSSslave, 0, sizeof(CO_LSSslave_t));
 561              	 .loc 1 231 0
 562 0050 F868     	 ldr r0,[r7,#12]
 563 0052 0021     	 movs r1,#0
 564 0054 7422     	 movs r2,#116
 565 0056 FFF7FEFF 	 bl memset
 232:../CANopen/stack/305/CO_LSSslave.c **** 
 233:../CANopen/stack/305/CO_LSSslave.c ****     /* Configure object variables */
 234:../CANopen/stack/305/CO_LSSslave.c ****     memcpy(&LSSslave->lssAddress, lssAddress, sizeof(LSSslave->lssAddress));
 566              	 .loc 1 234 0
 567 005a FB68     	 ldr r3,[r7,#12]
 568 005c 1846     	 mov r0,r3
 569 005e B968     	 ldr r1,[r7,#8]
 570 0060 1022     	 movs r2,#16
 571 0062 FFF7FEFF 	 bl memcpy
 235:../CANopen/stack/305/CO_LSSslave.c ****     LSSslave->lssState = CO_LSS_STATE_WAITING;
 572              	 .loc 1 235 0
 573 0066 FB68     	 ldr r3,[r7,#12]
 574 0068 0022     	 movs r2,#0
 575 006a 1A74     	 strb r2,[r3,#16]
 236:../CANopen/stack/305/CO_LSSslave.c ****     LSSslave->fastscanPos = CO_LSS_FASTSCAN_VENDOR_ID;
 576              	 .loc 1 236 0
 577 006c FB68     	 ldr r3,[r7,#12]
 578 006e 0022     	 movs r2,#0
 579 0070 83F83420 	 strb r2,[r3,#52]
 237:../CANopen/stack/305/CO_LSSslave.c **** 
 238:../CANopen/stack/305/CO_LSSslave.c ****     LSSslave->pendingBitRate = pendingBitRate;
 580              	 .loc 1 238 0
 581 0074 FB68     	 ldr r3,[r7,#12]
 582 0076 7A68     	 ldr r2,[r7,#4]
 583 0078 9A63     	 str r2,[r3,#56]
 239:../CANopen/stack/305/CO_LSSslave.c ****     LSSslave->pendingNodeID = pendingNodeID;
 584              	 .loc 1 239 0
 585 007a FB68     	 ldr r3,[r7,#12]
 586 007c 3A68     	 ldr r2,[r7]
 587 007e DA63     	 str r2,[r3,#60]
 240:../CANopen/stack/305/CO_LSSslave.c ****     LSSslave->activeNodeID = *pendingNodeID;
 588              	 .loc 1 240 0
 589 0080 3B68     	 ldr r3,[r7]
 590 0082 1A78     	 ldrb r2,[r3]
 591 0084 FB68     	 ldr r3,[r7,#12]
 592 0086 83F84020 	 strb r2,[r3,#64]
 241:../CANopen/stack/305/CO_LSSslave.c ****     CO_FLAG_CLEAR(LSSslave->sendResponse);
 593              	 .loc 1 241 0
 594 008a FB68     	 ldr r3,[r7,#12]
 595 008c 0022     	 movs r2,#0
 596 008e 5A64     	 str r2,[r3,#68]
 242:../CANopen/stack/305/CO_LSSslave.c **** 
 243:../CANopen/stack/305/CO_LSSslave.c ****     /* configure LSS CAN Master message reception */
 244:../CANopen/stack/305/CO_LSSslave.c ****     ret = CO_CANrxBufferInit(
 597              	 .loc 1 244 0
 598 0090 B98C     	 ldrh r1,[r7,#36]
 599 0092 3A8D     	 ldrh r2,[r7,#40]
 600 0094 0023     	 movs r3,#0
 601 0096 0093     	 str r3,[sp]
 602 0098 FB68     	 ldr r3,[r7,#12]
 603 009a 0193     	 str r3,[sp,#4]
 604 009c 124B     	 ldr r3,.L34
 605 009e 0293     	 str r3,[sp,#8]
 606 00a0 386A     	 ldr r0,[r7,#32]
 607 00a2 40F2FF73 	 movw r3,#2047
 608 00a6 FFF7FEFF 	 bl CO_CANrxBufferInit
 609 00aa 0346     	 mov r3,r0
 610 00ac FB75     	 strb r3,[r7,#23]
 245:../CANopen/stack/305/CO_LSSslave.c ****             CANdevRx,             /* CAN device */
 246:../CANopen/stack/305/CO_LSSslave.c ****             CANdevRxIdx,          /* rx buffer index */
 247:../CANopen/stack/305/CO_LSSslave.c ****             CANidLssMaster,       /* CAN identifier */
 248:../CANopen/stack/305/CO_LSSslave.c ****             0x7FF,                /* mask */
 249:../CANopen/stack/305/CO_LSSslave.c ****             0,                    /* rtr */
 250:../CANopen/stack/305/CO_LSSslave.c ****             (void*)LSSslave,      /* object passed to receive function */
 251:../CANopen/stack/305/CO_LSSslave.c ****             CO_LSSslave_receive); /* this function will process received message */
 252:../CANopen/stack/305/CO_LSSslave.c **** 
 253:../CANopen/stack/305/CO_LSSslave.c ****     /* configure LSS CAN Slave response message transmission */
 254:../CANopen/stack/305/CO_LSSslave.c ****     LSSslave->CANdevTx = CANdevTx;
 611              	 .loc 1 254 0
 612 00ae FB68     	 ldr r3,[r7,#12]
 613 00b0 FA6A     	 ldr r2,[r7,#44]
 614 00b2 DA66     	 str r2,[r3,#108]
 255:../CANopen/stack/305/CO_LSSslave.c ****     LSSslave->TXbuff = CO_CANtxBufferInit(
 615              	 .loc 1 255 0
 616 00b4 398E     	 ldrh r1,[r7,#48]
 617 00b6 BA8E     	 ldrh r2,[r7,#52]
 618 00b8 0823     	 movs r3,#8
 619 00ba 0093     	 str r3,[sp]
 620 00bc 0023     	 movs r3,#0
 621 00be 0193     	 str r3,[sp,#4]
 622 00c0 F86A     	 ldr r0,[r7,#44]
 623 00c2 0023     	 movs r3,#0
 624 00c4 FFF7FEFF 	 bl CO_CANtxBufferInit
 625 00c8 0246     	 mov r2,r0
 626 00ca FB68     	 ldr r3,[r7,#12]
 627 00cc 1A67     	 str r2,[r3,#112]
 256:../CANopen/stack/305/CO_LSSslave.c ****             CANdevTx,             /* CAN device */
 257:../CANopen/stack/305/CO_LSSslave.c ****             CANdevTxIdx,          /* index of specific buffer inside CAN module */
 258:../CANopen/stack/305/CO_LSSslave.c ****             CANidLssSlave,        /* CAN identifier */
 259:../CANopen/stack/305/CO_LSSslave.c ****             0,                    /* rtr */
 260:../CANopen/stack/305/CO_LSSslave.c ****             8,                    /* number of data bytes */
 261:../CANopen/stack/305/CO_LSSslave.c ****             0);                   /* synchronous message flag bit */
 262:../CANopen/stack/305/CO_LSSslave.c **** 
 263:../CANopen/stack/305/CO_LSSslave.c ****     if (LSSslave->TXbuff == NULL) {
 628              	 .loc 1 263 0
 629 00ce FB68     	 ldr r3,[r7,#12]
 630 00d0 1B6F     	 ldr r3,[r3,#112]
 631 00d2 002B     	 cmp r3,#0
 632 00d4 01D1     	 bne .L33
 264:../CANopen/stack/305/CO_LSSslave.c ****         ret = CO_ERROR_ILLEGAL_ARGUMENT;
 633              	 .loc 1 264 0
 634 00d6 FF23     	 movs r3,#255
 635 00d8 FB75     	 strb r3,[r7,#23]
 636              	.L33:
 265:../CANopen/stack/305/CO_LSSslave.c ****     }
 266:../CANopen/stack/305/CO_LSSslave.c **** 
 267:../CANopen/stack/305/CO_LSSslave.c ****     return ret;
 637              	 .loc 1 267 0
 638 00da FB7D     	 ldrb r3,[r7,#23]
 639              	.L32:
 640 00dc 5BB2     	 sxtb r3,r3
 268:../CANopen/stack/305/CO_LSSslave.c **** }
 641              	 .loc 1 268 0
 642 00de 1846     	 mov r0,r3
 643 00e0 1837     	 adds r7,r7,#24
 644              	.LCFI8:
 645              	 .cfi_def_cfa_offset 8
 646 00e2 BD46     	 mov sp,r7
 647              	.LCFI9:
 648              	 .cfi_def_cfa_register 13
 649              	 
 650 00e4 80BD     	 pop {r7,pc}
 651              	.L35:
 652 00e6 00BF     	 .align 2
 653              	.L34:
 654 00e8 00000000 	 .word CO_LSSslave_receive
 655              	 .cfi_endproc
 656              	.LFE8:
 658              	 .section .text.CO_LSSslave_initCheckBitRateCallback,"ax",%progbits
 659              	 .align 2
 660              	 .global CO_LSSslave_initCheckBitRateCallback
 661              	 .thumb
 662              	 .thumb_func
 664              	CO_LSSslave_initCheckBitRateCallback:
 665              	.LFB9:
 269:../CANopen/stack/305/CO_LSSslave.c **** 
 270:../CANopen/stack/305/CO_LSSslave.c **** 
 271:../CANopen/stack/305/CO_LSSslave.c **** #if (CO_CONFIG_LSS) & CO_CONFIG_FLAG_CALLBACK_PRE
 272:../CANopen/stack/305/CO_LSSslave.c **** /******************************************************************************/
 273:../CANopen/stack/305/CO_LSSslave.c **** void CO_LSSslave_initCallbackPre(
 274:../CANopen/stack/305/CO_LSSslave.c ****         CO_LSSslave_t          *LSSslave,
 275:../CANopen/stack/305/CO_LSSslave.c ****         void                   *object,
 276:../CANopen/stack/305/CO_LSSslave.c ****         void                  (*pFunctSignalPre)(void *object))
 277:../CANopen/stack/305/CO_LSSslave.c **** {
 278:../CANopen/stack/305/CO_LSSslave.c ****     if(LSSslave != NULL){
 279:../CANopen/stack/305/CO_LSSslave.c ****         LSSslave->functSignalObjectPre = object;
 280:../CANopen/stack/305/CO_LSSslave.c ****         LSSslave->pFunctSignalPre = pFunctSignalPre;
 281:../CANopen/stack/305/CO_LSSslave.c ****     }
 282:../CANopen/stack/305/CO_LSSslave.c **** }
 283:../CANopen/stack/305/CO_LSSslave.c **** #endif
 284:../CANopen/stack/305/CO_LSSslave.c **** 
 285:../CANopen/stack/305/CO_LSSslave.c **** 
 286:../CANopen/stack/305/CO_LSSslave.c **** /******************************************************************************/
 287:../CANopen/stack/305/CO_LSSslave.c **** void CO_LSSslave_initCheckBitRateCallback(
 288:../CANopen/stack/305/CO_LSSslave.c ****         CO_LSSslave_t          *LSSslave,
 289:../CANopen/stack/305/CO_LSSslave.c ****         void                   *object,
 290:../CANopen/stack/305/CO_LSSslave.c ****         bool_t                (*pFunctLSScheckBitRate)(void *object, uint16_t bitRate))
 291:../CANopen/stack/305/CO_LSSslave.c **** {
 666              	 .loc 1 291 0
 667              	 .cfi_startproc
 668              	 
 669              	 
 670              	 
 671 0000 80B4     	 push {r7}
 672              	.LCFI10:
 673              	 .cfi_def_cfa_offset 4
 674              	 .cfi_offset 7,-4
 675 0002 85B0     	 sub sp,sp,#20
 676              	.LCFI11:
 677              	 .cfi_def_cfa_offset 24
 678 0004 00AF     	 add r7,sp,#0
 679              	.LCFI12:
 680              	 .cfi_def_cfa_register 7
 681 0006 F860     	 str r0,[r7,#12]
 682 0008 B960     	 str r1,[r7,#8]
 683 000a 7A60     	 str r2,[r7,#4]
 292:../CANopen/stack/305/CO_LSSslave.c ****     if(LSSslave != NULL){
 684              	 .loc 1 292 0
 685 000c FB68     	 ldr r3,[r7,#12]
 686 000e 002B     	 cmp r3,#0
 687 0010 05D0     	 beq .L36
 293:../CANopen/stack/305/CO_LSSslave.c ****         LSSslave->functLSScheckBitRateObject = object;
 688              	 .loc 1 293 0
 689 0012 FB68     	 ldr r3,[r7,#12]
 690 0014 BA68     	 ldr r2,[r7,#8]
 691 0016 9A65     	 str r2,[r3,#88]
 294:../CANopen/stack/305/CO_LSSslave.c ****         LSSslave->pFunctLSScheckBitRate = pFunctLSScheckBitRate;
 692              	 .loc 1 294 0
 693 0018 FB68     	 ldr r3,[r7,#12]
 694 001a 7A68     	 ldr r2,[r7,#4]
 695 001c 5A65     	 str r2,[r3,#84]
 696              	.L36:
 295:../CANopen/stack/305/CO_LSSslave.c ****     }
 296:../CANopen/stack/305/CO_LSSslave.c **** }
 697              	 .loc 1 296 0
 698 001e 1437     	 adds r7,r7,#20
 699              	.LCFI13:
 700              	 .cfi_def_cfa_offset 4
 701 0020 BD46     	 mov sp,r7
 702              	.LCFI14:
 703              	 .cfi_def_cfa_register 13
 704              	 
 705 0022 5DF8047B 	 ldr r7,[sp],#4
 706              	.LCFI15:
 707              	 .cfi_restore 7
 708              	 .cfi_def_cfa_offset 0
 709 0026 7047     	 bx lr
 710              	 .cfi_endproc
 711              	.LFE9:
 713              	 .section .text.CO_LSSslave_initActivateBitRateCallback,"ax",%progbits
 714              	 .align 2
 715              	 .global CO_LSSslave_initActivateBitRateCallback
 716              	 .thumb
 717              	 .thumb_func
 719              	CO_LSSslave_initActivateBitRateCallback:
 720              	.LFB10:
 297:../CANopen/stack/305/CO_LSSslave.c **** 
 298:../CANopen/stack/305/CO_LSSslave.c **** 
 299:../CANopen/stack/305/CO_LSSslave.c **** /******************************************************************************/
 300:../CANopen/stack/305/CO_LSSslave.c **** void CO_LSSslave_initActivateBitRateCallback(
 301:../CANopen/stack/305/CO_LSSslave.c ****         CO_LSSslave_t          *LSSslave,
 302:../CANopen/stack/305/CO_LSSslave.c ****         void                   *object,
 303:../CANopen/stack/305/CO_LSSslave.c ****         void                  (*pFunctLSSactivateBitRate)(void *object, uint16_t delay))
 304:../CANopen/stack/305/CO_LSSslave.c **** {
 721              	 .loc 1 304 0
 722              	 .cfi_startproc
 723              	 
 724              	 
 725              	 
 726 0000 80B4     	 push {r7}
 727              	.LCFI16:
 728              	 .cfi_def_cfa_offset 4
 729              	 .cfi_offset 7,-4
 730 0002 85B0     	 sub sp,sp,#20
 731              	.LCFI17:
 732              	 .cfi_def_cfa_offset 24
 733 0004 00AF     	 add r7,sp,#0
 734              	.LCFI18:
 735              	 .cfi_def_cfa_register 7
 736 0006 F860     	 str r0,[r7,#12]
 737 0008 B960     	 str r1,[r7,#8]
 738 000a 7A60     	 str r2,[r7,#4]
 305:../CANopen/stack/305/CO_LSSslave.c ****     if(LSSslave != NULL){
 739              	 .loc 1 305 0
 740 000c FB68     	 ldr r3,[r7,#12]
 741 000e 002B     	 cmp r3,#0
 742 0010 05D0     	 beq .L38
 306:../CANopen/stack/305/CO_LSSslave.c ****         LSSslave->functLSSactivateBitRateObject = object;
 743              	 .loc 1 306 0
 744 0012 FB68     	 ldr r3,[r7,#12]
 745 0014 BA68     	 ldr r2,[r7,#8]
 746 0016 1A66     	 str r2,[r3,#96]
 307:../CANopen/stack/305/CO_LSSslave.c ****         LSSslave->pFunctLSSactivateBitRate = pFunctLSSactivateBitRate;
 747              	 .loc 1 307 0
 748 0018 FB68     	 ldr r3,[r7,#12]
 749 001a 7A68     	 ldr r2,[r7,#4]
 750 001c DA65     	 str r2,[r3,#92]
 751              	.L38:
 308:../CANopen/stack/305/CO_LSSslave.c ****     }
 309:../CANopen/stack/305/CO_LSSslave.c **** }
 752              	 .loc 1 309 0
 753 001e 1437     	 adds r7,r7,#20
 754              	.LCFI19:
 755              	 .cfi_def_cfa_offset 4
 756 0020 BD46     	 mov sp,r7
 757              	.LCFI20:
 758              	 .cfi_def_cfa_register 13
 759              	 
 760 0022 5DF8047B 	 ldr r7,[sp],#4
 761              	.LCFI21:
 762              	 .cfi_restore 7
 763              	 .cfi_def_cfa_offset 0
 764 0026 7047     	 bx lr
 765              	 .cfi_endproc
 766              	.LFE10:
 768              	 .section .text.CO_LSSslave_initCfgStoreCallback,"ax",%progbits
 769              	 .align 2
 770              	 .global CO_LSSslave_initCfgStoreCallback
 771              	 .thumb
 772              	 .thumb_func
 774              	CO_LSSslave_initCfgStoreCallback:
 775              	.LFB11:
 310:../CANopen/stack/305/CO_LSSslave.c **** 
 311:../CANopen/stack/305/CO_LSSslave.c **** 
 312:../CANopen/stack/305/CO_LSSslave.c **** /******************************************************************************/
 313:../CANopen/stack/305/CO_LSSslave.c **** void CO_LSSslave_initCfgStoreCallback(
 314:../CANopen/stack/305/CO_LSSslave.c ****         CO_LSSslave_t          *LSSslave,
 315:../CANopen/stack/305/CO_LSSslave.c ****         void                   *object,
 316:../CANopen/stack/305/CO_LSSslave.c ****         bool_t                (*pFunctLSScfgStore)(void *object, uint8_t id, uint16_t bitRate))
 317:../CANopen/stack/305/CO_LSSslave.c **** {
 776              	 .loc 1 317 0
 777              	 .cfi_startproc
 778              	 
 779              	 
 780              	 
 781 0000 80B4     	 push {r7}
 782              	.LCFI22:
 783              	 .cfi_def_cfa_offset 4
 784              	 .cfi_offset 7,-4
 785 0002 85B0     	 sub sp,sp,#20
 786              	.LCFI23:
 787              	 .cfi_def_cfa_offset 24
 788 0004 00AF     	 add r7,sp,#0
 789              	.LCFI24:
 790              	 .cfi_def_cfa_register 7
 791 0006 F860     	 str r0,[r7,#12]
 792 0008 B960     	 str r1,[r7,#8]
 793 000a 7A60     	 str r2,[r7,#4]
 318:../CANopen/stack/305/CO_LSSslave.c ****     if(LSSslave != NULL){
 794              	 .loc 1 318 0
 795 000c FB68     	 ldr r3,[r7,#12]
 796 000e 002B     	 cmp r3,#0
 797 0010 05D0     	 beq .L40
 319:../CANopen/stack/305/CO_LSSslave.c ****         LSSslave->functLSScfgStoreObject = object;
 798              	 .loc 1 319 0
 799 0012 FB68     	 ldr r3,[r7,#12]
 800 0014 BA68     	 ldr r2,[r7,#8]
 801 0016 9A66     	 str r2,[r3,#104]
 320:../CANopen/stack/305/CO_LSSslave.c ****         LSSslave->pFunctLSScfgStore = pFunctLSScfgStore;
 802              	 .loc 1 320 0
 803 0018 FB68     	 ldr r3,[r7,#12]
 804 001a 7A68     	 ldr r2,[r7,#4]
 805 001c 5A66     	 str r2,[r3,#100]
 806              	.L40:
 321:../CANopen/stack/305/CO_LSSslave.c ****     }
 322:../CANopen/stack/305/CO_LSSslave.c **** }
 807              	 .loc 1 322 0
 808 001e 1437     	 adds r7,r7,#20
 809              	.LCFI25:
 810              	 .cfi_def_cfa_offset 4
 811 0020 BD46     	 mov sp,r7
 812              	.LCFI26:
 813              	 .cfi_def_cfa_register 13
 814              	 
 815 0022 5DF8047B 	 ldr r7,[sp],#4
 816              	.LCFI27:
 817              	 .cfi_restore 7
 818              	 .cfi_def_cfa_offset 0
 819 0026 7047     	 bx lr
 820              	 .cfi_endproc
 821              	.LFE11:
 823              	 .section .text.CO_LSSslave_process,"ax",%progbits
 824              	 .align 2
 825              	 .global CO_LSSslave_process
 826              	 .thumb
 827              	 .thumb_func
 829              	CO_LSSslave_process:
 830              	.LFB12:
 323:../CANopen/stack/305/CO_LSSslave.c **** 
 324:../CANopen/stack/305/CO_LSSslave.c **** 
 325:../CANopen/stack/305/CO_LSSslave.c **** /******************************************************************************/
 326:../CANopen/stack/305/CO_LSSslave.c **** bool_t CO_LSSslave_process(CO_LSSslave_t *LSSslave) {
 831              	 .loc 1 326 0
 832              	 .cfi_startproc
 833              	 
 834              	 
 835 0000 80B5     	 push {r7,lr}
 836              	.LCFI28:
 837              	 .cfi_def_cfa_offset 8
 838              	 .cfi_offset 7,-8
 839              	 .cfi_offset 14,-4
 840 0002 8CB0     	 sub sp,sp,#48
 841              	.LCFI29:
 842              	 .cfi_def_cfa_offset 56
 843 0004 00AF     	 add r7,sp,#0
 844              	.LCFI30:
 845              	 .cfi_def_cfa_register 7
 846 0006 7860     	 str r0,[r7,#4]
 327:../CANopen/stack/305/CO_LSSslave.c ****     bool_t resetCommunication = false;
 847              	 .loc 1 327 0
 848 0008 0023     	 movs r3,#0
 849 000a FB62     	 str r3,[r7,#44]
 328:../CANopen/stack/305/CO_LSSslave.c **** 
 329:../CANopen/stack/305/CO_LSSslave.c ****     if (CO_FLAG_READ(LSSslave->sendResponse)) {
 850              	 .loc 1 329 0
 851 000c 7B68     	 ldr r3,[r7,#4]
 852 000e 5B6C     	 ldr r3,[r3,#68]
 853 0010 002B     	 cmp r3,#0
 854 0012 00F01E82 	 beq .L43
 855              	.LBB10:
 330:../CANopen/stack/305/CO_LSSslave.c ****         uint8_t nid;
 331:../CANopen/stack/305/CO_LSSslave.c ****         uint8_t errorCode;
 332:../CANopen/stack/305/CO_LSSslave.c ****         uint8_t errorCodeManuf;
 333:../CANopen/stack/305/CO_LSSslave.c ****         uint8_t tableSelector;
 334:../CANopen/stack/305/CO_LSSslave.c ****         uint8_t tableIndex;
 335:../CANopen/stack/305/CO_LSSslave.c ****         bool_t CANsend = false;
 856              	 .loc 1 335 0
 857 0016 0023     	 movs r3,#0
 858 0018 7B62     	 str r3,[r7,#36]
 336:../CANopen/stack/305/CO_LSSslave.c ****         uint32_t valSw;
 337:../CANopen/stack/305/CO_LSSslave.c **** 
 338:../CANopen/stack/305/CO_LSSslave.c ****         memset(&LSSslave->TXbuff->data[0], 0, sizeof(LSSslave->TXbuff->data));
 859              	 .loc 1 338 0
 860 001a 7B68     	 ldr r3,[r7,#4]
 861 001c 1B6F     	 ldr r3,[r3,#112]
 862 001e 0533     	 adds r3,r3,#5
 863 0020 1846     	 mov r0,r3
 864 0022 0021     	 movs r1,#0
 865 0024 0822     	 movs r2,#8
 866 0026 FFF7FEFF 	 bl memset
 339:../CANopen/stack/305/CO_LSSslave.c **** 
 340:../CANopen/stack/305/CO_LSSslave.c ****         switch (LSSslave->service) {
 867              	 .loc 1 340 0
 868 002a 7B68     	 ldr r3,[r7,#4]
 869 002c 93F84830 	 ldrb r3,[r3,#72]
 870 0030 043B     	 subs r3,r3,#4
 871 0032 5A2B     	 cmp r3,#90
 872 0034 00F2FE81 	 bhi .L74
 873 0038 01A2     	 adr r2,.L46
 874 003a 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 875 003e 00BF     	 .p2align 2
 876              	.L46:
 877 0040 AD010000 	 .word .L45+1
 878 0044 35040000 	 .word .L74+1
 879 0048 35040000 	 .word .L74+1
 880 004c 35040000 	 .word .L74+1
 881 0050 35040000 	 .word .L74+1
 882 0054 35040000 	 .word .L74+1
 883 0058 35040000 	 .word .L74+1
 884 005c 35040000 	 .word .L74+1
 885 0060 35040000 	 .word .L74+1
 886 0064 35040000 	 .word .L74+1
 887 0068 35040000 	 .word .L74+1
 888 006c 35040000 	 .word .L74+1
 889 0070 35040000 	 .word .L74+1
 890 0074 C1010000 	 .word .L47+1
 891 0078 35040000 	 .word .L74+1
 892 007c 19020000 	 .word .L48+1
 893 0080 35040000 	 .word .L74+1
 894 0084 C3020000 	 .word .L49+1
 895 0088 35040000 	 .word .L74+1
 896 008c 03030000 	 .word .L50+1
 897 0090 35040000 	 .word .L74+1
 898 0094 35040000 	 .word .L74+1
 899 0098 35040000 	 .word .L74+1
 900 009c 35040000 	 .word .L74+1
 901 00a0 35040000 	 .word .L74+1
 902 00a4 35040000 	 .word .L74+1
 903 00a8 35040000 	 .word .L74+1
 904 00ac 35040000 	 .word .L74+1
 905 00b0 35040000 	 .word .L74+1
 906 00b4 35040000 	 .word .L74+1
 907 00b8 35040000 	 .word .L74+1
 908 00bc 35040000 	 .word .L74+1
 909 00c0 35040000 	 .word .L74+1
 910 00c4 35040000 	 .word .L74+1
 911 00c8 35040000 	 .word .L74+1
 912 00cc 35040000 	 .word .L74+1
 913 00d0 35040000 	 .word .L74+1
 914 00d4 35040000 	 .word .L74+1
 915 00d8 35040000 	 .word .L74+1
 916 00dc 35040000 	 .word .L74+1
 917 00e0 35040000 	 .word .L74+1
 918 00e4 35040000 	 .word .L74+1
 919 00e8 35040000 	 .word .L74+1
 920 00ec 35040000 	 .word .L74+1
 921 00f0 35040000 	 .word .L74+1
 922 00f4 35040000 	 .word .L74+1
 923 00f8 35040000 	 .word .L74+1
 924 00fc 35040000 	 .word .L74+1
 925 0100 35040000 	 .word .L74+1
 926 0104 35040000 	 .word .L74+1
 927 0108 35040000 	 .word .L74+1
 928 010c 35040000 	 .word .L74+1
 929 0110 35040000 	 .word .L74+1
 930 0114 35040000 	 .word .L74+1
 931 0118 35040000 	 .word .L74+1
 932 011c 35040000 	 .word .L74+1
 933 0120 35040000 	 .word .L74+1
 934 0124 35040000 	 .word .L74+1
 935 0128 35040000 	 .word .L74+1
 936 012c 35040000 	 .word .L74+1
 937 0130 35040000 	 .word .L74+1
 938 0134 35040000 	 .word .L74+1
 939 0138 35040000 	 .word .L74+1
 940 013c B3010000 	 .word .L51+1
 941 0140 35040000 	 .word .L74+1
 942 0144 35040000 	 .word .L74+1
 943 0148 35040000 	 .word .L74+1
 944 014c 35040000 	 .word .L74+1
 945 0150 35040000 	 .word .L74+1
 946 0154 35040000 	 .word .L74+1
 947 0158 35040000 	 .word .L74+1
 948 015c 35040000 	 .word .L74+1
 949 0160 35040000 	 .word .L74+1
 950 0164 35040000 	 .word .L74+1
 951 0168 35040000 	 .word .L74+1
 952 016c 35040000 	 .word .L74+1
 953 0170 35040000 	 .word .L74+1
 954 0174 27040000 	 .word .L52+1
 955 0178 35040000 	 .word .L74+1
 956 017c 35040000 	 .word .L74+1
 957 0180 35040000 	 .word .L74+1
 958 0184 35040000 	 .word .L74+1
 959 0188 35040000 	 .word .L74+1
 960 018c 35040000 	 .word .L74+1
 961 0190 35040000 	 .word .L74+1
 962 0194 35040000 	 .word .L74+1
 963 0198 59030000 	 .word .L53+1
 964 019c 85030000 	 .word .L54+1
 965 01a0 B1030000 	 .word .L55+1
 966 01a4 DD030000 	 .word .L56+1
 967 01a8 09040000 	 .word .L57+1
 968              	 .p2align 1
 969              	.L45:
 341:../CANopen/stack/305/CO_LSSslave.c ****         case CO_LSS_SWITCH_STATE_GLOBAL: {
 342:../CANopen/stack/305/CO_LSSslave.c ****             /* Node-Id was unconfigured before, now it is configured,
 343:../CANopen/stack/305/CO_LSSslave.c ****              * enter the NMT Reset communication autonomously. */
 344:../CANopen/stack/305/CO_LSSslave.c ****             resetCommunication = true;
 970              	 .loc 1 344 0
 971 01ac 0123     	 movs r3,#1
 972 01ae FB62     	 str r3,[r7,#44]
 345:../CANopen/stack/305/CO_LSSslave.c ****             break;
 973              	 .loc 1 345 0
 974 01b0 41E1     	 b .L58
 975              	.L51:
 346:../CANopen/stack/305/CO_LSSslave.c ****         }
 347:../CANopen/stack/305/CO_LSSslave.c ****         case CO_LSS_SWITCH_STATE_SEL_SERIAL: {
 348:../CANopen/stack/305/CO_LSSslave.c ****             LSSslave->TXbuff->data[0] = CO_LSS_SWITCH_STATE_SEL;
 976              	 .loc 1 348 0
 977 01b2 7B68     	 ldr r3,[r7,#4]
 978 01b4 1B6F     	 ldr r3,[r3,#112]
 979 01b6 4422     	 movs r2,#68
 980 01b8 5A71     	 strb r2,[r3,#5]
 349:../CANopen/stack/305/CO_LSSslave.c ****             CANsend = true;
 981              	 .loc 1 349 0
 982 01ba 0123     	 movs r3,#1
 983 01bc 7B62     	 str r3,[r7,#36]
 350:../CANopen/stack/305/CO_LSSslave.c ****             break;
 984              	 .loc 1 350 0
 985 01be 3AE1     	 b .L58
 986              	.L47:
 351:../CANopen/stack/305/CO_LSSslave.c ****         }
 352:../CANopen/stack/305/CO_LSSslave.c ****         case CO_LSS_CFG_NODE_ID: {
 353:../CANopen/stack/305/CO_LSSslave.c ****             nid = LSSslave->CANdata[1];
 987              	 .loc 1 353 0
 988 01c0 7B68     	 ldr r3,[r7,#4]
 989 01c2 93F84A30 	 ldrb r3,[r3,#74]
 990 01c6 87F82330 	 strb r3,[r7,#35]
 354:../CANopen/stack/305/CO_LSSslave.c ****             errorCode = CO_LSS_CFG_NODE_ID_OK;
 991              	 .loc 1 354 0
 992 01ca 0023     	 movs r3,#0
 993 01cc 87F82B30 	 strb r3,[r7,#43]
 355:../CANopen/stack/305/CO_LSSslave.c **** 
 356:../CANopen/stack/305/CO_LSSslave.c ****             if (CO_LSS_NODE_ID_VALID(nid)) {
 994              	 .loc 1 356 0
 995 01d0 97F82330 	 ldrb r3,[r7,#35]
 996 01d4 002B     	 cmp r3,#0
 997 01d6 04D0     	 beq .L59
 998              	 .loc 1 356 0 is_stmt 0 discriminator 1
 999 01d8 97F82330 	 ldrb r3,[r7,#35]
 1000 01dc 5BB2     	 sxtb r3,r3
 1001 01de 002B     	 cmp r3,#0
 1002 01e0 03DA     	 bge .L60
 1003              	.L59:
 1004              	 .loc 1 356 0 discriminator 3
 1005 01e2 97F82330 	 ldrb r3,[r7,#35]
 1006 01e6 FF2B     	 cmp r3,#255
 1007 01e8 05D1     	 bne .L61
 1008              	.L60:
 357:../CANopen/stack/305/CO_LSSslave.c ****                 *LSSslave->pendingNodeID = nid;
 1009              	 .loc 1 357 0 is_stmt 1
 1010 01ea 7B68     	 ldr r3,[r7,#4]
 1011 01ec DB6B     	 ldr r3,[r3,#60]
 1012 01ee 97F82320 	 ldrb r2,[r7,#35]
 1013 01f2 1A70     	 strb r2,[r3]
 1014 01f4 02E0     	 b .L62
 1015              	.L61:
 358:../CANopen/stack/305/CO_LSSslave.c ****             }
 359:../CANopen/stack/305/CO_LSSslave.c ****             else {
 360:../CANopen/stack/305/CO_LSSslave.c ****                 errorCode = CO_LSS_CFG_NODE_ID_OUT_OF_RANGE;
 1016              	 .loc 1 360 0
 1017 01f6 0123     	 movs r3,#1
 1018 01f8 87F82B30 	 strb r3,[r7,#43]
 1019              	.L62:
 361:../CANopen/stack/305/CO_LSSslave.c ****             }
 362:../CANopen/stack/305/CO_LSSslave.c **** 
 363:../CANopen/stack/305/CO_LSSslave.c ****             /* send confirmation */
 364:../CANopen/stack/305/CO_LSSslave.c ****             LSSslave->TXbuff->data[0] = LSSslave->service;
 1020              	 .loc 1 364 0
 1021 01fc 7B68     	 ldr r3,[r7,#4]
 1022 01fe 1B6F     	 ldr r3,[r3,#112]
 1023 0200 7A68     	 ldr r2,[r7,#4]
 1024 0202 92F84820 	 ldrb r2,[r2,#72]
 1025 0206 5A71     	 strb r2,[r3,#5]
 365:../CANopen/stack/305/CO_LSSslave.c ****             LSSslave->TXbuff->data[1] = errorCode;
 1026              	 .loc 1 365 0
 1027 0208 7B68     	 ldr r3,[r7,#4]
 1028 020a 1B6F     	 ldr r3,[r3,#112]
 1029 020c 97F82B20 	 ldrb r2,[r7,#43]
 1030 0210 9A71     	 strb r2,[r3,#6]
 366:../CANopen/stack/305/CO_LSSslave.c ****             /* we do not use spec-error, always 0 */
 367:../CANopen/stack/305/CO_LSSslave.c ****             CANsend = true;
 1031              	 .loc 1 367 0
 1032 0212 0123     	 movs r3,#1
 1033 0214 7B62     	 str r3,[r7,#36]
 368:../CANopen/stack/305/CO_LSSslave.c ****             break;
 1034              	 .loc 1 368 0
 1035 0216 0EE1     	 b .L58
 1036              	.L48:
 369:../CANopen/stack/305/CO_LSSslave.c ****         }
 370:../CANopen/stack/305/CO_LSSslave.c ****         case CO_LSS_CFG_BIT_TIMING: {
 371:../CANopen/stack/305/CO_LSSslave.c ****             if (LSSslave->pFunctLSScheckBitRate == NULL) {
 1037              	 .loc 1 371 0
 1038 0218 7B68     	 ldr r3,[r7,#4]
 1039 021a 5B6D     	 ldr r3,[r3,#84]
 1040 021c 002B     	 cmp r3,#0
 1041 021e 00D1     	 bne .L63
 372:../CANopen/stack/305/CO_LSSslave.c ****                 /* setting bit timing is not supported. Drop request */
 373:../CANopen/stack/305/CO_LSSslave.c ****                 break;
 1042              	 .loc 1 373 0
 1043 0220 09E1     	 b .L58
 1044              	.L63:
 374:../CANopen/stack/305/CO_LSSslave.c ****             }
 375:../CANopen/stack/305/CO_LSSslave.c **** 
 376:../CANopen/stack/305/CO_LSSslave.c ****             tableSelector = LSSslave->CANdata[1];
 1045              	 .loc 1 376 0
 1046 0222 7B68     	 ldr r3,[r7,#4]
 1047 0224 93F84A30 	 ldrb r3,[r3,#74]
 1048 0228 87F82230 	 strb r3,[r7,#34]
 377:../CANopen/stack/305/CO_LSSslave.c ****             tableIndex = LSSslave->CANdata[2];
 1049              	 .loc 1 377 0
 1050 022c 7B68     	 ldr r3,[r7,#4]
 1051 022e 93F84B30 	 ldrb r3,[r3,#75]
 1052 0232 87F82130 	 strb r3,[r7,#33]
 378:../CANopen/stack/305/CO_LSSslave.c ****             errorCode = CO_LSS_CFG_BIT_TIMING_OK;
 1053              	 .loc 1 378 0
 1054 0236 0023     	 movs r3,#0
 1055 0238 87F82B30 	 strb r3,[r7,#43]
 379:../CANopen/stack/305/CO_LSSslave.c ****             errorCodeManuf = CO_LSS_CFG_BIT_TIMING_OK;
 1056              	 .loc 1 379 0
 1057 023c 0023     	 movs r3,#0
 1058 023e 87F82A30 	 strb r3,[r7,#42]
 380:../CANopen/stack/305/CO_LSSslave.c **** 
 381:../CANopen/stack/305/CO_LSSslave.c ****             if (tableSelector == 0 && CO_LSS_BIT_TIMING_VALID(tableIndex)) {
 1059              	 .loc 1 381 0
 1060 0242 97F82230 	 ldrb r3,[r7,#34]
 1061 0246 002B     	 cmp r3,#0
 1062 0248 25D1     	 bne .L64
 1063              	 .loc 1 381 0 is_stmt 0 discriminator 1
 1064 024a 97F82130 	 ldrb r3,[r7,#33]
 1065 024e 052B     	 cmp r3,#5
 1066 0250 21D0     	 beq .L64
 1067              	 .loc 1 381 0 discriminator 2
 1068 0252 97F82130 	 ldrb r3,[r7,#33]
 1069 0256 092B     	 cmp r3,#9
 1070 0258 1DD8     	 bhi .L64
 1071              	.LBB11:
 382:../CANopen/stack/305/CO_LSSslave.c ****                 uint16_t bit = CO_LSS_bitTimingTableLookup[tableIndex];
 1072              	 .loc 1 382 0 is_stmt 1
 1073 025a 97F82130 	 ldrb r3,[r7,#33]
 1074 025e 7F4A     	 ldr r2,.L75
 1075 0260 32F81330 	 ldrh r3,[r2,r3,lsl#1]
 1076 0264 FB83     	 strh r3,[r7,#30]
 383:../CANopen/stack/305/CO_LSSslave.c ****                 bool_t bit_rate_supported = LSSslave->pFunctLSScheckBitRate(
 1077              	 .loc 1 383 0
 1078 0266 7B68     	 ldr r3,[r7,#4]
 1079 0268 5B6D     	 ldr r3,[r3,#84]
 1080 026a 7A68     	 ldr r2,[r7,#4]
 1081 026c 916D     	 ldr r1,[r2,#88]
 1082 026e FA8B     	 ldrh r2,[r7,#30]
 1083 0270 0846     	 mov r0,r1
 1084 0272 1146     	 mov r1,r2
 1085 0274 9847     	 blx r3
 1086 0276 B861     	 str r0,[r7,#24]
 384:../CANopen/stack/305/CO_LSSslave.c ****                     LSSslave->functLSScheckBitRateObject, bit);
 385:../CANopen/stack/305/CO_LSSslave.c **** 
 386:../CANopen/stack/305/CO_LSSslave.c ****                 if (bit_rate_supported) {
 1087              	 .loc 1 386 0
 1088 0278 BB69     	 ldr r3,[r7,#24]
 1089 027a 002B     	 cmp r3,#0
 1090 027c 04D0     	 beq .L65
 387:../CANopen/stack/305/CO_LSSslave.c ****                     *LSSslave->pendingBitRate = bit;
 1091              	 .loc 1 387 0
 1092 027e 7B68     	 ldr r3,[r7,#4]
 1093 0280 9B6B     	 ldr r3,[r3,#56]
 1094 0282 FA8B     	 ldrh r2,[r7,#30]
 1095 0284 1A80     	 strh r2,[r3]
 1096              	.LBE11:
 381:../CANopen/stack/305/CO_LSSslave.c ****                 uint16_t bit = CO_LSS_bitTimingTableLookup[tableIndex];
 1097              	 .loc 1 381 0
 1098 0286 09E0     	 b .L67
 1099              	.L65:
 1100              	.LBB12:
 388:../CANopen/stack/305/CO_LSSslave.c ****                 }
 389:../CANopen/stack/305/CO_LSSslave.c ****                 else {
 390:../CANopen/stack/305/CO_LSSslave.c ****                     errorCode = CO_LSS_CFG_BIT_TIMING_MANUFACTURER;
 1101              	 .loc 1 390 0
 1102 0288 FF23     	 movs r3,#255
 1103 028a 87F82B30 	 strb r3,[r7,#43]
 391:../CANopen/stack/305/CO_LSSslave.c ****                     errorCodeManuf = CO_LSS_CFG_BIT_TIMING_OUT_OF_RANGE;
 1104              	 .loc 1 391 0
 1105 028e 0123     	 movs r3,#1
 1106 0290 87F82A30 	 strb r3,[r7,#42]
 1107              	.LBE12:
 381:../CANopen/stack/305/CO_LSSslave.c ****                 uint16_t bit = CO_LSS_bitTimingTableLookup[tableIndex];
 1108              	 .loc 1 381 0
 1109 0294 02E0     	 b .L67
 1110              	.L64:
 392:../CANopen/stack/305/CO_LSSslave.c ****                 }
 393:../CANopen/stack/305/CO_LSSslave.c ****             }
 394:../CANopen/stack/305/CO_LSSslave.c ****             else {
 395:../CANopen/stack/305/CO_LSSslave.c ****                 /* we currently only support CiA301 bit timing table */
 396:../CANopen/stack/305/CO_LSSslave.c ****                 errorCode = CO_LSS_CFG_BIT_TIMING_OUT_OF_RANGE;
 1111              	 .loc 1 396 0
 1112 0296 0123     	 movs r3,#1
 1113 0298 87F82B30 	 strb r3,[r7,#43]
 1114              	.L67:
 397:../CANopen/stack/305/CO_LSSslave.c ****             }
 398:../CANopen/stack/305/CO_LSSslave.c **** 
 399:../CANopen/stack/305/CO_LSSslave.c ****             /* send confirmation */
 400:../CANopen/stack/305/CO_LSSslave.c ****             LSSslave->TXbuff->data[0] = LSSslave->service;
 1115              	 .loc 1 400 0
 1116 029c 7B68     	 ldr r3,[r7,#4]
 1117 029e 1B6F     	 ldr r3,[r3,#112]
 1118 02a0 7A68     	 ldr r2,[r7,#4]
 1119 02a2 92F84820 	 ldrb r2,[r2,#72]
 1120 02a6 5A71     	 strb r2,[r3,#5]
 401:../CANopen/stack/305/CO_LSSslave.c ****             LSSslave->TXbuff->data[1] = errorCode;
 1121              	 .loc 1 401 0
 1122 02a8 7B68     	 ldr r3,[r7,#4]
 1123 02aa 1B6F     	 ldr r3,[r3,#112]
 1124 02ac 97F82B20 	 ldrb r2,[r7,#43]
 1125 02b0 9A71     	 strb r2,[r3,#6]
 402:../CANopen/stack/305/CO_LSSslave.c ****             LSSslave->TXbuff->data[2] = errorCodeManuf;
 1126              	 .loc 1 402 0
 1127 02b2 7B68     	 ldr r3,[r7,#4]
 1128 02b4 1B6F     	 ldr r3,[r3,#112]
 1129 02b6 97F82A20 	 ldrb r2,[r7,#42]
 1130 02ba DA71     	 strb r2,[r3,#7]
 403:../CANopen/stack/305/CO_LSSslave.c ****             CANsend = true;
 1131              	 .loc 1 403 0
 1132 02bc 0123     	 movs r3,#1
 1133 02be 7B62     	 str r3,[r7,#36]
 404:../CANopen/stack/305/CO_LSSslave.c ****             break;
 1134              	 .loc 1 404 0
 1135 02c0 B9E0     	 b .L58
 1136              	.L49:
 405:../CANopen/stack/305/CO_LSSslave.c ****         }
 406:../CANopen/stack/305/CO_LSSslave.c ****         case CO_LSS_CFG_ACTIVATE_BIT_TIMING: {
 407:../CANopen/stack/305/CO_LSSslave.c ****             if (LSSslave->pFunctLSScheckBitRate == NULL) {
 1137              	 .loc 1 407 0
 1138 02c2 7B68     	 ldr r3,[r7,#4]
 1139 02c4 5B6D     	 ldr r3,[r3,#84]
 1140 02c6 002B     	 cmp r3,#0
 1141 02c8 00D1     	 bne .L68
 408:../CANopen/stack/305/CO_LSSslave.c ****                 /* setting bit timing is not supported. Drop request */
 409:../CANopen/stack/305/CO_LSSslave.c ****                 break;
 1142              	 .loc 1 409 0
 1143 02ca B4E0     	 b .L58
 1144              	.L68:
 410:../CANopen/stack/305/CO_LSSslave.c ****             }
 411:../CANopen/stack/305/CO_LSSslave.c **** 
 412:../CANopen/stack/305/CO_LSSslave.c ****             /* notify application */
 413:../CANopen/stack/305/CO_LSSslave.c ****             if (LSSslave->pFunctLSSactivateBitRate != NULL) {
 1145              	 .loc 1 413 0
 1146 02cc 7B68     	 ldr r3,[r7,#4]
 1147 02ce DB6D     	 ldr r3,[r3,#92]
 1148 02d0 002B     	 cmp r3,#0
 1149 02d2 15D0     	 beq .L69
 1150              	.LBB13:
 414:../CANopen/stack/305/CO_LSSslave.c ****                 uint16_t delay = ((uint16_t) LSSslave->CANdata[2]) << 8;
 1151              	 .loc 1 414 0
 1152 02d4 7B68     	 ldr r3,[r7,#4]
 1153 02d6 93F84B30 	 ldrb r3,[r3,#75]
 1154 02da 9BB2     	 uxth r3,r3
 1155 02dc 1B02     	 lsls r3,r3,#8
 1156 02de FB82     	 strh r3,[r7,#22]
 415:../CANopen/stack/305/CO_LSSslave.c ****                 delay |= LSSslave->CANdata[1];
 1157              	 .loc 1 415 0
 1158 02e0 7B68     	 ldr r3,[r7,#4]
 1159 02e2 93F84A30 	 ldrb r3,[r3,#74]
 1160 02e6 9AB2     	 uxth r2,r3
 1161 02e8 FB8A     	 ldrh r3,[r7,#22]
 1162 02ea 1343     	 orrs r3,r3,r2
 1163 02ec FB82     	 strh r3,[r7,#22]
 416:../CANopen/stack/305/CO_LSSslave.c ****                 LSSslave->pFunctLSSactivateBitRate(
 1164              	 .loc 1 416 0
 1165 02ee 7B68     	 ldr r3,[r7,#4]
 1166 02f0 DB6D     	 ldr r3,[r3,#92]
 1167 02f2 7A68     	 ldr r2,[r7,#4]
 1168 02f4 116E     	 ldr r1,[r2,#96]
 1169 02f6 FA8A     	 ldrh r2,[r7,#22]
 1170 02f8 0846     	 mov r0,r1
 1171 02fa 1146     	 mov r1,r2
 1172 02fc 9847     	 blx r3
 1173              	.LBE13:
 417:../CANopen/stack/305/CO_LSSslave.c ****                     LSSslave->functLSSactivateBitRateObject, delay);
 418:../CANopen/stack/305/CO_LSSslave.c ****             }
 419:../CANopen/stack/305/CO_LSSslave.c ****             break;
 1174              	 .loc 1 419 0
 1175 02fe 9AE0     	 b .L58
 1176              	.L69:
 1177 0300 99E0     	 b .L58
 1178              	.L50:
 420:../CANopen/stack/305/CO_LSSslave.c ****         }
 421:../CANopen/stack/305/CO_LSSslave.c ****         case CO_LSS_CFG_STORE: {
 422:../CANopen/stack/305/CO_LSSslave.c ****             errorCode = CO_LSS_CFG_STORE_OK;
 1179              	 .loc 1 422 0
 1180 0302 0023     	 movs r3,#0
 1181 0304 87F82B30 	 strb r3,[r7,#43]
 423:../CANopen/stack/305/CO_LSSslave.c **** 
 424:../CANopen/stack/305/CO_LSSslave.c ****             if (LSSslave->pFunctLSScfgStore == NULL) {
 1182              	 .loc 1 424 0
 1183 0308 7B68     	 ldr r3,[r7,#4]
 1184 030a 5B6E     	 ldr r3,[r3,#100]
 1185 030c 002B     	 cmp r3,#0
 1186 030e 03D1     	 bne .L70
 425:../CANopen/stack/305/CO_LSSslave.c ****                 /* storing is not supported. Reply error */
 426:../CANopen/stack/305/CO_LSSslave.c ****                 errorCode = CO_LSS_CFG_STORE_NOT_SUPPORTED;
 1187              	 .loc 1 426 0
 1188 0310 0123     	 movs r3,#1
 1189 0312 87F82B30 	 strb r3,[r7,#43]
 1190 0316 11E0     	 b .L71
 1191              	.L70:
 1192              	.LBB14:
 427:../CANopen/stack/305/CO_LSSslave.c ****             }
 428:../CANopen/stack/305/CO_LSSslave.c ****             else {
 429:../CANopen/stack/305/CO_LSSslave.c ****                 bool_t result;
 430:../CANopen/stack/305/CO_LSSslave.c ****                 /* Store "pending" to "persistent" */
 431:../CANopen/stack/305/CO_LSSslave.c ****                 result =
 432:../CANopen/stack/305/CO_LSSslave.c ****                    LSSslave->pFunctLSScfgStore(LSSslave->functLSScfgStoreObject,
 1193              	 .loc 1 432 0
 1194 0318 7B68     	 ldr r3,[r7,#4]
 1195 031a 5B6E     	 ldr r3,[r3,#100]
 1196 031c 7A68     	 ldr r2,[r7,#4]
 1197 031e 906E     	 ldr r0,[r2,#104]
 433:../CANopen/stack/305/CO_LSSslave.c ****                                                *LSSslave->pendingNodeID,
 1198              	 .loc 1 433 0
 1199 0320 7A68     	 ldr r2,[r7,#4]
 1200 0322 D26B     	 ldr r2,[r2,#60]
 432:../CANopen/stack/305/CO_LSSslave.c ****                                                *LSSslave->pendingNodeID,
 1201              	 .loc 1 432 0
 1202 0324 1178     	 ldrb r1,[r2]
 434:../CANopen/stack/305/CO_LSSslave.c ****                                                *LSSslave->pendingBitRate);
 1203              	 .loc 1 434 0
 1204 0326 7A68     	 ldr r2,[r7,#4]
 1205 0328 926B     	 ldr r2,[r2,#56]
 432:../CANopen/stack/305/CO_LSSslave.c ****                                                *LSSslave->pendingNodeID,
 1206              	 .loc 1 432 0
 1207 032a 1288     	 ldrh r2,[r2]
 431:../CANopen/stack/305/CO_LSSslave.c ****                    LSSslave->pFunctLSScfgStore(LSSslave->functLSScfgStoreObject,
 1208              	 .loc 1 431 0
 1209 032c 9847     	 blx r3
 1210 032e 3861     	 str r0,[r7,#16]
 435:../CANopen/stack/305/CO_LSSslave.c ****                 if (!result) {
 1211              	 .loc 1 435 0
 1212 0330 3B69     	 ldr r3,[r7,#16]
 1213 0332 002B     	 cmp r3,#0
 1214 0334 02D1     	 bne .L71
 436:../CANopen/stack/305/CO_LSSslave.c ****                     errorCode = CO_LSS_CFG_STORE_FAILED;
 1215              	 .loc 1 436 0
 1216 0336 0223     	 movs r3,#2
 1217 0338 87F82B30 	 strb r3,[r7,#43]
 1218              	.L71:
 1219              	.LBE14:
 437:../CANopen/stack/305/CO_LSSslave.c ****                 }
 438:../CANopen/stack/305/CO_LSSslave.c ****             }
 439:../CANopen/stack/305/CO_LSSslave.c **** 
 440:../CANopen/stack/305/CO_LSSslave.c ****             /* send confirmation */
 441:../CANopen/stack/305/CO_LSSslave.c ****             LSSslave->TXbuff->data[0] = LSSslave->service;
 1220              	 .loc 1 441 0
 1221 033c 7B68     	 ldr r3,[r7,#4]
 1222 033e 1B6F     	 ldr r3,[r3,#112]
 1223 0340 7A68     	 ldr r2,[r7,#4]
 1224 0342 92F84820 	 ldrb r2,[r2,#72]
 1225 0346 5A71     	 strb r2,[r3,#5]
 442:../CANopen/stack/305/CO_LSSslave.c ****             LSSslave->TXbuff->data[1] = errorCode;
 1226              	 .loc 1 442 0
 1227 0348 7B68     	 ldr r3,[r7,#4]
 1228 034a 1B6F     	 ldr r3,[r3,#112]
 1229 034c 97F82B20 	 ldrb r2,[r7,#43]
 1230 0350 9A71     	 strb r2,[r3,#6]
 443:../CANopen/stack/305/CO_LSSslave.c ****             /* we do not use spec-error, always 0 */
 444:../CANopen/stack/305/CO_LSSslave.c ****             CANsend = true;
 1231              	 .loc 1 444 0
 1232 0352 0123     	 movs r3,#1
 1233 0354 7B62     	 str r3,[r7,#36]
 445:../CANopen/stack/305/CO_LSSslave.c ****             break;
 1234              	 .loc 1 445 0
 1235 0356 6EE0     	 b .L58
 1236              	.L53:
 446:../CANopen/stack/305/CO_LSSslave.c ****         }
 447:../CANopen/stack/305/CO_LSSslave.c ****         case CO_LSS_INQUIRE_VENDOR: {
 448:../CANopen/stack/305/CO_LSSslave.c ****             LSSslave->TXbuff->data[0] = LSSslave->service;
 1237              	 .loc 1 448 0
 1238 0358 7B68     	 ldr r3,[r7,#4]
 1239 035a 1B6F     	 ldr r3,[r3,#112]
 1240 035c 7A68     	 ldr r2,[r7,#4]
 1241 035e 92F84820 	 ldrb r2,[r2,#72]
 1242 0362 5A71     	 strb r2,[r3,#5]
 449:../CANopen/stack/305/CO_LSSslave.c ****             valSw = CO_SWAP_32(LSSslave->lssAddress.identity.vendorID);
 1243              	 .loc 1 449 0
 1244 0364 7B68     	 ldr r3,[r7,#4]
 1245 0366 1B68     	 ldr r3,[r3]
 1246 0368 FB60     	 str r3,[r7,#12]
 450:../CANopen/stack/305/CO_LSSslave.c ****             memcpy(&LSSslave->TXbuff->data[1], &valSw, sizeof(valSw));
 1247              	 .loc 1 450 0
 1248 036a 7B68     	 ldr r3,[r7,#4]
 1249 036c 1B6F     	 ldr r3,[r3,#112]
 1250 036e 9A1D     	 adds r2,r3,#6
 1251 0370 07F10C03 	 add r3,r7,#12
 1252 0374 1046     	 mov r0,r2
 1253 0376 1946     	 mov r1,r3
 1254 0378 0422     	 movs r2,#4
 1255 037a FFF7FEFF 	 bl memcpy
 451:../CANopen/stack/305/CO_LSSslave.c ****             CANsend = true;
 1256              	 .loc 1 451 0
 1257 037e 0123     	 movs r3,#1
 1258 0380 7B62     	 str r3,[r7,#36]
 452:../CANopen/stack/305/CO_LSSslave.c ****             break;
 1259              	 .loc 1 452 0
 1260 0382 58E0     	 b .L58
 1261              	.L54:
 453:../CANopen/stack/305/CO_LSSslave.c ****         }
 454:../CANopen/stack/305/CO_LSSslave.c ****         case CO_LSS_INQUIRE_PRODUCT: {
 455:../CANopen/stack/305/CO_LSSslave.c ****             LSSslave->TXbuff->data[0] = LSSslave->service;
 1262              	 .loc 1 455 0
 1263 0384 7B68     	 ldr r3,[r7,#4]
 1264 0386 1B6F     	 ldr r3,[r3,#112]
 1265 0388 7A68     	 ldr r2,[r7,#4]
 1266 038a 92F84820 	 ldrb r2,[r2,#72]
 1267 038e 5A71     	 strb r2,[r3,#5]
 456:../CANopen/stack/305/CO_LSSslave.c ****             valSw = CO_SWAP_32(LSSslave->lssAddress.identity.productCode);
 1268              	 .loc 1 456 0
 1269 0390 7B68     	 ldr r3,[r7,#4]
 1270 0392 5B68     	 ldr r3,[r3,#4]
 1271 0394 FB60     	 str r3,[r7,#12]
 457:../CANopen/stack/305/CO_LSSslave.c ****             memcpy(&LSSslave->TXbuff->data[1], &valSw, sizeof(valSw));
 1272              	 .loc 1 457 0
 1273 0396 7B68     	 ldr r3,[r7,#4]
 1274 0398 1B6F     	 ldr r3,[r3,#112]
 1275 039a 9A1D     	 adds r2,r3,#6
 1276 039c 07F10C03 	 add r3,r7,#12
 1277 03a0 1046     	 mov r0,r2
 1278 03a2 1946     	 mov r1,r3
 1279 03a4 0422     	 movs r2,#4
 1280 03a6 FFF7FEFF 	 bl memcpy
 458:../CANopen/stack/305/CO_LSSslave.c ****             CANsend = true;
 1281              	 .loc 1 458 0
 1282 03aa 0123     	 movs r3,#1
 1283 03ac 7B62     	 str r3,[r7,#36]
 459:../CANopen/stack/305/CO_LSSslave.c ****             break;
 1284              	 .loc 1 459 0
 1285 03ae 42E0     	 b .L58
 1286              	.L55:
 460:../CANopen/stack/305/CO_LSSslave.c ****         }
 461:../CANopen/stack/305/CO_LSSslave.c ****         case CO_LSS_INQUIRE_REV: {
 462:../CANopen/stack/305/CO_LSSslave.c ****             LSSslave->TXbuff->data[0] = LSSslave->service;
 1287              	 .loc 1 462 0
 1288 03b0 7B68     	 ldr r3,[r7,#4]
 1289 03b2 1B6F     	 ldr r3,[r3,#112]
 1290 03b4 7A68     	 ldr r2,[r7,#4]
 1291 03b6 92F84820 	 ldrb r2,[r2,#72]
 1292 03ba 5A71     	 strb r2,[r3,#5]
 463:../CANopen/stack/305/CO_LSSslave.c ****             valSw = CO_SWAP_32(LSSslave->lssAddress.identity.revisionNumber);
 1293              	 .loc 1 463 0
 1294 03bc 7B68     	 ldr r3,[r7,#4]
 1295 03be 9B68     	 ldr r3,[r3,#8]
 1296 03c0 FB60     	 str r3,[r7,#12]
 464:../CANopen/stack/305/CO_LSSslave.c ****             memcpy(&LSSslave->TXbuff->data[1], &valSw, sizeof(valSw));
 1297              	 .loc 1 464 0
 1298 03c2 7B68     	 ldr r3,[r7,#4]
 1299 03c4 1B6F     	 ldr r3,[r3,#112]
 1300 03c6 9A1D     	 adds r2,r3,#6
 1301 03c8 07F10C03 	 add r3,r7,#12
 1302 03cc 1046     	 mov r0,r2
 1303 03ce 1946     	 mov r1,r3
 1304 03d0 0422     	 movs r2,#4
 1305 03d2 FFF7FEFF 	 bl memcpy
 465:../CANopen/stack/305/CO_LSSslave.c ****             CANsend = true;
 1306              	 .loc 1 465 0
 1307 03d6 0123     	 movs r3,#1
 1308 03d8 7B62     	 str r3,[r7,#36]
 466:../CANopen/stack/305/CO_LSSslave.c ****             break;
 1309              	 .loc 1 466 0
 1310 03da 2CE0     	 b .L58
 1311              	.L56:
 467:../CANopen/stack/305/CO_LSSslave.c ****         }
 468:../CANopen/stack/305/CO_LSSslave.c ****         case CO_LSS_INQUIRE_SERIAL: {
 469:../CANopen/stack/305/CO_LSSslave.c ****             LSSslave->TXbuff->data[0] = LSSslave->service;
 1312              	 .loc 1 469 0
 1313 03dc 7B68     	 ldr r3,[r7,#4]
 1314 03de 1B6F     	 ldr r3,[r3,#112]
 1315 03e0 7A68     	 ldr r2,[r7,#4]
 1316 03e2 92F84820 	 ldrb r2,[r2,#72]
 1317 03e6 5A71     	 strb r2,[r3,#5]
 470:../CANopen/stack/305/CO_LSSslave.c ****             valSw = CO_SWAP_32(LSSslave->lssAddress.identity.serialNumber);
 1318              	 .loc 1 470 0
 1319 03e8 7B68     	 ldr r3,[r7,#4]
 1320 03ea DB68     	 ldr r3,[r3,#12]
 1321 03ec FB60     	 str r3,[r7,#12]
 471:../CANopen/stack/305/CO_LSSslave.c ****             memcpy(&LSSslave->TXbuff->data[1], &valSw, sizeof(valSw));
 1322              	 .loc 1 471 0
 1323 03ee 7B68     	 ldr r3,[r7,#4]
 1324 03f0 1B6F     	 ldr r3,[r3,#112]
 1325 03f2 9A1D     	 adds r2,r3,#6
 1326 03f4 07F10C03 	 add r3,r7,#12
 1327 03f8 1046     	 mov r0,r2
 1328 03fa 1946     	 mov r1,r3
 1329 03fc 0422     	 movs r2,#4
 1330 03fe FFF7FEFF 	 bl memcpy
 472:../CANopen/stack/305/CO_LSSslave.c ****             CANsend = true;
 1331              	 .loc 1 472 0
 1332 0402 0123     	 movs r3,#1
 1333 0404 7B62     	 str r3,[r7,#36]
 473:../CANopen/stack/305/CO_LSSslave.c ****             break;
 1334              	 .loc 1 473 0
 1335 0406 16E0     	 b .L58
 1336              	.L57:
 474:../CANopen/stack/305/CO_LSSslave.c ****         }
 475:../CANopen/stack/305/CO_LSSslave.c ****         case CO_LSS_INQUIRE_NODE_ID: {
 476:../CANopen/stack/305/CO_LSSslave.c ****             LSSslave->TXbuff->data[0] = LSSslave->service;
 1337              	 .loc 1 476 0
 1338 0408 7B68     	 ldr r3,[r7,#4]
 1339 040a 1B6F     	 ldr r3,[r3,#112]
 1340 040c 7A68     	 ldr r2,[r7,#4]
 1341 040e 92F84820 	 ldrb r2,[r2,#72]
 1342 0412 5A71     	 strb r2,[r3,#5]
 477:../CANopen/stack/305/CO_LSSslave.c ****             LSSslave->TXbuff->data[1] = LSSslave->activeNodeID;
 1343              	 .loc 1 477 0
 1344 0414 7B68     	 ldr r3,[r7,#4]
 1345 0416 1B6F     	 ldr r3,[r3,#112]
 1346 0418 7A68     	 ldr r2,[r7,#4]
 1347 041a 92F84020 	 ldrb r2,[r2,#64]
 1348 041e 9A71     	 strb r2,[r3,#6]
 478:../CANopen/stack/305/CO_LSSslave.c ****             CANsend = true;
 1349              	 .loc 1 478 0
 1350 0420 0123     	 movs r3,#1
 1351 0422 7B62     	 str r3,[r7,#36]
 479:../CANopen/stack/305/CO_LSSslave.c ****             break;
 1352              	 .loc 1 479 0
 1353 0424 07E0     	 b .L58
 1354              	.L52:
 480:../CANopen/stack/305/CO_LSSslave.c ****         }
 481:../CANopen/stack/305/CO_LSSslave.c ****         case CO_LSS_IDENT_FASTSCAN: {
 482:../CANopen/stack/305/CO_LSSslave.c ****             LSSslave->TXbuff->data[0] = CO_LSS_IDENT_SLAVE;
 1355              	 .loc 1 482 0
 1356 0426 7B68     	 ldr r3,[r7,#4]
 1357 0428 1B6F     	 ldr r3,[r3,#112]
 1358 042a 4F22     	 movs r2,#79
 1359 042c 5A71     	 strb r2,[r3,#5]
 483:../CANopen/stack/305/CO_LSSslave.c ****             CANsend = true;
 1360              	 .loc 1 483 0
 1361 042e 0123     	 movs r3,#1
 1362 0430 7B62     	 str r3,[r7,#36]
 484:../CANopen/stack/305/CO_LSSslave.c ****             break;
 1363              	 .loc 1 484 0
 1364 0432 00E0     	 b .L58
 1365              	.L74:
 485:../CANopen/stack/305/CO_LSSslave.c ****         }
 486:../CANopen/stack/305/CO_LSSslave.c ****         default: {
 487:../CANopen/stack/305/CO_LSSslave.c ****             break;
 1366              	 .loc 1 487 0
 1367 0434 00BF     	 nop
 1368              	.L58:
 488:../CANopen/stack/305/CO_LSSslave.c ****         }
 489:../CANopen/stack/305/CO_LSSslave.c ****         }
 490:../CANopen/stack/305/CO_LSSslave.c **** 
 491:../CANopen/stack/305/CO_LSSslave.c ****         if(CANsend) {
 1369              	 .loc 1 491 0
 1370 0436 7B6A     	 ldr r3,[r7,#36]
 1371 0438 002B     	 cmp r3,#0
 1372 043a 07D0     	 beq .L72
 492:../CANopen/stack/305/CO_LSSslave.c ****             CO_CANsend(LSSslave->CANdevTx, LSSslave->TXbuff);
 1373              	 .loc 1 492 0
 1374 043c 7B68     	 ldr r3,[r7,#4]
 1375 043e DA6E     	 ldr r2,[r3,#108]
 1376 0440 7B68     	 ldr r3,[r7,#4]
 1377 0442 1B6F     	 ldr r3,[r3,#112]
 1378 0444 1046     	 mov r0,r2
 1379 0446 1946     	 mov r1,r3
 1380 0448 FFF7FEFF 	 bl CO_CANsend
 1381              	.L72:
 493:../CANopen/stack/305/CO_LSSslave.c ****         }
 494:../CANopen/stack/305/CO_LSSslave.c **** 
 495:../CANopen/stack/305/CO_LSSslave.c ****         CO_FLAG_CLEAR(LSSslave->sendResponse);
 1382              	 .loc 1 495 0
 1383 044c 7B68     	 ldr r3,[r7,#4]
 1384 044e 0022     	 movs r2,#0
 1385 0450 5A64     	 str r2,[r3,#68]
 1386              	.L43:
 1387              	.LBE10:
 496:../CANopen/stack/305/CO_LSSslave.c ****     }
 497:../CANopen/stack/305/CO_LSSslave.c **** 
 498:../CANopen/stack/305/CO_LSSslave.c ****     return resetCommunication;
 1388              	 .loc 1 498 0
 1389 0452 FB6A     	 ldr r3,[r7,#44]
 499:../CANopen/stack/305/CO_LSSslave.c **** }
 1390              	 .loc 1 499 0
 1391 0454 1846     	 mov r0,r3
 1392 0456 3037     	 adds r7,r7,#48
 1393              	.LCFI31:
 1394              	 .cfi_def_cfa_offset 8
 1395 0458 BD46     	 mov sp,r7
 1396              	.LCFI32:
 1397              	 .cfi_def_cfa_register 13
 1398              	 
 1399 045a 80BD     	 pop {r7,pc}
 1400              	.L76:
 1401              	 .align 2
 1402              	.L75:
 1403 045c 00000000 	 .word CO_LSS_bitTimingTableLookup
 1404              	 .cfi_endproc
 1405              	.LFE12:
 1407              	 .text
 1408              	.Letext0:
 1409              	 .file 2 "d:\\programs\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1410              	 .file 3 "d:\\programs\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1411              	 .file 4 "D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/driver/CO_driver_target.h"
 1412              	 .file 5 "D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/301/CO_driver.h"
 1413              	 .file 6 "D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/305/CO_LSS.h"
 1414              	 .file 7 "D:/Workspace/Development/my/DAVE/Infineon_CANopen/CANopen/stack/305/CO_LSSslave.h"
DEFINED SYMBOLS
                            *ABS*:00000000 CO_LSSslave.c
    {standard input}:20     .rodata.CO_LSS_bitTimingTableLookup:00000000 $d
    {standard input}:23     .rodata.CO_LSS_bitTimingTableLookup:00000000 CO_LSS_bitTimingTableLookup
    {standard input}:35     .text.CO_LSSslave_receive:00000000 $t
    {standard input}:39     .text.CO_LSSslave_receive:00000000 CO_LSSslave_receive
    {standard input}:169    .text.CO_LSSslave_receive:000000c0 $d
    {standard input}:187    .text.CO_LSSslave_receive:00000108 $t
    {standard input}:488    .text.CO_LSSslave_init:00000000 $t
    {standard input}:493    .text.CO_LSSslave_init:00000000 CO_LSSslave_init
    {standard input}:654    .text.CO_LSSslave_init:000000e8 $d
    {standard input}:659    .text.CO_LSSslave_initCheckBitRateCallback:00000000 $t
    {standard input}:664    .text.CO_LSSslave_initCheckBitRateCallback:00000000 CO_LSSslave_initCheckBitRateCallback
    {standard input}:714    .text.CO_LSSslave_initActivateBitRateCallback:00000000 $t
    {standard input}:719    .text.CO_LSSslave_initActivateBitRateCallback:00000000 CO_LSSslave_initActivateBitRateCallback
    {standard input}:769    .text.CO_LSSslave_initCfgStoreCallback:00000000 $t
    {standard input}:774    .text.CO_LSSslave_initCfgStoreCallback:00000000 CO_LSSslave_initCfgStoreCallback
    {standard input}:824    .text.CO_LSSslave_process:00000000 $t
    {standard input}:829    .text.CO_LSSslave_process:00000000 CO_LSSslave_process
    {standard input}:877    .text.CO_LSSslave_process:00000040 $d
    {standard input}:968    .text.CO_LSSslave_process:000001ac $t
    {standard input}:1403   .text.CO_LSSslave_process:0000045c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
memset
memcpy
CO_CANrxBufferInit
CO_CANtxBufferInit
CO_CANsend
